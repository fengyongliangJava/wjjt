2019-07-18 09:15:49 -Starting BootdoApplication on PC-201905091110 with PID 7108 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 09:15:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 09:15:49 -The following profiles are active: dev
2019-07-18 09:15:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@666b83a4: startup date [Thu Jul 18 09:15:50 CST 2019]; root of context hierarchy
2019-07-18 09:15:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 09:16:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b99905d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3df2bf04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 09:16:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 09:16:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:16:09 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 09:16:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 09:16:09 -Starting service [Tomcat]
2019-07-18 09:16:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 09:16:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 09:16:10 -Initializing Spring embedded WebApplicationContext
2019-07-18 09:16:10 -Root WebApplicationContext: initialization completed in 20113 ms
2019-07-18 09:16:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 09:16:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 09:16:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 09:16:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 09:16:11 -Filter xssFilter was not registered (disabled)
2019-07-18 09:16:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 09:16:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 09:16:11 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 09:16:11 -Servlet dispatcherServlet mapped to [/]
2019-07-18 09:16:15 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-07-18 09:16:15 -Stopping service [Tomcat]
2019-07-18 09:16:15 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-18 09:16:15 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-07-18 09:20:15 -Starting BootdoApplication on PC-201905091110 with PID 8520 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 09:20:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 09:20:15 -The following profiles are active: dev
2019-07-18 09:20:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@590c73d3: startup date [Thu Jul 18 09:20:15 CST 2019]; root of context hierarchy
2019-07-18 09:20:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 09:20:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6903af5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b5cde01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 09:20:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 09:20:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:20:34 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 09:20:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 09:20:34 -Starting service [Tomcat]
2019-07-18 09:20:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 09:20:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 09:20:34 -Initializing Spring embedded WebApplicationContext
2019-07-18 09:20:34 -Root WebApplicationContext: initialization completed in 19013 ms
2019-07-18 09:20:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 09:20:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 09:20:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 09:20:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 09:20:36 -Filter xssFilter was not registered (disabled)
2019-07-18 09:20:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 09:20:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 09:20:36 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 09:20:36 -Servlet dispatcherServlet mapped to [/]
2019-07-18 09:20:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@590c73d3: startup date [Thu Jul 18 09:20:15 CST 2019]; root of context hierarchy
2019-07-18 09:20:44 -Using default implementation for ThreadExecutor
2019-07-18 09:20:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 09:20:44 -Quartz Scheduler v.2.3.0 created.
2019-07-18 09:20:44 -RAMJobStore initialized.
2019-07-18 09:20:44 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 09:20:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 09:20:44 -Quartz scheduler version: 2.3.0
2019-07-18 09:20:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@18f4086e
2019-07-18 09:20:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 09:20:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 09:20:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 09:20:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 09:20:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 09:20:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 09:20:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 09:20:50 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 09:20:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 09:20:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 09:20:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 09:20:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 09:20:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 09:20:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 09:20:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 09:20:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 09:20:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 09:20:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 09:20:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:20:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 09:20:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:20:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 09:20:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 09:20:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 09:20:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 09:20:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 09:20:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 09:20:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 09:20:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 09:20:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 09:20:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 09:20:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 09:20:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 09:20:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 09:20:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 09:20:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 09:20:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 09:20:50 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 09:20:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 09:20:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 09:20:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 09:20:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 09:20:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 09:20:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 09:20:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 09:20:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 09:20:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 09:20:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 09:20:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:51 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 09:20:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 09:20:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 09:20:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 09:20:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 09:20:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 09:20:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 09:20:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 09:20:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 09:20:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 09:20:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 09:20:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 09:20:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 09:20:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 09:20:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 09:20:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 09:20:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 09:20:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 09:20:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:20:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:20:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 09:20:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 09:20:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 09:20:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 09:20:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 09:20:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 09:20:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:20:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 09:20:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:20:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:20:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:20:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 09:20:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 09:20:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:20:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 09:20:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 09:20:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 09:20:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 09:20:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 09:20:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 09:20:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:20:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@590c73d3: startup date [Thu Jul 18 09:20:15 CST 2019]; root of context hierarchy
2019-07-18 09:20:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:20:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:20:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 09:20:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 09:20:58 -Registering beans for JMX exposure on startup
2019-07-18 09:20:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 09:20:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 09:20:58 -Starting beans in phase 2147483647
2019-07-18 09:20:58 -Context refreshed
2019-07-18 09:20:58 -Found 1 custom documentation plugin(s)
2019-07-18 09:20:58 -Scanning for api listing references
2019-07-18 09:20:59 -Generating unique operation named: removeUsingPOST_1
2019-07-18 09:20:59 -Generating unique operation named: addUsingGET_1
2019-07-18 09:20:59 -Generating unique operation named: editUsingGET_1
2019-07-18 09:20:59 -Generating unique operation named: listUsingGET_1
2019-07-18 09:20:59 -Generating unique operation named: removeUsingPOST_2
2019-07-18 09:20:59 -Generating unique operation named: removeUsingPOST_3
2019-07-18 09:20:59 -Generating unique operation named: saveUsingPOST_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingGET_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingPOST_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingPUT_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 09:20:59 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 09:20:59 -Generating unique operation named: addUsingGET_2
2019-07-18 09:20:59 -Generating unique operation named: editUsingGET_2
2019-07-18 09:20:59 -Generating unique operation named: listUsingGET_2
2019-07-18 09:20:59 -Generating unique operation named: removeUsingPOST_4
2019-07-18 09:20:59 -Generating unique operation named: removeUsingPOST_5
2019-07-18 09:20:59 -Generating unique operation named: saveUsingPOST_2
2019-07-18 09:20:59 -Generating unique operation named: updateUsingPOST_2
2019-07-18 09:20:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 09:20:59 -Generating unique operation named: addUsingGET_3
2019-07-18 09:20:59 -Generating unique operation named: editUsingGET_3
2019-07-18 09:21:00 -Generating unique operation named: listUsingGET_3
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_6
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_7
2019-07-18 09:21:00 -Generating unique operation named: saveUsingPOST_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingGET_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPOST_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPUT_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 09:21:00 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 09:21:00 -Generating unique operation named: addUsingGET_4
2019-07-18 09:21:00 -Generating unique operation named: editUsingGET_4
2019-07-18 09:21:00 -Generating unique operation named: listUsingGET_4
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_8
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_9
2019-07-18 09:21:00 -Generating unique operation named: saveUsingPOST_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingGET_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPOST_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPUT_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 09:21:00 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 09:21:00 -Generating unique operation named: ElecUsingGET_1
2019-07-18 09:21:00 -Generating unique operation named: addUsingGET_5
2019-07-18 09:21:00 -Generating unique operation named: editUsingGET_5
2019-07-18 09:21:00 -Generating unique operation named: listUsingGET_5
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_10
2019-07-18 09:21:00 -Generating unique operation named: removeUsingPOST_11
2019-07-18 09:21:00 -Generating unique operation named: saveUsingPOST_5
2019-07-18 09:21:00 -Generating unique operation named: updateUsingGET_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPOST_5
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPUT_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 09:21:00 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 09:21:00 -Generating unique operation named: editUsingGET_6
2019-07-18 09:21:00 -Generating unique operation named: listUsingGET_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPOST_6
2019-07-18 09:21:01 -Generating unique operation named: addUsingGET_6
2019-07-18 09:21:01 -Generating unique operation named: editUsingGET_7
2019-07-18 09:21:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 09:21:01 -Generating unique operation named: listUsingGET_7
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_12
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_13
2019-07-18 09:21:01 -Generating unique operation named: saveUsingPOST_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingGET_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPOST_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPUT_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 09:21:01 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 09:21:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 09:21:01 -Generating unique operation named: addUsingGET_7
2019-07-18 09:21:01 -Generating unique operation named: editUsingGET_8
2019-07-18 09:21:01 -Generating unique operation named: listUsingGET_8
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_14
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_15
2019-07-18 09:21:01 -Generating unique operation named: saveUsingPOST_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingGET_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPOST_8
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPUT_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 09:21:01 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 09:21:01 -Generating unique operation named: addUsingGET_8
2019-07-18 09:21:01 -Generating unique operation named: editUsingGET_9
2019-07-18 09:21:01 -Generating unique operation named: listUsingGET_9
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_16
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_17
2019-07-18 09:21:01 -Generating unique operation named: saveUsingPOST_8
2019-07-18 09:21:01 -Generating unique operation named: updateUsingGET_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPOST_9
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPUT_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 09:21:01 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 09:21:01 -Generating unique operation named: addUsingGET_9
2019-07-18 09:21:01 -Generating unique operation named: editUsingGET_10
2019-07-18 09:21:01 -Generating unique operation named: infoUsingGET_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingPOST_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingPUT_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 09:21:01 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 09:21:01 -Generating unique operation named: listUsingGET_10
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_18
2019-07-18 09:21:01 -Generating unique operation named: removeUsingPOST_19
2019-07-18 09:21:02 -Generating unique operation named: saveUsingPOST_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPOST_10
2019-07-18 09:21:02 -Generating unique operation named: listUsingGET_11
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_20
2019-07-18 09:21:02 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 09:21:02 -Generating unique operation named: addUsingGET_10
2019-07-18 09:21:02 -Generating unique operation named: editUsingGET_11
2019-07-18 09:21:02 -Generating unique operation named: listUsingGET_12
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_21
2019-07-18 09:21:02 -Generating unique operation named: saveUsingPOST_10
2019-07-18 09:21:02 -Generating unique operation named: treeUsingGET_1
2019-07-18 09:21:02 -Generating unique operation named: treeUsingGET_2
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPOST_11
2019-07-18 09:21:02 -Generating unique operation named: addUsingGET_11
2019-07-18 09:21:02 -Generating unique operation named: editUsingGET_12
2019-07-18 09:21:02 -Generating unique operation named: listUsingGET_13
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_22
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_23
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPOST_12
2019-07-18 09:21:02 -Generating unique operation named: addUsingGET_12
2019-07-18 09:21:02 -Generating unique operation named: editUsingGET_13
2019-07-18 09:21:02 -Generating unique operation named: listUsingGET_14
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_24
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_25
2019-07-18 09:21:02 -Generating unique operation named: saveUsingPOST_11
2019-07-18 09:21:02 -Generating unique operation named: updateUsingGET_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPOST_13
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPUT_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 09:21:02 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 09:21:02 -Generating unique operation named: addUsingGET_13
2019-07-18 09:21:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 09:21:02 -Generating unique operation named: editUsingGET_14
2019-07-18 09:21:02 -Generating unique operation named: listUsingGET_15
2019-07-18 09:21:02 -Generating unique operation named: printEditUsingGET_1
2019-07-18 09:21:02 -Generating unique operation named: removeUsingPOST_26
2019-07-18 09:21:02 -Generating unique operation named: saveUsingPOST_12
2019-07-18 09:21:02 -Generating unique operation named: updateUsingGET_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPOST_14
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPUT_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 09:21:02 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 09:21:02 -Generating unique operation named: addUsingGET_14
2019-07-18 09:21:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 09:21:03 -Generating unique operation named: editUsingGET_15
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_16
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_13
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_14
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPOST_15
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_17
2019-07-18 09:21:03 -Generating unique operation named: listUsingHEAD_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingPOST_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingPUT_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingPATCH_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingDELETE_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 09:21:03 -Generating unique operation named: listUsingTRACE_1
2019-07-18 09:21:03 -Generating unique operation named: countDDUsingGET_1
2019-07-18 09:21:03 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 09:21:03 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 09:21:03 -Generating unique operation named: addUsingGET_15
2019-07-18 09:21:03 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 09:21:03 -Generating unique operation named: editUsingGET_16
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_18
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_27
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_15
2019-07-18 09:21:03 -Generating unique operation named: treeUsingGET_3
2019-07-18 09:21:03 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPOST_16
2019-07-18 09:21:03 -Generating unique operation named: addUsingGET_16
2019-07-18 09:21:03 -Generating unique operation named: editUsingGET_17
2019-07-18 09:21:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_19
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_28
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_29
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_16
2019-07-18 09:21:03 -Generating unique operation named: updateUsingGET_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPOST_17
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPUT_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 09:21:03 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 09:21:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 09:21:03 -Generating unique operation named: addUsingGET_17
2019-07-18 09:21:03 -Generating unique operation named: editUsingGET_18
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_20
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_30
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_31
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_17
2019-07-18 09:21:03 -Generating unique operation named: updateUsingGET_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPOST_18
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPUT_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 09:21:03 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 09:21:03 -Generating unique operation named: addUsingGET_18
2019-07-18 09:21:03 -Generating unique operation named: editUsingGET_19
2019-07-18 09:21:03 -Generating unique operation named: listUsingGET_21
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_32
2019-07-18 09:21:03 -Generating unique operation named: removeUsingPOST_33
2019-07-18 09:21:03 -Generating unique operation named: saveUsingPOST_18
2019-07-18 09:21:03 -Generating unique operation named: updateUsingGET_12
2019-07-18 09:21:03 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPOST_19
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPUT_12
2019-07-18 09:21:03 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 09:21:03 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 09:21:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 09:21:04 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 09:21:04 -Starting Quartz Scheduler now
2019-07-18 09:21:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 09:21:04 -Starting...
2019-07-18 09:21:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 09:21:04 -Started.
2019-07-18 09:21:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 09:21:04 -Using a shared selector for servlet write/read
2019-07-18 09:21:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 09:21:04 -Started BootdoApplication in 51.553 seconds (JVM running for 53.211)
2019-07-18 09:21:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 09:21:04 -==> Parameters: 
2019-07-18 09:21:05 -<==      Total: 1
2019-07-18 09:21:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 09:22:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 09:22:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 09:22:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-07-18 09:22:07 -Enabling session validation scheduler...
2019-07-18 09:22:07 -请求地址 : http://localhost:8081/
2019-07-18 09:22:07 -HTTP METHOD : GET
2019-07-18 09:22:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-18 09:22:07 -参数 : [{}]
2019-07-18 09:22:07 -耗时 : 4
2019-07-18 09:22:07 -返回值 : redirect:/index
2019-07-18 09:22:08 -请求地址 : http://localhost:8081/login;JSESSIONID=22e51852-2901-457d-8edf-8cef64201ed2
2019-07-18 09:22:08 -HTTP METHOD : GET
2019-07-18 09:22:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 09:22:08 -参数 : [{}]
2019-07-18 09:22:08 -耗时 : 1
2019-07-18 09:22:08 -返回值 : login
2019-07-18 09:22:14 -请求地址 : http://localhost:8081/getVerify
2019-07-18 09:22:14 -HTTP METHOD : GET
2019-07-18 09:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 09:22:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4836c818, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4832c0a5]
2019-07-18 09:22:20 -8556
2019-07-18 09:22:20 -耗时 : 6526
2019-07-18 09:22:20 -返回值 : null
2019-07-18 09:22:28 -请求地址 : http://localhost:8081/login
2019-07-18 09:22:28 -HTTP METHOD : POST
2019-07-18 09:22:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 09:22:28 -参数 : [admin, 111111, 8556, org.apache.shiro.web.servlet.ShiroHttpServletRequest@171fb7d1]
2019-07-18 09:22:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 09:22:28 -==> Parameters: admin(String)
2019-07-18 09:22:29 -<==      Total: 1
2019-07-18 09:22:29 -耗时 : 670
2019-07-18 09:22:29 -返回值 : {msg=操作成功, code=0}
2019-07-18 09:22:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 09:22:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:22:29 -==> Parameters: 1(Long), admin(String), 登录(String), 670(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 09:22:29.442(Timestamp)
2019-07-18 09:22:29 -请求地址 : http://localhost:8081/index
2019-07-18 09:22:29 -HTTP METHOD : GET
2019-07-18 09:22:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 09:22:29 -参数 : [{}]
2019-07-18 09:22:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 09:22:30 -<==    Updates: 1
2019-07-18 09:22:30 -==> Parameters: 1(Long)
2019-07-18 09:22:30 -<==      Total: 51
2019-07-18 09:22:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 09:22:30 -==> Parameters: 138(Long)
2019-07-18 09:22:30 -<==      Total: 1
2019-07-18 09:22:30 -耗时 : 645
2019-07-18 09:22:30 -返回值 : index_v1
2019-07-18 09:22:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:22:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 645(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 09:22:30.665(Timestamp)
2019-07-18 09:22:30 -<==    Updates: 1
2019-07-18 09:22:31 -请求地址 : http://localhost:8081/main
2019-07-18 09:22:31 -HTTP METHOD : GET
2019-07-18 09:22:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:22:31 -参数 : []
2019-07-18 09:22:31 -耗时 : 1
2019-07-18 09:22:31 -返回值 : main
2019-07-18 09:22:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 09:22:33 -HTTP METHOD : GET
2019-07-18 09:22:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 09:22:33 -参数 : []
2019-07-18 09:22:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 09:22:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 09:22:34 -请求地址 : http://localhost:8081/main
2019-07-18 09:22:34 -HTTP METHOD : GET
2019-07-18 09:22:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:22:34 -参数 : []
2019-07-18 09:22:34 -耗时 : 1
2019-07-18 09:22:34 -返回值 : main
2019-07-18 09:22:34 -<==      Total: 0
2019-07-18 09:22:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 09:22:34 -==> Parameters: 1(Long), 0(String)
2019-07-18 09:22:34 -<==      Total: 1
2019-07-18 09:22:34 -耗时 : 938
2019-07-18 09:22:34 -返回值 : com.bootdo.common.utils.PageUtils@299f4b4a
2019-07-18 09:22:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 09:22:52 -==> Parameters: 1(Long)
2019-07-18 09:22:52 -<==      Total: 95
2019-07-18 09:22:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 09:22:52 -HTTP METHOD : GET
2019-07-18 09:22:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 09:22:52 -参数 : []
2019-07-18 09:22:52 -耗时 : 0
2019-07-18 09:22:52 -返回值 : moneyList/moneyList
2019-07-18 09:22:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 09:22:57 -HTTP METHOD : GET
2019-07-18 09:22:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 09:22:57 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 09:22:57 -耗时 : 0
2019-07-18 09:22:57 -返回值 : system/dept/deptTree
2019-07-18 09:22:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 09:22:58 -HTTP METHOD : GET
2019-07-18 09:22:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 09:22:58 -参数 : []
2019-07-18 09:22:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 09:22:58 -==> Parameters: 
2019-07-18 09:22:58 -<==      Total: 3
2019-07-18 09:22:58 -耗时 : 64
2019-07-18 09:22:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 09:23:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:23:02 -HTTP METHOD : POST
2019-07-18 09:23:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:23:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@53d3c1ff]
2019-07-18 09:23:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:23:02 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:23:02 -<==      Total: 3
2019-07-18 09:23:02 -耗时 : 593
2019-07-18 09:23:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@227927f9, com.bootdo.moneyList.damain.MoneyListDO@631e8e87, com.bootdo.moneyList.damain.MoneyListDO@7bd2855c]
2019-07-18 09:23:06 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 09:23:06 -HTTP METHOD : POST
2019-07-18 09:23:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 09:23:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7fae4d78]
2019-07-18 09:23:06 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:23:06 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:23:06 -<==      Total: 3
2019-07-18 09:24:36 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:24:36 -<==      Total: 1
2019-07-18 09:24:36 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:24:36 -<==      Total: 1
2019-07-18 09:24:36 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:24:36 -<==      Total: 0
2019-07-18 09:24:36 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:24:36 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:24:36 -<==    Updates: 1
2019-07-18 09:24:36 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 09:23:06.926(Timestamp), 2019-06(String), admin(String), 2019-07-18 09:24:36.256(Timestamp), admin(String), null
2019-07-18 09:24:36 -<==    Updates: 1
2019-07-18 09:24:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 09:23:06.926(Timestamp)
2019-07-18 09:24:36 -<==      Total: 0
2019-07-18 09:24:36 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:24:36 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 550.57(BigDecimal), 50(BigDecimal), null, null, null, null, 2019-07-18 09:24:36.911(Timestamp), 2019-06(String), admin(String), 2019-07-18 09:24:36.911(Timestamp), admin(String), null
2019-07-18 09:24:36 -<==    Updates: 1
2019-07-18 09:24:36 -耗时 : 90085
2019-07-18 09:24:36 -返回值 : 1601
2019-07-18 09:24:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:24:51 -HTTP METHOD : POST
2019-07-18 09:24:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:24:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@20e8d129]
2019-07-18 09:24:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:24:51 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:24:51 -<==      Total: 3
2019-07-18 09:24:51 -耗时 : 38
2019-07-18 09:24:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4cb2b40f, com.bootdo.moneyList.damain.MoneyListDO@485fb575, com.bootdo.moneyList.damain.MoneyListDO@6b1e0463]
2019-07-18 09:24:52 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 09:24:52 -HTTP METHOD : GET
2019-07-18 09:24:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 09:24:52 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@26fbc57, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@26fbc57]
2019-07-18 09:24:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 09:24:52 -==> Parameters: 1601(Long)
2019-07-18 09:24:52 -<==      Total: 1
2019-07-18 09:24:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:24:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 09:24:52.279(Timestamp)
2019-07-18 09:24:52 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:388)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:377)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$14631743.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 09:24:52 -<==    Updates: 1
2019-07-18 09:41:07 -Starting BootdoApplication on PC-201905091110 with PID 440 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 09:41:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 09:41:07 -The following profiles are active: dev
2019-07-18 09:41:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24b6b8f6: startup date [Thu Jul 18 09:41:07 CST 2019]; root of context hierarchy
2019-07-18 09:41:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 09:41:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7247e88] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f97dad2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 09:41:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 09:41:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:41:24 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 09:41:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 09:41:24 -Starting service [Tomcat]
2019-07-18 09:41:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 09:41:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 09:41:24 -Initializing Spring embedded WebApplicationContext
2019-07-18 09:41:24 -Root WebApplicationContext: initialization completed in 17118 ms
2019-07-18 09:41:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 09:41:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 09:41:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 09:41:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 09:41:26 -Filter xssFilter was not registered (disabled)
2019-07-18 09:41:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 09:41:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 09:41:26 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 09:41:26 -Servlet dispatcherServlet mapped to [/]
2019-07-18 09:41:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24b6b8f6: startup date [Thu Jul 18 09:41:07 CST 2019]; root of context hierarchy
2019-07-18 09:41:32 -Using default implementation for ThreadExecutor
2019-07-18 09:41:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 09:41:32 -Quartz Scheduler v.2.3.0 created.
2019-07-18 09:41:32 -RAMJobStore initialized.
2019-07-18 09:41:32 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 09:41:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 09:41:32 -Quartz scheduler version: 2.3.0
2019-07-18 09:41:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6109d880
2019-07-18 09:41:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 09:41:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 09:41:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 09:41:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 09:41:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 09:41:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 09:41:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 09:41:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 09:41:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 09:41:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 09:41:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 09:41:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 09:41:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 09:41:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 09:41:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 09:41:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 09:41:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 09:41:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 09:41:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 09:41:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 09:41:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 09:41:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 09:41:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 09:41:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:41:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:41:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 09:41:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 09:41:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 09:41:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 09:41:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 09:41:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 09:41:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 09:41:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 09:41:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 09:41:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 09:41:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 09:41:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 09:41:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 09:41:38 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 09:41:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 09:41:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 09:41:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:41:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:41:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 09:41:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 09:41:38 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 09:41:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 09:41:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 09:41:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 09:41:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 09:41:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 09:41:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 09:41:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 09:41:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 09:41:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 09:41:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 09:41:38 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 09:41:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 09:41:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 09:41:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 09:41:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 09:41:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 09:41:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 09:41:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 09:41:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 09:41:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 09:41:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 09:41:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 09:41:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 09:41:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 09:41:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 09:41:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 09:41:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 09:41:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 09:41:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 09:41:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:41:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 09:41:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:41:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 09:41:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 09:41:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 09:41:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 09:41:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 09:41:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:41:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:41:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:41:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 09:41:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 09:41:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:41:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 09:41:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 09:41:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 09:41:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 09:41:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 09:41:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 09:41:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:41:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24b6b8f6: startup date [Thu Jul 18 09:41:07 CST 2019]; root of context hierarchy
2019-07-18 09:41:41 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:41:41 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:41:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 09:41:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 09:41:45 -Registering beans for JMX exposure on startup
2019-07-18 09:41:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 09:41:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 09:41:45 -Starting beans in phase 2147483647
2019-07-18 09:41:45 -Context refreshed
2019-07-18 09:41:45 -Found 1 custom documentation plugin(s)
2019-07-18 09:41:45 -Scanning for api listing references
2019-07-18 09:41:46 -Generating unique operation named: removeUsingPOST_1
2019-07-18 09:41:47 -Generating unique operation named: addUsingGET_1
2019-07-18 09:41:47 -Generating unique operation named: editUsingGET_1
2019-07-18 09:41:47 -Generating unique operation named: listUsingGET_1
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_2
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_3
2019-07-18 09:41:47 -Generating unique operation named: saveUsingPOST_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingGET_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPOST_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPUT_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 09:41:47 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 09:41:47 -Generating unique operation named: addUsingGET_2
2019-07-18 09:41:47 -Generating unique operation named: editUsingGET_2
2019-07-18 09:41:47 -Generating unique operation named: listUsingGET_2
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_4
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_5
2019-07-18 09:41:47 -Generating unique operation named: saveUsingPOST_2
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPOST_2
2019-07-18 09:41:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 09:41:47 -Generating unique operation named: addUsingGET_3
2019-07-18 09:41:47 -Generating unique operation named: editUsingGET_3
2019-07-18 09:41:47 -Generating unique operation named: listUsingGET_3
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_6
2019-07-18 09:41:47 -Generating unique operation named: removeUsingPOST_7
2019-07-18 09:41:47 -Generating unique operation named: saveUsingPOST_3
2019-07-18 09:41:47 -Generating unique operation named: updateUsingGET_2
2019-07-18 09:41:47 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPOST_3
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPUT_2
2019-07-18 09:41:47 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 09:41:47 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 09:41:48 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 09:41:48 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 09:41:48 -Generating unique operation named: addUsingGET_4
2019-07-18 09:41:48 -Generating unique operation named: editUsingGET_4
2019-07-18 09:41:48 -Generating unique operation named: listUsingGET_4
2019-07-18 09:41:48 -Generating unique operation named: removeUsingPOST_8
2019-07-18 09:41:48 -Generating unique operation named: removeUsingPOST_9
2019-07-18 09:41:48 -Generating unique operation named: saveUsingPOST_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingGET_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPOST_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPUT_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 09:41:48 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 09:41:48 -Generating unique operation named: ElecUsingGET_1
2019-07-18 09:41:48 -Generating unique operation named: addUsingGET_5
2019-07-18 09:41:48 -Generating unique operation named: editUsingGET_5
2019-07-18 09:41:48 -Generating unique operation named: listUsingGET_5
2019-07-18 09:41:48 -Generating unique operation named: removeUsingPOST_10
2019-07-18 09:41:48 -Generating unique operation named: removeUsingPOST_11
2019-07-18 09:41:48 -Generating unique operation named: saveUsingPOST_5
2019-07-18 09:41:48 -Generating unique operation named: updateUsingGET_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPOST_5
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPUT_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 09:41:48 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 09:41:48 -Generating unique operation named: editUsingGET_6
2019-07-18 09:41:48 -Generating unique operation named: listUsingGET_6
2019-07-18 09:41:48 -Generating unique operation named: updateUsingPOST_6
2019-07-18 09:41:48 -Generating unique operation named: addUsingGET_6
2019-07-18 09:41:49 -Generating unique operation named: editUsingGET_7
2019-07-18 09:41:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 09:41:49 -Generating unique operation named: listUsingGET_7
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_12
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_13
2019-07-18 09:41:49 -Generating unique operation named: saveUsingPOST_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingGET_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPOST_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPUT_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 09:41:49 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 09:41:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 09:41:49 -Generating unique operation named: addUsingGET_7
2019-07-18 09:41:49 -Generating unique operation named: editUsingGET_8
2019-07-18 09:41:49 -Generating unique operation named: listUsingGET_8
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_14
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_15
2019-07-18 09:41:49 -Generating unique operation named: saveUsingPOST_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingGET_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPOST_8
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPUT_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 09:41:49 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 09:41:49 -Generating unique operation named: addUsingGET_8
2019-07-18 09:41:49 -Generating unique operation named: editUsingGET_9
2019-07-18 09:41:49 -Generating unique operation named: listUsingGET_9
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_16
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_17
2019-07-18 09:41:49 -Generating unique operation named: saveUsingPOST_8
2019-07-18 09:41:49 -Generating unique operation named: updateUsingGET_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPOST_9
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPUT_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 09:41:49 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 09:41:49 -Generating unique operation named: addUsingGET_9
2019-07-18 09:41:49 -Generating unique operation named: editUsingGET_10
2019-07-18 09:41:49 -Generating unique operation named: infoUsingGET_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingPOST_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingPUT_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 09:41:49 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 09:41:49 -Generating unique operation named: listUsingGET_10
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_18
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_19
2019-07-18 09:41:49 -Generating unique operation named: saveUsingPOST_9
2019-07-18 09:41:49 -Generating unique operation named: updateUsingPOST_10
2019-07-18 09:41:49 -Generating unique operation named: listUsingGET_11
2019-07-18 09:41:49 -Generating unique operation named: removeUsingPOST_20
2019-07-18 09:41:49 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 09:41:49 -Generating unique operation named: addUsingGET_10
2019-07-18 09:41:49 -Generating unique operation named: editUsingGET_11
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_12
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_21
2019-07-18 09:41:50 -Generating unique operation named: saveUsingPOST_10
2019-07-18 09:41:50 -Generating unique operation named: treeUsingGET_1
2019-07-18 09:41:50 -Generating unique operation named: treeUsingGET_2
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPOST_11
2019-07-18 09:41:50 -Generating unique operation named: addUsingGET_11
2019-07-18 09:41:50 -Generating unique operation named: editUsingGET_12
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_13
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_22
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_23
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPOST_12
2019-07-18 09:41:50 -Generating unique operation named: addUsingGET_12
2019-07-18 09:41:50 -Generating unique operation named: editUsingGET_13
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_14
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_24
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_25
2019-07-18 09:41:50 -Generating unique operation named: saveUsingPOST_11
2019-07-18 09:41:50 -Generating unique operation named: updateUsingGET_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPOST_13
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPUT_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 09:41:50 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 09:41:50 -Generating unique operation named: addUsingGET_13
2019-07-18 09:41:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 09:41:50 -Generating unique operation named: editUsingGET_14
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_15
2019-07-18 09:41:50 -Generating unique operation named: printEditUsingGET_1
2019-07-18 09:41:50 -Generating unique operation named: removeUsingPOST_26
2019-07-18 09:41:50 -Generating unique operation named: saveUsingPOST_12
2019-07-18 09:41:50 -Generating unique operation named: updateUsingGET_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPOST_14
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPUT_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 09:41:50 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 09:41:50 -Generating unique operation named: addUsingGET_14
2019-07-18 09:41:50 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 09:41:50 -Generating unique operation named: editUsingGET_15
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_16
2019-07-18 09:41:50 -Generating unique operation named: saveUsingPOST_13
2019-07-18 09:41:50 -Generating unique operation named: saveUsingPOST_14
2019-07-18 09:41:50 -Generating unique operation named: updateUsingPOST_15
2019-07-18 09:41:50 -Generating unique operation named: listUsingGET_17
2019-07-18 09:41:50 -Generating unique operation named: listUsingHEAD_1
2019-07-18 09:41:50 -Generating unique operation named: listUsingPOST_1
2019-07-18 09:41:51 -Generating unique operation named: listUsingPUT_1
2019-07-18 09:41:51 -Generating unique operation named: listUsingPATCH_1
2019-07-18 09:41:51 -Generating unique operation named: listUsingDELETE_1
2019-07-18 09:41:51 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 09:41:51 -Generating unique operation named: listUsingTRACE_1
2019-07-18 09:41:51 -Generating unique operation named: countDDUsingGET_1
2019-07-18 09:41:51 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 09:41:51 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 09:41:51 -Generating unique operation named: addUsingGET_15
2019-07-18 09:41:51 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 09:41:51 -Generating unique operation named: editUsingGET_16
2019-07-18 09:41:51 -Generating unique operation named: listUsingGET_18
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_27
2019-07-18 09:41:51 -Generating unique operation named: saveUsingPOST_15
2019-07-18 09:41:51 -Generating unique operation named: treeUsingGET_3
2019-07-18 09:41:51 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPOST_16
2019-07-18 09:41:51 -Generating unique operation named: addUsingGET_16
2019-07-18 09:41:51 -Generating unique operation named: editUsingGET_17
2019-07-18 09:41:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 09:41:51 -Generating unique operation named: listUsingGET_19
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_28
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_29
2019-07-18 09:41:51 -Generating unique operation named: saveUsingPOST_16
2019-07-18 09:41:51 -Generating unique operation named: updateUsingGET_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPOST_17
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPUT_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 09:41:51 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 09:41:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 09:41:51 -Generating unique operation named: addUsingGET_17
2019-07-18 09:41:51 -Generating unique operation named: editUsingGET_18
2019-07-18 09:41:51 -Generating unique operation named: listUsingGET_20
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_30
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_31
2019-07-18 09:41:51 -Generating unique operation named: saveUsingPOST_17
2019-07-18 09:41:51 -Generating unique operation named: updateUsingGET_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPOST_18
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPUT_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 09:41:51 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 09:41:51 -Generating unique operation named: addUsingGET_18
2019-07-18 09:41:51 -Generating unique operation named: editUsingGET_19
2019-07-18 09:41:51 -Generating unique operation named: listUsingGET_21
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_32
2019-07-18 09:41:51 -Generating unique operation named: removeUsingPOST_33
2019-07-18 09:41:51 -Generating unique operation named: saveUsingPOST_18
2019-07-18 09:41:51 -Generating unique operation named: updateUsingGET_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPOST_19
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPUT_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 09:41:51 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 09:41:52 -Starting Quartz Scheduler now
2019-07-18 09:41:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 09:41:52 -Starting...
2019-07-18 09:41:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 09:41:52 -Started.
2019-07-18 09:41:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 09:41:52 -Using a shared selector for servlet write/read
2019-07-18 09:41:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 09:41:52 -Started BootdoApplication in 48.013 seconds (JVM running for 49.89)
2019-07-18 09:41:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 09:41:53 -==> Parameters: 
2019-07-18 09:41:53 -<==      Total: 1
2019-07-18 09:42:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 09:42:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 09:42:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2019-07-18 09:42:27 -Enabling session validation scheduler...
2019-07-18 09:42:27 -请求地址 : http://localhost:8081/login;JSESSIONID=d4c94bcd-be19-4df5-9cdb-ad452390e0ba
2019-07-18 09:42:27 -HTTP METHOD : GET
2019-07-18 09:42:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 09:42:27 -参数 : [{}]
2019-07-18 09:42:27 -耗时 : 5
2019-07-18 09:42:27 -返回值 : login
2019-07-18 09:42:29 -请求地址 : http://localhost:8081/getVerify
2019-07-18 09:42:29 -HTTP METHOD : GET
2019-07-18 09:42:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 09:42:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b1dc179, org.apache.shiro.web.servlet.ShiroHttpServletResponse@242a97a4]
2019-07-18 09:42:33 -4063
2019-07-18 09:42:33 -耗时 : 4426
2019-07-18 09:42:33 -返回值 : null
2019-07-18 09:42:33 -请求地址 : http://localhost:8081/login
2019-07-18 09:42:33 -HTTP METHOD : GET
2019-07-18 09:42:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 09:42:33 -参数 : [{}]
2019-07-18 09:42:33 -耗时 : 1
2019-07-18 09:42:33 -返回值 : login
2019-07-18 09:42:39 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 09:42:42 -请求地址 : http://localhost:8081/login
2019-07-18 09:42:42 -HTTP METHOD : POST
2019-07-18 09:42:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 09:42:42 -参数 : [admin, 111111, 4063, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d098485]
2019-07-18 09:42:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 09:42:42 -==> Parameters: admin(String)
2019-07-18 09:42:42 -<==      Total: 1
2019-07-18 09:42:42 -耗时 : 145
2019-07-18 09:42:42 -返回值 : {msg=操作成功, code=0}
2019-07-18 09:42:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 09:42:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:42:43 -==> Parameters: 1(Long), admin(String), 登录(String), 145(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 09:42:43.137(Timestamp)
2019-07-18 09:42:43 -<==    Updates: 1
2019-07-18 09:42:43 -请求地址 : http://localhost:8081/index
2019-07-18 09:42:43 -HTTP METHOD : GET
2019-07-18 09:42:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 09:42:43 -参数 : [{}]
2019-07-18 09:42:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 09:42:43 -==> Parameters: 1(Long)
2019-07-18 09:42:43 -<==      Total: 51
2019-07-18 09:42:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 09:42:43 -==> Parameters: 138(Long)
2019-07-18 09:42:43 -<==      Total: 1
2019-07-18 09:42:43 -耗时 : 244
2019-07-18 09:42:43 -返回值 : index_v1
2019-07-18 09:42:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:42:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 245(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 09:42:43.701(Timestamp)
2019-07-18 09:42:43 -请求地址 : http://localhost:8081/main
2019-07-18 09:42:43 -HTTP METHOD : GET
2019-07-18 09:42:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:42:43 -参数 : []
2019-07-18 09:42:43 -耗时 : 0
2019-07-18 09:42:43 -返回值 : main
2019-07-18 09:42:43 -<==    Updates: 1
2019-07-18 09:42:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 09:42:44 -HTTP METHOD : GET
2019-07-18 09:42:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 09:42:44 -参数 : []
2019-07-18 09:42:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 09:42:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 09:42:44 -<==      Total: 0
2019-07-18 09:42:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 09:42:44 -==> Parameters: 1(Long), 0(String)
2019-07-18 09:42:44 -<==      Total: 1
2019-07-18 09:42:44 -耗时 : 88
2019-07-18 09:42:44 -返回值 : com.bootdo.common.utils.PageUtils@35346c2f
2019-07-18 09:42:44 -请求地址 : http://localhost:8081/main
2019-07-18 09:42:44 -HTTP METHOD : GET
2019-07-18 09:42:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:42:44 -参数 : []
2019-07-18 09:42:44 -耗时 : 0
2019-07-18 09:42:44 -返回值 : main
2019-07-18 09:42:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 09:42:50 -==> Parameters: 1(Long)
2019-07-18 09:42:50 -<==      Total: 95
2019-07-18 09:42:50 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 09:42:50 -HTTP METHOD : GET
2019-07-18 09:42:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 09:42:50 -参数 : []
2019-07-18 09:42:50 -耗时 : 1
2019-07-18 09:42:50 -返回值 : moneyList/moneyList
2019-07-18 09:42:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 09:42:54 -HTTP METHOD : GET
2019-07-18 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 09:42:54 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 09:42:54 -耗时 : 0
2019-07-18 09:42:54 -返回值 : system/dept/deptTree
2019-07-18 09:42:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 09:42:54 -HTTP METHOD : GET
2019-07-18 09:42:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 09:42:54 -参数 : []
2019-07-18 09:42:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 09:42:54 -==> Parameters: 
2019-07-18 09:42:54 -<==      Total: 3
2019-07-18 09:42:54 -耗时 : 29
2019-07-18 09:42:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 09:42:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:42:57 -HTTP METHOD : POST
2019-07-18 09:42:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:42:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5fb9c487]
2019-07-18 09:42:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_type != 'B' 
2019-07-18 09:42:57 -==> Parameters: 2019-06(String), 2(String), 2019-06(String), 2(String), 2019-06(String), 2(String)
2019-07-18 09:42:57 -<==      Total: 3
2019-07-18 09:42:57 -耗时 : 76
2019-07-18 09:42:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@28abb91e, com.bootdo.moneyList.damain.MoneyListDO@47874383, com.bootdo.moneyList.damain.MoneyListDO@78224c2a]
2019-07-18 09:43:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:43:01 -HTTP METHOD : POST
2019-07-18 09:43:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:43:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@58e81113]
2019-07-18 09:43:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:43:01 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:43:01 -<==      Total: 3
2019-07-18 09:43:01 -耗时 : 44
2019-07-18 09:43:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@79b6b6e4, com.bootdo.moneyList.damain.MoneyListDO@3c53a4a1, com.bootdo.moneyList.damain.MoneyListDO@7f706bc4]
2019-07-18 09:43:08 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 09:43:08 -HTTP METHOD : POST
2019-07-18 09:43:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 09:43:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@17704e69]
2019-07-18 09:43:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:43:08 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:43:08 -<==      Total: 3
2019-07-18 09:43:08 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 09:43:08 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:43:08 -<==      Total: 1
2019-07-18 09:43:08 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 09:43:08 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:43:08 -<==      Total: 1
2019-07-18 09:43:08 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 09:43:08 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:43:08 -<==      Total: 0
2019-07-18 09:43:08 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:43:08 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:43:09 -<==    Updates: 1
2019-07-18 09:43:09 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:43:09 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 09:43:08.917(Timestamp), 2019-06(String), admin(String), 2019-07-18 09:43:08.917(Timestamp), admin(String), null
2019-07-18 09:43:09 -<==    Updates: 1
2019-07-18 09:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 09:43:09 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 09:43:08.917(Timestamp)
2019-07-18 09:43:09 -<==      Total: 1
2019-07-18 09:43:09 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 09:43:09 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 600.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 09:43:09 -<==    Updates: 1
2019-07-18 09:43:09 -耗时 : 452
2019-07-18 09:43:09 -返回值 : 1601
2019-07-18 09:43:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:43:10 -HTTP METHOD : POST
2019-07-18 09:43:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:43:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40f45383]
2019-07-18 09:43:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:43:10 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:43:10 -<==      Total: 3
2019-07-18 09:43:10 -耗时 : 41
2019-07-18 09:43:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5249a44b, com.bootdo.moneyList.damain.MoneyListDO@221f5e2d, com.bootdo.moneyList.damain.MoneyListDO@3ec061c0]
2019-07-18 09:43:11 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 09:43:11 -HTTP METHOD : GET
2019-07-18 09:43:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 09:43:11 -参数 : [1601, 1-0001, {}]
2019-07-18 09:43:11 -==>  Preparing: select * from elec ml where ml.user_Id = ? 
2019-07-18 09:43:11 -==> Parameters: 1-0001(String)
2019-07-18 09:43:11 -<==      Total: 2
2019-07-18 09:43:11 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.get(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.get(MoneyListServiceImpl.java:26)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7292b488.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-07-18 09:43:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:43:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-07-18 09:43:11.522(Timestamp)
2019-07-18 09:43:11 -<==    Updates: 1
2019-07-18 09:45:02 -Starting BootdoApplication on PC-201905091110 with PID 5008 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 09:45:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 09:45:02 -The following profiles are active: dev
2019-07-18 09:45:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62fe6067: startup date [Thu Jul 18 09:45:03 CST 2019]; root of context hierarchy
2019-07-18 09:45:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 09:45:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a80369a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7cd96541] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 09:45:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 09:45:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:45:20 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 09:45:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 09:45:20 -Starting service [Tomcat]
2019-07-18 09:45:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 09:45:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 09:45:21 -Initializing Spring embedded WebApplicationContext
2019-07-18 09:45:21 -Root WebApplicationContext: initialization completed in 17943 ms
2019-07-18 09:45:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 09:45:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 09:45:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 09:45:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 09:45:22 -Filter xssFilter was not registered (disabled)
2019-07-18 09:45:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 09:45:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 09:45:22 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 09:45:22 -Servlet dispatcherServlet mapped to [/]
2019-07-18 09:45:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62fe6067: startup date [Thu Jul 18 09:45:03 CST 2019]; root of context hierarchy
2019-07-18 09:45:30 -Using default implementation for ThreadExecutor
2019-07-18 09:45:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 09:45:30 -Quartz Scheduler v.2.3.0 created.
2019-07-18 09:45:30 -RAMJobStore initialized.
2019-07-18 09:45:30 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 09:45:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 09:45:30 -Quartz scheduler version: 2.3.0
2019-07-18 09:45:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@a859c5
2019-07-18 09:45:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 09:45:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 09:45:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 09:45:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 09:45:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 09:45:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 09:45:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 09:45:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 09:45:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 09:45:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 09:45:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 09:45:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 09:45:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 09:45:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 09:45:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 09:45:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 09:45:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 09:45:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:45:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:45:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 09:45:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 09:45:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 09:45:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 09:45:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 09:45:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 09:45:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 09:45:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 09:45:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 09:45:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 09:45:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 09:45:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 09:45:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 09:45:37 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 09:45:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 09:45:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 09:45:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:45:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:45:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 09:45:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 09:45:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 09:45:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 09:45:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 09:45:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 09:45:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 09:45:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 09:45:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 09:45:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 09:45:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 09:45:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 09:45:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 09:45:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 09:45:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 09:45:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 09:45:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 09:45:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 09:45:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 09:45:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 09:45:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 09:45:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 09:45:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 09:45:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 09:45:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 09:45:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 09:45:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 09:45:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 09:45:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 09:45:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:45:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:45:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 09:45:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 09:45:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 09:45:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 09:45:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 09:45:37 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:45:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 09:45:37 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 09:45:37 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:45:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 09:45:37 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:45:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:45:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 09:45:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 09:45:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 09:45:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 09:45:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 09:45:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 09:45:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:45:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62fe6067: startup date [Thu Jul 18 09:45:03 CST 2019]; root of context hierarchy
2019-07-18 09:45:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:45:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:45:41 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 09:45:41 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 09:45:45 -Registering beans for JMX exposure on startup
2019-07-18 09:45:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 09:45:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 09:45:45 -Starting beans in phase 2147483647
2019-07-18 09:45:45 -Context refreshed
2019-07-18 09:45:45 -Found 1 custom documentation plugin(s)
2019-07-18 09:45:45 -Scanning for api listing references
2019-07-18 09:45:46 -Generating unique operation named: removeUsingPOST_1
2019-07-18 09:45:46 -Generating unique operation named: addUsingGET_1
2019-07-18 09:45:46 -Generating unique operation named: editUsingGET_1
2019-07-18 09:45:46 -Generating unique operation named: listUsingGET_1
2019-07-18 09:45:46 -Generating unique operation named: removeUsingPOST_2
2019-07-18 09:45:46 -Generating unique operation named: removeUsingPOST_3
2019-07-18 09:45:46 -Generating unique operation named: saveUsingPOST_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingGET_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingPOST_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingPUT_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 09:45:46 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 09:45:47 -Generating unique operation named: addUsingGET_2
2019-07-18 09:45:47 -Generating unique operation named: editUsingGET_2
2019-07-18 09:45:47 -Generating unique operation named: listUsingGET_2
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_4
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_5
2019-07-18 09:45:47 -Generating unique operation named: saveUsingPOST_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPOST_2
2019-07-18 09:45:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 09:45:47 -Generating unique operation named: addUsingGET_3
2019-07-18 09:45:47 -Generating unique operation named: editUsingGET_3
2019-07-18 09:45:47 -Generating unique operation named: listUsingGET_3
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_6
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_7
2019-07-18 09:45:47 -Generating unique operation named: saveUsingPOST_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingGET_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPOST_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPUT_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 09:45:47 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 09:45:47 -Generating unique operation named: addUsingGET_4
2019-07-18 09:45:47 -Generating unique operation named: editUsingGET_4
2019-07-18 09:45:47 -Generating unique operation named: listUsingGET_4
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_8
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_9
2019-07-18 09:45:47 -Generating unique operation named: saveUsingPOST_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingGET_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPOST_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPUT_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 09:45:47 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 09:45:47 -Generating unique operation named: ElecUsingGET_1
2019-07-18 09:45:47 -Generating unique operation named: addUsingGET_5
2019-07-18 09:45:47 -Generating unique operation named: editUsingGET_5
2019-07-18 09:45:47 -Generating unique operation named: listUsingGET_5
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_10
2019-07-18 09:45:47 -Generating unique operation named: removeUsingPOST_11
2019-07-18 09:45:47 -Generating unique operation named: saveUsingPOST_5
2019-07-18 09:45:47 -Generating unique operation named: updateUsingGET_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPOST_5
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPUT_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 09:45:47 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_6
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_6
2019-07-18 09:45:48 -Generating unique operation named: addUsingGET_6
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_7
2019-07-18 09:45:48 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_7
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_12
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_13
2019-07-18 09:45:48 -Generating unique operation named: saveUsingPOST_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingGET_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPUT_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 09:45:48 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 09:45:48 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 09:45:48 -Generating unique operation named: addUsingGET_7
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_8
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_8
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_14
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_15
2019-07-18 09:45:48 -Generating unique operation named: saveUsingPOST_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingGET_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_8
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPUT_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 09:45:48 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 09:45:48 -Generating unique operation named: addUsingGET_8
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_9
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_9
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_16
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_17
2019-07-18 09:45:48 -Generating unique operation named: saveUsingPOST_8
2019-07-18 09:45:48 -Generating unique operation named: updateUsingGET_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_9
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPUT_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 09:45:48 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 09:45:48 -Generating unique operation named: addUsingGET_9
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_10
2019-07-18 09:45:48 -Generating unique operation named: infoUsingGET_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingPOST_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingPUT_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 09:45:48 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_10
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_18
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_19
2019-07-18 09:45:48 -Generating unique operation named: saveUsingPOST_9
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_10
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_11
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_20
2019-07-18 09:45:48 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 09:45:48 -Generating unique operation named: addUsingGET_10
2019-07-18 09:45:48 -Generating unique operation named: editUsingGET_11
2019-07-18 09:45:48 -Generating unique operation named: listUsingGET_12
2019-07-18 09:45:48 -Generating unique operation named: removeUsingPOST_21
2019-07-18 09:45:48 -Generating unique operation named: saveUsingPOST_10
2019-07-18 09:45:48 -Generating unique operation named: treeUsingGET_1
2019-07-18 09:45:48 -Generating unique operation named: treeUsingGET_2
2019-07-18 09:45:48 -Generating unique operation named: updateUsingPOST_11
2019-07-18 09:45:49 -Generating unique operation named: addUsingGET_11
2019-07-18 09:45:49 -Generating unique operation named: editUsingGET_12
2019-07-18 09:45:49 -Generating unique operation named: listUsingGET_13
2019-07-18 09:45:49 -Generating unique operation named: removeUsingPOST_22
2019-07-18 09:45:49 -Generating unique operation named: removeUsingPOST_23
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPOST_12
2019-07-18 09:45:49 -Generating unique operation named: addUsingGET_12
2019-07-18 09:45:49 -Generating unique operation named: editUsingGET_13
2019-07-18 09:45:49 -Generating unique operation named: listUsingGET_14
2019-07-18 09:45:49 -Generating unique operation named: removeUsingPOST_24
2019-07-18 09:45:49 -Generating unique operation named: removeUsingPOST_25
2019-07-18 09:45:49 -Generating unique operation named: saveUsingPOST_11
2019-07-18 09:45:49 -Generating unique operation named: updateUsingGET_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPOST_13
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPUT_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 09:45:49 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 09:45:49 -Generating unique operation named: addUsingGET_13
2019-07-18 09:45:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 09:45:49 -Generating unique operation named: editUsingGET_14
2019-07-18 09:45:49 -Generating unique operation named: listUsingGET_15
2019-07-18 09:45:49 -Generating unique operation named: printEditUsingGET_1
2019-07-18 09:45:49 -Generating unique operation named: removeUsingPOST_26
2019-07-18 09:45:49 -Generating unique operation named: saveUsingPOST_12
2019-07-18 09:45:49 -Generating unique operation named: updateUsingGET_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPOST_14
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPUT_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 09:45:49 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 09:45:49 -Generating unique operation named: addUsingGET_14
2019-07-18 09:45:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 09:45:49 -Generating unique operation named: editUsingGET_15
2019-07-18 09:45:49 -Generating unique operation named: listUsingGET_16
2019-07-18 09:45:49 -Generating unique operation named: saveUsingPOST_13
2019-07-18 09:45:49 -Generating unique operation named: saveUsingPOST_14
2019-07-18 09:45:49 -Generating unique operation named: updateUsingPOST_15
2019-07-18 09:45:49 -Generating unique operation named: listUsingGET_17
2019-07-18 09:45:49 -Generating unique operation named: listUsingHEAD_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingPOST_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingPUT_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingPATCH_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingDELETE_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 09:45:49 -Generating unique operation named: listUsingTRACE_1
2019-07-18 09:45:49 -Generating unique operation named: countDDUsingGET_1
2019-07-18 09:45:49 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 09:45:49 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 09:45:50 -Generating unique operation named: addUsingGET_15
2019-07-18 09:45:50 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 09:45:50 -Generating unique operation named: editUsingGET_16
2019-07-18 09:45:50 -Generating unique operation named: listUsingGET_18
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_27
2019-07-18 09:45:50 -Generating unique operation named: saveUsingPOST_15
2019-07-18 09:45:50 -Generating unique operation named: treeUsingGET_3
2019-07-18 09:45:50 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPOST_16
2019-07-18 09:45:50 -Generating unique operation named: addUsingGET_16
2019-07-18 09:45:50 -Generating unique operation named: editUsingGET_17
2019-07-18 09:45:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 09:45:50 -Generating unique operation named: listUsingGET_19
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_28
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_29
2019-07-18 09:45:50 -Generating unique operation named: saveUsingPOST_16
2019-07-18 09:45:50 -Generating unique operation named: updateUsingGET_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPOST_17
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPUT_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 09:45:50 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 09:45:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 09:45:50 -Generating unique operation named: addUsingGET_17
2019-07-18 09:45:50 -Generating unique operation named: editUsingGET_18
2019-07-18 09:45:50 -Generating unique operation named: listUsingGET_20
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_30
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_31
2019-07-18 09:45:50 -Generating unique operation named: saveUsingPOST_17
2019-07-18 09:45:50 -Generating unique operation named: updateUsingGET_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPOST_18
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPUT_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 09:45:50 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 09:45:50 -Generating unique operation named: addUsingGET_18
2019-07-18 09:45:50 -Generating unique operation named: editUsingGET_19
2019-07-18 09:45:50 -Generating unique operation named: listUsingGET_21
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_32
2019-07-18 09:45:50 -Generating unique operation named: removeUsingPOST_33
2019-07-18 09:45:51 -Generating unique operation named: saveUsingPOST_18
2019-07-18 09:45:51 -Generating unique operation named: updateUsingGET_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingPOST_19
2019-07-18 09:45:51 -Generating unique operation named: updateUsingPUT_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 09:45:51 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 09:45:51 -Starting Quartz Scheduler now
2019-07-18 09:45:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 09:45:51 -Starting...
2019-07-18 09:45:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 09:45:51 -Started.
2019-07-18 09:45:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 09:45:51 -Using a shared selector for servlet write/read
2019-07-18 09:45:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 09:45:51 -Started BootdoApplication in 51.893 seconds (JVM running for 54.024)
2019-07-18 09:45:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 09:45:51 -==> Parameters: 
2019-07-18 09:45:51 -<==      Total: 1
2019-07-18 09:46:39 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 09:47:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 09:47:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 09:47:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 50 ms
2019-07-18 09:47:17 -Enabling session validation scheduler...
2019-07-18 09:47:17 -请求地址 : http://localhost:8081/login;JSESSIONID=7a9ae777-cf79-4bd4-8b4c-f6342e86e2b4
2019-07-18 09:47:17 -HTTP METHOD : GET
2019-07-18 09:47:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 09:47:17 -参数 : [{}]
2019-07-18 09:47:17 -耗时 : 5
2019-07-18 09:47:17 -返回值 : login
2019-07-18 09:47:19 -请求地址 : http://localhost:8081/getVerify
2019-07-18 09:47:19 -HTTP METHOD : GET
2019-07-18 09:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 09:47:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@9208afb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4381f591]
2019-07-18 09:47:24 -1875
2019-07-18 09:47:24 -耗时 : 4997
2019-07-18 09:47:24 -返回值 : null
2019-07-18 09:47:36 -请求地址 : http://localhost:8081/login
2019-07-18 09:47:36 -HTTP METHOD : POST
2019-07-18 09:47:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 09:47:36 -参数 : [admin, 111111, 1875, org.apache.shiro.web.servlet.ShiroHttpServletRequest@41082c6f]
2019-07-18 09:47:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 09:47:36 -==> Parameters: admin(String)
2019-07-18 09:47:36 -<==      Total: 1
2019-07-18 09:47:36 -耗时 : 122
2019-07-18 09:47:36 -返回值 : {msg=操作成功, code=0}
2019-07-18 09:47:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 09:47:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:47:36 -==> Parameters: 1(Long), admin(String), 登录(String), 122(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 09:47:36.5(Timestamp)
2019-07-18 09:47:36 -<==    Updates: 1
2019-07-18 09:47:36 -请求地址 : http://localhost:8081/index
2019-07-18 09:47:36 -HTTP METHOD : GET
2019-07-18 09:47:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 09:47:36 -参数 : [{}]
2019-07-18 09:47:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 09:47:36 -==> Parameters: 1(Long)
2019-07-18 09:47:36 -<==      Total: 51
2019-07-18 09:47:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 09:47:36 -==> Parameters: 138(Long)
2019-07-18 09:47:36 -<==      Total: 1
2019-07-18 09:47:36 -耗时 : 206
2019-07-18 09:47:36 -返回值 : index_v1
2019-07-18 09:47:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:47:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 206(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 09:47:37.048(Timestamp)
2019-07-18 09:47:37 -<==    Updates: 1
2019-07-18 09:47:37 -请求地址 : http://localhost:8081/main
2019-07-18 09:47:37 -HTTP METHOD : GET
2019-07-18 09:47:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:47:37 -参数 : []
2019-07-18 09:47:37 -耗时 : 1
2019-07-18 09:47:37 -返回值 : main
2019-07-18 09:47:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 09:47:37 -HTTP METHOD : GET
2019-07-18 09:47:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 09:47:37 -参数 : []
2019-07-18 09:47:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 09:47:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 09:47:37 -<==      Total: 0
2019-07-18 09:47:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 09:47:37 -==> Parameters: 1(Long), 0(String)
2019-07-18 09:47:37 -<==      Total: 1
2019-07-18 09:47:37 -耗时 : 52
2019-07-18 09:47:37 -返回值 : com.bootdo.common.utils.PageUtils@911e520
2019-07-18 09:47:37 -请求地址 : http://localhost:8081/main
2019-07-18 09:47:37 -HTTP METHOD : GET
2019-07-18 09:47:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:47:37 -参数 : []
2019-07-18 09:47:37 -耗时 : 0
2019-07-18 09:47:37 -返回值 : main
2019-07-18 09:47:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 09:47:43 -==> Parameters: 1(Long)
2019-07-18 09:47:43 -<==      Total: 95
2019-07-18 09:47:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 09:47:43 -HTTP METHOD : GET
2019-07-18 09:47:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 09:47:43 -参数 : []
2019-07-18 09:47:43 -耗时 : 0
2019-07-18 09:47:43 -返回值 : moneyList/moneyList
2019-07-18 09:47:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 09:47:49 -HTTP METHOD : GET
2019-07-18 09:47:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 09:47:49 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 09:47:49 -耗时 : 0
2019-07-18 09:47:49 -返回值 : system/dept/deptTree
2019-07-18 09:47:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 09:47:49 -HTTP METHOD : GET
2019-07-18 09:47:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 09:47:49 -参数 : []
2019-07-18 09:47:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 09:47:49 -==> Parameters: 
2019-07-18 09:47:49 -<==      Total: 3
2019-07-18 09:47:49 -耗时 : 31
2019-07-18 09:47:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 09:47:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:47:54 -HTTP METHOD : POST
2019-07-18 09:47:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:47:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40ba1b97]
2019-07-18 09:47:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:47:54 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:47:54 -<==      Total: 3
2019-07-18 09:47:54 -耗时 : 104
2019-07-18 09:47:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6f0c3681, com.bootdo.moneyList.damain.MoneyListDO@67a888c7, com.bootdo.moneyList.damain.MoneyListDO@f148d44]
2019-07-18 09:47:58 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 09:47:58 -HTTP METHOD : POST
2019-07-18 09:47:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 09:47:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@44575087]
2019-07-18 09:47:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:47:58 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:47:58 -<==      Total: 3
2019-07-18 09:47:58 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 09:47:58 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:47:58 -<==      Total: 1
2019-07-18 09:47:58 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 09:47:58 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:47:58 -<==      Total: 1
2019-07-18 09:47:58 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 09:47:58 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:47:58 -<==      Total: 0
2019-07-18 09:47:58 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:47:58 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:47:58 -<==    Updates: 1
2019-07-18 09:47:58 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:47:58 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 09:47:58.09(Timestamp), 2019-06(String), admin(String), 2019-07-18 09:47:58.09(Timestamp), admin(String), null
2019-07-18 09:47:58 -<==    Updates: 1
2019-07-18 09:47:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 09:47:58 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 09:47:58.09(Timestamp)
2019-07-18 09:47:58 -<==      Total: 1
2019-07-18 09:47:58 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 09:47:58 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 650.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 09:47:58 -<==    Updates: 1
2019-07-18 09:47:58 -耗时 : 408
2019-07-18 09:47:58 -返回值 : 1601
2019-07-18 09:47:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:47:59 -HTTP METHOD : POST
2019-07-18 09:47:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:47:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14706feb]
2019-07-18 09:47:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:47:59 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:47:59 -<==      Total: 3
2019-07-18 09:47:59 -耗时 : 35
2019-07-18 09:47:59 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2a6db152, com.bootdo.moneyList.damain.MoneyListDO@57453aa0, com.bootdo.moneyList.damain.MoneyListDO@40dd1894]
2019-07-18 09:48:00 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 09:48:00 -HTTP METHOD : GET
2019-07-18 09:48:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 09:48:00 -参数 : [1601, 1-0001, {}]
2019-07-18 09:48:00 -==>  Preparing: select * from moneyList ml where ml.user_Id = ? 
2019-07-18 09:48:00 -==> Parameters: 1-0001(String)
2019-07-18 09:48:00 -{conn-10001, pstmt-20017} execute error. select *  from moneyList ml  where ml.user_Id = ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.get(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.get(MoneyListServiceImpl.java:26)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$740a68c0.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 09:48:00 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-18 09:48:00 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-18 09:48:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:48:00 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyListMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *  from moneyList ml  where ml.user_Id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyListMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *  from moneyList ml  where ml.user_Id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy129.get(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyListServiceImpl.get(MoneyListServiceImpl.java:26)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:357)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$740a68c0.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-07-18 09:48:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyListMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select *  from moneyList ml  where ml.user_Id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.moneylist' doesn't exist(String), null, 2019-07-18 09:48:00.788(Timestamp)
2019-07-18 09:48:00 -<==    Updates: 1
2019-07-18 09:54:37 -Starting BootdoApplication on PC-201905091110 with PID 2324 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 09:54:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 09:54:37 -The following profiles are active: dev
2019-07-18 09:54:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4648ce9: startup date [Thu Jul 18 09:54:37 CST 2019]; root of context hierarchy
2019-07-18 09:54:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 09:54:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a57b50f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$97d47f9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 09:54:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 09:54:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 09:54:54 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 09:54:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 09:54:54 -Starting service [Tomcat]
2019-07-18 09:54:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 09:54:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 09:54:55 -Initializing Spring embedded WebApplicationContext
2019-07-18 09:54:55 -Root WebApplicationContext: initialization completed in 17902 ms
2019-07-18 09:54:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 09:54:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 09:54:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 09:54:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 09:54:56 -Filter xssFilter was not registered (disabled)
2019-07-18 09:54:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 09:54:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 09:54:57 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 09:54:57 -Servlet dispatcherServlet mapped to [/]
2019-07-18 09:55:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4648ce9: startup date [Thu Jul 18 09:54:37 CST 2019]; root of context hierarchy
2019-07-18 09:55:04 -Using default implementation for ThreadExecutor
2019-07-18 09:55:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 09:55:04 -Quartz Scheduler v.2.3.0 created.
2019-07-18 09:55:04 -RAMJobStore initialized.
2019-07-18 09:55:04 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 09:55:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 09:55:04 -Quartz scheduler version: 2.3.0
2019-07-18 09:55:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@177068db
2019-07-18 09:55:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 09:55:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 09:55:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 09:55:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 09:55:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 09:55:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 09:55:10 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 09:55:10 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 09:55:10 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 09:55:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 09:55:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 09:55:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 09:55:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 09:55:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 09:55:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 09:55:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 09:55:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 09:55:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 09:55:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:55:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 09:55:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 09:55:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 09:55:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 09:55:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 09:55:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 09:55:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 09:55:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 09:55:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 09:55:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 09:55:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 09:55:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 09:55:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 09:55:10 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 09:55:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 09:55:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 09:55:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:55:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 09:55:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 09:55:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 09:55:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:10 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 09:55:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 09:55:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 09:55:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 09:55:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 09:55:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 09:55:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 09:55:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 09:55:10 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 09:55:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 09:55:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 09:55:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 09:55:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 09:55:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 09:55:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 09:55:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 09:55:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 09:55:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 09:55:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 09:55:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 09:55:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 09:55:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 09:55:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 09:55:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 09:55:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 09:55:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 09:55:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 09:55:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 09:55:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 09:55:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 09:55:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:55:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 09:55:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 09:55:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 09:55:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 09:55:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 09:55:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 09:55:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 09:55:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 09:55:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 09:55:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 09:55:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 09:55:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 09:55:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 09:55:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 09:55:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 09:55:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 09:55:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 09:55:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 09:55:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 09:55:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 09:55:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 09:55:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 09:55:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 09:55:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:55:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4648ce9: startup date [Thu Jul 18 09:54:37 CST 2019]; root of context hierarchy
2019-07-18 09:55:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:55:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 09:55:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 09:55:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 09:55:18 -Registering beans for JMX exposure on startup
2019-07-18 09:55:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 09:55:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 09:55:18 -Starting beans in phase 2147483647
2019-07-18 09:55:18 -Context refreshed
2019-07-18 09:55:18 -Found 1 custom documentation plugin(s)
2019-07-18 09:55:18 -Scanning for api listing references
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_1
2019-07-18 09:55:20 -Generating unique operation named: addUsingGET_1
2019-07-18 09:55:20 -Generating unique operation named: editUsingGET_1
2019-07-18 09:55:20 -Generating unique operation named: listUsingGET_1
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_2
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_3
2019-07-18 09:55:20 -Generating unique operation named: saveUsingPOST_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingGET_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPOST_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPUT_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 09:55:20 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 09:55:20 -Generating unique operation named: addUsingGET_2
2019-07-18 09:55:20 -Generating unique operation named: editUsingGET_2
2019-07-18 09:55:20 -Generating unique operation named: listUsingGET_2
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_4
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_5
2019-07-18 09:55:20 -Generating unique operation named: saveUsingPOST_2
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPOST_2
2019-07-18 09:55:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 09:55:20 -Generating unique operation named: addUsingGET_3
2019-07-18 09:55:20 -Generating unique operation named: editUsingGET_3
2019-07-18 09:55:20 -Generating unique operation named: listUsingGET_3
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_6
2019-07-18 09:55:20 -Generating unique operation named: removeUsingPOST_7
2019-07-18 09:55:20 -Generating unique operation named: saveUsingPOST_3
2019-07-18 09:55:20 -Generating unique operation named: updateUsingGET_2
2019-07-18 09:55:20 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPOST_3
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPUT_2
2019-07-18 09:55:20 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 09:55:21 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 09:55:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 09:55:21 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 09:55:21 -Generating unique operation named: addUsingGET_4
2019-07-18 09:55:21 -Generating unique operation named: editUsingGET_4
2019-07-18 09:55:21 -Generating unique operation named: listUsingGET_4
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_8
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_9
2019-07-18 09:55:21 -Generating unique operation named: saveUsingPOST_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingGET_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPOST_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPUT_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 09:55:21 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 09:55:21 -Generating unique operation named: ElecUsingGET_1
2019-07-18 09:55:21 -Generating unique operation named: addUsingGET_5
2019-07-18 09:55:21 -Generating unique operation named: editUsingGET_5
2019-07-18 09:55:21 -Generating unique operation named: listUsingGET_5
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_10
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_11
2019-07-18 09:55:21 -Generating unique operation named: saveUsingPOST_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingGET_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPOST_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPUT_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 09:55:21 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 09:55:21 -Generating unique operation named: editUsingGET_6
2019-07-18 09:55:21 -Generating unique operation named: listUsingGET_6
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPOST_6
2019-07-18 09:55:21 -Generating unique operation named: addUsingGET_6
2019-07-18 09:55:21 -Generating unique operation named: editUsingGET_7
2019-07-18 09:55:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 09:55:21 -Generating unique operation named: listUsingGET_7
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_12
2019-07-18 09:55:21 -Generating unique operation named: removeUsingPOST_13
2019-07-18 09:55:21 -Generating unique operation named: saveUsingPOST_6
2019-07-18 09:55:21 -Generating unique operation named: updateUsingGET_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPOST_7
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPUT_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 09:55:21 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 09:55:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 09:55:21 -Generating unique operation named: addUsingGET_7
2019-07-18 09:55:21 -Generating unique operation named: editUsingGET_8
2019-07-18 09:55:21 -Generating unique operation named: listUsingGET_8
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_14
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_15
2019-07-18 09:55:22 -Generating unique operation named: saveUsingPOST_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingGET_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPOST_8
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPUT_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 09:55:22 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 09:55:22 -Generating unique operation named: addUsingGET_8
2019-07-18 09:55:22 -Generating unique operation named: editUsingGET_9
2019-07-18 09:55:22 -Generating unique operation named: listUsingGET_9
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_16
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_17
2019-07-18 09:55:22 -Generating unique operation named: saveUsingPOST_8
2019-07-18 09:55:22 -Generating unique operation named: updateUsingGET_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPOST_9
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPUT_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 09:55:22 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 09:55:22 -Generating unique operation named: addUsingGET_9
2019-07-18 09:55:22 -Generating unique operation named: editUsingGET_10
2019-07-18 09:55:22 -Generating unique operation named: infoUsingGET_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingPOST_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingPUT_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 09:55:22 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 09:55:22 -Generating unique operation named: listUsingGET_10
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_18
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_19
2019-07-18 09:55:22 -Generating unique operation named: saveUsingPOST_9
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPOST_10
2019-07-18 09:55:22 -Generating unique operation named: listUsingGET_11
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_20
2019-07-18 09:55:22 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 09:55:22 -Generating unique operation named: addUsingGET_10
2019-07-18 09:55:22 -Generating unique operation named: editUsingGET_11
2019-07-18 09:55:22 -Generating unique operation named: listUsingGET_12
2019-07-18 09:55:22 -Generating unique operation named: removeUsingPOST_21
2019-07-18 09:55:22 -Generating unique operation named: saveUsingPOST_10
2019-07-18 09:55:22 -Generating unique operation named: treeUsingGET_1
2019-07-18 09:55:22 -Generating unique operation named: treeUsingGET_2
2019-07-18 09:55:22 -Generating unique operation named: updateUsingPOST_11
2019-07-18 09:55:23 -Generating unique operation named: addUsingGET_11
2019-07-18 09:55:23 -Generating unique operation named: editUsingGET_12
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_13
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_22
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_23
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPOST_12
2019-07-18 09:55:23 -Generating unique operation named: addUsingGET_12
2019-07-18 09:55:23 -Generating unique operation named: editUsingGET_13
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_14
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_24
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_25
2019-07-18 09:55:23 -Generating unique operation named: saveUsingPOST_11
2019-07-18 09:55:23 -Generating unique operation named: updateUsingGET_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPOST_13
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPUT_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 09:55:23 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 09:55:23 -Generating unique operation named: addUsingGET_13
2019-07-18 09:55:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 09:55:23 -Generating unique operation named: editUsingGET_14
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_15
2019-07-18 09:55:23 -Generating unique operation named: printEditUsingGET_1
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_26
2019-07-18 09:55:23 -Generating unique operation named: saveUsingPOST_12
2019-07-18 09:55:23 -Generating unique operation named: updateUsingGET_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPOST_14
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPUT_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 09:55:23 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 09:55:23 -Generating unique operation named: addUsingGET_14
2019-07-18 09:55:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 09:55:23 -Generating unique operation named: editUsingGET_15
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_16
2019-07-18 09:55:23 -Generating unique operation named: saveUsingPOST_13
2019-07-18 09:55:23 -Generating unique operation named: saveUsingPOST_14
2019-07-18 09:55:23 -Generating unique operation named: updateUsingPOST_15
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_17
2019-07-18 09:55:23 -Generating unique operation named: listUsingHEAD_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingPOST_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingPUT_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingPATCH_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingDELETE_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 09:55:23 -Generating unique operation named: listUsingTRACE_1
2019-07-18 09:55:23 -Generating unique operation named: countDDUsingGET_1
2019-07-18 09:55:23 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 09:55:23 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 09:55:23 -Generating unique operation named: addUsingGET_15
2019-07-18 09:55:23 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 09:55:23 -Generating unique operation named: editUsingGET_16
2019-07-18 09:55:23 -Generating unique operation named: listUsingGET_18
2019-07-18 09:55:23 -Generating unique operation named: removeUsingPOST_27
2019-07-18 09:55:24 -Generating unique operation named: saveUsingPOST_15
2019-07-18 09:55:24 -Generating unique operation named: treeUsingGET_3
2019-07-18 09:55:24 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPOST_16
2019-07-18 09:55:24 -Generating unique operation named: addUsingGET_16
2019-07-18 09:55:24 -Generating unique operation named: editUsingGET_17
2019-07-18 09:55:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 09:55:24 -Generating unique operation named: listUsingGET_19
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_28
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_29
2019-07-18 09:55:24 -Generating unique operation named: saveUsingPOST_16
2019-07-18 09:55:24 -Generating unique operation named: updateUsingGET_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPOST_17
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPUT_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 09:55:24 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 09:55:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 09:55:24 -Generating unique operation named: addUsingGET_17
2019-07-18 09:55:24 -Generating unique operation named: editUsingGET_18
2019-07-18 09:55:24 -Generating unique operation named: listUsingGET_20
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_30
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_31
2019-07-18 09:55:24 -Generating unique operation named: saveUsingPOST_17
2019-07-18 09:55:24 -Generating unique operation named: updateUsingGET_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPOST_18
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPUT_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 09:55:24 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 09:55:24 -Generating unique operation named: addUsingGET_18
2019-07-18 09:55:24 -Generating unique operation named: editUsingGET_19
2019-07-18 09:55:24 -Generating unique operation named: listUsingGET_21
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_32
2019-07-18 09:55:24 -Generating unique operation named: removeUsingPOST_33
2019-07-18 09:55:24 -Generating unique operation named: saveUsingPOST_18
2019-07-18 09:55:24 -Generating unique operation named: updateUsingGET_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPOST_19
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPUT_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 09:55:24 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 09:55:24 -Starting Quartz Scheduler now
2019-07-18 09:55:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 09:55:24 -Starting...
2019-07-18 09:55:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 09:55:24 -Started.
2019-07-18 09:55:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 09:55:24 -Using a shared selector for servlet write/read
2019-07-18 09:55:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 09:55:24 -Started BootdoApplication in 50.212 seconds (JVM running for 52.332)
2019-07-18 09:55:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 09:55:25 -==> Parameters: 
2019-07-18 09:55:25 -<==      Total: 1
2019-07-18 09:56:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 09:56:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 09:56:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 09:56:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-07-18 09:56:25 -Enabling session validation scheduler...
2019-07-18 09:56:26 -请求地址 : http://localhost:8081/login;JSESSIONID=c0a72b80-b94c-42f8-8740-5be61e6ce479
2019-07-18 09:56:26 -HTTP METHOD : GET
2019-07-18 09:56:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 09:56:26 -参数 : [{}]
2019-07-18 09:56:26 -耗时 : 5
2019-07-18 09:56:26 -返回值 : login
2019-07-18 09:56:28 -请求地址 : http://localhost:8081/getVerify
2019-07-18 09:56:28 -HTTP METHOD : GET
2019-07-18 09:56:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 09:56:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@492bcffb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@c2958ba]
2019-07-18 09:56:31 -8730
2019-07-18 09:56:31 -耗时 : 3314
2019-07-18 09:56:31 -返回值 : null
2019-07-18 09:56:37 -请求地址 : http://localhost:8081/login
2019-07-18 09:56:37 -HTTP METHOD : POST
2019-07-18 09:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 09:56:37 -参数 : [admin, 111111, 8730, org.apache.shiro.web.servlet.ShiroHttpServletRequest@79529763]
2019-07-18 09:56:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 09:56:37 -==> Parameters: admin(String)
2019-07-18 09:56:37 -<==      Total: 1
2019-07-18 09:56:37 -耗时 : 93
2019-07-18 09:56:37 -返回值 : {msg=操作成功, code=0}
2019-07-18 09:56:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 09:56:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:56:37 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 09:56:37.491(Timestamp)
2019-07-18 09:56:37 -<==    Updates: 1
2019-07-18 09:56:37 -请求地址 : http://localhost:8081/index
2019-07-18 09:56:37 -HTTP METHOD : GET
2019-07-18 09:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 09:56:37 -参数 : [{}]
2019-07-18 09:56:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 09:56:37 -==> Parameters: 1(Long)
2019-07-18 09:56:37 -<==      Total: 51
2019-07-18 09:56:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 09:56:38 -==> Parameters: 138(Long)
2019-07-18 09:56:38 -<==      Total: 1
2019-07-18 09:56:38 -耗时 : 438
2019-07-18 09:56:38 -返回值 : index_v1
2019-07-18 09:56:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:56:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 439(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 09:56:38.213(Timestamp)
2019-07-18 09:56:38 -<==    Updates: 1
2019-07-18 09:56:38 -请求地址 : http://localhost:8081/main
2019-07-18 09:56:38 -HTTP METHOD : GET
2019-07-18 09:56:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:56:38 -参数 : []
2019-07-18 09:56:38 -耗时 : 1
2019-07-18 09:56:38 -返回值 : main
2019-07-18 09:56:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 09:56:38 -HTTP METHOD : GET
2019-07-18 09:56:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 09:56:38 -参数 : []
2019-07-18 09:56:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 09:56:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 09:56:38 -<==      Total: 0
2019-07-18 09:56:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 09:56:38 -==> Parameters: 1(Long), 0(String)
2019-07-18 09:56:38 -<==      Total: 1
2019-07-18 09:56:38 -耗时 : 51
2019-07-18 09:56:38 -返回值 : com.bootdo.common.utils.PageUtils@3ca5eca9
2019-07-18 09:56:39 -请求地址 : http://localhost:8081/main
2019-07-18 09:56:39 -HTTP METHOD : GET
2019-07-18 09:56:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 09:56:39 -参数 : []
2019-07-18 09:56:39 -耗时 : 1
2019-07-18 09:56:39 -返回值 : main
2019-07-18 09:56:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 09:56:59 -==> Parameters: 1(Long)
2019-07-18 09:56:59 -<==      Total: 95
2019-07-18 09:56:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 09:56:59 -HTTP METHOD : GET
2019-07-18 09:56:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 09:56:59 -参数 : []
2019-07-18 09:56:59 -耗时 : 1
2019-07-18 09:56:59 -返回值 : moneyList/moneyList
2019-07-18 09:57:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 09:57:04 -HTTP METHOD : GET
2019-07-18 09:57:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 09:57:04 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 09:57:04 -耗时 : 1
2019-07-18 09:57:04 -返回值 : system/dept/deptTree
2019-07-18 09:57:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 09:57:04 -HTTP METHOD : GET
2019-07-18 09:57:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 09:57:04 -参数 : []
2019-07-18 09:57:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 09:57:04 -==> Parameters: 
2019-07-18 09:57:04 -<==      Total: 3
2019-07-18 09:57:04 -耗时 : 36
2019-07-18 09:57:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 09:57:07 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:57:07 -HTTP METHOD : POST
2019-07-18 09:57:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:57:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@41508d6f]
2019-07-18 09:57:07 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:57:07 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:57:07 -<==      Total: 3
2019-07-18 09:57:07 -耗时 : 125
2019-07-18 09:57:07 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53bc812b, com.bootdo.moneyList.damain.MoneyListDO@57019d2e, com.bootdo.moneyList.damain.MoneyListDO@482fe0ac]
2019-07-18 09:57:11 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 09:57:11 -HTTP METHOD : POST
2019-07-18 09:57:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 09:57:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7a93e810]
2019-07-18 09:57:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:57:11 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:57:11 -<==      Total: 3
2019-07-18 09:57:11 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 09:57:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:57:11 -<==      Total: 1
2019-07-18 09:57:11 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 09:57:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:57:11 -<==      Total: 1
2019-07-18 09:57:11 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 09:57:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 09:57:11 -<==      Total: 0
2019-07-18 09:57:11 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:57:11 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:57:11 -<==    Updates: 1
2019-07-18 09:57:11 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:57:11 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 09:57:11.293(Timestamp), 2019-06(String), admin(String), 2019-07-18 09:57:11.293(Timestamp), admin(String), null
2019-07-18 09:57:11 -<==    Updates: 1
2019-07-18 09:57:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 09:57:11 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 09:57:11.293(Timestamp)
2019-07-18 09:57:11 -<==      Total: 1
2019-07-18 09:57:11 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 09:57:11 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 700.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 09:57:11 -<==    Updates: 1
2019-07-18 09:57:11 -耗时 : 335
2019-07-18 09:57:11 -返回值 : 1601
2019-07-18 09:57:12 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 09:57:12 -HTTP METHOD : POST
2019-07-18 09:57:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 09:57:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@28e4b976]
2019-07-18 09:57:12 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 09:57:12 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 09:57:12 -<==      Total: 3
2019-07-18 09:57:12 -耗时 : 29
2019-07-18 09:57:12 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4605d227, com.bootdo.moneyList.damain.MoneyListDO@51d05ec3, com.bootdo.moneyList.damain.MoneyListDO@5c727286]
2019-07-18 09:57:13 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 09:57:13 -HTTP METHOD : GET
2019-07-18 09:57:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 09:57:13 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@67c5f34a, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@67c5f34a]
2019-07-18 09:57:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 09:57:13 -==> Parameters: 1601(Long)
2019-07-18 09:57:13 -<==      Total: 1
2019-07-18 09:57:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 09:57:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 09:57:13.736(Timestamp)
2019-07-18 09:57:13 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7166343c.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 09:57:13 -<==    Updates: 1
2019-07-18 10:26:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 426]
2019-07-18 10:35:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-07-18 10:35:13 -HTTP METHOD : POST
2019-07-18 10:35:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-07-18 10:35:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@8614ff1]
2019-07-18 10:35:13 -==>  Preparing: select DISTINCT user_name from( select user_name from ELEC WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) and user_type != 'B' UNION ALL select user_name from heat WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) and user_type != 'B' UNION ALL select user_name from water WHERE create_time = ? and user_org = ? and user_name like CONCAT(CONCAT('%',?,'%')) and user_type != 'B' )userName 
2019-07-18 10:35:13 -==> Parameters: 2019-06(String), 2(String), 王(String), 2019-06(String), 2(String), 王(String), 2019-06(String), 2(String), 王(String)
2019-07-18 10:35:13 -<==      Total: 408
2019-07-18 10:35:13 -耗时 : 197
2019-07-18 10:35:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@d375da2, com.bootdo.moneyList.damain.MoneyListDO@1e137794, com.bootdo.moneyList.damain.MoneyListDO@555d700f, com.bootdo.moneyList.damain.MoneyListDO@7e1cca28, com.bootdo.moneyList.damain.MoneyListDO@49714204, com.bootdo.moneyList.damain.MoneyListDO@4c5b3369, com.bootdo.moneyList.damain.MoneyListDO@72b8ffe5, com.bootdo.moneyList.damain.MoneyListDO@6aed2610, com.bootdo.moneyList.damain.MoneyListDO@294f382b, com.bootdo.moneyList.damain.MoneyListDO@3c9a8610, com.bootdo.moneyList.damain.MoneyListDO@9e811b1, com.bootdo.moneyList.damain.MoneyListDO@ab66b3a, com.bootdo.moneyList.damain.MoneyListDO@5a689427, com.bootdo.moneyList.damain.MoneyListDO@322a237c, com.bootdo.moneyList.damain.MoneyListDO@7b06d911, com.bootdo.moneyList.damain.MoneyListDO@42d082f0, com.bootdo.moneyList.damain.MoneyListDO@5c87ef21, com.bootdo.moneyList.damain.MoneyListDO@3fd5060e, com.bootdo.moneyList.damain.MoneyListDO@72568eb4, com.bootdo.moneyList.damain.MoneyListDO@3457550c, com.bootdo.moneyList.damain.MoneyListDO@574a4a40, com.bootdo.moneyList.damain.MoneyListDO@40b8c3d1, com.bootdo.moneyList.damain.MoneyListDO@6ddd65c, com.bootdo.moneyList.damain.MoneyListDO@8ac0cbe, com.bootdo.moneyList.damain.MoneyListDO@d315fa1, com.bootdo.moneyList.damain.MoneyListDO@b91a39d, com.bootdo.moneyList.damain.MoneyListDO@6396eb85, com.bootdo.moneyList.damain.MoneyListDO@b37c2b5, com.bootdo.moneyList.damain.MoneyListDO@cfc4825, com.bootdo.moneyList.damain.MoneyListDO@a779f6c, com.bootdo.moneyList.damain.MoneyListDO@5ee98764, com.bootdo.moneyList.damain.MoneyListDO@6bfed466, com.bootdo.moneyList.damain.MoneyListDO@52d145c, com.bootdo.moneyList.damain.MoneyListDO@3397776a, com.bootdo.moneyList.damain.MoneyListDO@21d714db, com.bootdo.moneyList.damain.MoneyListDO@3c97a963, com.bootdo.moneyList.damain.MoneyListDO@51f5d559, com.bootdo.moneyList.damain.MoneyListDO@59d1c42a, com.bootdo.moneyList.damain.MoneyListDO@40396207, com.bootdo.moneyList.damain.MoneyListDO@416407d2, com.bootdo.moneyList.damain.MoneyListDO@3e445dba, com.bootdo.moneyList.damain.MoneyListDO@69e32ecc, com.bootdo.moneyList.damain.MoneyListDO@624140ad, com.bootdo.moneyList.damain.MoneyListDO@3fa81a0, com.bootdo.moneyList.damain.MoneyListDO@1fcfb5e8, com.bootdo.moneyList.damain.MoneyListDO@6faa6d93, com.bootdo.moneyList.damain.MoneyListDO@7861ce3, com.bootdo.moneyList.damain.MoneyListDO@50267a32, com.bootdo.moneyList.damain.MoneyListDO@3224f52b, com.bootdo.moneyList.damain.MoneyListDO@e5ed009, com.bootdo.moneyList.damain.MoneyListDO@3988b425, com.bootdo.moneyList.damain.MoneyListDO@5a9cbecc, com.bootdo.moneyList.damain.MoneyListDO@4f849519, com.bootdo.moneyList.damain.MoneyListDO@37a2ca78, com.bootdo.moneyList.damain.MoneyListDO@4b777935, com.bootdo.moneyList.damain.MoneyListDO@74a2d449, com.bootdo.moneyList.damain.MoneyListDO@1f65ab99, com.bootdo.moneyList.damain.MoneyListDO@3eb54307, com.bootdo.moneyList.damain.MoneyListDO@4e7b3b35, com.bootdo.moneyList.damain.MoneyListDO@2c19be2f, com.bootdo.moneyList.damain.MoneyListDO@1e92f156, com.bootdo.moneyList.damain.MoneyListDO@a2b24f8, com.bootdo.moneyList.damain.MoneyListDO@1d9e141b, com.bootdo.moneyList.damain.MoneyListDO@7c173941, com.bootdo.moneyList.damain.MoneyListDO@75866fd4, com.bootdo.moneyList.damain.MoneyListDO@26d99978, com.bootdo.moneyList.damain.MoneyListDO@4b0a7f74, com.bootdo.moneyList.damain.MoneyListDO@e129a65, com.bootdo.moneyList.damain.MoneyListDO@482cbcbc, com.bootdo.moneyList.damain.MoneyListDO@2254fe98, com.bootdo.moneyList.damain.MoneyListDO@3abdd479, com.bootdo.moneyList.damain.MoneyListDO@2066a0f9, com.bootdo.moneyList.damain.MoneyListDO@d823115, com.bootdo.moneyList.damain.MoneyListDO@8a7ae03, com.bootdo.moneyList.damain.MoneyListDO@5c6dbd72, com.bootdo.moneyList.damain.MoneyListDO@4919bf6e, com.bootdo.moneyList.damain.MoneyListDO@550f25c1, com.bootdo.moneyList.damain.MoneyListDO@606d4ed5, com.bootdo.moneyList.damain.MoneyListDO@51daf987, com.bootdo.moneyList.damain.MoneyListDO@55bcce1d, com.bootdo.moneyList.damain.MoneyListDO@79b1c846, com.bootdo.moneyList.damain.MoneyListDO@73203a43, com.bootdo.moneyList.damain.MoneyListDO@7530f361, com.bootdo.moneyList.damain.MoneyListDO@464f07fc, com.bootdo.moneyList.damain.MoneyListDO@314b048b, com.bootdo.moneyList.damain.MoneyListDO@434bc2c3, com.bootdo.moneyList.damain.MoneyListDO@31929a30, com.bootdo.moneyList.damain.MoneyListDO@fdc0b19, com.bootdo.moneyList.damain.MoneyListDO@665a3935, com.bootdo.moneyList.damain.MoneyListDO@7b1aa2e7, com.bootdo.moneyList.damain.MoneyListDO@5efce4ae, com.bootdo.moneyList.damain.MoneyListDO@3197a8ab, com.bootdo.moneyList.damain.MoneyListDO@633bc3d, com.bootdo.moneyList.damain.MoneyListDO@28103b86, com.bootdo.moneyList.damain.MoneyListDO@117063be, com.bootdo.moneyList.damain.MoneyListDO@1dae43cb, com.bootdo.moneyList.damain.MoneyListDO@667c617, com.bootdo.moneyList.damain.MoneyListDO@2f820156, com.bootdo.moneyList.damain.MoneyListDO@3d7dfa8b, com.bootdo.moneyList.damain.MoneyListDO@52a246f4, com.bootdo.moneyList.damain.MoneyListDO@6acd75c9, com.bootdo.moneyList.damain.MoneyListDO@557a5177, com.bootdo.moneyList.damain.MoneyListDO@78140f1, com.bootdo.moneyList.damain.MoneyListDO@47d42313, com.bootdo.moneyList.damain.MoneyListDO@4636751d, com.bootdo.moneyList.damain.MoneyListDO@41c07545, com.bootdo.moneyList.damain.MoneyListDO@4ccb2344, com.bootdo.moneyList.damain.MoneyListDO@2ae15d75, com.bootdo.moneyList.damain.MoneyListDO@5f0a4ba9, com.bootdo.moneyList.damain.MoneyListDO@1da26750, com.bootdo.moneyList.damain.MoneyListDO@866b6a3, com.bootdo.moneyList.damain.MoneyListDO@28cc482f, com.bootdo.moneyList.damain.MoneyListDO@2516099c, com.bootdo.moneyList.damain.MoneyListDO@2b807289, com.bootdo.moneyList.damain.MoneyListDO@166e0af4, com.bootdo.moneyList.damain.MoneyListDO@5c29b526, com.bootdo.moneyList.damain.MoneyListDO@49e61dd6, com.bootdo.moneyList.damain.MoneyListDO@61da3a59, com.bootdo.moneyList.damain.MoneyListDO@785a53c, com.bootdo.moneyList.damain.MoneyListDO@1694a06f, com.bootdo.moneyList.damain.MoneyListDO@6fe517c6, com.bootdo.moneyList.damain.MoneyListDO@5f5df091, com.bootdo.moneyList.damain.MoneyListDO@75db1203, com.bootdo.moneyList.damain.MoneyListDO@467f530f, com.bootdo.moneyList.damain.MoneyListDO@1e32721, com.bootdo.moneyList.damain.MoneyListDO@318a96f4, com.bootdo.moneyList.damain.MoneyListDO@1c6cd1cc, com.bootdo.moneyList.damain.MoneyListDO@20370e65, com.bootdo.moneyList.damain.MoneyListDO@3875ff6d, com.bootdo.moneyList.damain.MoneyListDO@5d2de3a1, com.bootdo.moneyList.damain.MoneyListDO@2735ab79, com.bootdo.moneyList.damain.MoneyListDO@3fe9cddc, com.bootdo.moneyList.damain.MoneyListDO@2870c3db, com.bootdo.moneyList.damain.MoneyListDO@1af20d9f, com.bootdo.moneyList.damain.MoneyListDO@101603db, com.bootdo.moneyList.damain.MoneyListDO@6160bb28, com.bootdo.moneyList.damain.MoneyListDO@4f20c2c4, com.bootdo.moneyList.damain.MoneyListDO@4534a04a, com.bootdo.moneyList.damain.MoneyListDO@651c6bec, com.bootdo.moneyList.damain.MoneyListDO@1c1359c, com.bootdo.moneyList.damain.MoneyListDO@48bef182, com.bootdo.moneyList.damain.MoneyListDO@28e82e2f, com.bootdo.moneyList.damain.MoneyListDO@2ead73d5, com.bootdo.moneyList.damain.MoneyListDO@2648de49, com.bootdo.moneyList.damain.MoneyListDO@194509e3, com.bootdo.moneyList.damain.MoneyListDO@7035c5b2, com.bootdo.moneyList.damain.MoneyListDO@35c333ba, com.bootdo.moneyList.damain.MoneyListDO@551919dd, com.bootdo.moneyList.damain.MoneyListDO@6422088c, com.bootdo.moneyList.damain.MoneyListDO@3a6449ef, com.bootdo.moneyList.damain.MoneyListDO@1616f3fa, com.bootdo.moneyList.damain.MoneyListDO@b5cd714, com.bootdo.moneyList.damain.MoneyListDO@7f4ec89b, com.bootdo.moneyList.damain.MoneyListDO@677dcdac, com.bootdo.moneyList.damain.MoneyListDO@46557b9a, com.bootdo.moneyList.damain.MoneyListDO@2bdce033, com.bootdo.moneyList.damain.MoneyListDO@225fffc3, com.bootdo.moneyList.damain.MoneyListDO@2b465689, com.bootdo.moneyList.damain.MoneyListDO@462261d0, com.bootdo.moneyList.damain.MoneyListDO@a33cc5f, com.bootdo.moneyList.damain.MoneyListDO@57cf9b3d, com.bootdo.moneyList.damain.MoneyListDO@4ea46d53, com.bootdo.moneyList.damain.MoneyListDO@1bdda9b6, com.bootdo.moneyList.damain.MoneyListDO@f98cfa6, com.bootdo.moneyList.damain.MoneyListDO@2425ab1b, com.bootdo.moneyList.damain.MoneyListDO@49868439, com.bootdo.moneyList.damain.MoneyListDO@3fe014a6, com.bootdo.moneyList.damain.MoneyListDO@76cc0903, com.bootdo.moneyList.damain.MoneyListDO@7f3819b2, com.bootdo.moneyList.damain.MoneyListDO@262fd20, com.bootdo.moneyList.damain.MoneyListDO@3d188cee, com.bootdo.moneyList.damain.MoneyListDO@2b0a0e5f, com.bootdo.moneyList.damain.MoneyListDO@14407705, com.bootdo.moneyList.damain.MoneyListDO@15e1350, com.bootdo.moneyList.damain.MoneyListDO@78589069, com.bootdo.moneyList.damain.MoneyListDO@35b11cb, com.bootdo.moneyList.damain.MoneyListDO@1434b6fa, com.bootdo.moneyList.damain.MoneyListDO@6501f3bf, com.bootdo.moneyList.damain.MoneyListDO@5966fcae, com.bootdo.moneyList.damain.MoneyListDO@2687b00, com.bootdo.moneyList.damain.MoneyListDO@33da9ed1, com.bootdo.moneyList.damain.MoneyListDO@592c0f1e, com.bootdo.moneyList.damain.MoneyListDO@37410b19, com.bootdo.moneyList.damain.MoneyListDO@76b0d68a, com.bootdo.moneyList.damain.MoneyListDO@117bf29b, com.bootdo.moneyList.damain.MoneyListDO@28165b55, com.bootdo.moneyList.damain.MoneyListDO@17b0848d, com.bootdo.moneyList.damain.MoneyListDO@67c41477, com.bootdo.moneyList.damain.MoneyListDO@29e5cd3e, com.bootdo.moneyList.damain.MoneyListDO@33b3f7a4, com.bootdo.moneyList.damain.MoneyListDO@203499b3, com.bootdo.moneyList.damain.MoneyListDO@6794466e, com.bootdo.moneyList.damain.MoneyListDO@601ffb9f, com.bootdo.moneyList.damain.MoneyListDO@4c3d2eef, com.bootdo.moneyList.damain.MoneyListDO@48c0dfda, com.bootdo.moneyList.damain.MoneyListDO@da2479a, com.bootdo.moneyList.damain.MoneyListDO@12fe96b2, com.bootdo.moneyList.damain.MoneyListDO@37118854, com.bootdo.moneyList.damain.MoneyListDO@7961af63, com.bootdo.moneyList.damain.MoneyListDO@6660b942, com.bootdo.moneyList.damain.MoneyListDO@cdf83a, com.bootdo.moneyList.damain.MoneyListDO@3ba5935f, com.bootdo.moneyList.damain.MoneyListDO@4f4b29ff, com.bootdo.moneyList.damain.MoneyListDO@2c8223fd, com.bootdo.moneyList.damain.MoneyListDO@4361027f, com.bootdo.moneyList.damain.MoneyListDO@54c94e27, com.bootdo.moneyList.damain.MoneyListDO@42db9190, com.bootdo.moneyList.damain.MoneyListDO@7f7bcffd, com.bootdo.moneyList.damain.MoneyListDO@34c24897, com.bootdo.moneyList.damain.MoneyListDO@2a64905e, com.bootdo.moneyList.damain.MoneyListDO@34adc393, com.bootdo.moneyList.damain.MoneyListDO@1508e6dc, com.bootdo.moneyList.damain.MoneyListDO@3328821a, com.bootdo.moneyList.damain.MoneyListDO@3d400241, com.bootdo.moneyList.damain.MoneyListDO@67abff21, com.bootdo.moneyList.damain.MoneyListDO@3547db0e, com.bootdo.moneyList.damain.MoneyListDO@4208b7ee, com.bootdo.moneyList.damain.MoneyListDO@7fe7e7e4, com.bootdo.moneyList.damain.MoneyListDO@470d5dce, com.bootdo.moneyList.damain.MoneyListDO@4c99618a, com.bootdo.moneyList.damain.MoneyListDO@4b291830, com.bootdo.moneyList.damain.MoneyListDO@b310e76, com.bootdo.moneyList.damain.MoneyListDO@26ffd1f3, com.bootdo.moneyList.damain.MoneyListDO@21ed6197, com.bootdo.moneyList.damain.MoneyListDO@22061502, com.bootdo.moneyList.damain.MoneyListDO@2147ed8a, com.bootdo.moneyList.damain.MoneyListDO@796fd018, com.bootdo.moneyList.damain.MoneyListDO@33c4e77b, com.bootdo.moneyList.damain.MoneyListDO@21784a04, com.bootdo.moneyList.damain.MoneyListDO@3f4dd81c, com.bootdo.moneyList.damain.MoneyListDO@38a520fd, com.bootdo.moneyList.damain.MoneyListDO@2c4ee7ad, com.bootdo.moneyList.damain.MoneyListDO@4f85a04a, com.bootdo.moneyList.damain.MoneyListDO@1e590c9e, com.bootdo.moneyList.damain.MoneyListDO@fea7560, com.bootdo.moneyList.damain.MoneyListDO@54c298bf, com.bootdo.moneyList.damain.MoneyListDO@36a7f59d, com.bootdo.moneyList.damain.MoneyListDO@60cc322b, com.bootdo.moneyList.damain.MoneyListDO@3c510a27, com.bootdo.moneyList.damain.MoneyListDO@7c967a72, com.bootdo.moneyList.damain.MoneyListDO@75946360, com.bootdo.moneyList.damain.MoneyListDO@74c85a93, com.bootdo.moneyList.damain.MoneyListDO@40fc661f, com.bootdo.moneyList.damain.MoneyListDO@f76c198, com.bootdo.moneyList.damain.MoneyListDO@592f3c75, com.bootdo.moneyList.damain.MoneyListDO@6f05e901, com.bootdo.moneyList.damain.MoneyListDO@4c6ab660, com.bootdo.moneyList.damain.MoneyListDO@7529d474, com.bootdo.moneyList.damain.MoneyListDO@55c59230, com.bootdo.moneyList.damain.MoneyListDO@15c82468, com.bootdo.moneyList.damain.MoneyListDO@c885907, com.bootdo.moneyList.damain.MoneyListDO@37b9a696, com.bootdo.moneyList.damain.MoneyListDO@4e14f643, com.bootdo.moneyList.damain.MoneyListDO@1a2b708d, com.bootdo.moneyList.damain.MoneyListDO@542542ae, com.bootdo.moneyList.damain.MoneyListDO@2ed2c3aa, com.bootdo.moneyList.damain.MoneyListDO@479d9edd, com.bootdo.moneyList.damain.MoneyListDO@6f321bb, com.bootdo.moneyList.damain.MoneyListDO@783d33f9, com.bootdo.moneyList.damain.MoneyListDO@40ca60c7, com.bootdo.moneyList.damain.MoneyListDO@6b0a7575, com.bootdo.moneyList.damain.MoneyListDO@74eb6f56, com.bootdo.moneyList.damain.MoneyListDO@65d828c9, com.bootdo.moneyList.damain.MoneyListDO@7607b0ed, com.bootdo.moneyList.damain.MoneyListDO@4e1ec285, com.bootdo.moneyList.damain.MoneyListDO@612095cf, com.bootdo.moneyList.damain.MoneyListDO@451a6742, com.bootdo.moneyList.damain.MoneyListDO@ed127d4, com.bootdo.moneyList.damain.MoneyListDO@36e3d661, com.bootdo.moneyList.damain.MoneyListDO@5308a39f, com.bootdo.moneyList.damain.MoneyListDO@453eeecb, com.bootdo.moneyList.damain.MoneyListDO@42d69e3f, com.bootdo.moneyList.damain.MoneyListDO@6a2e08da, com.bootdo.moneyList.damain.MoneyListDO@7cac4a5b, com.bootdo.moneyList.damain.MoneyListDO@4ed6abb3, com.bootdo.moneyList.damain.MoneyListDO@3887f330, com.bootdo.moneyList.damain.MoneyListDO@22f55422, com.bootdo.moneyList.damain.MoneyListDO@3c952cb5, com.bootdo.moneyList.damain.MoneyListDO@476593a7, com.bootdo.moneyList.damain.MoneyListDO@40fcf608, com.bootdo.moneyList.damain.MoneyListDO@48a0fe71, com.bootdo.moneyList.damain.MoneyListDO@5dc59354, com.bootdo.moneyList.damain.MoneyListDO@3656cbe0, com.bootdo.moneyList.damain.MoneyListDO@113d3794, com.bootdo.moneyList.damain.MoneyListDO@5ea110b4, com.bootdo.moneyList.damain.MoneyListDO@2f8f6707, com.bootdo.moneyList.damain.MoneyListDO@2f06b0dd, com.bootdo.moneyList.damain.MoneyListDO@577fa33e, com.bootdo.moneyList.damain.MoneyListDO@18d2dd5, com.bootdo.moneyList.damain.MoneyListDO@55eec5bc, com.bootdo.moneyList.damain.MoneyListDO@4f740784, com.bootdo.moneyList.damain.MoneyListDO@65382b07, com.bootdo.moneyList.damain.MoneyListDO@db351f0, com.bootdo.moneyList.damain.MoneyListDO@2ed3a6df, com.bootdo.moneyList.damain.MoneyListDO@41f4cca6, com.bootdo.moneyList.damain.MoneyListDO@65b0b78c, com.bootdo.moneyList.damain.MoneyListDO@729b561b, com.bootdo.moneyList.damain.MoneyListDO@41cde3c9, com.bootdo.moneyList.damain.MoneyListDO@26bb96aa, com.bootdo.moneyList.damain.MoneyListDO@46574926, com.bootdo.moneyList.damain.MoneyListDO@6ed4f479, com.bootdo.moneyList.damain.MoneyListDO@40a981c1, com.bootdo.moneyList.damain.MoneyListDO@3a5d51b8, com.bootdo.moneyList.damain.MoneyListDO@463f31ac, com.bootdo.moneyList.damain.MoneyListDO@f81722e, com.bootdo.moneyList.damain.MoneyListDO@3aa4d96, com.bootdo.moneyList.damain.MoneyListDO@53aa0cca, com.bootdo.moneyList.damain.MoneyListDO@6ca7f542, com.bootdo.moneyList.damain.MoneyListDO@6833eafa, com.bootdo.moneyList.damain.MoneyListDO@39a4cc97, com.bootdo.moneyList.damain.MoneyListDO@3aeb4b35, com.bootdo.moneyList.damain.MoneyListDO@69b5a4cf, com.bootdo.moneyList.damain.MoneyListDO@1ea6f739, com.bootdo.moneyList.damain.MoneyListDO@1f9400e, com.bootdo.moneyList.damain.MoneyListDO@612b01e7, com.bootdo.moneyList.damain.MoneyListDO@257c52d1, com.bootdo.moneyList.damain.MoneyListDO@c4a7678, com.bootdo.moneyList.damain.MoneyListDO@47f8becf, com.bootdo.moneyList.damain.MoneyListDO@7e65abee, com.bootdo.moneyList.damain.MoneyListDO@39488429, com.bootdo.moneyList.damain.MoneyListDO@66eeccce, com.bootdo.moneyList.damain.MoneyListDO@6462081a, com.bootdo.moneyList.damain.MoneyListDO@378bf5a3, com.bootdo.moneyList.damain.MoneyListDO@4a9f56b7, com.bootdo.moneyList.damain.MoneyListDO@5a076b96, com.bootdo.moneyList.damain.MoneyListDO@2ed19a14, com.bootdo.moneyList.damain.MoneyListDO@469f4480, com.bootdo.moneyList.damain.MoneyListDO@7605980a, com.bootdo.moneyList.damain.MoneyListDO@173f1687, com.bootdo.moneyList.damain.MoneyListDO@351c2f4e, com.bootdo.moneyList.damain.MoneyListDO@99bd629, com.bootdo.moneyList.damain.MoneyListDO@5304dad8, com.bootdo.moneyList.damain.MoneyListDO@3c607511, com.bootdo.moneyList.damain.MoneyListDO@68d25b8c, com.bootdo.moneyList.damain.MoneyListDO@3f2fe221, com.bootdo.moneyList.damain.MoneyListDO@4a883d06, com.bootdo.moneyList.damain.MoneyListDO@75ff11bb, com.bootdo.moneyList.damain.MoneyListDO@f0b2ab3, com.bootdo.moneyList.damain.MoneyListDO@4ff5ef99, com.bootdo.moneyList.damain.MoneyListDO@441e8b6c, com.bootdo.moneyList.damain.MoneyListDO@49e1289d, com.bootdo.moneyList.damain.MoneyListDO@1f69cda0, com.bootdo.moneyList.damain.MoneyListDO@7f0070f3, com.bootdo.moneyList.damain.MoneyListDO@4f75d194, com.bootdo.moneyList.damain.MoneyListDO@f90bd27, com.bootdo.moneyList.damain.MoneyListDO@5e4575b8, com.bootdo.moneyList.damain.MoneyListDO@22be016b, com.bootdo.moneyList.damain.MoneyListDO@43a69dd9, com.bootdo.moneyList.damain.MoneyListDO@4955690f, com.bootdo.moneyList.damain.MoneyListDO@3c482d28, com.bootdo.moneyList.damain.MoneyListDO@6eafc693, com.bootdo.moneyList.damain.MoneyListDO@1990d6ca, com.bootdo.moneyList.damain.MoneyListDO@7befd9e6, com.bootdo.moneyList.damain.MoneyListDO@6b39ade, com.bootdo.moneyList.damain.MoneyListDO@16385fc5, com.bootdo.moneyList.damain.MoneyListDO@981fd4e, com.bootdo.moneyList.damain.MoneyListDO@ca42571, com.bootdo.moneyList.damain.MoneyListDO@165b3b51, com.bootdo.moneyList.damain.MoneyListDO@42498828, com.bootdo.moneyList.damain.MoneyListDO@44a476a2, com.bootdo.moneyList.damain.MoneyListDO@69865cea, com.bootdo.moneyList.damain.MoneyListDO@26c87338, com.bootdo.moneyList.damain.MoneyListDO@284eb701, com.bootdo.moneyList.damain.MoneyListDO@4f38d5cc, com.bootdo.moneyList.damain.MoneyListDO@1482a1cd, com.bootdo.moneyList.damain.MoneyListDO@71b641d6, com.bootdo.moneyList.damain.MoneyListDO@2c9d065e, com.bootdo.moneyList.damain.MoneyListDO@250230b4, com.bootdo.moneyList.damain.MoneyListDO@248f6110, com.bootdo.moneyList.damain.MoneyListDO@67f43ca6, com.bootdo.moneyList.damain.MoneyListDO@231f69f0, com.bootdo.moneyList.damain.MoneyListDO@172c7ab7, com.bootdo.moneyList.damain.MoneyListDO@48740ea3, com.bootdo.moneyList.damain.MoneyListDO@ea31a07, com.bootdo.moneyList.damain.MoneyListDO@562bb2ca, com.bootdo.moneyList.damain.MoneyListDO@2226837a, com.bootdo.moneyList.damain.MoneyListDO@4acf808b, com.bootdo.moneyList.damain.MoneyListDO@5c2ad8f7, com.bootdo.moneyList.damain.MoneyListDO@579c9c5a, com.bootdo.moneyList.damain.MoneyListDO@4137e880, com.bootdo.moneyList.damain.MoneyListDO@77caf3f5, com.bootdo.moneyList.damain.MoneyListDO@7dad709b, com.bootdo.moneyList.damain.MoneyListDO@4ee05d38, com.bootdo.moneyList.damain.MoneyListDO@306ddf8c, com.bootdo.moneyList.damain.MoneyListDO@1018d72f, com.bootdo.moneyList.damain.MoneyListDO@6a7541f, com.bootdo.moneyList.damain.MoneyListDO@4a62d06e, com.bootdo.moneyList.damain.MoneyListDO@14adf711, com.bootdo.moneyList.damain.MoneyListDO@42dafb04, com.bootdo.moneyList.damain.MoneyListDO@7e6148ec, com.bootdo.moneyList.damain.MoneyListDO@22dc06ee, com.bootdo.moneyList.damain.MoneyListDO@59b268db, com.bootdo.moneyList.damain.MoneyListDO@4ca5ba32, com.bootdo.moneyList.damain.MoneyListDO@38f7bd62, com.bootdo.moneyList.damain.MoneyListDO@7ade27e4, com.bootdo.moneyList.damain.MoneyListDO@30e07cd4, com.bootdo.moneyList.damain.MoneyListDO@51f524d0, com.bootdo.moneyList.damain.MoneyListDO@546c9f21, com.bootdo.moneyList.damain.MoneyListDO@5f86634f, com.bootdo.moneyList.damain.MoneyListDO@6cb3a2b7, com.bootdo.moneyList.damain.MoneyListDO@1498c855, com.bootdo.moneyList.damain.MoneyListDO@24bdc870, com.bootdo.moneyList.damain.MoneyListDO@48cd5bb3, com.bootdo.moneyList.damain.MoneyListDO@391aee07, com.bootdo.moneyList.damain.MoneyListDO@6b125311, com.bootdo.moneyList.damain.MoneyListDO@21a6f84b, com.bootdo.moneyList.damain.MoneyListDO@3943f0f, com.bootdo.moneyList.damain.MoneyListDO@6d1093ac]
2019-07-18 10:35:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 10:35:20 -HTTP METHOD : POST
2019-07-18 10:35:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 10:35:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@52ba6727]
2019-07-18 10:35:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_name = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_name = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_name = ? and user_type != 'B' 
2019-07-18 10:35:20 -==> Parameters: 2019-06(String), 2(String), 王洪礼(String), 2019-06(String), 2(String), 王洪礼(String), 2019-06(String), 2(String), 王洪礼(String)
2019-07-18 10:35:20 -<==      Total: 3
2019-07-18 10:35:20 -耗时 : 33
2019-07-18 10:35:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6607f940, com.bootdo.moneyList.damain.MoneyListDO@10a0f91d, com.bootdo.moneyList.damain.MoneyListDO@11223771]
2019-07-18 10:56:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 859]
2019-07-18 10:56:25 -Validating all active sessions...
2019-07-18 10:56:26 -Finished session validation.  No sessions were stopped.
2019-07-18 11:26:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1292]
2019-07-18 11:56:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1725]
2019-07-18 11:56:28 -Validating all active sessions...
2019-07-18 11:56:28 -Finished session validation.  No sessions were stopped.
2019-07-18 12:26:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2158]
2019-07-18 12:56:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2591]
2019-07-18 12:56:28 -Validating all active sessions...
2019-07-18 12:56:28 -Finished session validation.  [1] sessions were stopped.
2019-07-18 13:06:36 -请求地址 : http://localhost:8081/login;JSESSIONID=b1df1b18-d9c1-4eb9-93be-925f0adb9e38
2019-07-18 13:06:36 -HTTP METHOD : GET
2019-07-18 13:06:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 13:06:36 -参数 : [{}]
2019-07-18 13:06:36 -耗时 : 1
2019-07-18 13:06:36 -返回值 : login
2019-07-18 13:06:38 -请求地址 : http://localhost:8081/getVerify
2019-07-18 13:06:38 -HTTP METHOD : GET
2019-07-18 13:06:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 13:06:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4adc94ec, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75253e01]
2019-07-18 13:06:38 -1522
2019-07-18 13:06:38 -耗时 : 32
2019-07-18 13:06:38 -返回值 : null
2019-07-18 13:06:44 -请求地址 : http://localhost:8081/login
2019-07-18 13:06:44 -HTTP METHOD : POST
2019-07-18 13:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 13:06:44 -参数 : [admin, 111111, 1522, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b9f3d98]
2019-07-18 13:06:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 13:06:44 -==> Parameters: admin(String)
2019-07-18 13:06:44 -<==      Total: 1
2019-07-18 13:06:44 -耗时 : 31
2019-07-18 13:06:44 -返回值 : {msg=操作成功, code=0}
2019-07-18 13:06:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 13:06:44 -==> Parameters: 1(Long), admin(String), 登录(String), 35(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 13:06:44.248(Timestamp)
2019-07-18 13:06:44 -请求地址 : http://localhost:8081/index
2019-07-18 13:06:44 -HTTP METHOD : GET
2019-07-18 13:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 13:06:44 -参数 : [{}]
2019-07-18 13:06:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 13:06:44 -==> Parameters: 1(Long)
2019-07-18 13:06:44 -<==    Updates: 1
2019-07-18 13:06:44 -<==      Total: 51
2019-07-18 13:06:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 13:06:44 -==> Parameters: 138(Long)
2019-07-18 13:06:44 -<==      Total: 1
2019-07-18 13:06:44 -耗时 : 251
2019-07-18 13:06:44 -返回值 : index_v1
2019-07-18 13:06:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 13:06:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 251(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 13:06:44.543(Timestamp)
2019-07-18 13:06:44 -<==    Updates: 1
2019-07-18 13:06:44 -请求地址 : http://localhost:8081/main
2019-07-18 13:06:44 -HTTP METHOD : GET
2019-07-18 13:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 13:06:44 -参数 : []
2019-07-18 13:06:44 -耗时 : 1
2019-07-18 13:06:44 -返回值 : main
2019-07-18 13:06:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 13:06:44 -HTTP METHOD : GET
2019-07-18 13:06:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 13:06:44 -参数 : []
2019-07-18 13:06:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 13:06:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 13:06:45 -<==      Total: 0
2019-07-18 13:06:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 13:06:45 -==> Parameters: 1(Long), 0(String)
2019-07-18 13:06:45 -<==      Total: 1
2019-07-18 13:06:45 -耗时 : 51
2019-07-18 13:06:45 -返回值 : com.bootdo.common.utils.PageUtils@4cbacfc7
2019-07-18 13:06:45 -请求地址 : http://localhost:8081/main
2019-07-18 13:06:45 -HTTP METHOD : GET
2019-07-18 13:06:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 13:06:45 -参数 : []
2019-07-18 13:06:45 -耗时 : 1
2019-07-18 13:06:45 -返回值 : main
2019-07-18 13:06:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 13:06:47 -==> Parameters: 1(Long)
2019-07-18 13:06:47 -<==      Total: 95
2019-07-18 13:06:47 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 13:06:47 -HTTP METHOD : GET
2019-07-18 13:06:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 13:06:47 -参数 : []
2019-07-18 13:06:47 -耗时 : 2
2019-07-18 13:06:47 -返回值 : moneyList/moneyList
2019-07-18 13:06:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 13:06:53 -HTTP METHOD : GET
2019-07-18 13:06:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 13:06:53 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 13:06:53 -耗时 : 1
2019-07-18 13:06:53 -返回值 : system/dept/deptTree
2019-07-18 13:06:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 13:06:53 -HTTP METHOD : GET
2019-07-18 13:06:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 13:06:53 -参数 : []
2019-07-18 13:06:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 13:06:53 -==> Parameters: 
2019-07-18 13:06:53 -<==      Total: 3
2019-07-18 13:06:53 -耗时 : 21
2019-07-18 13:06:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 13:07:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 13:07:13 -HTTP METHOD : POST
2019-07-18 13:07:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 13:07:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1e9b2c45]
2019-07-18 13:07:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:07:13 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:07:14 -<==      Total: 3
2019-07-18 13:07:14 -耗时 : 111
2019-07-18 13:07:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3487df0, com.bootdo.moneyList.damain.MoneyListDO@7995aed9, com.bootdo.moneyList.damain.MoneyListDO@3eab4caa]
2019-07-18 13:07:17 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 13:07:17 -HTTP METHOD : POST
2019-07-18 13:07:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 13:07:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5445713e]
2019-07-18 13:07:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:07:17 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:07:17 -<==      Total: 3
2019-07-18 13:07:44 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 13:07:44 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:07:45 -<==      Total: 1
2019-07-18 13:07:45 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 13:07:45 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:07:45 -<==      Total: 1
2019-07-18 13:07:45 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 13:07:45 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:07:45 -<==      Total: 0
2019-07-18 13:07:45 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:07:45 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:07:45 -<==    Updates: 1
2019-07-18 13:07:45 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 13:07:45 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 13:07:17.232(Timestamp), 2019-06(String), admin(String), 2019-07-18 13:07:44.817(Timestamp), admin(String), null
2019-07-18 13:07:45 -<==    Updates: 1
2019-07-18 13:07:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 13:07:45 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 13:07:17.232(Timestamp)
2019-07-18 13:07:46 -<==      Total: 1
2019-07-18 13:07:46 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 13:07:46 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 750.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 13:07:46 -<==    Updates: 1
2019-07-18 13:07:51 -耗时 : 34495
2019-07-18 13:07:51 -返回值 : 1601
2019-07-18 13:07:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 13:07:54 -HTTP METHOD : POST
2019-07-18 13:07:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 13:07:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7b44929]
2019-07-18 13:07:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:07:54 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:07:54 -<==      Total: 3
2019-07-18 13:07:54 -耗时 : 47
2019-07-18 13:07:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@154c181f, com.bootdo.moneyList.damain.MoneyListDO@73da8668, com.bootdo.moneyList.damain.MoneyListDO@5602743b]
2019-07-18 13:07:55 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 13:07:55 -HTTP METHOD : GET
2019-07-18 13:07:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 13:07:55 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@55ae3134, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@55ae3134]
2019-07-18 13:07:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 13:07:55 -==> Parameters: 1601(Long)
2019-07-18 13:07:55 -<==      Total: 1
2019-07-18 13:10:04 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor154.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$7166343c.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 13:10:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 13:10:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 13:10:04.077(Timestamp)
2019-07-18 13:10:04 -<==    Updates: 1
2019-07-18 13:16:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 13:16:20 -HTTP METHOD : POST
2019-07-18 13:16:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 13:16:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@d3ba6c3]
2019-07-18 13:16:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:16:20 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:16:20 -<==      Total: 3
2019-07-18 13:16:20 -耗时 : 42
2019-07-18 13:16:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4fc1b91b, com.bootdo.moneyList.damain.MoneyListDO@1c32842b, com.bootdo.moneyList.damain.MoneyListDO@707403ca]
2019-07-18 13:16:27 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 13:16:27 -HTTP METHOD : POST
2019-07-18 13:16:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 13:16:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@16c520ff]
2019-07-18 13:16:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:16:27 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:16:27 -<==      Total: 3
2019-07-18 13:16:34 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 13:16:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:16:34 -<==      Total: 1
2019-07-18 13:16:34 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 13:16:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:16:34 -<==      Total: 1
2019-07-18 13:16:34 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 13:16:34 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 13:16:34 -<==      Total: 0
2019-07-18 13:16:34 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:16:34 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:16:34 -<==    Updates: 1
2019-07-18 13:16:34 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 13:16:34 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 13:16:27.561(Timestamp), 2019-06(String), admin(String), 2019-07-18 13:16:34.399(Timestamp), admin(String), null
2019-07-18 13:16:34 -<==    Updates: 1
2019-07-18 13:16:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 13:16:34 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 13:16:27.561(Timestamp)
2019-07-18 13:16:34 -<==      Total: 1
2019-07-18 13:16:34 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 13:16:34 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 800.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 13:16:34 -<==    Updates: 1
2019-07-18 13:16:34 -耗时 : 7118
2019-07-18 13:16:34 -返回值 : 1601
2019-07-18 13:16:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 13:16:54 -HTTP METHOD : POST
2019-07-18 13:16:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 13:16:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5876e0e7]
2019-07-18 13:16:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 13:16:54 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 13:16:54 -<==      Total: 3
2019-07-18 13:16:54 -耗时 : 34
2019-07-18 13:16:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4be6c01d, com.bootdo.moneyList.damain.MoneyListDO@16a20b73, com.bootdo.moneyList.damain.MoneyListDO@793cb098]
2019-07-18 13:16:55 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 13:16:55 -HTTP METHOD : GET
2019-07-18 13:16:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 13:16:55 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@678707b5, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@678707b5]
2019-07-18 13:20:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 13:20:39 -==> Parameters: 1601(Long)
2019-07-18 13:20:39 -<==      Total: 1
2019-07-18 13:26:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3023]
2019-07-18 13:56:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3443]
2019-07-18 13:56:28 -Validating all active sessions...
2019-07-18 13:56:28 -Finished session validation.  No sessions were stopped.
2019-07-18 14:26:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 3804]
2019-07-18 14:56:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 4165]
2019-07-18 14:56:28 -Validating all active sessions...
2019-07-18 14:56:28 -Finished session validation.  No sessions were stopped.
2019-07-18 15:26:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 4526]
2019-07-18 15:56:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 4887]
2019-07-18 15:56:28 -Validating all active sessions...
2019-07-18 15:56:28 -Finished session validation.  [1] sessions were stopped.
2019-07-18 16:26:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 5248]
2019-07-18 16:33:27 -请求地址 : http://localhost:8081/
2019-07-18 16:33:27 -HTTP METHOD : GET
2019-07-18 16:33:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-18 16:33:27 -参数 : [{}]
2019-07-18 16:33:27 -耗时 : 3
2019-07-18 16:33:27 -返回值 : redirect:/index
2019-07-18 16:33:27 -请求地址 : http://localhost:8081/login;JSESSIONID=2030ec6f-edd9-4adf-adac-81f330ff361b
2019-07-18 16:33:27 -HTTP METHOD : GET
2019-07-18 16:33:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 16:33:27 -参数 : [{}]
2019-07-18 16:33:27 -耗时 : 0
2019-07-18 16:33:27 -返回值 : login
2019-07-18 16:33:33 -请求地址 : http://localhost:8081/getVerify
2019-07-18 16:33:33 -HTTP METHOD : GET
2019-07-18 16:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 16:33:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ea06300, org.apache.shiro.web.servlet.ShiroHttpServletResponse@64438741]
2019-07-18 16:33:33 -0449
2019-07-18 16:33:33 -耗时 : 16
2019-07-18 16:33:33 -返回值 : null
2019-07-18 16:33:34 -请求地址 : http://localhost:8081/login
2019-07-18 16:33:34 -HTTP METHOD : GET
2019-07-18 16:33:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 16:33:34 -参数 : [{}]
2019-07-18 16:33:34 -耗时 : 0
2019-07-18 16:33:34 -返回值 : login
2019-07-18 16:34:23 -Starting BootdoApplication on PC-201905091110 with PID 212 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 16:34:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 16:34:23 -The following profiles are active: dev
2019-07-18 16:34:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Thu Jul 18 16:34:24 CST 2019]; root of context hierarchy
2019-07-18 16:34:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 16:34:38 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$970c6738] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$896595df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 16:34:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 16:34:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 16:34:44 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 16:34:44 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 16:34:44 -Starting service [Tomcat]
2019-07-18 16:34:44 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 16:34:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 16:34:45 -Initializing Spring embedded WebApplicationContext
2019-07-18 16:34:45 -Root WebApplicationContext: initialization completed in 20811 ms
2019-07-18 16:34:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 16:34:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 16:34:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 16:34:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 16:34:46 -Filter xssFilter was not registered (disabled)
2019-07-18 16:34:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 16:34:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 16:34:46 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 16:34:46 -Servlet dispatcherServlet mapped to [/]
2019-07-18 16:34:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Thu Jul 18 16:34:24 CST 2019]; root of context hierarchy
2019-07-18 16:34:54 -Using default implementation for ThreadExecutor
2019-07-18 16:34:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 16:34:54 -Quartz Scheduler v.2.3.0 created.
2019-07-18 16:34:54 -RAMJobStore initialized.
2019-07-18 16:34:54 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 16:34:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 16:34:54 -Quartz scheduler version: 2.3.0
2019-07-18 16:34:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4de93edd
2019-07-18 16:34:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 16:34:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 16:35:03 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 16:35:03 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 16:35:03 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 16:35:03 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 16:35:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 16:35:03 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 16:35:03 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 16:35:03 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 16:35:03 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 16:35:03 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 16:35:03 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 16:35:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 16:35:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 16:35:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 16:35:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 16:35:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 16:35:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 16:35:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 16:35:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 16:35:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 16:35:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 16:35:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 16:35:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 16:35:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 16:35:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 16:35:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 16:35:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 16:35:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 16:35:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 16:35:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 16:35:03 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 16:35:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 16:35:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 16:35:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 16:35:03 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 16:35:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 16:35:03 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 16:35:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 16:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 16:35:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 16:35:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 16:35:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 16:35:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 16:35:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 16:35:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 16:35:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 16:35:03 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 16:35:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 16:35:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 16:35:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 16:35:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 16:35:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 16:35:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 16:35:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 16:35:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 16:35:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 16:35:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 16:35:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 16:35:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 16:35:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 16:35:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 16:35:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 16:35:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 16:35:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 16:35:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 16:35:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 16:35:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 16:35:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 16:35:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 16:35:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 16:35:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 16:35:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 16:35:03 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 16:35:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 16:35:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 16:35:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 16:35:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 16:35:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 16:35:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 16:35:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 16:35:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 16:35:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 16:35:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 16:35:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 16:35:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 16:35:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 16:35:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@751d3241: startup date [Thu Jul 18 16:34:24 CST 2019]; root of context hierarchy
2019-07-18 16:35:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 16:35:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 16:35:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 16:35:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 16:35:11 -Registering beans for JMX exposure on startup
2019-07-18 16:35:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 16:35:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 16:35:11 -Starting beans in phase 2147483647
2019-07-18 16:35:11 -Context refreshed
2019-07-18 16:35:12 -Found 1 custom documentation plugin(s)
2019-07-18 16:35:12 -Scanning for api listing references
2019-07-18 16:35:13 -Generating unique operation named: removeUsingPOST_1
2019-07-18 16:35:13 -Generating unique operation named: addUsingGET_1
2019-07-18 16:35:13 -Generating unique operation named: editUsingGET_1
2019-07-18 16:35:13 -Generating unique operation named: listUsingGET_1
2019-07-18 16:35:13 -Generating unique operation named: removeUsingPOST_2
2019-07-18 16:35:13 -Generating unique operation named: removeUsingPOST_3
2019-07-18 16:35:13 -Generating unique operation named: saveUsingPOST_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingGET_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingPOST_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingPUT_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 16:35:13 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 16:35:14 -Generating unique operation named: addUsingGET_2
2019-07-18 16:35:14 -Generating unique operation named: editUsingGET_2
2019-07-18 16:35:14 -Generating unique operation named: listUsingGET_2
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_4
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_5
2019-07-18 16:35:14 -Generating unique operation named: saveUsingPOST_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPOST_2
2019-07-18 16:35:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 16:35:14 -Generating unique operation named: addUsingGET_3
2019-07-18 16:35:14 -Generating unique operation named: editUsingGET_3
2019-07-18 16:35:14 -Generating unique operation named: listUsingGET_3
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_6
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_7
2019-07-18 16:35:14 -Generating unique operation named: saveUsingPOST_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingGET_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPOST_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPUT_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 16:35:14 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 16:35:14 -Generating unique operation named: addUsingGET_4
2019-07-18 16:35:14 -Generating unique operation named: editUsingGET_4
2019-07-18 16:35:14 -Generating unique operation named: listUsingGET_4
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_8
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_9
2019-07-18 16:35:14 -Generating unique operation named: saveUsingPOST_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingGET_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPOST_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPUT_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 16:35:14 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 16:35:14 -Generating unique operation named: ElecUsingGET_1
2019-07-18 16:35:14 -Generating unique operation named: addUsingGET_5
2019-07-18 16:35:14 -Generating unique operation named: editUsingGET_5
2019-07-18 16:35:14 -Generating unique operation named: listUsingGET_5
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_10
2019-07-18 16:35:14 -Generating unique operation named: removeUsingPOST_11
2019-07-18 16:35:14 -Generating unique operation named: saveUsingPOST_5
2019-07-18 16:35:14 -Generating unique operation named: updateUsingGET_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPOST_5
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPUT_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 16:35:14 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 16:35:15 -Generating unique operation named: editUsingGET_6
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPOST_6
2019-07-18 16:35:15 -Generating unique operation named: addUsingGET_6
2019-07-18 16:35:15 -Generating unique operation named: editUsingGET_7
2019-07-18 16:35:15 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_7
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_12
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_13
2019-07-18 16:35:15 -Generating unique operation named: saveUsingPOST_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingGET_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPOST_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPUT_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 16:35:15 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 16:35:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 16:35:15 -Generating unique operation named: addUsingGET_7
2019-07-18 16:35:15 -Generating unique operation named: editUsingGET_8
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_8
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_14
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_15
2019-07-18 16:35:15 -Generating unique operation named: saveUsingPOST_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingGET_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPOST_8
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPUT_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 16:35:15 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 16:35:15 -Generating unique operation named: addUsingGET_8
2019-07-18 16:35:15 -Generating unique operation named: editUsingGET_9
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_9
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_16
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_17
2019-07-18 16:35:15 -Generating unique operation named: saveUsingPOST_8
2019-07-18 16:35:15 -Generating unique operation named: updateUsingGET_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPOST_9
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPUT_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 16:35:15 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 16:35:15 -Generating unique operation named: addUsingGET_9
2019-07-18 16:35:15 -Generating unique operation named: editUsingGET_10
2019-07-18 16:35:15 -Generating unique operation named: infoUsingGET_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingPOST_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingPUT_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 16:35:15 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_10
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_18
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_19
2019-07-18 16:35:15 -Generating unique operation named: saveUsingPOST_9
2019-07-18 16:35:15 -Generating unique operation named: updateUsingPOST_10
2019-07-18 16:35:15 -Generating unique operation named: listUsingGET_11
2019-07-18 16:35:15 -Generating unique operation named: removeUsingPOST_20
2019-07-18 16:35:15 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 16:35:15 -Generating unique operation named: addUsingGET_10
2019-07-18 16:35:16 -Generating unique operation named: editUsingGET_11
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_12
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_21
2019-07-18 16:35:16 -Generating unique operation named: saveUsingPOST_10
2019-07-18 16:35:16 -Generating unique operation named: treeUsingGET_1
2019-07-18 16:35:16 -Generating unique operation named: treeUsingGET_2
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPOST_11
2019-07-18 16:35:16 -Generating unique operation named: addUsingGET_11
2019-07-18 16:35:16 -Generating unique operation named: editUsingGET_12
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_13
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_22
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_23
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPOST_12
2019-07-18 16:35:16 -Generating unique operation named: addUsingGET_12
2019-07-18 16:35:16 -Generating unique operation named: editUsingGET_13
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_14
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_24
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_25
2019-07-18 16:35:16 -Generating unique operation named: saveUsingPOST_11
2019-07-18 16:35:16 -Generating unique operation named: updateUsingGET_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPOST_13
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPUT_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 16:35:16 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 16:35:16 -Generating unique operation named: addUsingGET_13
2019-07-18 16:35:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 16:35:16 -Generating unique operation named: editUsingGET_14
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_15
2019-07-18 16:35:16 -Generating unique operation named: printEditUsingGET_1
2019-07-18 16:35:16 -Generating unique operation named: removeUsingPOST_26
2019-07-18 16:35:16 -Generating unique operation named: saveUsingPOST_12
2019-07-18 16:35:16 -Generating unique operation named: updateUsingGET_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPOST_14
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPUT_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 16:35:16 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 16:35:16 -Generating unique operation named: addUsingGET_14
2019-07-18 16:35:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 16:35:16 -Generating unique operation named: editUsingGET_15
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_16
2019-07-18 16:35:16 -Generating unique operation named: saveUsingPOST_13
2019-07-18 16:35:16 -Generating unique operation named: saveUsingPOST_14
2019-07-18 16:35:16 -Generating unique operation named: updateUsingPOST_15
2019-07-18 16:35:16 -Generating unique operation named: listUsingGET_17
2019-07-18 16:35:16 -Generating unique operation named: listUsingHEAD_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingPOST_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingPUT_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingPATCH_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingDELETE_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 16:35:16 -Generating unique operation named: listUsingTRACE_1
2019-07-18 16:35:17 -Generating unique operation named: countDDUsingGET_1
2019-07-18 16:35:17 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 16:35:17 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 16:35:17 -Generating unique operation named: addUsingGET_15
2019-07-18 16:35:17 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 16:35:17 -Generating unique operation named: editUsingGET_16
2019-07-18 16:35:17 -Generating unique operation named: listUsingGET_18
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_27
2019-07-18 16:35:17 -Generating unique operation named: saveUsingPOST_15
2019-07-18 16:35:17 -Generating unique operation named: treeUsingGET_3
2019-07-18 16:35:17 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPOST_16
2019-07-18 16:35:17 -Generating unique operation named: addUsingGET_16
2019-07-18 16:35:17 -Generating unique operation named: editUsingGET_17
2019-07-18 16:35:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 16:35:17 -Generating unique operation named: listUsingGET_19
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_28
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_29
2019-07-18 16:35:17 -Generating unique operation named: saveUsingPOST_16
2019-07-18 16:35:17 -Generating unique operation named: updateUsingGET_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPOST_17
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPUT_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 16:35:17 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 16:35:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 16:35:17 -Generating unique operation named: addUsingGET_17
2019-07-18 16:35:17 -Generating unique operation named: editUsingGET_18
2019-07-18 16:35:17 -Generating unique operation named: listUsingGET_20
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_30
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_31
2019-07-18 16:35:17 -Generating unique operation named: saveUsingPOST_17
2019-07-18 16:35:17 -Generating unique operation named: updateUsingGET_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPOST_18
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPUT_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 16:35:17 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 16:35:17 -Generating unique operation named: addUsingGET_18
2019-07-18 16:35:17 -Generating unique operation named: editUsingGET_19
2019-07-18 16:35:17 -Generating unique operation named: listUsingGET_21
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_32
2019-07-18 16:35:17 -Generating unique operation named: removeUsingPOST_33
2019-07-18 16:35:17 -Generating unique operation named: saveUsingPOST_18
2019-07-18 16:35:17 -Generating unique operation named: updateUsingGET_12
2019-07-18 16:35:17 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPOST_19
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPUT_12
2019-07-18 16:35:17 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 16:35:17 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 16:35:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 16:35:18 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 16:35:18 -Starting Quartz Scheduler now
2019-07-18 16:35:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 16:35:18 -Starting...
2019-07-18 16:35:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 16:35:18 -Started.
2019-07-18 16:35:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 16:35:18 -Using a shared selector for servlet write/read
2019-07-18 16:35:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 16:35:18 -Started BootdoApplication in 60.265 seconds (JVM running for 67.084)
2019-07-18 16:35:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 16:35:19 -==> Parameters: 
2019-07-18 16:35:19 -<==      Total: 1
2019-07-18 16:36:05 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 16:38:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 16:38:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 16:38:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 138 ms
2019-07-18 16:38:05 -Enabling session validation scheduler...
2019-07-18 16:38:05 -请求地址 : http://localhost:8081/
2019-07-18 16:38:05 -HTTP METHOD : GET
2019-07-18 16:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-18 16:38:05 -参数 : [{}]
2019-07-18 16:38:05 -耗时 : 5
2019-07-18 16:38:05 -返回值 : redirect:/index
2019-07-18 16:38:06 -请求地址 : http://localhost:8081/login;JSESSIONID=fd76c335-f277-4059-92dd-ea881d414ef2
2019-07-18 16:38:06 -HTTP METHOD : GET
2019-07-18 16:38:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 16:38:06 -参数 : [{}]
2019-07-18 16:38:06 -耗时 : 1
2019-07-18 16:38:06 -返回值 : login
2019-07-18 16:38:09 -请求地址 : http://localhost:8081/getVerify
2019-07-18 16:38:09 -HTTP METHOD : GET
2019-07-18 16:38:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 16:38:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@52228dfa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ce579ce]
2019-07-18 16:38:15 -3585
2019-07-18 16:38:15 -耗时 : 6324
2019-07-18 16:38:15 -返回值 : null
2019-07-18 16:38:16 -请求地址 : http://localhost:8081/login
2019-07-18 16:38:16 -HTTP METHOD : GET
2019-07-18 16:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 16:38:16 -参数 : [{}]
2019-07-18 16:38:16 -耗时 : 1
2019-07-18 16:38:16 -返回值 : login
2019-07-18 16:38:21 -请求地址 : http://localhost:8081/login
2019-07-18 16:38:21 -HTTP METHOD : POST
2019-07-18 16:38:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 16:38:21 -参数 : [admin, 111111, 3585, org.apache.shiro.web.servlet.ShiroHttpServletRequest@298831eb]
2019-07-18 16:38:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 16:38:21 -==> Parameters: admin(String)
2019-07-18 16:38:22 -<==      Total: 1
2019-07-18 16:38:22 -耗时 : 911
2019-07-18 16:38:22 -返回值 : {msg=操作成功, code=0}
2019-07-18 16:38:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 16:38:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:38:22 -==> Parameters: 1(Long), admin(String), 登录(String), 911(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 16:38:22.315(Timestamp)
2019-07-18 16:38:22 -<==    Updates: 1
2019-07-18 16:38:22 -请求地址 : http://localhost:8081/index
2019-07-18 16:38:22 -HTTP METHOD : GET
2019-07-18 16:38:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 16:38:22 -参数 : [{}]
2019-07-18 16:38:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 16:38:23 -==> Parameters: 1(Long)
2019-07-18 16:38:23 -<==      Total: 51
2019-07-18 16:38:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 16:38:23 -==> Parameters: 138(Long)
2019-07-18 16:38:23 -<==      Total: 1
2019-07-18 16:38:23 -耗时 : 445
2019-07-18 16:38:23 -返回值 : index_v1
2019-07-18 16:38:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:38:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 445(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 16:38:23.385(Timestamp)
2019-07-18 16:38:23 -<==    Updates: 1
2019-07-18 16:38:24 -请求地址 : http://localhost:8081/main
2019-07-18 16:38:24 -HTTP METHOD : GET
2019-07-18 16:38:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 16:38:24 -参数 : []
2019-07-18 16:38:24 -耗时 : 0
2019-07-18 16:38:24 -返回值 : main
2019-07-18 16:38:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 16:38:27 -HTTP METHOD : GET
2019-07-18 16:38:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 16:38:27 -参数 : []
2019-07-18 16:38:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 16:38:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 16:38:27 -<==      Total: 0
2019-07-18 16:38:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 16:38:27 -==> Parameters: 1(Long), 0(String)
2019-07-18 16:38:27 -<==      Total: 1
2019-07-18 16:38:27 -耗时 : 154
2019-07-18 16:38:27 -返回值 : com.bootdo.common.utils.PageUtils@71d28bd7
2019-07-18 16:38:28 -请求地址 : http://localhost:8081/main
2019-07-18 16:38:28 -HTTP METHOD : GET
2019-07-18 16:38:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 16:38:28 -参数 : []
2019-07-18 16:38:28 -耗时 : 1
2019-07-18 16:38:28 -返回值 : main
2019-07-18 16:38:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 16:38:32 -==> Parameters: 1(Long)
2019-07-18 16:38:32 -<==      Total: 95
2019-07-18 16:38:32 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 16:38:32 -HTTP METHOD : GET
2019-07-18 16:38:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 16:38:32 -参数 : []
2019-07-18 16:38:32 -耗时 : 1
2019-07-18 16:38:32 -返回值 : moneyList/moneyList
2019-07-18 16:38:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 16:38:37 -HTTP METHOD : GET
2019-07-18 16:38:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 16:38:37 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 16:38:37 -耗时 : 0
2019-07-18 16:38:37 -返回值 : system/dept/deptTree
2019-07-18 16:38:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 16:38:38 -HTTP METHOD : GET
2019-07-18 16:38:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 16:38:38 -参数 : []
2019-07-18 16:38:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 16:38:38 -==> Parameters: 
2019-07-18 16:38:38 -<==      Total: 3
2019-07-18 16:38:38 -耗时 : 58
2019-07-18 16:38:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 16:38:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:38:42 -HTTP METHOD : POST
2019-07-18 16:38:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:38:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@330f5f84]
2019-07-18 16:38:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:38:42 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:38:42 -<==      Total: 3
2019-07-18 16:38:42 -耗时 : 437
2019-07-18 16:38:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@718ac1a4, com.bootdo.moneyList.damain.MoneyListDO@6bc32ed0, com.bootdo.moneyList.damain.MoneyListDO@59a33c69]
2019-07-18 16:38:46 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 16:38:46 -HTTP METHOD : POST
2019-07-18 16:38:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 16:38:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@dfbd4aa]
2019-07-18 16:38:46 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:38:46 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:38:46 -<==      Total: 3
2019-07-18 16:39:44 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 16:39:44 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:39:44 -<==      Total: 1
2019-07-18 16:39:44 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 16:39:44 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:39:44 -<==      Total: 1
2019-07-18 16:39:45 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 16:39:45 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:39:45 -<==      Total: 0
2019-07-18 16:39:45 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:39:45 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:39:45 -<==    Updates: 1
2019-07-18 16:39:45 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:39:45 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 16:38:50.042(Timestamp), 2019-06(String), admin(String), 2019-07-18 16:39:44.496(Timestamp), admin(String), null
2019-07-18 16:39:45 -<==    Updates: 1
2019-07-18 16:39:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 16:39:46 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 16:38:50.042(Timestamp)
2019-07-18 16:39:47 -<==      Total: 1
2019-07-18 16:39:47 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 16:39:47 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 850.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 16:39:47 -<==    Updates: 1
2019-07-18 16:40:10 -耗时 : 84518
2019-07-18 16:40:10 -返回值 : 1601
2019-07-18 16:40:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:40:14 -HTTP METHOD : POST
2019-07-18 16:40:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:40:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@395918a7]
2019-07-18 16:40:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:40:14 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:40:14 -<==      Total: 3
2019-07-18 16:40:14 -耗时 : 39
2019-07-18 16:40:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@350e97fb, com.bootdo.moneyList.damain.MoneyListDO@2f12c89c, com.bootdo.moneyList.damain.MoneyListDO@5eff61f9]
2019-07-18 16:40:15 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 16:40:15 -HTTP METHOD : GET
2019-07-18 16:40:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 16:40:15 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@6933532e, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@6933532e]
2019-07-18 16:40:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 16:40:15 -==> Parameters: 1601(Long)
2019-07-18 16:40:15 -<==      Total: 1
2019-07-18 16:41:25 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$72aad46d.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 16:41:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:41:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 16:41:25.527(Timestamp)
2019-07-18 16:41:25 -<==    Updates: 1
2019-07-18 16:42:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:42:10 -HTTP METHOD : POST
2019-07-18 16:42:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:42:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7408c1a4]
2019-07-18 16:42:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:42:10 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:42:10 -<==      Total: 3
2019-07-18 16:42:10 -耗时 : 38
2019-07-18 16:42:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@21c2f664, com.bootdo.moneyList.damain.MoneyListDO@76603298, com.bootdo.moneyList.damain.MoneyListDO@13672247]
2019-07-18 16:42:13 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 16:42:13 -HTTP METHOD : POST
2019-07-18 16:42:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 16:42:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5b007615]
2019-07-18 16:42:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:42:13 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:42:13 -<==      Total: 3
2019-07-18 16:42:23 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 16:42:23 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:42:23 -<==      Total: 1
2019-07-18 16:42:23 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 16:42:23 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:42:23 -<==      Total: 1
2019-07-18 16:42:23 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 16:42:23 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:42:23 -<==      Total: 0
2019-07-18 16:42:23 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:42:23 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:42:23 -<==    Updates: 1
2019-07-18 16:42:23 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:42:23 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 16:42:21.347(Timestamp), 2019-06(String), admin(String), 2019-07-18 16:42:23.613(Timestamp), admin(String), null
2019-07-18 16:42:23 -<==    Updates: 1
2019-07-18 16:42:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 16:42:23 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 16:42:21.347(Timestamp)
2019-07-18 16:42:23 -<==      Total: 1
2019-07-18 16:42:23 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 16:42:23 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 900.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 16:42:23 -<==    Updates: 1
2019-07-18 16:42:23 -耗时 : 9944
2019-07-18 16:42:23 -返回值 : 1601
2019-07-18 16:42:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:42:27 -HTTP METHOD : POST
2019-07-18 16:42:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:42:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@40649a7]
2019-07-18 16:42:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:42:27 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:42:27 -<==      Total: 3
2019-07-18 16:42:27 -耗时 : 45
2019-07-18 16:42:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2dacc18e, com.bootdo.moneyList.damain.MoneyListDO@1067e536, com.bootdo.moneyList.damain.MoneyListDO@7201fd11]
2019-07-18 16:42:28 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 16:42:28 -HTTP METHOD : GET
2019-07-18 16:42:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 16:42:28 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@529aed37, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@529aed37]
2019-07-18 16:42:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 16:42:28 -==> Parameters: 1601(Long)
2019-07-18 16:42:28 -<==      Total: 1
2019-07-18 16:42:44 -Request method 'GET' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 16:42:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:42:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported(String), null, 2019-07-18 16:42:44.247(Timestamp)
2019-07-18 16:42:44 -<==    Updates: 1
2019-07-18 16:43:52 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$72aad46d.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 16:43:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:43:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 16:43:52.166(Timestamp)
2019-07-18 16:43:52 -<==    Updates: 1
2019-07-18 16:46:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 16:46:09 -HTTP METHOD : POST
2019-07-18 16:46:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 16:46:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@282b3f1c]
2019-07-18 16:46:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:46:09 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:46:09 -<==      Total: 3
2019-07-18 16:46:16 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 16:46:16 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:46:17 -<==      Total: 1
2019-07-18 16:46:17 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 16:46:17 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:46:17 -<==      Total: 1
2019-07-18 16:46:17 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 16:46:17 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:46:17 -<==      Total: 0
2019-07-18 16:46:17 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:46:17 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:46:17 -<==    Updates: 1
2019-07-18 16:46:17 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:46:17 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 16:46:13.089(Timestamp), 2019-06(String), admin(String), 2019-07-18 16:46:16.969(Timestamp), admin(String), null
2019-07-18 16:46:17 -<==    Updates: 1
2019-07-18 16:46:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 16:46:17 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 16:46:13.089(Timestamp)
2019-07-18 16:46:17 -<==      Total: 1
2019-07-18 16:46:17 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 16:46:17 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 950.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 16:46:17 -<==    Updates: 1
2019-07-18 16:46:17 -耗时 : 7675
2019-07-18 16:46:17 -返回值 : 1601
2019-07-18 16:46:20 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:46:20 -HTTP METHOD : POST
2019-07-18 16:46:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:46:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@58b9bf69]
2019-07-18 16:46:20 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:46:20 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:46:20 -<==      Total: 3
2019-07-18 16:46:20 -耗时 : 42
2019-07-18 16:46:20 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@404e08a1, com.bootdo.moneyList.damain.MoneyListDO@59c58a69, com.bootdo.moneyList.damain.MoneyListDO@44e23258]
2019-07-18 16:46:21 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 16:46:21 -HTTP METHOD : GET
2019-07-18 16:46:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 16:46:21 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@b66e49c, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@b66e49c]
2019-07-18 16:46:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 16:46:21 -==> Parameters: 1601(Long)
2019-07-18 16:46:21 -<==      Total: 1
2019-07-18 16:55:12 -请求地址 : http://localhost:8081/login
2019-07-18 16:55:12 -HTTP METHOD : POST
2019-07-18 16:55:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 16:55:12 -参数 : [admin, 111111, 0449, org.apache.shiro.web.servlet.ShiroHttpServletRequest@28c6dcc7]
2019-07-18 16:55:12 -耗时 : 1
2019-07-18 16:55:12 -返回值 : {msg=请输入正确的验证码, code=500}
2019-07-18 16:55:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:55:12 -==> Parameters: 1(Long), admin(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 16:55:12.734(Timestamp)
2019-07-18 16:55:12 -<==    Updates: 1
2019-07-18 16:55:17 -请求地址 : http://localhost:8081/getVerify
2019-07-18 16:55:17 -HTTP METHOD : GET
2019-07-18 16:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 16:55:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@110162ed, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1aa9697a]
2019-07-18 16:55:17 -0238
2019-07-18 16:55:17 -耗时 : 16
2019-07-18 16:55:17 -返回值 : null
2019-07-18 16:55:20 -请求地址 : http://localhost:8081/login
2019-07-18 16:55:20 -HTTP METHOD : POST
2019-07-18 16:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 16:55:20 -参数 : [admin, 111111, 0238, org.apache.shiro.web.servlet.ShiroHttpServletRequest@713c84ea]
2019-07-18 16:55:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 16:55:20 -==> Parameters: admin(String)
2019-07-18 16:55:20 -<==      Total: 1
2019-07-18 16:55:20 -耗时 : 10
2019-07-18 16:55:20 -返回值 : {msg=操作成功, code=0}
2019-07-18 16:55:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:55:20 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 16:55:20.421(Timestamp)
2019-07-18 16:55:20 -请求地址 : http://localhost:8081/index
2019-07-18 16:55:20 -HTTP METHOD : GET
2019-07-18 16:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 16:55:20 -参数 : [{}]
2019-07-18 16:55:20 -<==    Updates: 1
2019-07-18 16:55:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 16:55:20 -==> Parameters: 1(Long)
2019-07-18 16:55:20 -<==      Total: 51
2019-07-18 16:55:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 16:55:20 -==> Parameters: 138(Long)
2019-07-18 16:55:20 -<==      Total: 1
2019-07-18 16:55:20 -耗时 : 78
2019-07-18 16:55:20 -返回值 : index_v1
2019-07-18 16:55:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:55:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 78(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 16:55:20.592(Timestamp)
2019-07-18 16:55:20 -<==    Updates: 1
2019-07-18 16:55:20 -请求地址 : http://localhost:8081/main
2019-07-18 16:55:20 -HTTP METHOD : GET
2019-07-18 16:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 16:55:20 -参数 : []
2019-07-18 16:55:20 -耗时 : 0
2019-07-18 16:55:20 -返回值 : main
2019-07-18 16:55:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 16:55:22 -HTTP METHOD : GET
2019-07-18 16:55:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 16:55:22 -参数 : []
2019-07-18 16:55:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 16:55:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 16:55:22 -请求地址 : http://localhost:8081/main
2019-07-18 16:55:22 -HTTP METHOD : GET
2019-07-18 16:55:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 16:55:22 -参数 : []
2019-07-18 16:55:22 -耗时 : 0
2019-07-18 16:55:22 -返回值 : main
2019-07-18 16:55:22 -<==      Total: 0
2019-07-18 16:55:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 16:55:22 -==> Parameters: 1(Long), 0(String)
2019-07-18 16:55:22 -<==      Total: 1
2019-07-18 16:55:22 -耗时 : 238
2019-07-18 16:55:22 -返回值 : com.bootdo.common.utils.PageUtils@25e8d4b
2019-07-18 16:55:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 16:55:28 -==> Parameters: 1(Long)
2019-07-18 16:55:28 -<==      Total: 95
2019-07-18 16:55:28 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 16:55:28 -HTTP METHOD : GET
2019-07-18 16:55:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 16:55:28 -参数 : []
2019-07-18 16:55:28 -耗时 : 1
2019-07-18 16:55:28 -返回值 : moneyList/moneyList
2019-07-18 16:55:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 16:55:36 -HTTP METHOD : GET
2019-07-18 16:55:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 16:55:36 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 16:55:36 -耗时 : 0
2019-07-18 16:55:36 -返回值 : system/dept/deptTree
2019-07-18 16:55:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 16:55:36 -HTTP METHOD : GET
2019-07-18 16:55:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 16:55:36 -参数 : []
2019-07-18 16:55:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 16:55:36 -==> Parameters: 
2019-07-18 16:55:36 -<==      Total: 3
2019-07-18 16:55:36 -耗时 : 6
2019-07-18 16:55:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 16:55:39 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:55:39 -HTTP METHOD : POST
2019-07-18 16:55:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:55:39 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a472a23]
2019-07-18 16:55:39 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:55:39 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:55:39 -<==      Total: 3
2019-07-18 16:55:39 -耗时 : 88
2019-07-18 16:55:39 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53522d8c, com.bootdo.moneyList.damain.MoneyListDO@47f66133, com.bootdo.moneyList.damain.MoneyListDO@24834ddc]
2019-07-18 16:56:03 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 16:56:03 -HTTP METHOD : POST
2019-07-18 16:56:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 16:56:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@11dbdc37]
2019-07-18 16:56:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:56:03 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:56:03 -<==      Total: 3
2019-07-18 16:57:01 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$72aad46d.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 16:57:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:57:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 16:57:01.049(Timestamp)
2019-07-18 16:57:01 -<==    Updates: 1
2019-07-18 16:57:04 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 16:57:04 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:57:04 -<==      Total: 1
2019-07-18 16:57:04 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 16:57:04 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:57:04 -<==      Total: 1
2019-07-18 16:57:04 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 16:57:04 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 16:57:04 -<==      Total: 0
2019-07-18 16:57:04 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:57:04 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:57:04 -<==    Updates: 1
2019-07-18 16:57:04 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:57:04 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 16:57:02.103(Timestamp), 2019-06(String), admin(String), 2019-07-18 16:57:04.337(Timestamp), admin(String), null
2019-07-18 16:57:04 -<==    Updates: 1
2019-07-18 16:57:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 16:57:04 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 16:57:02.103(Timestamp)
2019-07-18 16:57:04 -<==      Total: 1
2019-07-18 16:57:04 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 16:57:04 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 1000.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 16:57:04 -<==    Updates: 1
2019-07-18 16:57:04 -耗时 : 61000
2019-07-18 16:57:04 -返回值 : 1601
2019-07-18 16:57:08 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 16:57:08 -HTTP METHOD : POST
2019-07-18 16:57:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 16:57:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@19447279]
2019-07-18 16:57:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 16:57:08 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 16:57:09 -<==      Total: 3
2019-07-18 16:57:09 -耗时 : 36
2019-07-18 16:57:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@773c5dbb, com.bootdo.moneyList.damain.MoneyListDO@7ff83542, com.bootdo.moneyList.damain.MoneyListDO@4515477e]
2019-07-18 16:57:10 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 16:57:10 -HTTP METHOD : GET
2019-07-18 16:57:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 16:57:10 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@5fc3497d, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@5fc3497d]
2019-07-18 16:57:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 16:57:10 -==> Parameters: 1601(Long)
2019-07-18 16:57:10 -<==      Total: 1
2019-07-18 16:57:39 -null
java.lang.NullPointerException: null
	at java.util.Calendar.setTime(Calendar.java:1770)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:943)
	at java.text.SimpleDateFormat.format(SimpleDateFormat.java:936)
	at java.text.DateFormat.format(DateFormat.java:345)
	at com.bootdo.moneyList.controller.MoneyListController.sameDate(MoneyListController.java:389)
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$72aad46d.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 16:57:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 16:57:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 16:57:39.1(Timestamp)
2019-07-18 16:57:39 -<==    Updates: 1
2019-07-18 17:06:05 -WebSocketSession[2 current WS(1)-HttpStream(1)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 3, completed tasks = 424]
2019-07-18 17:11:03 -Starting BootdoApplication on PC-201905091110 with PID 7684 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:11:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:11:03 -The following profiles are active: dev
2019-07-18 17:11:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Thu Jul 18 17:11:03 CST 2019]; root of context hierarchy
2019-07-18 17:11:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:11:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29eb4a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f7e347] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:11:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:11:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:11:26 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:11:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:11:26 -Starting service [Tomcat]
2019-07-18 17:11:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:11:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:11:27 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:11:27 -Root WebApplicationContext: initialization completed in 23679 ms
2019-07-18 17:11:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:11:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:11:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:11:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:11:29 -Filter xssFilter was not registered (disabled)
2019-07-18 17:11:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:11:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:11:29 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:11:29 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:11:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Thu Jul 18 17:11:03 CST 2019]; root of context hierarchy
2019-07-18 17:11:39 -Using default implementation for ThreadExecutor
2019-07-18 17:11:39 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:11:39 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:11:39 -RAMJobStore initialized.
2019-07-18 17:11:39 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:11:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:11:39 -Quartz scheduler version: 2.3.0
2019-07-18 17:11:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5e3cb58e
2019-07-18 17:11:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:11:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:11:47 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:11:47 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:11:47 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:11:47 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:11:47 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:11:47 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:11:47 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:11:47 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:11:47 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:11:47 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:11:47 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:11:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:11:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:11:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:11:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:11:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:11:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:11:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:11:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:11:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:11:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:11:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:11:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:11:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:11:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:11:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:11:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:11:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:11:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:11:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:11:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:11:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:11:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:11:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:11:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:11:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:11:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:11:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:11:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:11:47 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:11:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:11:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:11:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:11:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:11:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:11:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:11:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:11:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:11:47 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:11:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:11:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:11:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:11:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:11:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:11:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:11:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:11:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:11:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:11:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:11:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:11:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:11:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:11:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:11:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:11:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:11:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:11:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:11:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:11:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:11:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:11:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:11:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:11:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:11:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:11:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:11:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:11:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:11:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:11:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:11:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:11:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:11:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:11:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:11:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:11:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:11:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:11:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:11:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Thu Jul 18 17:11:03 CST 2019]; root of context hierarchy
2019-07-18 17:11:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:11:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:11:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:11:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:11:58 -Registering beans for JMX exposure on startup
2019-07-18 17:11:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:11:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:11:58 -Starting beans in phase 2147483647
2019-07-18 17:11:58 -Context refreshed
2019-07-18 17:11:58 -Found 1 custom documentation plugin(s)
2019-07-18 17:11:58 -Scanning for api listing references
2019-07-18 17:12:00 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:12:00 -Generating unique operation named: addUsingGET_1
2019-07-18 17:12:00 -Generating unique operation named: editUsingGET_1
2019-07-18 17:12:00 -Generating unique operation named: listUsingGET_1
2019-07-18 17:12:00 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:12:00 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:12:00 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:12:00 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:12:00 -Generating unique operation named: addUsingGET_2
2019-07-18 17:12:01 -Generating unique operation named: editUsingGET_2
2019-07-18 17:12:01 -Generating unique operation named: listUsingGET_2
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:12:01 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:12:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:12:01 -Generating unique operation named: addUsingGET_3
2019-07-18 17:12:01 -Generating unique operation named: editUsingGET_3
2019-07-18 17:12:01 -Generating unique operation named: listUsingGET_3
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:12:01 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:12:01 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:12:01 -Generating unique operation named: addUsingGET_4
2019-07-18 17:12:01 -Generating unique operation named: editUsingGET_4
2019-07-18 17:12:01 -Generating unique operation named: listUsingGET_4
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:12:01 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:12:01 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:12:01 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:12:01 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:12:01 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:12:01 -Generating unique operation named: addUsingGET_5
2019-07-18 17:12:01 -Generating unique operation named: editUsingGET_5
2019-07-18 17:12:02 -Generating unique operation named: listUsingGET_5
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:12:02 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:12:02 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:12:02 -Generating unique operation named: editUsingGET_6
2019-07-18 17:12:02 -Generating unique operation named: listUsingGET_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:12:02 -Generating unique operation named: addUsingGET_6
2019-07-18 17:12:02 -Generating unique operation named: editUsingGET_7
2019-07-18 17:12:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:12:02 -Generating unique operation named: listUsingGET_7
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:12:02 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:12:02 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:12:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:12:02 -Generating unique operation named: addUsingGET_7
2019-07-18 17:12:02 -Generating unique operation named: editUsingGET_8
2019-07-18 17:12:02 -Generating unique operation named: listUsingGET_8
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:12:02 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:12:02 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:12:02 -Generating unique operation named: addUsingGET_8
2019-07-18 17:12:02 -Generating unique operation named: editUsingGET_9
2019-07-18 17:12:02 -Generating unique operation named: listUsingGET_9
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:12:02 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:12:02 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:12:02 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:12:02 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:12:03 -Generating unique operation named: addUsingGET_9
2019-07-18 17:12:03 -Generating unique operation named: editUsingGET_10
2019-07-18 17:12:03 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:12:03 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:12:03 -Generating unique operation named: listUsingGET_10
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:12:03 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:12:03 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:12:03 -Generating unique operation named: listUsingGET_11
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:12:03 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:12:03 -Generating unique operation named: addUsingGET_10
2019-07-18 17:12:03 -Generating unique operation named: editUsingGET_11
2019-07-18 17:12:03 -Generating unique operation named: listUsingGET_12
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:12:03 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:12:03 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:12:03 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:12:03 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:12:03 -Generating unique operation named: addUsingGET_11
2019-07-18 17:12:03 -Generating unique operation named: editUsingGET_12
2019-07-18 17:12:03 -Generating unique operation named: listUsingGET_13
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:12:03 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:12:04 -Generating unique operation named: addUsingGET_12
2019-07-18 17:12:04 -Generating unique operation named: editUsingGET_13
2019-07-18 17:12:04 -Generating unique operation named: listUsingGET_14
2019-07-18 17:12:04 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:12:04 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:12:04 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:12:04 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:12:04 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:12:04 -Generating unique operation named: addUsingGET_13
2019-07-18 17:12:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:12:04 -Generating unique operation named: editUsingGET_14
2019-07-18 17:12:04 -Generating unique operation named: listUsingGET_15
2019-07-18 17:12:04 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:12:04 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:12:04 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:12:04 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:12:04 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:12:04 -Generating unique operation named: addUsingGET_14
2019-07-18 17:12:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:12:04 -Generating unique operation named: editUsingGET_15
2019-07-18 17:12:04 -Generating unique operation named: listUsingGET_16
2019-07-18 17:12:04 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:12:04 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:12:04 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:12:04 -Generating unique operation named: listUsingGET_17
2019-07-18 17:12:04 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:12:04 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:12:05 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:12:05 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:12:05 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:12:05 -Generating unique operation named: addUsingGET_15
2019-07-18 17:12:05 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:12:05 -Generating unique operation named: editUsingGET_16
2019-07-18 17:12:05 -Generating unique operation named: listUsingGET_18
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:12:05 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:12:05 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:12:05 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:12:05 -Generating unique operation named: addUsingGET_16
2019-07-18 17:12:05 -Generating unique operation named: editUsingGET_17
2019-07-18 17:12:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:12:05 -Generating unique operation named: listUsingGET_19
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:12:05 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:12:05 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:12:05 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:12:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:12:05 -Generating unique operation named: addUsingGET_17
2019-07-18 17:12:05 -Generating unique operation named: editUsingGET_18
2019-07-18 17:12:05 -Generating unique operation named: listUsingGET_20
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:12:05 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:12:05 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:12:05 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:12:05 -Generating unique operation named: addUsingGET_18
2019-07-18 17:12:05 -Generating unique operation named: editUsingGET_19
2019-07-18 17:12:05 -Generating unique operation named: listUsingGET_21
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:12:05 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:12:05 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:12:06 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:12:06 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:12:06 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:12:06 -Starting Quartz Scheduler now
2019-07-18 17:12:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:12:06 -Starting...
2019-07-18 17:12:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:12:06 -Started.
2019-07-18 17:12:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:12:06 -Using a shared selector for servlet write/read
2019-07-18 17:12:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 17:12:06 -Started BootdoApplication in 68.347 seconds (JVM running for 70.578)
2019-07-18 17:12:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 17:12:07 -==> Parameters: 
2019-07-18 17:12:07 -<==      Total: 1
2019-07-18 17:12:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 17:12:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 17:12:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 114 ms
2019-07-18 17:12:28 -Enabling session validation scheduler...
2019-07-18 17:12:28 -请求地址 : http://localhost:8081/login;JSESSIONID=aa42d8b9-617f-4fd5-bac4-1eca1b6c5e93
2019-07-18 17:12:28 -HTTP METHOD : GET
2019-07-18 17:12:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 17:12:28 -参数 : [{}]
2019-07-18 17:12:28 -耗时 : 7
2019-07-18 17:12:28 -返回值 : login
2019-07-18 17:12:35 -请求地址 : http://localhost:8081/getVerify
2019-07-18 17:12:35 -HTTP METHOD : GET
2019-07-18 17:12:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 17:12:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6530cd80, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f8077c3]
2019-07-18 17:12:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-18 17:12:51 -4958
2019-07-18 17:12:51 -耗时 : 16310
2019-07-18 17:12:51 -返回值 : null
2019-07-18 17:12:59 -请求地址 : http://localhost:8081/login
2019-07-18 17:12:59 -HTTP METHOD : POST
2019-07-18 17:12:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 17:12:59 -参数 : [admin, 111111, 4958, org.apache.shiro.web.servlet.ShiroHttpServletRequest@28bed717]
2019-07-18 17:12:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 17:12:59 -==> Parameters: admin(String)
2019-07-18 17:12:59 -<==      Total: 1
2019-07-18 17:12:59 -耗时 : 287
2019-07-18 17:12:59 -返回值 : {msg=操作成功, code=0}
2019-07-18 17:12:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 17:12:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:12:59 -==> Parameters: 1(Long), admin(String), 登录(String), 287(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 17:12:59.704(Timestamp)
2019-07-18 17:12:59 -<==    Updates: 1
2019-07-18 17:13:00 -请求地址 : http://localhost:8081/index
2019-07-18 17:13:00 -HTTP METHOD : GET
2019-07-18 17:13:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 17:13:00 -参数 : [{}]
2019-07-18 17:13:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 17:13:00 -==> Parameters: 1(Long)
2019-07-18 17:13:00 -<==      Total: 51
2019-07-18 17:13:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 17:13:00 -==> Parameters: 138(Long)
2019-07-18 17:13:00 -<==      Total: 1
2019-07-18 17:13:00 -耗时 : 397
2019-07-18 17:13:00 -返回值 : index_v1
2019-07-18 17:13:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:13:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 397(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 17:13:01.033(Timestamp)
2019-07-18 17:13:01 -<==    Updates: 1
2019-07-18 17:13:02 -请求地址 : http://localhost:8081/main
2019-07-18 17:13:02 -HTTP METHOD : GET
2019-07-18 17:13:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:13:02 -参数 : []
2019-07-18 17:13:02 -耗时 : 0
2019-07-18 17:13:02 -返回值 : main
2019-07-18 17:13:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 17:13:03 -HTTP METHOD : GET
2019-07-18 17:13:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 17:13:03 -参数 : []
2019-07-18 17:13:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 17:13:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 17:13:03 -<==      Total: 0
2019-07-18 17:13:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 17:13:03 -==> Parameters: 1(Long), 0(String)
2019-07-18 17:13:03 -<==      Total: 1
2019-07-18 17:13:03 -耗时 : 152
2019-07-18 17:13:03 -返回值 : com.bootdo.common.utils.PageUtils@5be05d52
2019-07-18 17:13:03 -请求地址 : http://localhost:8081/main
2019-07-18 17:13:03 -HTTP METHOD : GET
2019-07-18 17:13:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:13:03 -参数 : []
2019-07-18 17:13:03 -耗时 : 0
2019-07-18 17:13:03 -返回值 : main
2019-07-18 17:13:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 17:13:11 -==> Parameters: 1(Long)
2019-07-18 17:13:11 -<==      Total: 95
2019-07-18 17:13:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 17:13:11 -HTTP METHOD : GET
2019-07-18 17:13:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 17:13:11 -参数 : []
2019-07-18 17:13:11 -耗时 : 1
2019-07-18 17:13:11 -返回值 : moneyList/moneyList
2019-07-18 17:13:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 17:13:17 -HTTP METHOD : GET
2019-07-18 17:13:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 17:13:17 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 17:13:17 -耗时 : 1
2019-07-18 17:13:17 -返回值 : system/dept/deptTree
2019-07-18 17:13:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 17:13:18 -HTTP METHOD : GET
2019-07-18 17:13:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 17:13:18 -参数 : []
2019-07-18 17:13:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 17:13:18 -==> Parameters: 
2019-07-18 17:13:18 -<==      Total: 3
2019-07-18 17:13:18 -耗时 : 41
2019-07-18 17:13:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 17:13:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:13:22 -HTTP METHOD : POST
2019-07-18 17:13:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:13:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@64bad061]
2019-07-18 17:13:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:13:22 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:13:22 -<==      Total: 3
2019-07-18 17:13:22 -耗时 : 192
2019-07-18 17:13:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@30094261, com.bootdo.moneyList.damain.MoneyListDO@6f0a1cf, com.bootdo.moneyList.damain.MoneyListDO@5da9b28e]
2019-07-18 17:13:36 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:13:36 -HTTP METHOD : POST
2019-07-18 17:13:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:13:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77591e19, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b1d2015]
2019-07-18 17:13:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:13:36 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:13:36 -<==      Total: 3
2019-07-18 17:13:42 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 17:13:42 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:13:42 -<==      Total: 1
2019-07-18 17:13:42 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 17:13:42 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:13:42 -<==      Total: 1
2019-07-18 17:13:42 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 17:13:42 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:13:42 -<==      Total: 0
2019-07-18 17:13:42 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:13:42 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:13:42 -<==    Updates: 1
2019-07-18 17:13:42 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:13:42 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 17:13:39.663(Timestamp), 2019-06(String), admin(String), 2019-07-18 17:13:42.748(Timestamp), admin(String), null
2019-07-18 17:13:43 -<==    Updates: 1
2019-07-18 17:13:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 17:13:43 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 17:13:39.663(Timestamp)
2019-07-18 17:13:43 -<==      Total: 1
2019-07-18 17:13:43 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 17:13:43 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 1050.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 17:13:43 -<==    Updates: 1
2019-07-18 17:13:43 -耗时 : 6896
2019-07-18 17:13:43 -返回值 : 1601
2019-07-18 17:13:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:13:47 -HTTP METHOD : POST
2019-07-18 17:13:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:13:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3fb14f26]
2019-07-18 17:13:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:13:47 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:13:47 -<==      Total: 3
2019-07-18 17:13:47 -耗时 : 51
2019-07-18 17:13:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@bf87908, com.bootdo.moneyList.damain.MoneyListDO@4795e824, com.bootdo.moneyList.damain.MoneyListDO@72e8578f]
2019-07-18 17:13:48 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 17:13:48 -HTTP METHOD : GET
2019-07-18 17:13:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 17:13:48 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@657d5bde, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@657d5bde, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9ab7141]
2019-07-18 17:13:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 17:13:48 -==> Parameters: 1601(Long)
2019-07-18 17:13:48 -<==      Total: 1
2019-07-18 17:13:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:13:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 17:13:55.09(Timestamp)
2019-07-18 17:13:55 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:383)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$1d50c768.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 17:13:55 -<==    Updates: 1
2019-07-18 17:17:46 -Starting BootdoApplication on PC-201905091110 with PID 3684 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:17:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:17:46 -The following profiles are active: dev
2019-07-18 17:17:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5be067de: startup date [Thu Jul 18 17:17:46 CST 2019]; root of context hierarchy
2019-07-18 17:17:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:18:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fec978be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f122a765] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:02 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:18:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:18:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:18:06 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:18:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:18:07 -Starting service [Tomcat]
2019-07-18 17:18:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:18:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:18:08 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:18:08 -Root WebApplicationContext: initialization completed in 21213 ms
2019-07-18 17:18:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:18:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:18:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:18:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:18:09 -Filter xssFilter was not registered (disabled)
2019-07-18 17:18:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:18:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:18:09 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:18:09 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:18:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5be067de: startup date [Thu Jul 18 17:17:46 CST 2019]; root of context hierarchy
2019-07-18 17:18:18 -Using default implementation for ThreadExecutor
2019-07-18 17:18:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:18:18 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:18:18 -RAMJobStore initialized.
2019-07-18 17:18:18 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:18:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:18:18 -Quartz scheduler version: 2.3.0
2019-07-18 17:18:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@69c227fd
2019-07-18 17:18:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:18:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:18:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:18:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:18:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:18:25 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:18:25 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:18:25 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:18:25 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:18:25 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:18:25 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:18:25 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:18:25 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:18:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:18:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:18:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:18:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:18:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:18:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:18:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:18:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:18:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:18:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:18:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:18:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:18:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:18:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:18:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:18:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:18:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:18:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:18:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:18:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:18:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:18:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:18:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:18:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:18:25 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:18:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:18:25 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:18:25 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:18:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:18:25 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:18:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:18:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:18:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:18:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:18:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:18:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:18:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:18:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:18:25 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:18:25 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:18:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:18:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:18:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:18:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:18:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:18:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:18:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:18:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:18:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:18:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:18:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:18:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:18:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:18:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:18:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:18:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:18:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:18:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:18:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:18:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:18:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:18:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:18:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:18:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:18:26 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:18:26 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:18:26 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:18:26 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:26 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:18:26 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:26 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:18:26 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:18:26 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:26 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:18:26 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:18:26 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:18:26 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:18:26 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:18:26 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:18:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:18:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:18:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:18:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:18:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:18:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:18:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:18:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:18:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5be067de: startup date [Thu Jul 18 17:17:46 CST 2019]; root of context hierarchy
2019-07-18 17:18:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:18:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:18:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:18:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:18:34 -Registering beans for JMX exposure on startup
2019-07-18 17:18:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:18:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:18:34 -Starting beans in phase 2147483647
2019-07-18 17:18:34 -Context refreshed
2019-07-18 17:18:34 -Found 1 custom documentation plugin(s)
2019-07-18 17:18:34 -Scanning for api listing references
2019-07-18 17:18:36 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:18:36 -Generating unique operation named: addUsingGET_1
2019-07-18 17:18:36 -Generating unique operation named: editUsingGET_1
2019-07-18 17:18:36 -Generating unique operation named: listUsingGET_1
2019-07-18 17:18:36 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:18:36 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:18:36 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:18:36 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:18:37 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:18:37 -Generating unique operation named: addUsingGET_2
2019-07-18 17:18:37 -Generating unique operation named: editUsingGET_2
2019-07-18 17:18:37 -Generating unique operation named: listUsingGET_2
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:18:37 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:18:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:18:37 -Generating unique operation named: addUsingGET_3
2019-07-18 17:18:37 -Generating unique operation named: editUsingGET_3
2019-07-18 17:18:37 -Generating unique operation named: listUsingGET_3
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:18:37 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:18:37 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:18:37 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:18:37 -Generating unique operation named: addUsingGET_4
2019-07-18 17:18:37 -Generating unique operation named: editUsingGET_4
2019-07-18 17:18:37 -Generating unique operation named: listUsingGET_4
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:18:37 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:18:37 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:18:37 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:18:38 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:18:38 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:18:38 -Generating unique operation named: addUsingGET_5
2019-07-18 17:18:38 -Generating unique operation named: editUsingGET_5
2019-07-18 17:18:38 -Generating unique operation named: listUsingGET_5
2019-07-18 17:18:38 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:18:38 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:18:38 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:18:38 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:18:38 -Generating unique operation named: editUsingGET_6
2019-07-18 17:18:38 -Generating unique operation named: listUsingGET_6
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:18:38 -Generating unique operation named: addUsingGET_6
2019-07-18 17:18:38 -Generating unique operation named: editUsingGET_7
2019-07-18 17:18:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:18:38 -Generating unique operation named: listUsingGET_7
2019-07-18 17:18:38 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:18:38 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:18:38 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:18:38 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:18:38 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:18:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:18:39 -Generating unique operation named: addUsingGET_7
2019-07-18 17:18:39 -Generating unique operation named: editUsingGET_8
2019-07-18 17:18:39 -Generating unique operation named: listUsingGET_8
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:18:39 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:18:39 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:18:39 -Generating unique operation named: addUsingGET_8
2019-07-18 17:18:39 -Generating unique operation named: editUsingGET_9
2019-07-18 17:18:39 -Generating unique operation named: listUsingGET_9
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:18:39 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:18:39 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:18:39 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:18:39 -Generating unique operation named: addUsingGET_9
2019-07-18 17:18:39 -Generating unique operation named: editUsingGET_10
2019-07-18 17:18:39 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:18:39 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:18:39 -Generating unique operation named: listUsingGET_10
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:18:39 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:18:39 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:18:39 -Generating unique operation named: listUsingGET_11
2019-07-18 17:18:39 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:18:40 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:18:40 -Generating unique operation named: addUsingGET_10
2019-07-18 17:18:40 -Generating unique operation named: editUsingGET_11
2019-07-18 17:18:40 -Generating unique operation named: listUsingGET_12
2019-07-18 17:18:40 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:18:40 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:18:40 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:18:40 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:18:40 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:18:40 -Generating unique operation named: addUsingGET_11
2019-07-18 17:18:40 -Generating unique operation named: editUsingGET_12
2019-07-18 17:18:40 -Generating unique operation named: listUsingGET_13
2019-07-18 17:18:40 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:18:40 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:18:40 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:18:40 -Generating unique operation named: addUsingGET_12
2019-07-18 17:18:40 -Generating unique operation named: editUsingGET_13
2019-07-18 17:18:40 -Generating unique operation named: listUsingGET_14
2019-07-18 17:18:40 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:18:40 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:18:40 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:18:40 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:18:40 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:18:40 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:18:40 -Generating unique operation named: addUsingGET_13
2019-07-18 17:18:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:18:40 -Generating unique operation named: editUsingGET_14
2019-07-18 17:18:40 -Generating unique operation named: listUsingGET_15
2019-07-18 17:18:41 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:18:41 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:18:41 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:18:41 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:18:41 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:18:41 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:18:41 -Generating unique operation named: addUsingGET_14
2019-07-18 17:18:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:18:41 -Generating unique operation named: editUsingGET_15
2019-07-18 17:18:41 -Generating unique operation named: listUsingGET_16
2019-07-18 17:18:41 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:18:41 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:18:41 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:18:41 -Generating unique operation named: listUsingGET_17
2019-07-18 17:18:41 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:18:41 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:18:41 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:18:41 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:18:41 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:18:41 -Generating unique operation named: addUsingGET_15
2019-07-18 17:18:41 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:18:41 -Generating unique operation named: editUsingGET_16
2019-07-18 17:18:42 -Generating unique operation named: listUsingGET_18
2019-07-18 17:18:42 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:18:42 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:18:42 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:18:42 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:18:42 -Generating unique operation named: addUsingGET_16
2019-07-18 17:18:42 -Generating unique operation named: editUsingGET_17
2019-07-18 17:18:42 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:18:42 -Generating unique operation named: listUsingGET_19
2019-07-18 17:18:42 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:18:42 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:18:42 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:18:42 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:18:42 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:18:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:18:42 -Generating unique operation named: addUsingGET_17
2019-07-18 17:18:42 -Generating unique operation named: editUsingGET_18
2019-07-18 17:18:42 -Generating unique operation named: listUsingGET_20
2019-07-18 17:18:42 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:18:42 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:18:42 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:18:42 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:18:42 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:18:42 -Generating unique operation named: addUsingGET_18
2019-07-18 17:18:43 -Generating unique operation named: editUsingGET_19
2019-07-18 17:18:43 -Generating unique operation named: listUsingGET_21
2019-07-18 17:18:43 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:18:43 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:18:43 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:18:43 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:18:43 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:18:43 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:18:43 -Starting Quartz Scheduler now
2019-07-18 17:18:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:18:43 -Starting...
2019-07-18 17:18:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:18:43 -Started.
2019-07-18 17:18:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:18:43 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-07-18 17:18:43 -Pausing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:18:43 -Stopping service [Tomcat]
2019-07-18 17:18:43 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-07-18 17:18:43 -Stopping ProtocolHandler ["http-nio-8081"]
2019-07-18 17:18:43 -Destroying ProtocolHandler ["http-nio-8081"]
2019-07-18 17:18:43 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-18 17:18:43 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-07-18 17:18:43 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5be067de: startup date [Thu Jul 18 17:17:46 CST 2019]; root of context hierarchy
2019-07-18 17:18:43 -Stopping beans in phase 2147483647
2019-07-18 17:18:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:18:43 -Stopping...
2019-07-18 17:18:43 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:18:43 -Stopped.
2019-07-18 17:18:44 -Unregistering JMX-exposed beans on shutdown
2019-07-18 17:18:44 -Unregistering JMX-exposed beans
2019-07-18 17:18:44 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-07-18 17:18:44 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-07-18 17:18:44 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-07-18 17:18:44 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-07-18 17:18:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-07-18 17:18:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:18:44 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-07-18 17:18:44 -Shutting down Quartz Scheduler
2019-07-18 17:21:53 -Starting BootdoApplication on PC-201905091110 with PID 6424 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:21:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:21:53 -The following profiles are active: dev
2019-07-18 17:21:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75ed9710: startup date [Thu Jul 18 17:21:53 CST 2019]; root of context hierarchy
2019-07-18 17:22:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:22:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc427471] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ae9ba318] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:10 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:22:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:22:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:22:14 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:22:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:22:14 -Starting service [Tomcat]
2019-07-18 17:22:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:22:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:22:15 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:22:15 -Root WebApplicationContext: initialization completed in 21552 ms
2019-07-18 17:22:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:22:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:22:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:22:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:22:16 -Filter xssFilter was not registered (disabled)
2019-07-18 17:22:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:22:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:22:16 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:22:16 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:22:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75ed9710: startup date [Thu Jul 18 17:21:53 CST 2019]; root of context hierarchy
2019-07-18 17:22:24 -Using default implementation for ThreadExecutor
2019-07-18 17:22:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:22:24 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:22:24 -RAMJobStore initialized.
2019-07-18 17:22:24 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:22:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:22:24 -Quartz scheduler version: 2.3.0
2019-07-18 17:22:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@361fa478
2019-07-18 17:22:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:22:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:22:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:22:31 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:31 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:22:31 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:22:31 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:22:31 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:22:32 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:22:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:22:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:22:32 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:22:32 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:22:32 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:22:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:22:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:22:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:22:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:22:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:22:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:22:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:22:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:22:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:22:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:22:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:22:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:22:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:22:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:22:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:22:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:22:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:22:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:22:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:22:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:22:32 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:22:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:22:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:22:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:22:32 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:22:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:22:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:22:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:22:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:22:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:22:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:22:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:22:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:22:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:22:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:22:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:22:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:22:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:22:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:22:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:22:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:22:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:22:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:22:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:22:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:22:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:22:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:22:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:22:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:22:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:22:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:22:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:22:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:22:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:22:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:22:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:22:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:22:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:22:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:22:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:22:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:22:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:22:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:22:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:22:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:22:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:33 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:22:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:22:33 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:22:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:22:33 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:22:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:22:33 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:22:33 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:22:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:22:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:22:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:22:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:22:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:22:34 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:22:34 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:22:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:22:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75ed9710: startup date [Thu Jul 18 17:21:53 CST 2019]; root of context hierarchy
2019-07-18 17:22:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:22:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:22:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:22:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:22:42 -Registering beans for JMX exposure on startup
2019-07-18 17:22:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:22:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:22:42 -Starting beans in phase 2147483647
2019-07-18 17:22:42 -Context refreshed
2019-07-18 17:22:42 -Found 1 custom documentation plugin(s)
2019-07-18 17:22:42 -Scanning for api listing references
2019-07-18 17:22:43 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:22:43 -Generating unique operation named: addUsingGET_1
2019-07-18 17:22:43 -Generating unique operation named: editUsingGET_1
2019-07-18 17:22:43 -Generating unique operation named: listUsingGET_1
2019-07-18 17:22:43 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:22:44 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:22:44 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:22:44 -Generating unique operation named: addUsingGET_2
2019-07-18 17:22:44 -Generating unique operation named: editUsingGET_2
2019-07-18 17:22:44 -Generating unique operation named: listUsingGET_2
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:22:44 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:22:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:22:44 -Generating unique operation named: addUsingGET_3
2019-07-18 17:22:44 -Generating unique operation named: editUsingGET_3
2019-07-18 17:22:44 -Generating unique operation named: listUsingGET_3
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:22:44 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:22:44 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:22:44 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:22:44 -Generating unique operation named: addUsingGET_4
2019-07-18 17:22:44 -Generating unique operation named: editUsingGET_4
2019-07-18 17:22:44 -Generating unique operation named: listUsingGET_4
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:22:44 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:22:44 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:22:44 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:22:44 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:22:44 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:22:45 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:22:45 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:22:45 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:22:45 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:22:45 -Generating unique operation named: addUsingGET_5
2019-07-18 17:22:45 -Generating unique operation named: editUsingGET_5
2019-07-18 17:22:45 -Generating unique operation named: listUsingGET_5
2019-07-18 17:22:45 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:22:45 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:22:45 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:22:45 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:22:45 -Generating unique operation named: editUsingGET_6
2019-07-18 17:22:45 -Generating unique operation named: listUsingGET_6
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:22:45 -Generating unique operation named: addUsingGET_6
2019-07-18 17:22:45 -Generating unique operation named: editUsingGET_7
2019-07-18 17:22:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:22:45 -Generating unique operation named: listUsingGET_7
2019-07-18 17:22:45 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:22:45 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:22:45 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:22:45 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:22:45 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:22:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:22:45 -Generating unique operation named: addUsingGET_7
2019-07-18 17:22:46 -Generating unique operation named: editUsingGET_8
2019-07-18 17:22:46 -Generating unique operation named: listUsingGET_8
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:22:46 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:22:46 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:22:46 -Generating unique operation named: addUsingGET_8
2019-07-18 17:22:46 -Generating unique operation named: editUsingGET_9
2019-07-18 17:22:46 -Generating unique operation named: listUsingGET_9
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:22:46 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:22:46 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:22:46 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:22:46 -Generating unique operation named: addUsingGET_9
2019-07-18 17:22:46 -Generating unique operation named: editUsingGET_10
2019-07-18 17:22:46 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:22:46 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:22:46 -Generating unique operation named: listUsingGET_10
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:22:46 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:22:46 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:22:46 -Generating unique operation named: listUsingGET_11
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:22:46 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:22:46 -Generating unique operation named: addUsingGET_10
2019-07-18 17:22:46 -Generating unique operation named: editUsingGET_11
2019-07-18 17:22:46 -Generating unique operation named: listUsingGET_12
2019-07-18 17:22:46 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:22:47 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:22:47 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:22:47 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:22:47 -Generating unique operation named: addUsingGET_11
2019-07-18 17:22:47 -Generating unique operation named: editUsingGET_12
2019-07-18 17:22:47 -Generating unique operation named: listUsingGET_13
2019-07-18 17:22:47 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:22:47 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:22:47 -Generating unique operation named: addUsingGET_12
2019-07-18 17:22:47 -Generating unique operation named: editUsingGET_13
2019-07-18 17:22:47 -Generating unique operation named: listUsingGET_14
2019-07-18 17:22:47 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:22:47 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:22:47 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:22:47 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:22:47 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:22:47 -Generating unique operation named: addUsingGET_13
2019-07-18 17:22:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:22:47 -Generating unique operation named: editUsingGET_14
2019-07-18 17:22:47 -Generating unique operation named: listUsingGET_15
2019-07-18 17:22:47 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:22:47 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:22:47 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:22:47 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:22:47 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:22:47 -Generating unique operation named: addUsingGET_14
2019-07-18 17:22:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:22:47 -Generating unique operation named: editUsingGET_15
2019-07-18 17:22:47 -Generating unique operation named: listUsingGET_16
2019-07-18 17:22:47 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:22:47 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:22:47 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:22:47 -Generating unique operation named: listUsingGET_17
2019-07-18 17:22:47 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:22:47 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:22:47 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:22:47 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:22:47 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:22:47 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:22:48 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:22:48 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:22:48 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:22:48 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:22:48 -Generating unique operation named: addUsingGET_15
2019-07-18 17:22:48 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:22:48 -Generating unique operation named: editUsingGET_16
2019-07-18 17:22:48 -Generating unique operation named: listUsingGET_18
2019-07-18 17:22:48 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:22:48 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:22:48 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:22:48 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:22:48 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:22:48 -Generating unique operation named: addUsingGET_16
2019-07-18 17:22:48 -Generating unique operation named: editUsingGET_17
2019-07-18 17:22:48 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:22:48 -Generating unique operation named: listUsingGET_19
2019-07-18 17:22:48 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:22:48 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:22:48 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:22:48 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:22:48 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:22:48 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:22:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:22:49 -Generating unique operation named: addUsingGET_17
2019-07-18 17:22:49 -Generating unique operation named: editUsingGET_18
2019-07-18 17:22:49 -Generating unique operation named: listUsingGET_20
2019-07-18 17:22:49 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:22:49 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:22:49 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:22:49 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:22:49 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:22:49 -Generating unique operation named: addUsingGET_18
2019-07-18 17:22:49 -Generating unique operation named: editUsingGET_19
2019-07-18 17:22:49 -Generating unique operation named: listUsingGET_21
2019-07-18 17:22:49 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:22:49 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:22:49 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:22:49 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:22:49 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:22:49 -Starting Quartz Scheduler now
2019-07-18 17:22:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:22:49 -Starting...
2019-07-18 17:22:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:22:49 -Started.
2019-07-18 17:22:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:22:49 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-07-18 17:22:49 -Pausing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:22:49 -Stopping service [Tomcat]
2019-07-18 17:22:49 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-07-18 17:22:49 -Stopping ProtocolHandler ["http-nio-8081"]
2019-07-18 17:22:49 -Destroying ProtocolHandler ["http-nio-8081"]
2019-07-18 17:22:49 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-18 17:22:49 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-07-18 17:22:49 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75ed9710: startup date [Thu Jul 18 17:21:53 CST 2019]; root of context hierarchy
2019-07-18 17:22:49 -Stopping beans in phase 2147483647
2019-07-18 17:22:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:22:49 -Stopping...
2019-07-18 17:22:49 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:22:49 -Stopped.
2019-07-18 17:22:50 -Unregistering JMX-exposed beans on shutdown
2019-07-18 17:22:50 -Unregistering JMX-exposed beans
2019-07-18 17:22:50 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-07-18 17:22:50 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-07-18 17:22:50 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-07-18 17:22:50 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-07-18 17:22:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-07-18 17:22:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:22:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-07-18 17:22:50 -Shutting down Quartz Scheduler
2019-07-18 17:25:35 -Starting BootdoApplication on PC-201905091110 with PID 8136 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:25:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:25:35 -The following profiles are active: dev
2019-07-18 17:25:36 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@476b0ae6: startup date [Thu Jul 18 17:25:36 CST 2019]; root of context hierarchy
2019-07-18 17:25:40 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:25:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a23f2b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$94985a15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:25:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:25:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:25:47 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:25:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:25:47 -Starting service [Tomcat]
2019-07-18 17:25:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:25:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:25:47 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:25:47 -Root WebApplicationContext: initialization completed in 11353 ms
2019-07-18 17:25:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:25:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:25:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:25:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:25:48 -Filter xssFilter was not registered (disabled)
2019-07-18 17:25:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:25:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:25:48 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:25:48 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:25:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@476b0ae6: startup date [Thu Jul 18 17:25:36 CST 2019]; root of context hierarchy
2019-07-18 17:25:53 -Using default implementation for ThreadExecutor
2019-07-18 17:25:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:25:53 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:25:53 -RAMJobStore initialized.
2019-07-18 17:25:53 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:25:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:25:53 -Quartz scheduler version: 2.3.0
2019-07-18 17:25:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4de93edd
2019-07-18 17:25:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:25:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:25:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:25:59 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:25:59 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:25:59 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:25:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:25:59 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:25:59 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:25:59 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:25:59 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:25:59 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:25:59 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:25:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:25:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:25:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:25:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:25:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:25:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:25:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:25:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:25:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:25:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:25:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:25:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:25:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:25:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:25:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:25:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:25:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:25:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:25:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:25:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:25:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:25:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:25:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:25:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:25:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:25:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:25:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:25:59 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:25:59 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:25:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:25:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:26:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:26:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:26:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:26:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:26:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:26:00 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:26:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:26:00 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:26:00 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:26:00 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:26:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:26:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:26:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:26:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:26:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:26:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:26:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:26:00 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:26:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:26:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:26:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:26:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:26:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:26:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:26:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:26:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:26:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:26:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:26:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:26:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:26:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:26:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:26:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:26:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:26:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:26:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:26:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:26:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:26:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:26:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:26:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:26:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:26:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:26:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:26:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:26:00 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:26:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:26:00 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:26:00 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:26:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:26:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:26:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:26:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:26:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:26:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:26:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:26:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:26:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@476b0ae6: startup date [Thu Jul 18 17:25:36 CST 2019]; root of context hierarchy
2019-07-18 17:26:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:26:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:26:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:26:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:26:06 -Registering beans for JMX exposure on startup
2019-07-18 17:26:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:26:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:26:06 -Starting beans in phase 2147483647
2019-07-18 17:26:06 -Context refreshed
2019-07-18 17:26:07 -Found 1 custom documentation plugin(s)
2019-07-18 17:26:07 -Scanning for api listing references
2019-07-18 17:26:08 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:26:08 -Generating unique operation named: addUsingGET_1
2019-07-18 17:26:08 -Generating unique operation named: editUsingGET_1
2019-07-18 17:26:08 -Generating unique operation named: listUsingGET_1
2019-07-18 17:26:08 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:26:08 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:26:08 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:26:08 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:26:08 -Generating unique operation named: addUsingGET_2
2019-07-18 17:26:08 -Generating unique operation named: editUsingGET_2
2019-07-18 17:26:08 -Generating unique operation named: listUsingGET_2
2019-07-18 17:26:08 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:26:08 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:26:08 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:26:08 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:26:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:26:08 -Generating unique operation named: addUsingGET_3
2019-07-18 17:26:09 -Generating unique operation named: editUsingGET_3
2019-07-18 17:26:09 -Generating unique operation named: listUsingGET_3
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:26:09 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:26:09 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:26:09 -Generating unique operation named: addUsingGET_4
2019-07-18 17:26:09 -Generating unique operation named: editUsingGET_4
2019-07-18 17:26:09 -Generating unique operation named: listUsingGET_4
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:26:09 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:26:09 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:26:09 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:26:09 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:26:09 -Generating unique operation named: addUsingGET_5
2019-07-18 17:26:09 -Generating unique operation named: editUsingGET_5
2019-07-18 17:26:09 -Generating unique operation named: listUsingGET_5
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:26:09 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:26:09 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:26:09 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:26:10 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:26:10 -Generating unique operation named: editUsingGET_6
2019-07-18 17:26:10 -Generating unique operation named: listUsingGET_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:26:10 -Generating unique operation named: addUsingGET_6
2019-07-18 17:26:10 -Generating unique operation named: editUsingGET_7
2019-07-18 17:26:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:26:10 -Generating unique operation named: listUsingGET_7
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:26:10 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:26:10 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:26:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:26:10 -Generating unique operation named: addUsingGET_7
2019-07-18 17:26:10 -Generating unique operation named: editUsingGET_8
2019-07-18 17:26:10 -Generating unique operation named: listUsingGET_8
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:26:10 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:26:10 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:26:10 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:26:10 -Generating unique operation named: addUsingGET_8
2019-07-18 17:26:10 -Generating unique operation named: editUsingGET_9
2019-07-18 17:26:10 -Generating unique operation named: listUsingGET_9
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:26:10 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:26:10 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:26:10 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:26:10 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:26:10 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:26:11 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:26:11 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:26:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:26:11 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:26:11 -Generating unique operation named: addUsingGET_9
2019-07-18 17:26:11 -Generating unique operation named: editUsingGET_10
2019-07-18 17:26:11 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:26:11 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:26:11 -Generating unique operation named: listUsingGET_10
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:26:11 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:26:11 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:26:11 -Generating unique operation named: listUsingGET_11
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:26:11 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:26:11 -Generating unique operation named: addUsingGET_10
2019-07-18 17:26:11 -Generating unique operation named: editUsingGET_11
2019-07-18 17:26:11 -Generating unique operation named: listUsingGET_12
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:26:11 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:26:11 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:26:11 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:26:11 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:26:11 -Generating unique operation named: addUsingGET_11
2019-07-18 17:26:11 -Generating unique operation named: editUsingGET_12
2019-07-18 17:26:11 -Generating unique operation named: listUsingGET_13
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:26:11 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:26:11 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:26:11 -Generating unique operation named: addUsingGET_12
2019-07-18 17:26:11 -Generating unique operation named: editUsingGET_13
2019-07-18 17:26:11 -Generating unique operation named: listUsingGET_14
2019-07-18 17:26:12 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:26:12 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:26:12 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:26:12 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:26:12 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:26:12 -Generating unique operation named: addUsingGET_13
2019-07-18 17:26:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:26:12 -Generating unique operation named: editUsingGET_14
2019-07-18 17:26:12 -Generating unique operation named: listUsingGET_15
2019-07-18 17:26:12 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:26:12 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:26:12 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:26:12 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:26:12 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:26:12 -Generating unique operation named: addUsingGET_14
2019-07-18 17:26:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:26:12 -Generating unique operation named: editUsingGET_15
2019-07-18 17:26:12 -Generating unique operation named: listUsingGET_16
2019-07-18 17:26:12 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:26:12 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:26:12 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:26:12 -Generating unique operation named: listUsingGET_17
2019-07-18 17:26:12 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:26:12 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:26:12 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:26:13 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:26:13 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:26:13 -Generating unique operation named: addUsingGET_15
2019-07-18 17:26:13 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:26:13 -Generating unique operation named: editUsingGET_16
2019-07-18 17:26:13 -Generating unique operation named: listUsingGET_18
2019-07-18 17:26:13 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:26:13 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:26:13 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:26:13 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:26:13 -Generating unique operation named: addUsingGET_16
2019-07-18 17:26:13 -Generating unique operation named: editUsingGET_17
2019-07-18 17:26:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:26:13 -Generating unique operation named: listUsingGET_19
2019-07-18 17:26:13 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:26:13 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:26:13 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:26:13 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:26:13 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:26:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:26:13 -Generating unique operation named: addUsingGET_17
2019-07-18 17:26:13 -Generating unique operation named: editUsingGET_18
2019-07-18 17:26:13 -Generating unique operation named: listUsingGET_20
2019-07-18 17:26:13 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:26:13 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:26:13 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:26:13 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:26:13 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:26:13 -Generating unique operation named: addUsingGET_18
2019-07-18 17:26:14 -Generating unique operation named: editUsingGET_19
2019-07-18 17:26:14 -Generating unique operation named: listUsingGET_21
2019-07-18 17:26:14 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:26:14 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:26:14 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:26:14 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:26:14 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:26:14 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:26:14 -Starting Quartz Scheduler now
2019-07-18 17:26:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:26:14 -Starting...
2019-07-18 17:26:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:26:14 -Started.
2019-07-18 17:26:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:26:14 -Using a shared selector for servlet write/read
2019-07-18 17:26:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 17:26:14 -Started BootdoApplication in 42.944 seconds (JVM running for 45.837)
2019-07-18 17:26:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 17:26:15 -==> Parameters: 
2019-07-18 17:26:15 -<==      Total: 1
2019-07-18 17:26:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 17:26:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 17:26:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 246 ms
2019-07-18 17:26:26 -Enabling session validation scheduler...
2019-07-18 17:26:27 -请求地址 : http://localhost:8081/login;JSESSIONID=220a3067-d787-4622-a1f3-4afc062f2e77
2019-07-18 17:26:27 -HTTP METHOD : GET
2019-07-18 17:26:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 17:26:27 -参数 : [{}]
2019-07-18 17:26:27 -耗时 : 11
2019-07-18 17:26:27 -返回值 : login
2019-07-18 17:26:32 -请求地址 : http://localhost:8081/getVerify
2019-07-18 17:26:32 -HTTP METHOD : GET
2019-07-18 17:26:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 17:26:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c77c08a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@26354500]
2019-07-18 17:26:46 -1708
2019-07-18 17:26:46 -耗时 : 13808
2019-07-18 17:26:46 -返回值 : null
2019-07-18 17:26:50 -请求地址 : http://localhost:8081/login
2019-07-18 17:26:50 -HTTP METHOD : POST
2019-07-18 17:26:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 17:26:50 -参数 : [admin, 111111, 1708, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3193dce6]
2019-07-18 17:26:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 17:26:51 -==> Parameters: admin(String)
2019-07-18 17:26:51 -<==      Total: 1
2019-07-18 17:26:51 -耗时 : 271
2019-07-18 17:26:51 -返回值 : {msg=操作成功, code=0}
2019-07-18 17:26:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 17:26:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:26:51 -==> Parameters: 1(Long), admin(String), 登录(String), 271(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 17:26:51.332(Timestamp)
2019-07-18 17:26:51 -<==    Updates: 1
2019-07-18 17:26:51 -请求地址 : http://localhost:8081/index
2019-07-18 17:26:51 -HTTP METHOD : GET
2019-07-18 17:26:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 17:26:51 -参数 : [{}]
2019-07-18 17:26:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 17:26:51 -==> Parameters: 1(Long)
2019-07-18 17:26:52 -<==      Total: 51
2019-07-18 17:26:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 17:26:52 -==> Parameters: 138(Long)
2019-07-18 17:26:52 -<==      Total: 1
2019-07-18 17:26:52 -耗时 : 386
2019-07-18 17:26:52 -返回值 : index_v1
2019-07-18 17:26:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:26:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 386(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 17:26:52.301(Timestamp)
2019-07-18 17:26:52 -<==    Updates: 1
2019-07-18 17:26:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 17:26:53 -HTTP METHOD : GET
2019-07-18 17:26:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 17:26:53 -参数 : []
2019-07-18 17:26:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 17:26:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 17:26:53 -请求地址 : http://localhost:8081/main
2019-07-18 17:26:53 -HTTP METHOD : GET
2019-07-18 17:26:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:26:53 -参数 : []
2019-07-18 17:26:53 -耗时 : 1
2019-07-18 17:26:53 -返回值 : main
2019-07-18 17:26:53 -请求地址 : http://localhost:8081/main
2019-07-18 17:26:53 -HTTP METHOD : GET
2019-07-18 17:26:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:26:53 -参数 : []
2019-07-18 17:26:53 -耗时 : 0
2019-07-18 17:26:53 -返回值 : main
2019-07-18 17:26:53 -<==      Total: 0
2019-07-18 17:26:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 17:26:53 -==> Parameters: 1(Long), 0(String)
2019-07-18 17:26:53 -<==      Total: 1
2019-07-18 17:26:53 -耗时 : 233
2019-07-18 17:26:53 -返回值 : com.bootdo.common.utils.PageUtils@3c1c9359
2019-07-18 17:26:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 17:26:59 -==> Parameters: 1(Long)
2019-07-18 17:26:59 -<==      Total: 95
2019-07-18 17:26:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 17:26:59 -HTTP METHOD : GET
2019-07-18 17:26:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 17:26:59 -参数 : []
2019-07-18 17:26:59 -耗时 : 1
2019-07-18 17:26:59 -返回值 : moneyList/moneyList
2019-07-18 17:27:02 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-07-18 17:27:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 17:27:05 -HTTP METHOD : GET
2019-07-18 17:27:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 17:27:05 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 17:27:05 -耗时 : 1
2019-07-18 17:27:05 -返回值 : system/dept/deptTree
2019-07-18 17:27:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 17:27:06 -HTTP METHOD : GET
2019-07-18 17:27:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 17:27:06 -参数 : []
2019-07-18 17:27:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 17:27:06 -==> Parameters: 
2019-07-18 17:27:06 -<==      Total: 3
2019-07-18 17:27:06 -耗时 : 191
2019-07-18 17:27:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 17:27:09 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:27:09 -HTTP METHOD : POST
2019-07-18 17:27:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:27:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6f113e3c]
2019-07-18 17:27:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:27:09 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:27:09 -<==      Total: 3
2019-07-18 17:27:09 -耗时 : 217
2019-07-18 17:27:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@336b0815, com.bootdo.moneyList.damain.MoneyListDO@4ec3d6c6, com.bootdo.moneyList.damain.MoneyListDO@73e15ed4]
2019-07-18 17:27:13 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:27:13 -HTTP METHOD : POST
2019-07-18 17:27:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:27:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77d248b5, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55bfd4b5]
2019-07-18 17:27:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:27:13 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:27:13 -<==      Total: 3
2019-07-18 17:27:26 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 17:27:26 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:27:26 -<==      Total: 1
2019-07-18 17:27:26 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 17:27:26 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:27:26 -<==      Total: 1
2019-07-18 17:27:26 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 17:27:26 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:27:26 -<==      Total: 0
2019-07-18 17:27:26 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:27:26 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:27:26 -<==    Updates: 1
2019-07-18 17:27:26 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:27:26 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 17:27:25.088(Timestamp), 2019-06(String), admin(String), 2019-07-18 17:27:26.057(Timestamp), admin(String), null
2019-07-18 17:27:26 -<==    Updates: 1
2019-07-18 17:27:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 17:27:26 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 17:27:25.088(Timestamp)
2019-07-18 17:27:26 -<==      Total: 1
2019-07-18 17:27:26 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 17:27:26 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 1100.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 17:27:26 -<==    Updates: 1
2019-07-18 17:27:26 -耗时 : 13238
2019-07-18 17:27:26 -返回值 : 1601
2019-07-18 17:27:30 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:27:30 -HTTP METHOD : POST
2019-07-18 17:27:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:27:30 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1ca1a116]
2019-07-18 17:27:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:27:30 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:27:30 -<==      Total: 3
2019-07-18 17:27:30 -耗时 : 41
2019-07-18 17:27:30 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@12000de9, com.bootdo.moneyList.damain.MoneyListDO@7261cec3, com.bootdo.moneyList.damain.MoneyListDO@63d97888]
2019-07-18 17:27:31 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 17:27:31 -HTTP METHOD : GET
2019-07-18 17:27:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 17:27:31 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@45be57bd, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@45be57bd, org.apache.shiro.web.servlet.ShiroHttpServletRequest@647cdab2]
2019-07-18 17:27:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 17:27:31 -==> Parameters: 1601(Long)
2019-07-18 17:27:31 -<==      Total: 1
2019-07-18 17:27:35 -null
java.lang.NullPointerException: null
	at com.bootdo.moneyList.controller.MoneyListController.printEdit(MoneyListController.java:382)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$b2549936.printEdit(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 17:27:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:27:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001(String), java.lang.NullPointerException(String), null, 2019-07-18 17:27:35.061(Timestamp)
2019-07-18 17:27:35 -<==    Updates: 1
2019-07-18 17:28:33 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:28:33 -HTTP METHOD : POST
2019-07-18 17:28:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:28:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5cbf7c30, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f0dd876]
2019-07-18 17:28:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:28:33 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:28:33 -<==      Total: 3
2019-07-18 17:34:32 -Starting BootdoApplication on PC-201905091110 with PID 2128 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:34:32 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:34:32 -The following profiles are active: dev
2019-07-18 17:34:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Thu Jul 18 17:34:32 CST 2019]; root of context hierarchy
2019-07-18 17:34:38 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:34:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3633af15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$288cddbc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:34:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:34:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:34:48 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:34:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:34:48 -Starting service [Tomcat]
2019-07-18 17:34:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:34:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:34:49 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:34:49 -Root WebApplicationContext: initialization completed in 16510 ms
2019-07-18 17:34:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:34:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:34:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:34:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:34:50 -Filter xssFilter was not registered (disabled)
2019-07-18 17:34:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:34:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:34:50 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:34:50 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:34:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Thu Jul 18 17:34:32 CST 2019]; root of context hierarchy
2019-07-18 17:34:57 -Using default implementation for ThreadExecutor
2019-07-18 17:34:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:34:57 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:34:57 -RAMJobStore initialized.
2019-07-18 17:34:57 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:34:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:34:57 -Quartz scheduler version: 2.3.0
2019-07-18 17:34:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@58ac0823
2019-07-18 17:34:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:34:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:35:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:35:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:35:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:35:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:35:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:35:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:02 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:35:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:35:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:35:02 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:35:03 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:35:03 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:35:03 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:35:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:35:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:35:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:35:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:35:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:35:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:35:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:35:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:35:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:35:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:35:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:35:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:35:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:35:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:35:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:35:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:35:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:35:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:35:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:35:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:35:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:35:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:35:03 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:35:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:35:03 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:35:03 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:35:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:03 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:35:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:35:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:35:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:35:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:35:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:35:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:35:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:35:03 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:35:03 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:35:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:35:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:35:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:35:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:35:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:35:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:35:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:35:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:35:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:35:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:35:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:35:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:35:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:35:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:35:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:35:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:35:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:35:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:35:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:35:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:35:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:35:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:35:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:35:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:35:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:35:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:35:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:35:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:35:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:35:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:35:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:35:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:35:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:35:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:35:04 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:35:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:35:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:35:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:35:04 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:35:04 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:35:04 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:35:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:35:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:35:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:35:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:35:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:35:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:35:05 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:35:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:35:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Thu Jul 18 17:34:32 CST 2019]; root of context hierarchy
2019-07-18 17:35:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:35:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:35:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:35:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:35:11 -Registering beans for JMX exposure on startup
2019-07-18 17:35:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:35:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:35:11 -Starting beans in phase 2147483647
2019-07-18 17:35:11 -Context refreshed
2019-07-18 17:35:12 -Found 1 custom documentation plugin(s)
2019-07-18 17:35:12 -Scanning for api listing references
2019-07-18 17:35:13 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:35:13 -Generating unique operation named: addUsingGET_1
2019-07-18 17:35:13 -Generating unique operation named: editUsingGET_1
2019-07-18 17:35:13 -Generating unique operation named: listUsingGET_1
2019-07-18 17:35:13 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:35:14 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:35:14 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:35:14 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:35:14 -Generating unique operation named: addUsingGET_2
2019-07-18 17:35:14 -Generating unique operation named: editUsingGET_2
2019-07-18 17:35:14 -Generating unique operation named: listUsingGET_2
2019-07-18 17:35:14 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:35:14 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:35:14 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:35:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:35:14 -Generating unique operation named: addUsingGET_3
2019-07-18 17:35:14 -Generating unique operation named: editUsingGET_3
2019-07-18 17:35:14 -Generating unique operation named: listUsingGET_3
2019-07-18 17:35:14 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:35:14 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:35:14 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:35:14 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:35:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:35:15 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:35:15 -Generating unique operation named: addUsingGET_4
2019-07-18 17:35:15 -Generating unique operation named: editUsingGET_4
2019-07-18 17:35:15 -Generating unique operation named: listUsingGET_4
2019-07-18 17:35:15 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:35:15 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:35:15 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:35:15 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:35:15 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:35:15 -Generating unique operation named: addUsingGET_5
2019-07-18 17:35:15 -Generating unique operation named: editUsingGET_5
2019-07-18 17:35:15 -Generating unique operation named: listUsingGET_5
2019-07-18 17:35:15 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:35:15 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:35:15 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:35:15 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:35:15 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:35:16 -Generating unique operation named: editUsingGET_6
2019-07-18 17:35:16 -Generating unique operation named: listUsingGET_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:35:16 -Generating unique operation named: addUsingGET_6
2019-07-18 17:35:16 -Generating unique operation named: editUsingGET_7
2019-07-18 17:35:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:35:16 -Generating unique operation named: listUsingGET_7
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:35:16 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:35:16 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:35:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:35:16 -Generating unique operation named: addUsingGET_7
2019-07-18 17:35:16 -Generating unique operation named: editUsingGET_8
2019-07-18 17:35:16 -Generating unique operation named: listUsingGET_8
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:35:16 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:35:16 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:35:16 -Generating unique operation named: addUsingGET_8
2019-07-18 17:35:16 -Generating unique operation named: editUsingGET_9
2019-07-18 17:35:16 -Generating unique operation named: listUsingGET_9
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:35:16 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:35:16 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:35:16 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:35:16 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:35:17 -Generating unique operation named: addUsingGET_9
2019-07-18 17:35:17 -Generating unique operation named: editUsingGET_10
2019-07-18 17:35:17 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:35:17 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:35:17 -Generating unique operation named: listUsingGET_10
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:35:17 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:35:17 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:35:17 -Generating unique operation named: listUsingGET_11
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:35:17 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:35:17 -Generating unique operation named: addUsingGET_10
2019-07-18 17:35:17 -Generating unique operation named: editUsingGET_11
2019-07-18 17:35:17 -Generating unique operation named: listUsingGET_12
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:35:17 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:35:17 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:35:17 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:35:17 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:35:17 -Generating unique operation named: addUsingGET_11
2019-07-18 17:35:17 -Generating unique operation named: editUsingGET_12
2019-07-18 17:35:17 -Generating unique operation named: listUsingGET_13
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:35:17 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:35:17 -Generating unique operation named: addUsingGET_12
2019-07-18 17:35:17 -Generating unique operation named: editUsingGET_13
2019-07-18 17:35:17 -Generating unique operation named: listUsingGET_14
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:35:17 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:35:17 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:35:17 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:35:17 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:35:18 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:35:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:35:18 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:35:18 -Generating unique operation named: addUsingGET_13
2019-07-18 17:35:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:35:18 -Generating unique operation named: editUsingGET_14
2019-07-18 17:35:18 -Generating unique operation named: listUsingGET_15
2019-07-18 17:35:18 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:35:18 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:35:18 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:35:18 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:35:18 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:35:18 -Generating unique operation named: addUsingGET_14
2019-07-18 17:35:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:35:18 -Generating unique operation named: editUsingGET_15
2019-07-18 17:35:18 -Generating unique operation named: listUsingGET_16
2019-07-18 17:35:18 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:35:18 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:35:18 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:35:18 -Generating unique operation named: listUsingGET_17
2019-07-18 17:35:18 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:35:18 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:35:18 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:35:18 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:35:19 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:35:19 -Generating unique operation named: addUsingGET_15
2019-07-18 17:35:19 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:35:19 -Generating unique operation named: editUsingGET_16
2019-07-18 17:35:19 -Generating unique operation named: listUsingGET_18
2019-07-18 17:35:19 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:35:19 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:35:19 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:35:19 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:35:19 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:35:19 -Generating unique operation named: addUsingGET_16
2019-07-18 17:35:19 -Generating unique operation named: editUsingGET_17
2019-07-18 17:35:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:35:19 -Generating unique operation named: listUsingGET_19
2019-07-18 17:35:19 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:35:19 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:35:19 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:35:19 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:35:19 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:35:19 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:35:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:35:19 -Generating unique operation named: addUsingGET_17
2019-07-18 17:35:19 -Generating unique operation named: editUsingGET_18
2019-07-18 17:35:19 -Generating unique operation named: listUsingGET_20
2019-07-18 17:35:19 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:35:19 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:35:19 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:35:19 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:35:19 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:35:20 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:35:20 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:35:20 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:35:20 -Generating unique operation named: addUsingGET_18
2019-07-18 17:35:20 -Generating unique operation named: editUsingGET_19
2019-07-18 17:35:20 -Generating unique operation named: listUsingGET_21
2019-07-18 17:35:20 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:35:20 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:35:20 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:35:20 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:35:20 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:35:20 -Starting Quartz Scheduler now
2019-07-18 17:35:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:35:20 -Starting...
2019-07-18 17:35:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:35:20 -Started.
2019-07-18 17:35:20 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:35:20 -Using a shared selector for servlet write/read
2019-07-18 17:35:20 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 17:35:20 -Started BootdoApplication in 51.55 seconds (JVM running for 53.976)
2019-07-18 17:35:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 17:35:21 -==> Parameters: 
2019-07-18 17:35:21 -<==      Total: 1
2019-07-18 17:35:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 17:35:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 17:35:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 128 ms
2019-07-18 17:35:36 -Enabling session validation scheduler...
2019-07-18 17:35:37 -请求地址 : http://localhost:8081/login;JSESSIONID=c2fff59f-aada-46c6-acab-871ad16e7168
2019-07-18 17:35:37 -HTTP METHOD : GET
2019-07-18 17:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 17:35:37 -参数 : [{}]
2019-07-18 17:35:37 -耗时 : 6
2019-07-18 17:35:37 -返回值 : login
2019-07-18 17:35:39 -请求地址 : http://localhost:8081/getVerify
2019-07-18 17:35:39 -HTTP METHOD : GET
2019-07-18 17:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 17:35:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f9cec8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@46ca27a5]
2019-07-18 17:35:44 -7751
2019-07-18 17:35:44 -耗时 : 4505
2019-07-18 17:35:44 -返回值 : null
2019-07-18 17:35:57 -请求地址 : http://localhost:8081/login
2019-07-18 17:35:57 -HTTP METHOD : POST
2019-07-18 17:35:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 17:35:57 -参数 : [admin, 111111, 7751, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5071d391]
2019-07-18 17:35:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 17:35:58 -==> Parameters: admin(String)
2019-07-18 17:35:58 -<==      Total: 1
2019-07-18 17:35:58 -耗时 : 245
2019-07-18 17:35:58 -返回值 : {msg=操作成功, code=0}
2019-07-18 17:35:58 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 17:35:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:35:58 -==> Parameters: 1(Long), admin(String), 登录(String), 245(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 17:35:58.237(Timestamp)
2019-07-18 17:35:58 -请求地址 : http://localhost:8081/index
2019-07-18 17:35:58 -HTTP METHOD : GET
2019-07-18 17:35:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 17:35:58 -参数 : [{}]
2019-07-18 17:35:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 17:35:58 -<==    Updates: 1
2019-07-18 17:35:58 -==> Parameters: 1(Long)
2019-07-18 17:35:58 -<==      Total: 51
2019-07-18 17:35:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 17:35:58 -==> Parameters: 138(Long)
2019-07-18 17:35:58 -<==      Total: 1
2019-07-18 17:35:58 -耗时 : 381
2019-07-18 17:35:58 -返回值 : index_v1
2019-07-18 17:35:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:35:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 382(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 17:35:58.926(Timestamp)
2019-07-18 17:35:59 -<==    Updates: 1
2019-07-18 17:35:59 -请求地址 : http://localhost:8081/main
2019-07-18 17:35:59 -HTTP METHOD : GET
2019-07-18 17:35:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:35:59 -参数 : []
2019-07-18 17:35:59 -耗时 : 0
2019-07-18 17:35:59 -返回值 : main
2019-07-18 17:35:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 17:35:59 -HTTP METHOD : GET
2019-07-18 17:35:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 17:35:59 -参数 : []
2019-07-18 17:35:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 17:35:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 17:35:59 -请求地址 : http://localhost:8081/main
2019-07-18 17:35:59 -HTTP METHOD : GET
2019-07-18 17:35:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:35:59 -参数 : []
2019-07-18 17:35:59 -耗时 : 0
2019-07-18 17:35:59 -返回值 : main
2019-07-18 17:36:00 -<==      Total: 0
2019-07-18 17:36:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 17:36:00 -==> Parameters: 1(Long), 0(String)
2019-07-18 17:36:00 -<==      Total: 1
2019-07-18 17:36:00 -耗时 : 341
2019-07-18 17:36:00 -返回值 : com.bootdo.common.utils.PageUtils@5925f66e
2019-07-18 17:36:05 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-07-18 17:36:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 17:36:15 -==> Parameters: 1(Long)
2019-07-18 17:36:15 -<==      Total: 95
2019-07-18 17:36:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 17:36:15 -HTTP METHOD : GET
2019-07-18 17:36:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 17:36:15 -参数 : []
2019-07-18 17:36:15 -耗时 : 0
2019-07-18 17:36:15 -返回值 : moneyList/moneyList
2019-07-18 17:36:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 17:36:23 -HTTP METHOD : GET
2019-07-18 17:36:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 17:36:23 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 17:36:23 -耗时 : 4
2019-07-18 17:36:23 -返回值 : system/dept/deptTree
2019-07-18 17:36:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 17:36:24 -HTTP METHOD : GET
2019-07-18 17:36:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 17:36:24 -参数 : []
2019-07-18 17:36:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 17:36:24 -==> Parameters: 
2019-07-18 17:36:24 -<==      Total: 3
2019-07-18 17:36:24 -耗时 : 44
2019-07-18 17:36:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 17:36:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:36:27 -HTTP METHOD : POST
2019-07-18 17:36:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:36:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@608e196c]
2019-07-18 17:36:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:36:28 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:36:28 -<==      Total: 3
2019-07-18 17:36:28 -耗时 : 189
2019-07-18 17:36:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3e6bf8a0, com.bootdo.moneyList.damain.MoneyListDO@5d07b770, com.bootdo.moneyList.damain.MoneyListDO@2aec19f4]
2019-07-18 17:36:32 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:36:32 -HTTP METHOD : POST
2019-07-18 17:36:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:36:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@32db61b1, org.apache.shiro.web.servlet.ShiroHttpServletRequest@270dddf9]
2019-07-18 17:36:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:36:32 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:36:32 -<==      Total: 3
2019-07-18 17:36:48 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 17:36:48 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:36:48 -<==      Total: 1
2019-07-18 17:36:48 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 17:36:48 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:36:48 -<==      Total: 1
2019-07-18 17:36:48 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 17:36:48 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:36:48 -<==      Total: 0
2019-07-18 17:36:48 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:36:48 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:36:48 -<==    Updates: 1
2019-07-18 17:36:48 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:36:48 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 17:36:44.879(Timestamp), 2019-06(String), admin(String), 2019-07-18 17:36:48.193(Timestamp), admin(String), null
2019-07-18 17:36:48 -<==    Updates: 1
2019-07-18 17:36:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 17:36:48 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 17:36:44.879(Timestamp)
2019-07-18 17:36:48 -<==      Total: 1
2019-07-18 17:36:48 -==>  Preparing: update print SET `user_name` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ? where id = ? 
2019-07-18 17:36:48 -==> Parameters: 李文英(String), 3.50(BigDecimal), 48.44(BigDecimal), 169.54(BigDecimal), 1150.57(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 17:36:48 -<==    Updates: 1
2019-07-18 17:36:48 -耗时 : 15764
2019-07-18 17:36:48 -返回值 : 1601
2019-07-18 17:36:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:36:53 -HTTP METHOD : POST
2019-07-18 17:36:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:36:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@54a8085a]
2019-07-18 17:36:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:36:53 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:36:54 -<==      Total: 3
2019-07-18 17:36:54 -耗时 : 41
2019-07-18 17:36:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2c782015, com.bootdo.moneyList.damain.MoneyListDO@10566226, com.bootdo.moneyList.damain.MoneyListDO@42842ae]
2019-07-18 17:36:54 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 17:36:54 -HTTP METHOD : GET
2019-07-18 17:36:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 17:36:54 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@48796c0a, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@48796c0a, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f786e15]
2019-07-18 17:36:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 17:36:54 -==> Parameters: 1601(Long)
2019-07-18 17:36:54 -<==      Total: 1
2019-07-18 17:36:59 -耗时 : 4172
2019-07-18 17:36:59 -返回值 : moneyList/moneyPrint
2019-07-18 17:46:23 -Starting BootdoApplication on PC-201905091110 with PID 4820 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:46:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:46:23 -The following profiles are active: dev
2019-07-18 17:46:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b968a76: startup date [Thu Jul 18 17:46:23 CST 2019]; root of context hierarchy
2019-07-18 17:46:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:46:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6045f7af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$529f2656] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:46:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:46:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:46:36 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:46:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:46:37 -Starting service [Tomcat]
2019-07-18 17:46:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:46:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:46:37 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:46:37 -Root WebApplicationContext: initialization completed in 13842 ms
2019-07-18 17:46:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:46:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:46:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:46:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:46:38 -Filter xssFilter was not registered (disabled)
2019-07-18 17:46:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:46:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:46:38 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:46:38 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:46:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b968a76: startup date [Thu Jul 18 17:46:23 CST 2019]; root of context hierarchy
2019-07-18 17:46:44 -Using default implementation for ThreadExecutor
2019-07-18 17:46:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:46:44 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:46:44 -RAMJobStore initialized.
2019-07-18 17:46:44 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:46:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:46:44 -Quartz scheduler version: 2.3.0
2019-07-18 17:46:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@239d73ff
2019-07-18 17:46:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:46:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:46:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:46:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:46:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:46:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:46:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:46:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:46:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:46:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:46:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:46:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:46:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:46:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:46:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:46:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:46:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:46:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:46:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:46:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:46:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:46:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:46:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:46:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:46:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:46:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:46:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:46:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:46:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:46:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:46:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:46:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:46:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:46:50 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:46:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:46:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:46:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:46:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:46:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:46:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:46:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:46:50 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:46:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:46:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:46:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:46:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:46:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:46:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:46:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:46:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:46:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:46:50 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:46:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:46:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:46:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:46:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:46:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:46:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:46:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:46:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:46:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:46:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:46:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:46:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:46:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:46:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:46:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:46:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:46:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:46:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:46:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:46:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:46:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:46:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:46:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:46:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:46:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:46:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:46:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:46:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:46:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:46:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:46:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:46:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:46:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:46:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:46:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:46:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:46:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:46:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:46:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b968a76: startup date [Thu Jul 18 17:46:23 CST 2019]; root of context hierarchy
2019-07-18 17:46:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:46:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:46:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:46:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:46:56 -Registering beans for JMX exposure on startup
2019-07-18 17:46:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:46:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:46:56 -Starting beans in phase 2147483647
2019-07-18 17:46:56 -Context refreshed
2019-07-18 17:46:57 -Found 1 custom documentation plugin(s)
2019-07-18 17:46:57 -Scanning for api listing references
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:46:58 -Generating unique operation named: addUsingGET_1
2019-07-18 17:46:58 -Generating unique operation named: editUsingGET_1
2019-07-18 17:46:58 -Generating unique operation named: listUsingGET_1
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:46:58 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:46:58 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:46:58 -Generating unique operation named: addUsingGET_2
2019-07-18 17:46:58 -Generating unique operation named: editUsingGET_2
2019-07-18 17:46:58 -Generating unique operation named: listUsingGET_2
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:46:58 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:46:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:46:58 -Generating unique operation named: addUsingGET_3
2019-07-18 17:46:58 -Generating unique operation named: editUsingGET_3
2019-07-18 17:46:58 -Generating unique operation named: listUsingGET_3
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:46:58 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:46:58 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:46:58 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:46:58 -Generating unique operation named: addUsingGET_4
2019-07-18 17:46:58 -Generating unique operation named: editUsingGET_4
2019-07-18 17:46:58 -Generating unique operation named: listUsingGET_4
2019-07-18 17:46:58 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:46:59 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:46:59 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:46:59 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:46:59 -Generating unique operation named: addUsingGET_5
2019-07-18 17:46:59 -Generating unique operation named: editUsingGET_5
2019-07-18 17:46:59 -Generating unique operation named: listUsingGET_5
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:46:59 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:46:59 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:46:59 -Generating unique operation named: editUsingGET_6
2019-07-18 17:46:59 -Generating unique operation named: listUsingGET_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:46:59 -Generating unique operation named: addUsingGET_6
2019-07-18 17:46:59 -Generating unique operation named: editUsingGET_7
2019-07-18 17:46:59 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:46:59 -Generating unique operation named: listUsingGET_7
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:46:59 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:46:59 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:46:59 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:46:59 -Generating unique operation named: addUsingGET_7
2019-07-18 17:46:59 -Generating unique operation named: editUsingGET_8
2019-07-18 17:46:59 -Generating unique operation named: listUsingGET_8
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:46:59 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:46:59 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:46:59 -Generating unique operation named: addUsingGET_8
2019-07-18 17:46:59 -Generating unique operation named: editUsingGET_9
2019-07-18 17:46:59 -Generating unique operation named: listUsingGET_9
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:46:59 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:46:59 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:46:59 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:46:59 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:47:00 -Generating unique operation named: addUsingGET_9
2019-07-18 17:47:00 -Generating unique operation named: editUsingGET_10
2019-07-18 17:47:00 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:47:00 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:47:00 -Generating unique operation named: listUsingGET_10
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:47:00 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:47:00 -Generating unique operation named: listUsingGET_11
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:47:00 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:47:00 -Generating unique operation named: addUsingGET_10
2019-07-18 17:47:00 -Generating unique operation named: editUsingGET_11
2019-07-18 17:47:00 -Generating unique operation named: listUsingGET_12
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:47:00 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:47:00 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:47:00 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:47:00 -Generating unique operation named: addUsingGET_11
2019-07-18 17:47:00 -Generating unique operation named: editUsingGET_12
2019-07-18 17:47:00 -Generating unique operation named: listUsingGET_13
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:47:00 -Generating unique operation named: addUsingGET_12
2019-07-18 17:47:00 -Generating unique operation named: editUsingGET_13
2019-07-18 17:47:00 -Generating unique operation named: listUsingGET_14
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:47:00 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:47:00 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:47:00 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:47:00 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:47:00 -Generating unique operation named: addUsingGET_13
2019-07-18 17:47:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:47:01 -Generating unique operation named: editUsingGET_14
2019-07-18 17:47:01 -Generating unique operation named: listUsingGET_15
2019-07-18 17:47:01 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:47:01 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:47:01 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:47:01 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:47:01 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:47:01 -Generating unique operation named: addUsingGET_14
2019-07-18 17:47:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:47:01 -Generating unique operation named: editUsingGET_15
2019-07-18 17:47:01 -Generating unique operation named: listUsingGET_16
2019-07-18 17:47:01 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:47:01 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:47:01 -Generating unique operation named: listUsingGET_17
2019-07-18 17:47:01 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:47:01 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:47:01 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:47:01 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:47:01 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:47:01 -Generating unique operation named: addUsingGET_15
2019-07-18 17:47:01 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:47:01 -Generating unique operation named: editUsingGET_16
2019-07-18 17:47:01 -Generating unique operation named: listUsingGET_18
2019-07-18 17:47:01 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:47:01 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:47:01 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:47:01 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:47:01 -Generating unique operation named: addUsingGET_16
2019-07-18 17:47:01 -Generating unique operation named: editUsingGET_17
2019-07-18 17:47:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:47:01 -Generating unique operation named: listUsingGET_19
2019-07-18 17:47:01 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:47:01 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:47:01 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:47:01 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:47:01 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:47:01 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:47:02 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:47:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:47:02 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:47:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:47:02 -Generating unique operation named: addUsingGET_17
2019-07-18 17:47:02 -Generating unique operation named: editUsingGET_18
2019-07-18 17:47:02 -Generating unique operation named: listUsingGET_20
2019-07-18 17:47:02 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:47:02 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:47:02 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:47:02 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:47:02 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:47:02 -Generating unique operation named: addUsingGET_18
2019-07-18 17:47:02 -Generating unique operation named: editUsingGET_19
2019-07-18 17:47:02 -Generating unique operation named: listUsingGET_21
2019-07-18 17:47:02 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:47:02 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:47:02 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:47:02 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:47:02 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:47:02 -Starting Quartz Scheduler now
2019-07-18 17:47:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:47:02 -Starting...
2019-07-18 17:47:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:47:02 -Started.
2019-07-18 17:47:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:47:02 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-07-18 17:47:02 -Pausing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:47:02 -Stopping service [Tomcat]
2019-07-18 17:47:02 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-07-18 17:47:02 -Stopping ProtocolHandler ["http-nio-8081"]
2019-07-18 17:47:02 -Destroying ProtocolHandler ["http-nio-8081"]
2019-07-18 17:47:02 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-18 17:47:02 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-07-18 17:47:02 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b968a76: startup date [Thu Jul 18 17:46:23 CST 2019]; root of context hierarchy
2019-07-18 17:47:02 -Stopping beans in phase 2147483647
2019-07-18 17:47:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:47:02 -Stopping...
2019-07-18 17:47:02 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:47:02 -Stopped.
2019-07-18 17:47:02 -Unregistering JMX-exposed beans on shutdown
2019-07-18 17:47:02 -Unregistering JMX-exposed beans
2019-07-18 17:47:02 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-07-18 17:47:02 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-07-18 17:47:02 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-07-18 17:47:02 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-07-18 17:47:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-07-18 17:47:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-18 17:47:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-07-18 17:47:02 -Shutting down Quartz Scheduler
2019-07-18 17:49:57 -Starting BootdoApplication on PC-201905091110 with PID 3104 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:49:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:49:57 -The following profiles are active: dev
2019-07-18 17:49:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Thu Jul 18 17:49:57 CST 2019]; root of context hierarchy
2019-07-18 17:50:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:50:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$36ca298d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$29235834] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:50:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:50:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:50:08 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:50:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:50:08 -Starting service [Tomcat]
2019-07-18 17:50:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:50:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:50:08 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:50:08 -Root WebApplicationContext: initialization completed in 11485 ms
2019-07-18 17:50:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:50:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:50:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:50:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:50:09 -Filter xssFilter was not registered (disabled)
2019-07-18 17:50:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:50:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:50:09 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:50:09 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:50:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Thu Jul 18 17:49:57 CST 2019]; root of context hierarchy
2019-07-18 17:50:14 -Using default implementation for ThreadExecutor
2019-07-18 17:50:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:50:14 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:50:14 -RAMJobStore initialized.
2019-07-18 17:50:14 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:50:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:50:14 -Quartz scheduler version: 2.3.0
2019-07-18 17:50:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@23954300
2019-07-18 17:50:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 17:50:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 17:50:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 17:50:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 17:50:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 17:50:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 17:50:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 17:50:18 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 17:50:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 17:50:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 17:50:18 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 17:50:18 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 17:50:18 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 17:50:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 17:50:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 17:50:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 17:50:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 17:50:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 17:50:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:50:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 17:50:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 17:50:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 17:50:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 17:50:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 17:50:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 17:50:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 17:50:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 17:50:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 17:50:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 17:50:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 17:50:19 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 17:50:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 17:50:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 17:50:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 17:50:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 17:50:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 17:50:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:50:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 17:50:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 17:50:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 17:50:19 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 17:50:19 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 17:50:19 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 17:50:19 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 17:50:19 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 17:50:19 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 17:50:19 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 17:50:19 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 17:50:19 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:19 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 17:50:19 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 17:50:19 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 17:50:19 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 17:50:19 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 17:50:19 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 17:50:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 17:50:19 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:19 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 17:50:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 17:50:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 17:50:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 17:50:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 17:50:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 17:50:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 17:50:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 17:50:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 17:50:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 17:50:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 17:50:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 17:50:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 17:50:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 17:50:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 17:50:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 17:50:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 17:50:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:50:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 17:50:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 17:50:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 17:50:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 17:50:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 17:50:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 17:50:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 17:50:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 17:50:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:20 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 17:50:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 17:50:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 17:50:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 17:50:20 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 17:50:20 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 17:50:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 17:50:20 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 17:50:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 17:50:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 17:50:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 17:50:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 17:50:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 17:50:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 17:50:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 17:50:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:50:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52045dbe: startup date [Thu Jul 18 17:49:57 CST 2019]; root of context hierarchy
2019-07-18 17:50:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:50:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 17:50:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 17:50:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 17:50:24 -Registering beans for JMX exposure on startup
2019-07-18 17:50:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 17:50:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 17:50:24 -Starting beans in phase 2147483647
2019-07-18 17:50:24 -Context refreshed
2019-07-18 17:50:25 -Found 1 custom documentation plugin(s)
2019-07-18 17:50:25 -Scanning for api listing references
2019-07-18 17:50:25 -Generating unique operation named: removeUsingPOST_1
2019-07-18 17:50:25 -Generating unique operation named: addUsingGET_1
2019-07-18 17:50:25 -Generating unique operation named: editUsingGET_1
2019-07-18 17:50:26 -Generating unique operation named: listUsingGET_1
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_2
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_3
2019-07-18 17:50:26 -Generating unique operation named: saveUsingPOST_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingGET_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPOST_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPUT_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 17:50:26 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 17:50:26 -Generating unique operation named: addUsingGET_2
2019-07-18 17:50:26 -Generating unique operation named: editUsingGET_2
2019-07-18 17:50:26 -Generating unique operation named: listUsingGET_2
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_4
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_5
2019-07-18 17:50:26 -Generating unique operation named: saveUsingPOST_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPOST_2
2019-07-18 17:50:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 17:50:26 -Generating unique operation named: addUsingGET_3
2019-07-18 17:50:26 -Generating unique operation named: editUsingGET_3
2019-07-18 17:50:26 -Generating unique operation named: listUsingGET_3
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_6
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_7
2019-07-18 17:50:26 -Generating unique operation named: saveUsingPOST_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingGET_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPOST_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPUT_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 17:50:26 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 17:50:26 -Generating unique operation named: addUsingGET_4
2019-07-18 17:50:26 -Generating unique operation named: editUsingGET_4
2019-07-18 17:50:26 -Generating unique operation named: listUsingGET_4
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_8
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_9
2019-07-18 17:50:26 -Generating unique operation named: saveUsingPOST_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingGET_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPOST_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPUT_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 17:50:26 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 17:50:26 -Generating unique operation named: ElecUsingGET_1
2019-07-18 17:50:26 -Generating unique operation named: addUsingGET_5
2019-07-18 17:50:26 -Generating unique operation named: editUsingGET_5
2019-07-18 17:50:26 -Generating unique operation named: listUsingGET_5
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_10
2019-07-18 17:50:26 -Generating unique operation named: removeUsingPOST_11
2019-07-18 17:50:26 -Generating unique operation named: saveUsingPOST_5
2019-07-18 17:50:26 -Generating unique operation named: updateUsingGET_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPOST_5
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPUT_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 17:50:26 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 17:50:27 -Generating unique operation named: editUsingGET_6
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPOST_6
2019-07-18 17:50:27 -Generating unique operation named: addUsingGET_6
2019-07-18 17:50:27 -Generating unique operation named: editUsingGET_7
2019-07-18 17:50:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_7
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_12
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_13
2019-07-18 17:50:27 -Generating unique operation named: saveUsingPOST_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingGET_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPOST_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPUT_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 17:50:27 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 17:50:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 17:50:27 -Generating unique operation named: addUsingGET_7
2019-07-18 17:50:27 -Generating unique operation named: editUsingGET_8
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_8
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_14
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_15
2019-07-18 17:50:27 -Generating unique operation named: saveUsingPOST_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingGET_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPOST_8
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPUT_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 17:50:27 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 17:50:27 -Generating unique operation named: addUsingGET_8
2019-07-18 17:50:27 -Generating unique operation named: editUsingGET_9
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_9
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_16
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_17
2019-07-18 17:50:27 -Generating unique operation named: saveUsingPOST_8
2019-07-18 17:50:27 -Generating unique operation named: updateUsingGET_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPOST_9
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPUT_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 17:50:27 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 17:50:27 -Generating unique operation named: addUsingGET_9
2019-07-18 17:50:27 -Generating unique operation named: editUsingGET_10
2019-07-18 17:50:27 -Generating unique operation named: infoUsingGET_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingPOST_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingPUT_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 17:50:27 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_10
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_18
2019-07-18 17:50:27 -Generating unique operation named: removeUsingPOST_19
2019-07-18 17:50:27 -Generating unique operation named: saveUsingPOST_9
2019-07-18 17:50:27 -Generating unique operation named: updateUsingPOST_10
2019-07-18 17:50:27 -Generating unique operation named: listUsingGET_11
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_20
2019-07-18 17:50:28 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 17:50:28 -Generating unique operation named: addUsingGET_10
2019-07-18 17:50:28 -Generating unique operation named: editUsingGET_11
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_12
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_21
2019-07-18 17:50:28 -Generating unique operation named: saveUsingPOST_10
2019-07-18 17:50:28 -Generating unique operation named: treeUsingGET_1
2019-07-18 17:50:28 -Generating unique operation named: treeUsingGET_2
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPOST_11
2019-07-18 17:50:28 -Generating unique operation named: addUsingGET_11
2019-07-18 17:50:28 -Generating unique operation named: editUsingGET_12
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_13
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_22
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_23
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPOST_12
2019-07-18 17:50:28 -Generating unique operation named: addUsingGET_12
2019-07-18 17:50:28 -Generating unique operation named: editUsingGET_13
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_14
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_24
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_25
2019-07-18 17:50:28 -Generating unique operation named: saveUsingPOST_11
2019-07-18 17:50:28 -Generating unique operation named: updateUsingGET_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPOST_13
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPUT_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 17:50:28 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 17:50:28 -Generating unique operation named: addUsingGET_13
2019-07-18 17:50:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 17:50:28 -Generating unique operation named: editUsingGET_14
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_15
2019-07-18 17:50:28 -Generating unique operation named: printEditUsingGET_1
2019-07-18 17:50:28 -Generating unique operation named: removeUsingPOST_26
2019-07-18 17:50:28 -Generating unique operation named: saveUsingPOST_12
2019-07-18 17:50:28 -Generating unique operation named: updateUsingGET_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPOST_14
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPUT_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 17:50:28 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 17:50:28 -Generating unique operation named: addUsingGET_14
2019-07-18 17:50:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 17:50:28 -Generating unique operation named: editUsingGET_15
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_16
2019-07-18 17:50:28 -Generating unique operation named: saveUsingPOST_13
2019-07-18 17:50:28 -Generating unique operation named: saveUsingPOST_14
2019-07-18 17:50:28 -Generating unique operation named: updateUsingPOST_15
2019-07-18 17:50:28 -Generating unique operation named: listUsingGET_17
2019-07-18 17:50:28 -Generating unique operation named: listUsingHEAD_1
2019-07-18 17:50:28 -Generating unique operation named: listUsingPOST_1
2019-07-18 17:50:28 -Generating unique operation named: listUsingPUT_1
2019-07-18 17:50:28 -Generating unique operation named: listUsingPATCH_1
2019-07-18 17:50:28 -Generating unique operation named: listUsingDELETE_1
2019-07-18 17:50:29 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 17:50:29 -Generating unique operation named: listUsingTRACE_1
2019-07-18 17:50:29 -Generating unique operation named: countDDUsingGET_1
2019-07-18 17:50:29 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 17:50:29 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 17:50:29 -Generating unique operation named: addUsingGET_15
2019-07-18 17:50:29 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 17:50:29 -Generating unique operation named: editUsingGET_16
2019-07-18 17:50:29 -Generating unique operation named: listUsingGET_18
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_27
2019-07-18 17:50:29 -Generating unique operation named: saveUsingPOST_15
2019-07-18 17:50:29 -Generating unique operation named: treeUsingGET_3
2019-07-18 17:50:29 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPOST_16
2019-07-18 17:50:29 -Generating unique operation named: addUsingGET_16
2019-07-18 17:50:29 -Generating unique operation named: editUsingGET_17
2019-07-18 17:50:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 17:50:29 -Generating unique operation named: listUsingGET_19
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_28
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_29
2019-07-18 17:50:29 -Generating unique operation named: saveUsingPOST_16
2019-07-18 17:50:29 -Generating unique operation named: updateUsingGET_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPOST_17
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPUT_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 17:50:29 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 17:50:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 17:50:29 -Generating unique operation named: addUsingGET_17
2019-07-18 17:50:29 -Generating unique operation named: editUsingGET_18
2019-07-18 17:50:29 -Generating unique operation named: listUsingGET_20
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_30
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_31
2019-07-18 17:50:29 -Generating unique operation named: saveUsingPOST_17
2019-07-18 17:50:29 -Generating unique operation named: updateUsingGET_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPOST_18
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPUT_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 17:50:29 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 17:50:29 -Generating unique operation named: addUsingGET_18
2019-07-18 17:50:29 -Generating unique operation named: editUsingGET_19
2019-07-18 17:50:29 -Generating unique operation named: listUsingGET_21
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_32
2019-07-18 17:50:29 -Generating unique operation named: removeUsingPOST_33
2019-07-18 17:50:29 -Generating unique operation named: saveUsingPOST_18
2019-07-18 17:50:29 -Generating unique operation named: updateUsingGET_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPOST_19
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPUT_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 17:50:29 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 17:50:29 -Starting Quartz Scheduler now
2019-07-18 17:50:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 17:50:29 -Starting...
2019-07-18 17:50:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 17:50:29 -Started.
2019-07-18 17:50:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 17:50:30 -Using a shared selector for servlet write/read
2019-07-18 17:50:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 17:50:30 -Started BootdoApplication in 35.76 seconds (JVM running for 37.46)
2019-07-18 17:50:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 17:50:30 -==> Parameters: 
2019-07-18 17:50:31 -<==      Total: 1
2019-07-18 17:50:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 17:50:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 17:50:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
2019-07-18 17:50:40 -Enabling session validation scheduler...
2019-07-18 17:50:40 -请求地址 : http://localhost:8081/login;JSESSIONID=1acd8bfa-70ac-41d9-b021-5d9052c0a7fb
2019-07-18 17:50:40 -HTTP METHOD : GET
2019-07-18 17:50:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 17:50:40 -参数 : [{}]
2019-07-18 17:50:40 -耗时 : 5
2019-07-18 17:50:40 -返回值 : login
2019-07-18 17:50:43 -请求地址 : http://localhost:8081/getVerify
2019-07-18 17:50:43 -HTTP METHOD : GET
2019-07-18 17:50:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 17:50:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5657dff7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@26ce4cd4]
2019-07-18 17:50:49 -3032
2019-07-18 17:50:49 -耗时 : 6400
2019-07-18 17:50:49 -返回值 : null
2019-07-18 17:50:54 -请求地址 : http://localhost:8081/login
2019-07-18 17:50:54 -HTTP METHOD : POST
2019-07-18 17:50:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 17:50:54 -参数 : [admin, 111111, 3032, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d2b24a2]
2019-07-18 17:50:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 17:50:54 -==> Parameters: admin(String)
2019-07-18 17:50:54 -<==      Total: 1
2019-07-18 17:50:54 -耗时 : 93
2019-07-18 17:50:54 -返回值 : {msg=操作成功, code=0}
2019-07-18 17:50:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 17:50:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:50:55 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 17:50:54.989(Timestamp)
2019-07-18 17:50:55 -<==    Updates: 1
2019-07-18 17:50:55 -请求地址 : http://localhost:8081/index
2019-07-18 17:50:55 -HTTP METHOD : GET
2019-07-18 17:50:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 17:50:55 -参数 : [{}]
2019-07-18 17:50:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 17:50:55 -==> Parameters: 1(Long)
2019-07-18 17:50:55 -<==      Total: 51
2019-07-18 17:50:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 17:50:55 -==> Parameters: 138(Long)
2019-07-18 17:50:55 -<==      Total: 1
2019-07-18 17:50:55 -耗时 : 251
2019-07-18 17:50:55 -返回值 : index_v1
2019-07-18 17:50:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:50:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 252(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 17:50:55.569(Timestamp)
2019-07-18 17:50:55 -<==    Updates: 1
2019-07-18 17:50:55 -请求地址 : http://localhost:8081/main
2019-07-18 17:50:55 -HTTP METHOD : GET
2019-07-18 17:50:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:50:55 -参数 : []
2019-07-18 17:50:55 -耗时 : 0
2019-07-18 17:50:55 -返回值 : main
2019-07-18 17:50:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 17:50:56 -HTTP METHOD : GET
2019-07-18 17:50:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 17:50:56 -参数 : []
2019-07-18 17:50:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 17:50:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 17:50:56 -<==      Total: 0
2019-07-18 17:50:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 17:50:56 -==> Parameters: 1(Long), 0(String)
2019-07-18 17:50:56 -<==      Total: 1
2019-07-18 17:50:56 -耗时 : 38
2019-07-18 17:50:56 -返回值 : com.bootdo.common.utils.PageUtils@198fb562
2019-07-18 17:50:56 -请求地址 : http://localhost:8081/main
2019-07-18 17:50:56 -HTTP METHOD : GET
2019-07-18 17:50:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 17:50:56 -参数 : []
2019-07-18 17:50:56 -耗时 : 0
2019-07-18 17:50:56 -返回值 : main
2019-07-18 17:51:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 17:51:03 -==> Parameters: 1(Long)
2019-07-18 17:51:03 -<==      Total: 95
2019-07-18 17:51:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 17:51:03 -HTTP METHOD : GET
2019-07-18 17:51:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 17:51:03 -参数 : []
2019-07-18 17:51:03 -耗时 : 1
2019-07-18 17:51:03 -返回值 : moneyList/moneyList
2019-07-18 17:51:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 17:51:07 -HTTP METHOD : GET
2019-07-18 17:51:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 17:51:07 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 17:51:07 -耗时 : 1
2019-07-18 17:51:07 -返回值 : system/dept/deptTree
2019-07-18 17:51:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 17:51:07 -HTTP METHOD : GET
2019-07-18 17:51:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 17:51:07 -参数 : []
2019-07-18 17:51:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 17:51:07 -==> Parameters: 
2019-07-18 17:51:07 -<==      Total: 3
2019-07-18 17:51:07 -耗时 : 27
2019-07-18 17:51:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 17:51:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:51:10 -HTTP METHOD : POST
2019-07-18 17:51:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:51:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@516ceaf1]
2019-07-18 17:51:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:51:10 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:51:11 -<==      Total: 3
2019-07-18 17:51:11 -耗时 : 69
2019-07-18 17:51:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2bc6f24a, com.bootdo.moneyList.damain.MoneyListDO@12d8a638, com.bootdo.moneyList.damain.MoneyListDO@6f7dad20]
2019-07-18 17:51:15 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:51:15 -HTTP METHOD : POST
2019-07-18 17:51:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:51:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6aea2b79, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7aef73f]
2019-07-18 17:51:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:51:15 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:51:15 -<==      Total: 3
2019-07-18 17:51:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-07-18 17:51:21 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 17:51:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:51:21 -<==      Total: 1
2019-07-18 17:51:21 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 17:51:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:51:21 -<==      Total: 1
2019-07-18 17:51:21 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 17:51:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:51:21 -<==      Total: 0
2019-07-18 17:51:21 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:51:21 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:51:22 -<==    Updates: 1
2019-07-18 17:51:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:51:22 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 17:51:21.823(Timestamp), 2019-06(String), admin(String), 2019-07-18 17:51:21.823(Timestamp), admin(String), null
2019-07-18 17:51:24 -{conn-10001, pstmt-20014} execute error. insert into elec_log
		(
		
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_type`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:49)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:313)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8f59a1ec.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 17:51:24 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-18 17:51:24 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-18 17:51:24 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:49)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:313)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8f59a1ec.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-18 17:51:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:51:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'(String), null, 2019-07-18 17:51:24.341(Timestamp)
2019-07-18 17:51:24 -<==    Updates: 1
2019-07-18 17:51:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:51:28 -HTTP METHOD : POST
2019-07-18 17:51:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:51:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d162689]
2019-07-18 17:51:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:51:28 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:51:28 -<==      Total: 3
2019-07-18 17:51:28 -耗时 : 34
2019-07-18 17:51:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@640873bb, com.bootdo.moneyList.damain.MoneyListDO@1441a9c3, com.bootdo.moneyList.damain.MoneyListDO@769726e2]
2019-07-18 17:52:16 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 17:52:16 -HTTP METHOD : POST
2019-07-18 17:52:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 17:52:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5f0a4918, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7074c168]
2019-07-18 17:52:16 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:52:16 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:52:16 -<==      Total: 3
2019-07-18 17:52:21 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 17:52:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:52:21 -<==      Total: 1
2019-07-18 17:52:21 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 17:52:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:52:21 -<==      Total: 1
2019-07-18 17:52:21 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 17:52:21 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 17:52:21 -<==      Total: 0
2019-07-18 17:52:21 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:52:21 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:52:21 -<==    Updates: 1
2019-07-18 17:52:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:52:21 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 17:52:21.125(Timestamp), 2019-06(String), admin(String), 2019-07-18 17:52:21.125(Timestamp), admin(String), null
2019-07-18 17:52:21 -{conn-10001, pstmt-20015} execute error. insert into elec_log
		(
		
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_type`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:49)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:313)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8f59a1ec.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-18 17:52:21 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:49)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:313)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$8f59a1ec.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-18 17:52:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 17:52:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_type`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'elec_date' in 'field list'(String), null, 2019-07-18 17:52:21.346(Timestamp)
2019-07-18 17:52:21 -<==    Updates: 1
2019-07-18 17:52:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 17:52:26 -HTTP METHOD : POST
2019-07-18 17:52:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 17:52:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5639e4d5]
2019-07-18 17:52:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 17:52:26 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 17:52:26 -<==      Total: 3
2019-07-18 17:52:26 -耗时 : 38
2019-07-18 17:52:26 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7bb1fe3, com.bootdo.moneyList.damain.MoneyListDO@52a42115, com.bootdo.moneyList.damain.MoneyListDO@4b2268d8]
2019-07-18 17:59:39 -Starting BootdoApplication on PC-201905091110 with PID 7008 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-18 17:59:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-18 17:59:39 -The following profiles are active: dev
2019-07-18 17:59:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42a9e5d1: startup date [Thu Jul 18 17:59:39 CST 2019]; root of context hierarchy
2019-07-18 17:59:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-18 17:59:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$73b5dc8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$660f0b34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-18 17:59:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-18 17:59:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-18 17:59:51 -Tomcat initialized with port(s): 8081 (http)
2019-07-18 17:59:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-18 17:59:51 -Starting service [Tomcat]
2019-07-18 17:59:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-18 17:59:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-18 17:59:52 -Initializing Spring embedded WebApplicationContext
2019-07-18 17:59:52 -Root WebApplicationContext: initialization completed in 12781 ms
2019-07-18 17:59:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-18 17:59:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-18 17:59:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-18 17:59:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-18 17:59:53 -Filter xssFilter was not registered (disabled)
2019-07-18 17:59:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-18 17:59:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-18 17:59:53 -Servlet statViewServlet mapped to [/druid/*]
2019-07-18 17:59:53 -Servlet dispatcherServlet mapped to [/]
2019-07-18 17:59:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42a9e5d1: startup date [Thu Jul 18 17:59:39 CST 2019]; root of context hierarchy
2019-07-18 17:59:59 -Using default implementation for ThreadExecutor
2019-07-18 17:59:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-18 17:59:59 -Quartz Scheduler v.2.3.0 created.
2019-07-18 17:59:59 -RAMJobStore initialized.
2019-07-18 17:59:59 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-18 17:59:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-18 17:59:59 -Quartz scheduler version: 2.3.0
2019-07-18 17:59:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@dbca149
2019-07-18 18:00:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-18 18:00:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-18 18:00:05 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-18 18:00:05 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-18 18:00:05 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-18 18:00:05 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-18 18:00:05 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-18 18:00:05 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-18 18:00:05 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-18 18:00:05 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-18 18:00:05 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-18 18:00:05 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-18 18:00:05 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-18 18:00:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-18 18:00:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-18 18:00:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-18 18:00:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-18 18:00:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 18:00:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-18 18:00:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-18 18:00:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-18 18:00:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-18 18:00:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-18 18:00:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-18 18:00:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-18 18:00:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-18 18:00:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-18 18:00:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-18 18:00:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-18 18:00:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-18 18:00:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-18 18:00:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-18 18:00:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-18 18:00:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-18 18:00:05 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-18 18:00:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-18 18:00:05 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-18 18:00:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-18 18:00:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-18 18:00:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-18 18:00:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-18 18:00:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-18 18:00:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-18 18:00:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-18 18:00:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-18 18:00:05 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-18 18:00:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-18 18:00:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-18 18:00:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-18 18:00:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-18 18:00:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-18 18:00:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-18 18:00:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-18 18:00:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-18 18:00:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-18 18:00:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-18 18:00:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-18 18:00:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-18 18:00:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-18 18:00:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-18 18:00:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-18 18:00:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-18 18:00:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-18 18:00:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 18:00:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-18 18:00:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-18 18:00:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-18 18:00:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-18 18:00:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-18 18:00:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-18 18:00:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-18 18:00:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-18 18:00:05 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-18 18:00:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-18 18:00:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-18 18:00:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-18 18:00:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-18 18:00:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-18 18:00:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-18 18:00:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-18 18:00:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-18 18:00:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-18 18:00:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-18 18:00:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-18 18:00:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-18 18:00:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 18:00:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42a9e5d1: startup date [Thu Jul 18 17:59:39 CST 2019]; root of context hierarchy
2019-07-18 18:00:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 18:00:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-18 18:00:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-18 18:00:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-18 18:00:14 -Registering beans for JMX exposure on startup
2019-07-18 18:00:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-18 18:00:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-18 18:00:14 -Starting beans in phase 2147483647
2019-07-18 18:00:14 -Context refreshed
2019-07-18 18:00:14 -Found 1 custom documentation plugin(s)
2019-07-18 18:00:15 -Scanning for api listing references
2019-07-18 18:00:16 -Generating unique operation named: removeUsingPOST_1
2019-07-18 18:00:16 -Generating unique operation named: addUsingGET_1
2019-07-18 18:00:16 -Generating unique operation named: editUsingGET_1
2019-07-18 18:00:16 -Generating unique operation named: listUsingGET_1
2019-07-18 18:00:16 -Generating unique operation named: removeUsingPOST_2
2019-07-18 18:00:16 -Generating unique operation named: removeUsingPOST_3
2019-07-18 18:00:16 -Generating unique operation named: saveUsingPOST_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingGET_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingHEAD_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPOST_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPUT_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPATCH_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingDELETE_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-18 18:00:17 -Generating unique operation named: updateUsingTRACE_1
2019-07-18 18:00:17 -Generating unique operation named: addUsingGET_2
2019-07-18 18:00:17 -Generating unique operation named: editUsingGET_2
2019-07-18 18:00:17 -Generating unique operation named: listUsingGET_2
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_4
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_5
2019-07-18 18:00:17 -Generating unique operation named: saveUsingPOST_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPOST_2
2019-07-18 18:00:17 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-18 18:00:17 -Generating unique operation named: addUsingGET_3
2019-07-18 18:00:17 -Generating unique operation named: editUsingGET_3
2019-07-18 18:00:17 -Generating unique operation named: listUsingGET_3
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_6
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_7
2019-07-18 18:00:17 -Generating unique operation named: saveUsingPOST_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingGET_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingHEAD_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPOST_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPUT_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPATCH_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingDELETE_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-18 18:00:17 -Generating unique operation named: updateUsingTRACE_2
2019-07-18 18:00:17 -Generating unique operation named: addUsingGET_4
2019-07-18 18:00:17 -Generating unique operation named: editUsingGET_4
2019-07-18 18:00:17 -Generating unique operation named: listUsingGET_4
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_8
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_9
2019-07-18 18:00:17 -Generating unique operation named: saveUsingPOST_4
2019-07-18 18:00:17 -Generating unique operation named: updateUsingGET_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingHEAD_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPOST_4
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPUT_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingPATCH_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingDELETE_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-18 18:00:17 -Generating unique operation named: updateUsingTRACE_3
2019-07-18 18:00:17 -Generating unique operation named: ElecUsingGET_1
2019-07-18 18:00:17 -Generating unique operation named: addUsingGET_5
2019-07-18 18:00:17 -Generating unique operation named: editUsingGET_5
2019-07-18 18:00:17 -Generating unique operation named: listUsingGET_5
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_10
2019-07-18 18:00:17 -Generating unique operation named: removeUsingPOST_11
2019-07-18 18:00:17 -Generating unique operation named: saveUsingPOST_5
2019-07-18 18:00:17 -Generating unique operation named: updateUsingGET_4
2019-07-18 18:00:17 -Generating unique operation named: updateUsingHEAD_4
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPUT_4
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPATCH_4
2019-07-18 18:00:18 -Generating unique operation named: updateUsingDELETE_4
2019-07-18 18:00:18 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-18 18:00:18 -Generating unique operation named: updateUsingTRACE_4
2019-07-18 18:00:18 -Generating unique operation named: editUsingGET_6
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_6
2019-07-18 18:00:18 -Generating unique operation named: addUsingGET_6
2019-07-18 18:00:18 -Generating unique operation named: editUsingGET_7
2019-07-18 18:00:18 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_7
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_12
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_13
2019-07-18 18:00:18 -Generating unique operation named: saveUsingPOST_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingGET_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingHEAD_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPUT_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPATCH_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingDELETE_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-18 18:00:18 -Generating unique operation named: updateUsingTRACE_5
2019-07-18 18:00:18 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-18 18:00:18 -Generating unique operation named: addUsingGET_7
2019-07-18 18:00:18 -Generating unique operation named: editUsingGET_8
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_8
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_14
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_15
2019-07-18 18:00:18 -Generating unique operation named: saveUsingPOST_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingGET_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingHEAD_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_8
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPUT_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPATCH_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingDELETE_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-18 18:00:18 -Generating unique operation named: updateUsingTRACE_6
2019-07-18 18:00:18 -Generating unique operation named: addUsingGET_8
2019-07-18 18:00:18 -Generating unique operation named: editUsingGET_9
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_9
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_16
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_17
2019-07-18 18:00:18 -Generating unique operation named: saveUsingPOST_8
2019-07-18 18:00:18 -Generating unique operation named: updateUsingGET_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingHEAD_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_9
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPUT_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPATCH_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingDELETE_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-18 18:00:18 -Generating unique operation named: updateUsingTRACE_7
2019-07-18 18:00:18 -Generating unique operation named: addUsingGET_9
2019-07-18 18:00:18 -Generating unique operation named: editUsingGET_10
2019-07-18 18:00:18 -Generating unique operation named: infoUsingGET_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingHEAD_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingPOST_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingPUT_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingPATCH_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingDELETE_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-18 18:00:18 -Generating unique operation named: infoUsingTRACE_1
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_10
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_18
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_19
2019-07-18 18:00:18 -Generating unique operation named: saveUsingPOST_9
2019-07-18 18:00:18 -Generating unique operation named: updateUsingPOST_10
2019-07-18 18:00:18 -Generating unique operation named: listUsingGET_11
2019-07-18 18:00:18 -Generating unique operation named: removeUsingPOST_20
2019-07-18 18:00:19 -Generating unique operation named: welcomeUsingGET_1
2019-07-18 18:00:19 -Generating unique operation named: addUsingGET_10
2019-07-18 18:00:19 -Generating unique operation named: editUsingGET_11
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_12
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_21
2019-07-18 18:00:19 -Generating unique operation named: saveUsingPOST_10
2019-07-18 18:00:19 -Generating unique operation named: treeUsingGET_1
2019-07-18 18:00:19 -Generating unique operation named: treeUsingGET_2
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPOST_11
2019-07-18 18:00:19 -Generating unique operation named: addUsingGET_11
2019-07-18 18:00:19 -Generating unique operation named: editUsingGET_12
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_13
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_22
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_23
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPOST_12
2019-07-18 18:00:19 -Generating unique operation named: addUsingGET_12
2019-07-18 18:00:19 -Generating unique operation named: editUsingGET_13
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_14
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_24
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_25
2019-07-18 18:00:19 -Generating unique operation named: saveUsingPOST_11
2019-07-18 18:00:19 -Generating unique operation named: updateUsingGET_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingHEAD_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPOST_13
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPUT_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPATCH_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingDELETE_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-18 18:00:19 -Generating unique operation named: updateUsingTRACE_8
2019-07-18 18:00:19 -Generating unique operation named: addUsingGET_13
2019-07-18 18:00:19 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-18 18:00:19 -Generating unique operation named: editUsingGET_14
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_15
2019-07-18 18:00:19 -Generating unique operation named: printEditUsingGET_1
2019-07-18 18:00:19 -Generating unique operation named: removeUsingPOST_26
2019-07-18 18:00:19 -Generating unique operation named: saveUsingPOST_12
2019-07-18 18:00:19 -Generating unique operation named: updateUsingGET_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingHEAD_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPOST_14
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPUT_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPATCH_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingDELETE_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-18 18:00:19 -Generating unique operation named: updateUsingTRACE_9
2019-07-18 18:00:19 -Generating unique operation named: addUsingGET_14
2019-07-18 18:00:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-18 18:00:19 -Generating unique operation named: editUsingGET_15
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_16
2019-07-18 18:00:19 -Generating unique operation named: saveUsingPOST_13
2019-07-18 18:00:19 -Generating unique operation named: saveUsingPOST_14
2019-07-18 18:00:19 -Generating unique operation named: updateUsingPOST_15
2019-07-18 18:00:19 -Generating unique operation named: listUsingGET_17
2019-07-18 18:00:19 -Generating unique operation named: listUsingHEAD_1
2019-07-18 18:00:19 -Generating unique operation named: listUsingPOST_1
2019-07-18 18:00:19 -Generating unique operation named: listUsingPUT_1
2019-07-18 18:00:19 -Generating unique operation named: listUsingPATCH_1
2019-07-18 18:00:20 -Generating unique operation named: listUsingDELETE_1
2019-07-18 18:00:20 -Generating unique operation named: listUsingOPTIONS_1
2019-07-18 18:00:20 -Generating unique operation named: listUsingTRACE_1
2019-07-18 18:00:20 -Generating unique operation named: countDDUsingGET_1
2019-07-18 18:00:20 -Generating unique operation named: exportDDUsingGET_1
2019-07-18 18:00:20 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-18 18:00:20 -Generating unique operation named: addUsingGET_15
2019-07-18 18:00:20 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-18 18:00:20 -Generating unique operation named: editUsingGET_16
2019-07-18 18:00:20 -Generating unique operation named: listUsingGET_18
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_27
2019-07-18 18:00:20 -Generating unique operation named: saveUsingPOST_15
2019-07-18 18:00:20 -Generating unique operation named: treeUsingGET_3
2019-07-18 18:00:20 -Generating unique operation named: treeViewUsingGET_1
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPOST_16
2019-07-18 18:00:20 -Generating unique operation named: addUsingGET_16
2019-07-18 18:00:20 -Generating unique operation named: editUsingGET_17
2019-07-18 18:00:20 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-18 18:00:20 -Generating unique operation named: listUsingGET_19
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_28
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_29
2019-07-18 18:00:20 -Generating unique operation named: saveUsingPOST_16
2019-07-18 18:00:20 -Generating unique operation named: updateUsingGET_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingHEAD_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPOST_17
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPUT_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPATCH_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingDELETE_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-18 18:00:20 -Generating unique operation named: updateUsingTRACE_10
2019-07-18 18:00:20 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-18 18:00:20 -Generating unique operation named: addUsingGET_17
2019-07-18 18:00:20 -Generating unique operation named: editUsingGET_18
2019-07-18 18:00:20 -Generating unique operation named: listUsingGET_20
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_30
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_31
2019-07-18 18:00:20 -Generating unique operation named: saveUsingPOST_17
2019-07-18 18:00:20 -Generating unique operation named: updateUsingGET_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingHEAD_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPOST_18
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPUT_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPATCH_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingDELETE_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-18 18:00:20 -Generating unique operation named: updateUsingTRACE_11
2019-07-18 18:00:20 -Generating unique operation named: addUsingGET_18
2019-07-18 18:00:20 -Generating unique operation named: editUsingGET_19
2019-07-18 18:00:20 -Generating unique operation named: listUsingGET_21
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_32
2019-07-18 18:00:20 -Generating unique operation named: removeUsingPOST_33
2019-07-18 18:00:20 -Generating unique operation named: saveUsingPOST_18
2019-07-18 18:00:20 -Generating unique operation named: updateUsingGET_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingHEAD_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPOST_19
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPUT_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingPATCH_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingDELETE_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-18 18:00:20 -Generating unique operation named: updateUsingTRACE_12
2019-07-18 18:00:20 -Starting Quartz Scheduler now
2019-07-18 18:00:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-18 18:00:20 -Starting...
2019-07-18 18:00:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-18 18:00:20 -Started.
2019-07-18 18:00:20 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-18 18:00:21 -Using a shared selector for servlet write/read
2019-07-18 18:00:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-18 18:00:21 -Started BootdoApplication in 44.374 seconds (JVM running for 46.048)
2019-07-18 18:00:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-18 18:00:25 -==> Parameters: 
2019-07-18 18:00:25 -<==      Total: 1
2019-07-18 18:00:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-18 18:00:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-18 18:00:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-07-18 18:00:30 -Enabling session validation scheduler...
2019-07-18 18:00:30 -请求地址 : http://localhost:8081/login;JSESSIONID=dfd9648e-1f64-4247-a7fe-90b146bc5b62
2019-07-18 18:00:30 -HTTP METHOD : GET
2019-07-18 18:00:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-18 18:00:30 -参数 : [{}]
2019-07-18 18:00:30 -耗时 : 5
2019-07-18 18:00:30 -返回值 : login
2019-07-18 18:00:32 -请求地址 : http://localhost:8081/getVerify
2019-07-18 18:00:32 -HTTP METHOD : GET
2019-07-18 18:00:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-18 18:00:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@734f6f43, org.apache.shiro.web.servlet.ShiroHttpServletResponse@517843c3]
2019-07-18 18:00:37 -7375
2019-07-18 18:00:38 -耗时 : 5051
2019-07-18 18:00:38 -返回值 : null
2019-07-18 18:00:42 -请求地址 : http://localhost:8081/login
2019-07-18 18:00:42 -HTTP METHOD : POST
2019-07-18 18:00:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-18 18:00:42 -参数 : [admin, 111111, 7375, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5769a92a]
2019-07-18 18:00:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-18 18:00:42 -==> Parameters: admin(String)
2019-07-18 18:00:42 -<==      Total: 1
2019-07-18 18:00:42 -耗时 : 162
2019-07-18 18:00:42 -返回值 : {msg=操作成功, code=0}
2019-07-18 18:00:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-18 18:00:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:00:42 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-18 18:00:42.763(Timestamp)
2019-07-18 18:00:42 -<==    Updates: 1
2019-07-18 18:00:42 -请求地址 : http://localhost:8081/index
2019-07-18 18:00:42 -HTTP METHOD : GET
2019-07-18 18:00:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 18:00:42 -参数 : [{}]
2019-07-18 18:00:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 18:00:43 -==> Parameters: 1(Long)
2019-07-18 18:00:43 -<==      Total: 51
2019-07-18 18:00:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 18:00:43 -==> Parameters: 138(Long)
2019-07-18 18:00:43 -<==      Total: 1
2019-07-18 18:00:43 -耗时 : 279
2019-07-18 18:00:43 -返回值 : index_v1
2019-07-18 18:00:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:00:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 279(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 18:00:43.376(Timestamp)
2019-07-18 18:00:43 -<==    Updates: 1
2019-07-18 18:00:43 -请求地址 : http://localhost:8081/main
2019-07-18 18:00:43 -HTTP METHOD : GET
2019-07-18 18:00:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:00:43 -参数 : []
2019-07-18 18:00:43 -耗时 : 0
2019-07-18 18:00:43 -返回值 : main
2019-07-18 18:00:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 18:00:43 -HTTP METHOD : GET
2019-07-18 18:00:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 18:00:43 -参数 : []
2019-07-18 18:00:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 18:00:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 18:00:44 -<==      Total: 0
2019-07-18 18:00:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 18:00:44 -==> Parameters: 1(Long), 0(String)
2019-07-18 18:00:44 -<==      Total: 1
2019-07-18 18:00:44 -耗时 : 116
2019-07-18 18:00:44 -返回值 : com.bootdo.common.utils.PageUtils@3e88097f
2019-07-18 18:00:44 -请求地址 : http://localhost:8081/main
2019-07-18 18:00:44 -HTTP METHOD : GET
2019-07-18 18:00:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:00:44 -参数 : []
2019-07-18 18:00:44 -耗时 : 1
2019-07-18 18:00:44 -返回值 : main
2019-07-18 18:00:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 18:00:45 -==> Parameters: 1(Long)
2019-07-18 18:00:45 -<==      Total: 95
2019-07-18 18:00:45 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 18:00:45 -HTTP METHOD : GET
2019-07-18 18:00:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 18:00:45 -参数 : []
2019-07-18 18:00:45 -耗时 : 0
2019-07-18 18:00:45 -返回值 : moneyList/moneyList
2019-07-18 18:00:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-18 18:00:49 -HTTP METHOD : GET
2019-07-18 18:00:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-18 18:00:49 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-18 18:00:49 -耗时 : 0
2019-07-18 18:00:49 -返回值 : system/dept/deptTree
2019-07-18 18:00:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-18 18:00:50 -HTTP METHOD : GET
2019-07-18 18:00:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-18 18:00:50 -参数 : []
2019-07-18 18:00:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-18 18:00:50 -==> Parameters: 
2019-07-18 18:00:50 -<==      Total: 3
2019-07-18 18:00:50 -耗时 : 46
2019-07-18 18:00:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-18 18:00:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:00:53 -HTTP METHOD : POST
2019-07-18 18:00:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:00:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@493d6bbf]
2019-07-18 18:00:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:00:53 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 18:00:53 -<==      Total: 3
2019-07-18 18:00:53 -耗时 : 108
2019-07-18 18:00:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@437e062, com.bootdo.moneyList.damain.MoneyListDO@45d8a033, com.bootdo.moneyList.damain.MoneyListDO@43e53251]
2019-07-18 18:01:00 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 18:01:00 -HTTP METHOD : POST
2019-07-18 18:01:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 18:01:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2a9b8b9f, org.apache.shiro.web.servlet.ShiroHttpServletRequest@722487a9]
2019-07-18 18:01:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:01:00 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 18:01:00 -<==      Total: 3
2019-07-18 18:01:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-07-18 18:01:11 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 18:01:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 18:01:11 -<==      Total: 1
2019-07-18 18:01:11 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 18:01:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 18:01:11 -<==      Total: 1
2019-07-18 18:01:11 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 18:01:11 -==> Parameters: 1-0001(String), 2019-06(String), 2(String)
2019-07-18 18:01:11 -<==      Total: 0
2019-07-18 18:01:11 -==>  Preparing: update ELEC set elec_sum = elec_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:01:11 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 18:01:11 -<==    Updates: 1
2019-07-18 18:01:11 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:01:11 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 18:01:11.404(Timestamp), 2019-06(String), admin(String), 2019-07-18 18:01:11.405(Timestamp), admin(String), null
2019-07-18 18:01:11 -<==    Updates: 1
2019-07-18 18:01:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 18:01:11 -==> Parameters: 1-0001(String), 2(String), 2019-06(String), 2019-07-18 18:01:11.404(Timestamp)
2019-07-18 18:01:11 -<==      Total: 1
2019-07-18 18:01:11 -==>  Preparing: update print SET `user_name` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ? where id = ? 
2019-07-18 18:01:11 -==> Parameters: 李文英(String), 10370.0(BigDecimal), 10485.0(BigDecimal), 1(Integer), 0.465(BigDecimal), 115.00(BigDecimal), 53.48(BigDecimal), 321.51(BigDecimal), 50(BigDecimal), 1601(Long)
2019-07-18 18:01:11 -<==    Updates: 1
2019-07-18 18:01:11 -耗时 : 11757
2019-07-18 18:01:11 -返回值 : 1601
2019-07-18 18:01:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:01:25 -HTTP METHOD : POST
2019-07-18 18:01:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:01:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1aa25af5]
2019-07-18 18:01:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:01:25 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String), 2019-06(String), 2(String), 1-0001(String)
2019-07-18 18:01:25 -<==      Total: 3
2019-07-18 18:01:25 -耗时 : 31
2019-07-18 18:01:25 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2c5c4c4f, com.bootdo.moneyList.damain.MoneyListDO@5ef3d5a, com.bootdo.moneyList.damain.MoneyListDO@d92bae0]
2019-07-18 18:01:26 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1601/1-0001
2019-07-18 18:01:26 -HTTP METHOD : GET
2019-07-18 18:01:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 18:01:26 -参数 : [1601, 1-0001, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@1a7b26f9, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@1a7b26f9, org.apache.shiro.web.servlet.ShiroHttpServletRequest@453ed80a]
2019-07-18 18:01:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:01:26 -==> Parameters: 1601(Long)
2019-07-18 18:01:26 -<==      Total: 1
2019-07-18 18:01:26 -耗时 : 18
2019-07-18 18:01:26 -返回值 : moneyList/moneyPrint
2019-07-18 18:03:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:03:14 -HTTP METHOD : POST
2019-07-18 18:03:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:03:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@219d9cec]
2019-07-18 18:03:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:14 -==> Parameters: 2019-06(String), 2(String), 1-0005(String), 2019-06(String), 2(String), 1-0005(String), 2019-06(String), 2(String), 1-0005(String)
2019-07-18 18:03:14 -<==      Total: 3
2019-07-18 18:03:14 -耗时 : 29
2019-07-18 18:03:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@70e8d34b, com.bootdo.moneyList.damain.MoneyListDO@65c24754, com.bootdo.moneyList.damain.MoneyListDO@28f5cdfc]
2019-07-18 18:03:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:03:19 -HTTP METHOD : POST
2019-07-18 18:03:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:03:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39304288]
2019-07-18 18:03:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:19 -==> Parameters: 2019-06(String), 2(String), 1-0008(String), 2019-06(String), 2(String), 1-0008(String), 2019-06(String), 2(String), 1-0008(String)
2019-07-18 18:03:19 -<==      Total: 3
2019-07-18 18:03:19 -耗时 : 26
2019-07-18 18:03:19 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4f8ba5bd, com.bootdo.moneyList.damain.MoneyListDO@79ca981f, com.bootdo.moneyList.damain.MoneyListDO@448b9885]
2019-07-18 18:03:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:03:25 -HTTP METHOD : POST
2019-07-18 18:03:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:03:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3dd08d2d]
2019-07-18 18:03:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:25 -==> Parameters: 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String)
2019-07-18 18:03:25 -<==      Total: 3
2019-07-18 18:03:25 -耗时 : 28
2019-07-18 18:03:25 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3bf2cb0a, com.bootdo.moneyList.damain.MoneyListDO@3e0ba18d, com.bootdo.moneyList.damain.MoneyListDO@10e978]
2019-07-18 18:03:28 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-07-18 18:03:28 -HTTP METHOD : POST
2019-07-18 18:03:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-07-18 18:03:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@36f33fcb, org.apache.shiro.web.servlet.ShiroHttpServletRequest@295a576]
2019-07-18 18:03:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:28 -==> Parameters: 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String)
2019-07-18 18:03:28 -<==      Total: 3
2019-07-18 18:03:28 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? and user_type != 'B' 
2019-07-18 18:03:28 -==> Parameters: 1-0080(String), 2019-06(String), 2(String)
2019-07-18 18:03:29 -<==      Total: 1
2019-07-18 18:03:29 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? and user_type != 'B' 
2019-07-18 18:03:29 -==> Parameters: 1-0080(String), 2019-06(String), 2(String)
2019-07-18 18:03:29 -<==      Total: 1
2019-07-18 18:03:29 -==>  Preparing: select wa.water_price,wa.water_cost,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? and user_type != 'B' 
2019-07-18 18:03:29 -==> Parameters: 1-0080(String), 2019-06(String), 2(String)
2019-07-18 18:03:29 -<==      Total: 0
2019-07-18 18:03:29 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:29 -==> Parameters: 50(String), A(String), 2019-06(String), 2(String), 1-0080(String)
2019-07-18 18:03:29 -<==    Updates: 1
2019-07-18 18:03:29 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `money_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:03:29 -==> Parameters: 1-0080(String), 高学德(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-07-18 18:03:28.995(Timestamp), 2019-06(String), admin(String), 2019-07-18 18:03:28.996(Timestamp), admin(String), null
2019-07-18 18:03:29 -<==    Updates: 1
2019-07-18 18:03:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where user_id = ? and user_org = ? and create_time = ? and date_format(print_date,'%Y-%m-%d') = date_format(?,'%Y-%m-%d') 
2019-07-18 18:03:29 -==> Parameters: 1-0080(String), 2(String), 2019-06(String), 2019-07-18 18:03:28.995(Timestamp)
2019-07-18 18:03:29 -<==      Total: 0
2019-07-18 18:03:29 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:03:29 -==> Parameters: 1-0080(String), 高学德(String), A(String), 2(String), null, null, null, null, null, null, null, null, 3.50(BigDecimal), 45.78(BigDecimal), 160.23(BigDecimal), 150.25(BigDecimal), 50(BigDecimal), null, null, null, null, 2019-07-18 18:03:29.194(Timestamp), 2019-06(String), admin(String), 2019-07-18 18:03:29.194(Timestamp), admin(String), null
2019-07-18 18:03:29 -<==    Updates: 1
2019-07-18 18:03:29 -耗时 : 293
2019-07-18 18:03:29 -返回值 : 1602
2019-07-18 18:03:30 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-07-18 18:03:30 -HTTP METHOD : POST
2019-07-18 18:03:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-07-18 18:03:30 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b7e2836]
2019-07-18 18:03:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? and user_type != 'B' 
2019-07-18 18:03:30 -==> Parameters: 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String), 2019-06(String), 2(String), 1-0080(String)
2019-07-18 18:03:30 -<==      Total: 3
2019-07-18 18:03:30 -耗时 : 31
2019-07-18 18:03:30 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@64a14149, com.bootdo.moneyList.damain.MoneyListDO@6ab754c8, com.bootdo.moneyList.damain.MoneyListDO@30d2fe30]
2019-07-18 18:03:31 -请求地址 : http://localhost:8081/moneyList/moneyList/moneyPrint/1602/1-0080
2019-07-18 18:03:31 -HTTP METHOD : GET
2019-07-18 18:03:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.printEdit
2019-07-18 18:03:31 -参数 : [1602, 1-0080, {moneyListDO=com.bootdo.moneyList.damain.MoneyListDO@72883e2f, org.springframework.validation.BindingResult.moneyListDO=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, com.bootdo.moneyList.damain.MoneyListDO@72883e2f, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5bb94c30]
2019-07-18 18:03:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:03:31 -==> Parameters: 1602(Long)
2019-07-18 18:03:31 -<==      Total: 1
2019-07-18 18:03:31 -耗时 : 10
2019-07-18 18:03:31 -返回值 : moneyList/moneyPrint
2019-07-18 18:14:27 -请求地址 : http://localhost:8081/index
2019-07-18 18:14:27 -HTTP METHOD : GET
2019-07-18 18:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 18:14:27 -参数 : [{}]
2019-07-18 18:14:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 18:14:27 -==> Parameters: 1(Long)
2019-07-18 18:14:27 -<==      Total: 51
2019-07-18 18:14:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 18:14:27 -==> Parameters: 138(Long)
2019-07-18 18:14:27 -<==      Total: 1
2019-07-18 18:14:27 -耗时 : 33
2019-07-18 18:14:27 -返回值 : index_v1
2019-07-18 18:14:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:14:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 18:14:27.366(Timestamp)
2019-07-18 18:14:27 -<==    Updates: 1
2019-07-18 18:14:27 -请求地址 : http://localhost:8081/main
2019-07-18 18:14:27 -HTTP METHOD : GET
2019-07-18 18:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:14:27 -参数 : []
2019-07-18 18:14:27 -耗时 : 0
2019-07-18 18:14:27 -返回值 : main
2019-07-18 18:14:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 18:14:28 -HTTP METHOD : GET
2019-07-18 18:14:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 18:14:28 -参数 : []
2019-07-18 18:14:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 18:14:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 18:14:28 -<==      Total: 0
2019-07-18 18:14:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 18:14:28 -==> Parameters: 1(Long), 0(String)
2019-07-18 18:14:28 -<==      Total: 1
2019-07-18 18:14:28 -耗时 : 11
2019-07-18 18:14:28 -返回值 : com.bootdo.common.utils.PageUtils@306111a
2019-07-18 18:14:29 -请求地址 : http://localhost:8081/main
2019-07-18 18:14:29 -HTTP METHOD : GET
2019-07-18 18:14:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:14:29 -参数 : []
2019-07-18 18:14:29 -耗时 : 1
2019-07-18 18:14:29 -返回值 : main
2019-07-18 18:14:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-18 18:14:33 -==> Parameters: 1(Long)
2019-07-18 18:14:33 -<==      Total: 95
2019-07-18 18:14:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-18 18:14:33 -HTTP METHOD : GET
2019-07-18 18:14:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-18 18:14:33 -参数 : []
2019-07-18 18:14:33 -耗时 : 0
2019-07-18 18:14:33 -返回值 : moneyList/moneyList
2019-07-18 18:14:36 -请求地址 : http://localhost:8081/print/print
2019-07-18 18:14:36 -HTTP METHOD : GET
2019-07-18 18:14:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-18 18:14:36 -参数 : []
2019-07-18 18:14:36 -耗时 : 0
2019-07-18 18:14:36 -返回值 : print/print/print
2019-07-18 18:14:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-18 18:14:37 -HTTP METHOD : GET
2019-07-18 18:14:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-18 18:14:37 -参数 : [userType]
2019-07-18 18:14:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-18 18:14:37 -==> Parameters: userType(String)
2019-07-18 18:14:37 -请求地址 : http://localhost:8081/print/print/list
2019-07-18 18:14:37 -HTTP METHOD : GET
2019-07-18 18:14:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-18 18:14:37 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-18 18:14:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-18 18:14:37 -==> Parameters: 0(Integer), 100(Integer)
2019-07-18 18:14:37 -<==      Total: 4
2019-07-18 18:14:37 -耗时 : 724
2019-07-18 18:14:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-18 18:14:38 -<==      Total: 100
2019-07-18 18:14:38 -==>  Preparing: select count(*) from print 
2019-07-18 18:14:38 -==> Parameters: 
2019-07-18 18:14:38 -<==      Total: 1
2019-07-18 18:14:38 -耗时 : 524
2019-07-18 18:14:38 -返回值 : com.bootdo.common.utils.PageUtils@1f59ae3f
2019-07-18 18:14:39 -请求地址 : http://localhost:8081/print/print/printEdit/109
2019-07-18 18:14:39 -HTTP METHOD : GET
2019-07-18 18:14:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-07-18 18:14:39 -参数 : [109, {}]
2019-07-18 18:14:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:14:39 -==> Parameters: 109(Long)
2019-07-18 18:14:39 -<==      Total: 1
2019-07-18 18:14:39 -耗时 : 8
2019-07-18 18:14:39 -返回值 : print/print/printEdit
2019-07-18 18:16:34 -请求地址 : http://localhost:8081/index
2019-07-18 18:16:34 -HTTP METHOD : GET
2019-07-18 18:16:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 18:16:34 -参数 : [{}]
2019-07-18 18:16:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 18:16:34 -==> Parameters: 1(Long)
2019-07-18 18:16:35 -<==      Total: 51
2019-07-18 18:16:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 18:16:35 -==> Parameters: 138(Long)
2019-07-18 18:16:35 -<==      Total: 1
2019-07-18 18:16:35 -耗时 : 139
2019-07-18 18:16:35 -返回值 : index_v1
2019-07-18 18:16:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:16:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 139(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 18:16:35.054(Timestamp)
2019-07-18 18:16:35 -<==    Updates: 1
2019-07-18 18:16:35 -请求地址 : http://localhost:8081/main
2019-07-18 18:16:35 -HTTP METHOD : GET
2019-07-18 18:16:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:16:35 -参数 : []
2019-07-18 18:16:35 -耗时 : 0
2019-07-18 18:16:35 -返回值 : main
2019-07-18 18:16:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 18:16:35 -HTTP METHOD : GET
2019-07-18 18:16:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 18:16:35 -参数 : []
2019-07-18 18:16:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 18:16:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 18:16:35 -<==      Total: 0
2019-07-18 18:16:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 18:16:35 -==> Parameters: 1(Long), 0(String)
2019-07-18 18:16:35 -<==      Total: 1
2019-07-18 18:16:35 -耗时 : 44
2019-07-18 18:16:35 -返回值 : com.bootdo.common.utils.PageUtils@73d7d01b
2019-07-18 18:16:36 -请求地址 : http://localhost:8081/main
2019-07-18 18:16:36 -HTTP METHOD : GET
2019-07-18 18:16:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:16:36 -参数 : []
2019-07-18 18:16:36 -耗时 : 1
2019-07-18 18:16:36 -返回值 : main
2019-07-18 18:16:38 -请求地址 : http://localhost:8081/print/print
2019-07-18 18:16:38 -HTTP METHOD : GET
2019-07-18 18:16:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-18 18:16:38 -参数 : []
2019-07-18 18:16:38 -耗时 : 0
2019-07-18 18:16:38 -返回值 : print/print/print
2019-07-18 18:16:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-18 18:16:38 -HTTP METHOD : GET
2019-07-18 18:16:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-18 18:16:38 -参数 : [userType]
2019-07-18 18:16:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-18 18:16:38 -==> Parameters: userType(String)
2019-07-18 18:16:38 -<==      Total: 4
2019-07-18 18:16:38 -耗时 : 7
2019-07-18 18:16:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-18 18:16:38 -请求地址 : http://localhost:8081/print/print/list
2019-07-18 18:16:38 -HTTP METHOD : GET
2019-07-18 18:16:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-18 18:16:38 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-18 18:16:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-18 18:16:38 -==> Parameters: 0(Integer), 100(Integer)
2019-07-18 18:16:38 -<==      Total: 100
2019-07-18 18:16:38 -==>  Preparing: select count(*) from print 
2019-07-18 18:16:38 -==> Parameters: 
2019-07-18 18:16:38 -<==      Total: 1
2019-07-18 18:16:38 -耗时 : 52
2019-07-18 18:16:38 -返回值 : com.bootdo.common.utils.PageUtils@a327e17
2019-07-18 18:16:40 -请求地址 : http://localhost:8081/print/print/printEdit/112
2019-07-18 18:16:40 -HTTP METHOD : GET
2019-07-18 18:16:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-07-18 18:16:40 -参数 : [112, {}]
2019-07-18 18:16:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:16:40 -==> Parameters: 112(Long)
2019-07-18 18:16:40 -<==      Total: 1
2019-07-18 18:16:40 -耗时 : 6
2019-07-18 18:16:40 -返回值 : print/print/printEdit
2019-07-18 18:18:48 -请求地址 : http://localhost:8081/index
2019-07-18 18:18:48 -HTTP METHOD : GET
2019-07-18 18:18:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 18:18:48 -参数 : [{}]
2019-07-18 18:18:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 18:18:48 -==> Parameters: 1(Long)
2019-07-18 18:18:48 -<==      Total: 51
2019-07-18 18:18:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 18:18:48 -==> Parameters: 138(Long)
2019-07-18 18:18:48 -<==      Total: 1
2019-07-18 18:18:48 -耗时 : 26
2019-07-18 18:18:48 -返回值 : index_v1
2019-07-18 18:18:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:18:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 18:18:48.056(Timestamp)
2019-07-18 18:18:48 -<==    Updates: 1
2019-07-18 18:18:48 -请求地址 : http://localhost:8081/main
2019-07-18 18:18:48 -HTTP METHOD : GET
2019-07-18 18:18:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:18:48 -参数 : []
2019-07-18 18:18:48 -耗时 : 0
2019-07-18 18:18:48 -返回值 : main
2019-07-18 18:18:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 18:18:48 -HTTP METHOD : GET
2019-07-18 18:18:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 18:18:48 -参数 : []
2019-07-18 18:18:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 18:18:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 18:18:48 -<==      Total: 0
2019-07-18 18:18:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 18:18:48 -==> Parameters: 1(Long), 0(String)
2019-07-18 18:18:48 -<==      Total: 1
2019-07-18 18:18:48 -耗时 : 58
2019-07-18 18:18:48 -返回值 : com.bootdo.common.utils.PageUtils@35c68750
2019-07-18 18:18:48 -请求地址 : http://localhost:8081/main
2019-07-18 18:18:48 -HTTP METHOD : GET
2019-07-18 18:18:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:18:48 -参数 : []
2019-07-18 18:18:48 -耗时 : 1
2019-07-18 18:18:48 -返回值 : main
2019-07-18 18:18:52 -请求地址 : http://localhost:8081/print/print
2019-07-18 18:18:52 -HTTP METHOD : GET
2019-07-18 18:18:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-18 18:18:52 -参数 : []
2019-07-18 18:18:52 -耗时 : 1
2019-07-18 18:18:52 -返回值 : print/print/print
2019-07-18 18:18:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-18 18:18:53 -HTTP METHOD : GET
2019-07-18 18:18:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-18 18:18:53 -参数 : [userType]
2019-07-18 18:18:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-18 18:18:53 -==> Parameters: userType(String)
2019-07-18 18:18:53 -<==      Total: 4
2019-07-18 18:18:53 -耗时 : 5
2019-07-18 18:18:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-18 18:18:53 -请求地址 : http://localhost:8081/print/print/list
2019-07-18 18:18:53 -HTTP METHOD : GET
2019-07-18 18:18:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-18 18:18:53 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-18 18:18:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-18 18:18:53 -==> Parameters: 0(Integer), 100(Integer)
2019-07-18 18:18:53 -<==      Total: 100
2019-07-18 18:18:53 -==>  Preparing: select count(*) from print 
2019-07-18 18:18:53 -==> Parameters: 
2019-07-18 18:18:53 -<==      Total: 1
2019-07-18 18:18:53 -耗时 : 34
2019-07-18 18:18:53 -返回值 : com.bootdo.common.utils.PageUtils@1e0b1574
2019-07-18 18:18:55 -请求地址 : http://localhost:8081/print/print/printEdit/113
2019-07-18 18:18:55 -HTTP METHOD : GET
2019-07-18 18:18:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-07-18 18:18:55 -参数 : [113, {}]
2019-07-18 18:18:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:18:55 -==> Parameters: 113(Long)
2019-07-18 18:18:55 -<==      Total: 1
2019-07-18 18:18:55 -耗时 : 6
2019-07-18 18:18:55 -返回值 : print/print/printEdit
2019-07-18 18:20:31 -请求地址 : http://localhost:8081/index
2019-07-18 18:20:31 -HTTP METHOD : GET
2019-07-18 18:20:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-18 18:20:31 -参数 : [{}]
2019-07-18 18:20:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-18 18:20:31 -==> Parameters: 1(Long)
2019-07-18 18:20:31 -<==      Total: 51
2019-07-18 18:20:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-18 18:20:31 -==> Parameters: 138(Long)
2019-07-18 18:20:31 -<==      Total: 1
2019-07-18 18:20:31 -耗时 : 21
2019-07-18 18:20:31 -返回值 : index_v1
2019-07-18 18:20:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-18 18:20:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-18 18:20:31.474(Timestamp)
2019-07-18 18:20:31 -<==    Updates: 1
2019-07-18 18:20:31 -请求地址 : http://localhost:8081/main
2019-07-18 18:20:31 -HTTP METHOD : GET
2019-07-18 18:20:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:20:31 -参数 : []
2019-07-18 18:20:31 -耗时 : 0
2019-07-18 18:20:31 -返回值 : main
2019-07-18 18:20:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-18 18:20:32 -HTTP METHOD : GET
2019-07-18 18:20:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-18 18:20:32 -参数 : []
2019-07-18 18:20:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-18 18:20:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-18 18:20:32 -<==      Total: 0
2019-07-18 18:20:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-18 18:20:32 -==> Parameters: 1(Long), 0(String)
2019-07-18 18:20:32 -<==      Total: 1
2019-07-18 18:20:32 -耗时 : 20
2019-07-18 18:20:32 -返回值 : com.bootdo.common.utils.PageUtils@8d5e8ae
2019-07-18 18:20:32 -请求地址 : http://localhost:8081/main
2019-07-18 18:20:32 -HTTP METHOD : GET
2019-07-18 18:20:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-18 18:20:32 -参数 : []
2019-07-18 18:20:32 -耗时 : 1
2019-07-18 18:20:32 -返回值 : main
2019-07-18 18:20:34 -请求地址 : http://localhost:8081/print/print
2019-07-18 18:20:34 -HTTP METHOD : GET
2019-07-18 18:20:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-18 18:20:34 -参数 : []
2019-07-18 18:20:34 -耗时 : 0
2019-07-18 18:20:34 -返回值 : print/print/print
2019-07-18 18:20:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-18 18:20:35 -HTTP METHOD : GET
2019-07-18 18:20:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-18 18:20:35 -参数 : [userType]
2019-07-18 18:20:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-18 18:20:35 -==> Parameters: userType(String)
2019-07-18 18:20:35 -<==      Total: 4
2019-07-18 18:20:35 -耗时 : 6
2019-07-18 18:20:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-18 18:20:35 -请求地址 : http://localhost:8081/print/print/list
2019-07-18 18:20:35 -HTTP METHOD : GET
2019-07-18 18:20:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-18 18:20:35 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-18 18:20:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-18 18:20:35 -==> Parameters: 0(Integer), 100(Integer)
2019-07-18 18:20:35 -<==      Total: 100
2019-07-18 18:20:35 -==>  Preparing: select count(*) from print 
2019-07-18 18:20:35 -==> Parameters: 
2019-07-18 18:20:35 -<==      Total: 1
2019-07-18 18:20:35 -耗时 : 20
2019-07-18 18:20:35 -返回值 : com.bootdo.common.utils.PageUtils@3027dfb7
2019-07-18 18:20:36 -请求地址 : http://localhost:8081/print/print/printEdit/112
2019-07-18 18:20:36 -HTTP METHOD : GET
2019-07-18 18:20:36 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-07-18 18:20:36 -参数 : [112, {}]
2019-07-18 18:20:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-07-18 18:20:36 -==> Parameters: 112(Long)
2019-07-18 18:20:36 -<==      Total: 1
2019-07-18 18:20:36 -耗时 : 3
2019-07-18 18:20:36 -返回值 : print/print/printEdit

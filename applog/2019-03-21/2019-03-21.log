2019-03-21 09:56:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 9872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 09:56:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 09:56:52 -The following profiles are active: dev
2019-03-21 09:56:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d8305c2: startup date [Thu Mar 21 09:56:52 CST 2019]; root of context hierarchy
2019-03-21 09:57:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 09:57:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$23a40a3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$15fd38e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 09:57:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 09:57:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 09:57:14 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 09:57:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 09:57:14 -Starting service [Tomcat]
2019-03-21 09:57:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 09:57:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 09:57:14 -Initializing Spring embedded WebApplicationContext
2019-03-21 09:57:14 -Root WebApplicationContext: initialization completed in 22307 ms
2019-03-21 09:57:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 09:57:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 09:57:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 09:57:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 09:57:15 -Filter xssFilter was not registered (disabled)
2019-03-21 09:57:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 09:57:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 09:57:15 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 09:57:15 -Servlet dispatcherServlet mapped to [/]
2019-03-21 09:57:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d8305c2: startup date [Thu Mar 21 09:56:52 CST 2019]; root of context hierarchy
2019-03-21 09:57:20 -Using default implementation for ThreadExecutor
2019-03-21 09:57:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 09:57:21 -Quartz Scheduler v.2.2.1 created.
2019-03-21 09:57:21 -RAMJobStore initialized.
2019-03-21 09:57:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 09:57:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 09:57:21 -Quartz scheduler version: 2.2.1
2019-03-21 09:57:21 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4a47bc9c
2019-03-21 09:57:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 09:57:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 09:57:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 09:57:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 09:57:25 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 09:57:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 09:57:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 09:57:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 09:57:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 09:57:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 09:57:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 09:57:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 09:57:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 09:57:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 09:57:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 09:57:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 09:57:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 09:57:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 09:57:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 09:57:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 09:57:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 09:57:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 09:57:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 09:57:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 09:57:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 09:57:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 09:57:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 09:57:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 09:57:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 09:57:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 09:57:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 09:57:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 09:57:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 09:57:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 09:57:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 09:57:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 09:57:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 09:57:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 09:57:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 09:57:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 09:57:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 09:57:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 09:57:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 09:57:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 09:57:25 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 09:57:25 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 09:57:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 09:57:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 09:57:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 09:57:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 09:57:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 09:57:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 09:57:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 09:57:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 09:57:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 09:57:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 09:57:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 09:57:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 09:57:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 09:57:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 09:57:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 09:57:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 09:57:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 09:57:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 09:57:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 09:57:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 09:57:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 09:57:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 09:57:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 09:57:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 09:57:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 09:57:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 09:57:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 09:57:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 09:57:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 09:57:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 09:57:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 09:57:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 09:57:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 09:57:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 09:57:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 09:57:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 09:57:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 09:57:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 09:57:25 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 09:57:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 09:57:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 09:57:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 09:57:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 09:57:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 09:57:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 09:57:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 09:57:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 09:57:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 09:57:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d8305c2: startup date [Thu Mar 21 09:56:52 CST 2019]; root of context hierarchy
2019-03-21 09:57:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 09:57:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 09:57:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 09:57:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 09:57:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 09:57:31 -Registering beans for JMX exposure on startup
2019-03-21 09:57:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 09:57:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 09:57:31 -Starting beans in phase 2147483647
2019-03-21 09:57:31 -Context refreshed
2019-03-21 09:57:31 -Found 1 custom documentation plugin(s)
2019-03-21 09:57:31 -Scanning for api listing references
2019-03-21 09:57:32 -Generating unique operation named: removeUsingPOST_1
2019-03-21 09:57:32 -Generating unique operation named: addUsingGET_1
2019-03-21 09:57:32 -Generating unique operation named: editUsingGET_1
2019-03-21 09:57:32 -Generating unique operation named: listUsingGET_1
2019-03-21 09:57:32 -Generating unique operation named: removeUsingPOST_2
2019-03-21 09:57:32 -Generating unique operation named: removeUsingPOST_3
2019-03-21 09:57:32 -Generating unique operation named: saveUsingPOST_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingGET_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingPOST_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingPUT_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 09:57:32 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_2
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_2
2019-03-21 09:57:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_2
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_4
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_5
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 09:57:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_3
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_3
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_3
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_6
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_7
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_4
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_4
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_4
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_8
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_9
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 09:57:33 -Generating unique operation named: ElecUsingGET_1
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_5
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_5
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_5
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_10
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_11
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_6
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_6
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_6
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_7
2019-03-21 09:57:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_7
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_12
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_13
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 09:57:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_7
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_8
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_8
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_14
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_15
2019-03-21 09:57:33 -Generating unique operation named: saveUsingPOST_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingGET_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPOST_8
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPUT_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 09:57:33 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 09:57:33 -Generating unique operation named: addUsingGET_8
2019-03-21 09:57:33 -Generating unique operation named: editUsingGET_9
2019-03-21 09:57:33 -Generating unique operation named: listUsingGET_9
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_16
2019-03-21 09:57:33 -Generating unique operation named: removeUsingPOST_17
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingGET_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPUT_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 09:57:34 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_9
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_10
2019-03-21 09:57:34 -Generating unique operation named: infoUsingGET_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingPOST_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingPUT_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 09:57:34 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_10
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_18
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_19
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_10
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_11
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_20
2019-03-21 09:57:34 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_10
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_11
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_12
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_21
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_10
2019-03-21 09:57:34 -Generating unique operation named: treeUsingGET_1
2019-03-21 09:57:34 -Generating unique operation named: treeUsingGET_2
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_11
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_11
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_12
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_13
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_22
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_23
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_11
2019-03-21 09:57:34 -Generating unique operation named: updateUsingGET_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_12
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPUT_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 09:57:34 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_12
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_13
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_14
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_24
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_25
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_12
2019-03-21 09:57:34 -Generating unique operation named: updateUsingGET_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_13
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPUT_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 09:57:34 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_13
2019-03-21 09:57:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_14
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_15
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_13
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_14
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_14
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_16
2019-03-21 09:57:34 -Generating unique operation named: listUsingHEAD_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingPOST_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingPUT_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingPATCH_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingDELETE_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 09:57:34 -Generating unique operation named: listUsingTRACE_1
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_14
2019-03-21 09:57:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_15
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_17
2019-03-21 09:57:34 -Generating unique operation named: removeUsingPOST_26
2019-03-21 09:57:34 -Generating unique operation named: saveUsingPOST_15
2019-03-21 09:57:34 -Generating unique operation named: treeUsingGET_3
2019-03-21 09:57:34 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 09:57:34 -Generating unique operation named: updateUsingPOST_15
2019-03-21 09:57:34 -Generating unique operation named: addUsingGET_15
2019-03-21 09:57:34 -Generating unique operation named: editUsingGET_16
2019-03-21 09:57:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 09:57:34 -Generating unique operation named: listUsingGET_18
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_27
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_28
2019-03-21 09:57:35 -Generating unique operation named: saveUsingPOST_16
2019-03-21 09:57:35 -Generating unique operation named: updateUsingGET_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPOST_16
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPUT_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 09:57:35 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 09:57:35 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 09:57:35 -Generating unique operation named: addUsingGET_16
2019-03-21 09:57:35 -Generating unique operation named: editUsingGET_17
2019-03-21 09:57:35 -Generating unique operation named: listUsingGET_19
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_29
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_30
2019-03-21 09:57:35 -Generating unique operation named: saveUsingPOST_17
2019-03-21 09:57:35 -Generating unique operation named: updateUsingGET_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPOST_17
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPUT_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 09:57:35 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 09:57:35 -Generating unique operation named: addUsingGET_17
2019-03-21 09:57:35 -Generating unique operation named: editUsingGET_18
2019-03-21 09:57:35 -Generating unique operation named: listUsingGET_20
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_31
2019-03-21 09:57:35 -Generating unique operation named: removeUsingPOST_32
2019-03-21 09:57:35 -Generating unique operation named: saveUsingPOST_18
2019-03-21 09:57:35 -Generating unique operation named: updateUsingGET_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPOST_18
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPUT_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 09:57:35 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 09:57:35 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 09:57:35 -Starting Quartz Scheduler now
2019-03-21 09:57:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 09:57:35 -Starting...
2019-03-21 09:57:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 09:57:35 -Started.
2019-03-21 09:57:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 09:57:35 -Using a shared selector for servlet write/read
2019-03-21 09:57:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 09:57:35 -Started BootdoApplication in 48.307 seconds (JVM running for 52.377)
2019-03-21 09:57:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 09:57:36 -==> Parameters: 
2019-03-21 09:57:36 -<==      Total: 1
2019-03-21 09:57:50 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 09:57:50 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 09:57:50 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-03-21 09:57:51 -Enabling session validation scheduler...
2019-03-21 09:57:51 -请求地址 : http://localhost:8081/login;JSESSIONID=eefbd039-c4b8-4b38-87ad-8b627fedcbc8
2019-03-21 09:57:51 -HTTP METHOD : GET
2019-03-21 09:57:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 09:57:51 -参数 : [{}]
2019-03-21 09:57:51 -耗时 : 6
2019-03-21 09:57:51 -返回值 : login
2019-03-21 09:57:55 -请求地址 : http://localhost:8081/getVerify
2019-03-21 09:57:55 -HTTP METHOD : GET
2019-03-21 09:57:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 09:57:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b3eda89, org.apache.shiro.web.servlet.ShiroHttpServletResponse@477fd9fa]
2019-03-21 09:58:01 -2997
2019-03-21 09:58:01 -耗时 : 6268
2019-03-21 09:58:01 -返回值 : null
2019-03-21 09:58:06 -请求地址 : http://localhost:8081/login
2019-03-21 09:58:06 -HTTP METHOD : POST
2019-03-21 09:58:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 09:58:06 -参数 : [admin, 111111, 2997, org.apache.shiro.web.servlet.ShiroHttpServletRequest@26e9de40]
2019-03-21 09:58:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 09:58:06 -==> Parameters: admin(String)
2019-03-21 09:58:06 -<==      Total: 1
2019-03-21 09:58:06 -耗时 : 279
2019-03-21 09:58:06 -返回值 : {msg=操作成功, code=0}
2019-03-21 09:58:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 09:58:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 09:58:07 -==> Parameters: 1(Long), admin(String), 登录(String), 279(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 09:58:07.087(Timestamp)
2019-03-21 09:58:07 -<==    Updates: 1
2019-03-21 09:58:07 -请求地址 : http://localhost:8081/index
2019-03-21 09:58:07 -HTTP METHOD : GET
2019-03-21 09:58:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 09:58:07 -参数 : [{}]
2019-03-21 09:58:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 09:58:07 -==> Parameters: 1(Long)
2019-03-21 09:58:07 -<==      Total: 46
2019-03-21 09:58:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 09:58:07 -==> Parameters: 138(Long)
2019-03-21 09:58:07 -<==      Total: 1
2019-03-21 09:58:07 -耗时 : 395
2019-03-21 09:58:07 -返回值 : index_v1
2019-03-21 09:58:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 09:58:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 395(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 09:58:07.904(Timestamp)
2019-03-21 09:58:07 -<==    Updates: 1
2019-03-21 09:58:08 -请求地址 : http://localhost:8081/main
2019-03-21 09:58:08 -HTTP METHOD : GET
2019-03-21 09:58:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 09:58:08 -参数 : []
2019-03-21 09:58:08 -耗时 : 0
2019-03-21 09:58:08 -返回值 : main
2019-03-21 09:58:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 09:58:09 -HTTP METHOD : GET
2019-03-21 09:58:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 09:58:09 -参数 : []
2019-03-21 09:58:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 09:58:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 09:58:09 -<==      Total: 0
2019-03-21 09:58:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 09:58:09 -==> Parameters: 1(Long), 0(String)
2019-03-21 09:58:09 -<==      Total: 1
2019-03-21 09:58:09 -耗时 : 60
2019-03-21 09:58:09 -返回值 : com.bootdo.common.utils.PageUtils@2632f255
2019-03-21 09:58:09 -请求地址 : http://localhost:8081/main
2019-03-21 09:58:09 -HTTP METHOD : GET
2019-03-21 09:58:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 09:58:09 -参数 : []
2019-03-21 09:58:09 -耗时 : 2
2019-03-21 09:58:09 -返回值 : main
2019-03-21 09:58:26 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-21 09:58:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 09:58:28 -==> Parameters: 1(Long)
2019-03-21 09:58:28 -<==      Total: 90
2019-03-21 09:58:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 09:58:28 -HTTP METHOD : GET
2019-03-21 09:58:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 09:58:28 -参数 : []
2019-03-21 09:58:28 -耗时 : 1
2019-03-21 09:58:28 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 09:58:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 09:58:30 -HTTP METHOD : GET
2019-03-21 09:58:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 09:58:30 -参数 : [userType]
2019-03-21 09:58:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 09:58:30 -==> Parameters: userType(String)
2019-03-21 09:58:30 -<==      Total: 2
2019-03-21 09:58:30 -耗时 : 51
2019-03-21 09:58:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 09:58:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 09:58:30 -HTTP METHOD : GET
2019-03-21 09:58:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 09:58:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 09:58:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 09:58:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 09:58:30 -<==      Total: 4
2019-03-21 09:58:30 -==>  Preparing: select count(*) from elec_log 
2019-03-21 09:58:30 -==> Parameters: 
2019-03-21 09:58:30 -<==      Total: 1
2019-03-21 09:58:30 -耗时 : 46
2019-03-21 09:58:30 -返回值 : com.bootdo.common.utils.PageUtils@22e8dd5a
2019-03-21 09:58:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 09:58:54 -HTTP METHOD : GET
2019-03-21 09:58:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 09:58:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-21 09:58:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 09:58:54 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 09:58:54 -<==      Total: 1
2019-03-21 09:58:54 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-21 09:58:54 -==> Parameters: 2019-03-10(String)
2019-03-21 09:58:54 -<==      Total: 1
2019-03-21 09:58:54 -耗时 : 29
2019-03-21 09:58:54 -返回值 : com.bootdo.common.utils.PageUtils@7382d99b
2019-03-21 09:59:37 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$5ec9cc11.HeatLog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-21 09:59:45 -请求地址 : http://localhost:8081/index
2019-03-21 09:59:45 -HTTP METHOD : GET
2019-03-21 09:59:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 09:59:45 -参数 : [{}]
2019-03-21 09:59:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 09:59:45 -==> Parameters: 1(Long)
2019-03-21 09:59:45 -<==      Total: 46
2019-03-21 09:59:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 09:59:45 -==> Parameters: 138(Long)
2019-03-21 09:59:45 -<==      Total: 1
2019-03-21 09:59:45 -耗时 : 38
2019-03-21 09:59:45 -返回值 : index_v1
2019-03-21 09:59:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 09:59:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 09:59:45.628(Timestamp)
2019-03-21 09:59:45 -<==    Updates: 1
2019-03-21 09:59:45 -请求地址 : http://localhost:8081/main
2019-03-21 09:59:45 -HTTP METHOD : GET
2019-03-21 09:59:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 09:59:45 -参数 : []
2019-03-21 09:59:45 -耗时 : 73
2019-03-21 09:59:45 -返回值 : main
2019-03-21 09:59:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 09:59:46 -HTTP METHOD : GET
2019-03-21 09:59:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 09:59:46 -参数 : []
2019-03-21 09:59:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 09:59:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 09:59:46 -<==      Total: 0
2019-03-21 09:59:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 09:59:46 -==> Parameters: 1(Long), 0(String)
2019-03-21 09:59:46 -<==      Total: 1
2019-03-21 09:59:46 -耗时 : 31
2019-03-21 09:59:46 -返回值 : com.bootdo.common.utils.PageUtils@27494fd7
2019-03-21 09:59:46 -请求地址 : http://localhost:8081/main
2019-03-21 09:59:46 -HTTP METHOD : GET
2019-03-21 09:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 09:59:46 -参数 : []
2019-03-21 09:59:46 -耗时 : 2
2019-03-21 09:59:46 -返回值 : main
2019-03-21 10:00:16 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 10:01:18 -请求地址 : http://localhost:8081/login;JSESSIONID=110f7bb0-4123-47b6-b863-d4e097848f79
2019-03-21 10:01:18 -HTTP METHOD : GET
2019-03-21 10:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 10:01:18 -参数 : [{}]
2019-03-21 10:01:18 -耗时 : 2
2019-03-21 10:01:18 -返回值 : login
2019-03-21 10:01:18 -请求地址 : http://localhost:8081/getVerify
2019-03-21 10:01:18 -HTTP METHOD : GET
2019-03-21 10:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 10:01:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1df94bae, org.apache.shiro.web.servlet.ShiroHttpServletResponse@ee6b42c]
2019-03-21 10:01:18 -6039
2019-03-21 10:01:18 -耗时 : 14
2019-03-21 10:01:18 -返回值 : null
2019-03-21 10:01:18 -请求地址 : http://localhost:8081/login
2019-03-21 10:01:18 -HTTP METHOD : GET
2019-03-21 10:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 10:01:18 -参数 : [{}]
2019-03-21 10:01:18 -耗时 : 2
2019-03-21 10:01:18 -返回值 : login
2019-03-21 10:01:26 -请求地址 : http://localhost:8081/login
2019-03-21 10:01:26 -HTTP METHOD : POST
2019-03-21 10:01:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 10:01:26 -参数 : [admin, 111111, 6039, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e80b6e9]
2019-03-21 10:01:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 10:01:26 -==> Parameters: admin(String)
2019-03-21 10:01:26 -<==      Total: 1
2019-03-21 10:01:26 -耗时 : 10
2019-03-21 10:01:26 -返回值 : {msg=操作成功, code=0}
2019-03-21 10:01:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:01:26 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 10:01:26.445(Timestamp)
2019-03-21 10:01:26 -请求地址 : http://localhost:8081/index
2019-03-21 10:01:26 -HTTP METHOD : GET
2019-03-21 10:01:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:01:26 -参数 : [{}]
2019-03-21 10:01:26 -<==    Updates: 1
2019-03-21 10:01:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:01:26 -==> Parameters: 1(Long)
2019-03-21 10:01:26 -<==      Total: 46
2019-03-21 10:01:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:01:26 -==> Parameters: 138(Long)
2019-03-21 10:01:26 -<==      Total: 1
2019-03-21 10:01:26 -耗时 : 104
2019-03-21 10:01:26 -返回值 : index_v1
2019-03-21 10:01:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:01:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 104(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:01:26.578(Timestamp)
2019-03-21 10:01:26 -请求地址 : http://localhost:8081/main
2019-03-21 10:01:26 -HTTP METHOD : GET
2019-03-21 10:01:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:01:26 -参数 : []
2019-03-21 10:01:26 -耗时 : 1
2019-03-21 10:01:26 -返回值 : main
2019-03-21 10:01:26 -<==    Updates: 1
2019-03-21 10:01:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:01:27 -HTTP METHOD : GET
2019-03-21 10:01:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:01:27 -参数 : []
2019-03-21 10:01:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:01:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:01:28 -请求地址 : http://localhost:8081/main
2019-03-21 10:01:28 -HTTP METHOD : GET
2019-03-21 10:01:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:01:28 -参数 : []
2019-03-21 10:01:28 -耗时 : 0
2019-03-21 10:01:28 -返回值 : main
2019-03-21 10:01:28 -<==      Total: 0
2019-03-21 10:01:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:01:28 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:01:28 -<==      Total: 1
2019-03-21 10:01:28 -耗时 : 864
2019-03-21 10:01:28 -返回值 : com.bootdo.common.utils.PageUtils@1e9ca8b4
2019-03-21 10:01:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:01:36 -==> Parameters: 1(Long)
2019-03-21 10:01:36 -<==      Total: 90
2019-03-21 10:01:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:01:36 -HTTP METHOD : GET
2019-03-21 10:01:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:01:36 -参数 : []
2019-03-21 10:01:36 -耗时 : 0
2019-03-21 10:01:36 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:01:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:01:37 -HTTP METHOD : GET
2019-03-21 10:01:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:01:37 -参数 : [userType]
2019-03-21 10:01:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:01:37 -==> Parameters: userType(String)
2019-03-21 10:01:37 -<==      Total: 2
2019-03-21 10:01:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:01:37 -耗时 : 34
2019-03-21 10:01:37 -HTTP METHOD : GET
2019-03-21 10:01:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:01:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:01:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:01:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:01:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:01:37 -<==      Total: 4
2019-03-21 10:01:37 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:01:37 -==> Parameters: 
2019-03-21 10:01:37 -<==      Total: 1
2019-03-21 10:01:37 -耗时 : 84
2019-03-21 10:01:37 -返回值 : com.bootdo.common.utils.PageUtils@353bb19
2019-03-21 10:01:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:01:37 -HTTP METHOD : GET
2019-03-21 10:01:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:01:37 -参数 : []
2019-03-21 10:01:37 -耗时 : 1
2019-03-21 10:01:37 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:01:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:01:38 -HTTP METHOD : GET
2019-03-21 10:01:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:01:38 -参数 : [userType]
2019-03-21 10:01:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:01:38 -==> Parameters: userType(String)
2019-03-21 10:01:38 -<==      Total: 2
2019-03-21 10:01:38 -耗时 : 6
2019-03-21 10:01:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:01:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:01:38 -HTTP METHOD : GET
2019-03-21 10:01:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:01:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:01:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:01:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:01:38 -<==      Total: 3
2019-03-21 10:01:38 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:01:38 -==> Parameters: 
2019-03-21 10:01:38 -<==      Total: 1
2019-03-21 10:01:38 -耗时 : 469
2019-03-21 10:01:38 -返回值 : com.bootdo.common.utils.PageUtils@22dbae86
2019-03-21 10:01:38 -Subject does not have permission [moneyLog:heatLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:heatLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$5ec9cc11.HeatLog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-21 10:06:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 17604 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 10:06:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 10:06:11 -The following profiles are active: dev
2019-03-21 10:06:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Thu Mar 21 10:06:11 CST 2019]; root of context hierarchy
2019-03-21 10:06:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 10:06:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3e9c9378] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30f5c21f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 10:06:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 10:06:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:06:25 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 10:06:25 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:06:25 -Starting service [Tomcat]
2019-03-21 10:06:25 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 10:06:25 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 10:06:26 -Initializing Spring embedded WebApplicationContext
2019-03-21 10:06:26 -Root WebApplicationContext: initialization completed in 14202 ms
2019-03-21 10:06:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 10:06:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 10:06:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 10:06:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 10:06:27 -Filter xssFilter was not registered (disabled)
2019-03-21 10:06:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 10:06:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 10:06:27 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 10:06:27 -Servlet dispatcherServlet mapped to [/]
2019-03-21 10:06:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Thu Mar 21 10:06:11 CST 2019]; root of context hierarchy
2019-03-21 10:06:32 -Using default implementation for ThreadExecutor
2019-03-21 10:06:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 10:06:32 -Quartz Scheduler v.2.2.1 created.
2019-03-21 10:06:32 -RAMJobStore initialized.
2019-03-21 10:06:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 10:06:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 10:06:32 -Quartz scheduler version: 2.2.1
2019-03-21 10:06:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@663cf5d7
2019-03-21 10:06:33 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 10:06:33 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 10:06:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 10:06:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 10:06:36 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 10:06:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 10:06:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 10:06:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 10:06:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 10:06:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 10:06:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 10:06:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 10:06:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 10:06:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 10:06:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 10:06:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:06:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 10:06:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:06:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 10:06:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 10:06:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 10:06:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 10:06:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 10:06:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 10:06:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 10:06:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 10:06:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 10:06:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 10:06:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 10:06:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 10:06:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 10:06:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:06:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 10:06:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 10:06:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 10:06:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:06:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:06:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 10:06:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 10:06:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 10:06:36 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 10:06:36 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:06:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 10:06:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 10:06:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 10:06:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:06:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 10:06:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 10:06:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 10:06:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 10:06:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 10:06:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 10:06:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 10:06:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 10:06:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 10:06:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 10:06:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 10:06:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 10:06:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 10:06:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 10:06:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 10:06:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 10:06:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 10:06:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 10:06:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 10:06:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 10:06:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 10:06:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 10:06:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 10:06:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 10:06:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 10:06:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 10:06:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 10:06:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 10:06:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:06:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 10:06:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:06:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 10:06:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 10:06:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:06:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 10:06:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 10:06:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 10:06:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 10:06:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 10:06:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 10:06:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 10:06:37 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 10:06:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 10:06:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:06:37 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:06:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 10:06:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:06:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 10:06:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 10:06:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 10:06:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 10:06:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 10:06:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 10:06:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:06:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@726e5805: startup date [Thu Mar 21 10:06:11 CST 2019]; root of context hierarchy
2019-03-21 10:06:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:06:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:06:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:06:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 10:06:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 10:06:42 -Registering beans for JMX exposure on startup
2019-03-21 10:06:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 10:06:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 10:06:43 -Starting beans in phase 2147483647
2019-03-21 10:06:43 -Context refreshed
2019-03-21 10:06:43 -Found 1 custom documentation plugin(s)
2019-03-21 10:06:43 -Scanning for api listing references
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_1
2019-03-21 10:06:45 -Generating unique operation named: addUsingGET_1
2019-03-21 10:06:45 -Generating unique operation named: editUsingGET_1
2019-03-21 10:06:45 -Generating unique operation named: listUsingGET_1
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_2
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_3
2019-03-21 10:06:45 -Generating unique operation named: saveUsingPOST_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingGET_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPOST_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPUT_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 10:06:45 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 10:06:45 -Generating unique operation named: addUsingGET_2
2019-03-21 10:06:45 -Generating unique operation named: editUsingGET_2
2019-03-21 10:06:45 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 10:06:45 -Generating unique operation named: listUsingGET_2
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_4
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_5
2019-03-21 10:06:45 -Generating unique operation named: saveUsingPOST_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingGET_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPOST_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPUT_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 10:06:45 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 10:06:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 10:06:45 -Generating unique operation named: addUsingGET_3
2019-03-21 10:06:45 -Generating unique operation named: editUsingGET_3
2019-03-21 10:06:45 -Generating unique operation named: listUsingGET_3
2019-03-21 10:06:45 -Generating unique operation named: removeUsingPOST_6
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_7
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_4
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_4
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_4
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_8
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_9
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 10:06:46 -Generating unique operation named: ElecUsingGET_1
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_5
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_5
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_5
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_10
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_11
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_6
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_6
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_6
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_7
2019-03-21 10:06:46 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_7
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_12
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_13
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 10:06:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_7
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_8
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_8
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_14
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_15
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_8
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_9
2019-03-21 10:06:46 -Generating unique operation named: listUsingGET_9
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_16
2019-03-21 10:06:46 -Generating unique operation named: removeUsingPOST_17
2019-03-21 10:06:46 -Generating unique operation named: saveUsingPOST_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingGET_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPOST_9
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPUT_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 10:06:46 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 10:06:46 -Generating unique operation named: addUsingGET_9
2019-03-21 10:06:46 -Generating unique operation named: editUsingGET_10
2019-03-21 10:06:46 -Generating unique operation named: infoUsingGET_1
2019-03-21 10:06:46 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 10:06:46 -Generating unique operation named: infoUsingPOST_1
2019-03-21 10:06:46 -Generating unique operation named: infoUsingPUT_1
2019-03-21 10:06:46 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 10:06:47 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 10:06:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 10:06:47 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 10:06:47 -Generating unique operation named: listUsingGET_10
2019-03-21 10:06:47 -Generating unique operation named: removeUsingPOST_18
2019-03-21 10:06:47 -Generating unique operation named: removeUsingPOST_19
2019-03-21 10:06:47 -Generating unique operation named: saveUsingPOST_9
2019-03-21 10:06:47 -Generating unique operation named: updateUsingPOST_10
2019-03-21 10:06:47 -Generating unique operation named: listUsingGET_11
2019-03-21 10:06:47 -Generating unique operation named: removeUsingPOST_20
2019-03-21 10:06:47 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 10:06:47 -Generating unique operation named: addUsingGET_10
2019-03-21 10:06:47 -Generating unique operation named: editUsingGET_11
2019-03-21 10:06:47 -Generating unique operation named: listUsingGET_12
2019-03-21 10:06:47 -Generating unique operation named: removeUsingPOST_21
2019-03-21 10:06:47 -Generating unique operation named: saveUsingPOST_10
2019-03-21 10:06:47 -Generating unique operation named: treeUsingGET_1
2019-03-21 10:06:47 -Generating unique operation named: treeUsingGET_2
2019-03-21 10:06:47 -Generating unique operation named: updateUsingPOST_11
2019-03-21 10:06:47 -Generating unique operation named: addUsingGET_11
2019-03-21 10:06:47 -Generating unique operation named: editUsingGET_12
2019-03-21 10:06:47 -Generating unique operation named: listUsingGET_13
2019-03-21 10:06:47 -Generating unique operation named: removeUsingPOST_22
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_23
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingGET_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPOST_12
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPUT_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 10:06:48 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 10:06:48 -Generating unique operation named: addUsingGET_12
2019-03-21 10:06:48 -Generating unique operation named: editUsingGET_13
2019-03-21 10:06:48 -Generating unique operation named: listUsingGET_14
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_24
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_25
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_12
2019-03-21 10:06:48 -Generating unique operation named: updateUsingGET_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPOST_13
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPUT_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 10:06:48 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 10:06:48 -Generating unique operation named: addUsingGET_13
2019-03-21 10:06:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 10:06:48 -Generating unique operation named: editUsingGET_14
2019-03-21 10:06:48 -Generating unique operation named: listUsingGET_15
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_13
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_14
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPOST_14
2019-03-21 10:06:48 -Generating unique operation named: listUsingGET_16
2019-03-21 10:06:48 -Generating unique operation named: listUsingHEAD_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingPOST_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingPUT_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingPATCH_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingDELETE_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 10:06:48 -Generating unique operation named: listUsingTRACE_1
2019-03-21 10:06:48 -Generating unique operation named: addUsingGET_14
2019-03-21 10:06:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 10:06:48 -Generating unique operation named: editUsingGET_15
2019-03-21 10:06:48 -Generating unique operation named: listUsingGET_17
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_26
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_15
2019-03-21 10:06:48 -Generating unique operation named: treeUsingGET_3
2019-03-21 10:06:48 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPOST_15
2019-03-21 10:06:48 -Generating unique operation named: addUsingGET_15
2019-03-21 10:06:48 -Generating unique operation named: editUsingGET_16
2019-03-21 10:06:48 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 10:06:48 -Generating unique operation named: listUsingGET_18
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_27
2019-03-21 10:06:48 -Generating unique operation named: removeUsingPOST_28
2019-03-21 10:06:48 -Generating unique operation named: saveUsingPOST_16
2019-03-21 10:06:48 -Generating unique operation named: updateUsingGET_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPOST_16
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPUT_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 10:06:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 10:06:49 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 10:06:49 -Generating unique operation named: addUsingGET_16
2019-03-21 10:06:49 -Generating unique operation named: editUsingGET_17
2019-03-21 10:06:49 -Generating unique operation named: listUsingGET_19
2019-03-21 10:06:49 -Generating unique operation named: removeUsingPOST_29
2019-03-21 10:06:49 -Generating unique operation named: removeUsingPOST_30
2019-03-21 10:06:49 -Generating unique operation named: saveUsingPOST_17
2019-03-21 10:06:49 -Generating unique operation named: updateUsingGET_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPOST_17
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPUT_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 10:06:49 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 10:06:49 -Generating unique operation named: addUsingGET_17
2019-03-21 10:06:49 -Generating unique operation named: editUsingGET_18
2019-03-21 10:06:49 -Generating unique operation named: listUsingGET_20
2019-03-21 10:06:49 -Generating unique operation named: removeUsingPOST_31
2019-03-21 10:06:49 -Generating unique operation named: removeUsingPOST_32
2019-03-21 10:06:49 -Generating unique operation named: saveUsingPOST_18
2019-03-21 10:06:49 -Generating unique operation named: updateUsingGET_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPOST_18
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPUT_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 10:06:49 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 10:06:49 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 10:06:49 -Starting Quartz Scheduler now
2019-03-21 10:06:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 10:06:49 -Starting...
2019-03-21 10:06:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:06:49 -Started.
2019-03-21 10:06:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 10:06:49 -Using a shared selector for servlet write/read
2019-03-21 10:06:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 10:06:49 -Started BootdoApplication in 40.371 seconds (JVM running for 42.434)
2019-03-21 10:06:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 10:06:50 -==> Parameters: 
2019-03-21 10:06:50 -<==      Total: 1
2019-03-21 10:06:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 10:06:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 10:06:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-03-21 10:06:58 -Enabling session validation scheduler...
2019-03-21 10:06:58 -请求地址 : http://localhost:8081/login;JSESSIONID=17c96695-e81d-4384-b6d2-bc01c1ce5fd5
2019-03-21 10:06:58 -HTTP METHOD : GET
2019-03-21 10:06:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 10:06:58 -参数 : [{}]
2019-03-21 10:06:58 -耗时 : 4
2019-03-21 10:06:58 -返回值 : login
2019-03-21 10:07:00 -请求地址 : http://localhost:8081/getVerify
2019-03-21 10:07:00 -HTTP METHOD : GET
2019-03-21 10:07:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 10:07:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73808bbd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d1731f9]
2019-03-21 10:07:02 -2128
2019-03-21 10:07:02 -耗时 : 1796
2019-03-21 10:07:02 -返回值 : null
2019-03-21 10:07:06 -请求地址 : http://localhost:8081/login
2019-03-21 10:07:06 -HTTP METHOD : POST
2019-03-21 10:07:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 10:07:06 -参数 : [admin, 111111, 2128, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fe243a7]
2019-03-21 10:07:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 10:07:06 -==> Parameters: admin(String)
2019-03-21 10:07:06 -<==      Total: 1
2019-03-21 10:07:07 -耗时 : 171
2019-03-21 10:07:07 -返回值 : {msg=操作成功, code=0}
2019-03-21 10:07:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 10:07:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:07:07 -==> Parameters: 1(Long), admin(String), 登录(String), 172(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 10:07:07.126(Timestamp)
2019-03-21 10:07:07 -请求地址 : http://localhost:8081/index
2019-03-21 10:07:07 -HTTP METHOD : GET
2019-03-21 10:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:07:07 -参数 : [{}]
2019-03-21 10:07:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:07:07 -<==    Updates: 1
2019-03-21 10:07:07 -==> Parameters: 1(Long)
2019-03-21 10:07:07 -<==      Total: 46
2019-03-21 10:07:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:07:07 -==> Parameters: 138(Long)
2019-03-21 10:07:07 -<==      Total: 1
2019-03-21 10:07:07 -耗时 : 704
2019-03-21 10:07:07 -返回值 : index_v1
2019-03-21 10:07:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:07:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 704(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:07:07.971(Timestamp)
2019-03-21 10:07:08 -请求地址 : http://localhost:8081/main
2019-03-21 10:07:08 -HTTP METHOD : GET
2019-03-21 10:07:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:07:08 -参数 : []
2019-03-21 10:07:08 -耗时 : 0
2019-03-21 10:07:08 -返回值 : main
2019-03-21 10:07:08 -请求地址 : http://localhost:8081/main
2019-03-21 10:07:08 -HTTP METHOD : GET
2019-03-21 10:07:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:07:08 -参数 : []
2019-03-21 10:07:08 -耗时 : 3
2019-03-21 10:07:08 -返回值 : main
2019-03-21 10:07:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:07:08 -HTTP METHOD : GET
2019-03-21 10:07:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:07:08 -参数 : []
2019-03-21 10:07:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:07:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:07:09 -<==    Updates: 1
2019-03-21 10:07:09 -<==      Total: 0
2019-03-21 10:07:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:07:09 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:07:09 -<==      Total: 1
2019-03-21 10:07:09 -耗时 : 718
2019-03-21 10:07:09 -返回值 : com.bootdo.common.utils.PageUtils@4745eba6
2019-03-21 10:07:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:07:33 -==> Parameters: 1(Long)
2019-03-21 10:07:33 -<==      Total: 90
2019-03-21 10:07:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:07:33 -HTTP METHOD : GET
2019-03-21 10:07:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:07:33 -参数 : []
2019-03-21 10:07:33 -耗时 : 1
2019-03-21 10:07:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:07:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:33 -HTTP METHOD : GET
2019-03-21 10:07:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:33 -参数 : [userType]
2019-03-21 10:07:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:33 -==> Parameters: userType(String)
2019-03-21 10:07:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:07:33 -HTTP METHOD : GET
2019-03-21 10:07:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:07:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:07:33 -<==      Total: 2
2019-03-21 10:07:33 -耗时 : 66
2019-03-21 10:07:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:07:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:33 -<==      Total: 4
2019-03-21 10:07:33 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:07:33 -==> Parameters: 
2019-03-21 10:07:33 -<==      Total: 1
2019-03-21 10:07:33 -耗时 : 94
2019-03-21 10:07:33 -返回值 : com.bootdo.common.utils.PageUtils@f26688c
2019-03-21 10:07:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:07:34 -HTTP METHOD : GET
2019-03-21 10:07:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:07:34 -参数 : []
2019-03-21 10:07:34 -耗时 : 1
2019-03-21 10:07:34 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:07:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:34 -HTTP METHOD : GET
2019-03-21 10:07:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:34 -参数 : [userType]
2019-03-21 10:07:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:34 -==> Parameters: userType(String)
2019-03-21 10:07:34 -<==      Total: 2
2019-03-21 10:07:34 -耗时 : 5
2019-03-21 10:07:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:07:34 -HTTP METHOD : GET
2019-03-21 10:07:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:07:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:07:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:07:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:34 -<==      Total: 3
2019-03-21 10:07:34 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:07:34 -==> Parameters: 
2019-03-21 10:07:34 -<==      Total: 1
2019-03-21 10:07:34 -耗时 : 98
2019-03-21 10:07:34 -返回值 : com.bootdo.common.utils.PageUtils@2b2b9924
2019-03-21 10:07:35 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:07:35 -HTTP METHOD : GET
2019-03-21 10:07:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:07:35 -参数 : []
2019-03-21 10:07:35 -耗时 : 0
2019-03-21 10:07:35 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:07:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:35 -HTTP METHOD : GET
2019-03-21 10:07:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:35 -参数 : [userType]
2019-03-21 10:07:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:35 -==> Parameters: userType(String)
2019-03-21 10:07:35 -<==      Total: 2
2019-03-21 10:07:35 -耗时 : 7
2019-03-21 10:07:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:07:35 -HTTP METHOD : GET
2019-03-21 10:07:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:07:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:07:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:07:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:35 -<==      Total: 3
2019-03-21 10:07:35 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:07:35 -==> Parameters: 
2019-03-21 10:07:35 -<==      Total: 1
2019-03-21 10:07:35 -耗时 : 72
2019-03-21 10:07:35 -返回值 : com.bootdo.common.utils.PageUtils@2c4d45d5
2019-03-21 10:07:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:07:36 -HTTP METHOD : GET
2019-03-21 10:07:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:07:36 -参数 : []
2019-03-21 10:07:36 -耗时 : 0
2019-03-21 10:07:36 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:07:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:07:36 -HTTP METHOD : GET
2019-03-21 10:07:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:07:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:07:36 -HTTP METHOD : GET
2019-03-21 10:07:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:36 -参数 : [userType]
2019-03-21 10:07:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:07:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:36 -==> Parameters: userType(String)
2019-03-21 10:07:36 -<==      Total: 3
2019-03-21 10:07:36 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:07:36 -==> Parameters: 
2019-03-21 10:07:36 -<==      Total: 1
2019-03-21 10:07:36 -耗时 : 9
2019-03-21 10:07:36 -返回值 : com.bootdo.common.utils.PageUtils@5c4d01b3
2019-03-21 10:07:36 -<==      Total: 2
2019-03-21 10:07:36 -耗时 : 66
2019-03-21 10:07:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:07:37 -参数 : []
2019-03-21 10:07:37 -耗时 : 1
2019-03-21 10:07:37 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:37 -参数 : [userType]
2019-03-21 10:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:37 -==> Parameters: userType(String)
2019-03-21 10:07:37 -<==      Total: 2
2019-03-21 10:07:37 -耗时 : 4
2019-03-21 10:07:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:07:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:07:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:07:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:37 -<==      Total: 4
2019-03-21 10:07:37 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:07:37 -==> Parameters: 
2019-03-21 10:07:37 -<==      Total: 1
2019-03-21 10:07:37 -耗时 : 51
2019-03-21 10:07:37 -返回值 : com.bootdo.common.utils.PageUtils@6ade1dc
2019-03-21 10:07:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:07:37 -参数 : []
2019-03-21 10:07:37 -耗时 : 0
2019-03-21 10:07:37 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:37 -参数 : [userType]
2019-03-21 10:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:37 -==> Parameters: userType(String)
2019-03-21 10:07:37 -<==      Total: 2
2019-03-21 10:07:37 -耗时 : 5
2019-03-21 10:07:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:07:37 -HTTP METHOD : GET
2019-03-21 10:07:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:07:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:07:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:07:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:38 -<==      Total: 3
2019-03-21 10:07:38 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:07:38 -==> Parameters: 
2019-03-21 10:07:38 -<==      Total: 1
2019-03-21 10:07:38 -耗时 : 105
2019-03-21 10:07:38 -返回值 : com.bootdo.common.utils.PageUtils@20d129b4
2019-03-21 10:07:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:07:38 -HTTP METHOD : GET
2019-03-21 10:07:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:07:38 -参数 : []
2019-03-21 10:07:38 -耗时 : 1
2019-03-21 10:07:38 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:07:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:38 -HTTP METHOD : GET
2019-03-21 10:07:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:38 -参数 : [userType]
2019-03-21 10:07:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:38 -==> Parameters: userType(String)
2019-03-21 10:07:38 -<==      Total: 2
2019-03-21 10:07:38 -耗时 : 3
2019-03-21 10:07:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:07:38 -HTTP METHOD : GET
2019-03-21 10:07:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:07:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:07:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:07:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:38 -<==      Total: 3
2019-03-21 10:07:38 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:07:38 -==> Parameters: 
2019-03-21 10:07:38 -<==      Total: 1
2019-03-21 10:07:38 -耗时 : 69
2019-03-21 10:07:38 -返回值 : com.bootdo.common.utils.PageUtils@2975616a
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:07:39 -参数 : []
2019-03-21 10:07:39 -耗时 : 0
2019-03-21 10:07:39 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:39 -参数 : [userType]
2019-03-21 10:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:39 -==> Parameters: userType(String)
2019-03-21 10:07:39 -<==      Total: 2
2019-03-21 10:07:39 -耗时 : 8
2019-03-21 10:07:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:07:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:07:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:07:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:39 -<==      Total: 3
2019-03-21 10:07:39 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:07:39 -==> Parameters: 
2019-03-21 10:07:39 -<==      Total: 1
2019-03-21 10:07:39 -耗时 : 7
2019-03-21 10:07:39 -返回值 : com.bootdo.common.utils.PageUtils@5a1a2d3a
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:07:39 -参数 : []
2019-03-21 10:07:39 -耗时 : 2
2019-03-21 10:07:39 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:07:39 -参数 : [userType]
2019-03-21 10:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:07:39 -==> Parameters: userType(String)
2019-03-21 10:07:39 -<==      Total: 2
2019-03-21 10:07:39 -耗时 : 5
2019-03-21 10:07:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:07:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:07:39 -HTTP METHOD : GET
2019-03-21 10:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:07:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:07:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:07:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:07:39 -<==      Total: 4
2019-03-21 10:07:39 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:07:39 -==> Parameters: 
2019-03-21 10:07:39 -<==      Total: 1
2019-03-21 10:07:39 -耗时 : 8
2019-03-21 10:07:39 -返回值 : com.bootdo.common.utils.PageUtils@782b3e1d
2019-03-21 10:07:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:07:44 -HTTP METHOD : GET
2019-03-21 10:07:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:07:44 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-03-21 10:07:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-21 10:07:44 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-21 10:07:44 -<==      Total: 3
2019-03-21 10:07:44 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-21 10:07:44 -==> Parameters: A(String)
2019-03-21 10:07:44 -<==      Total: 1
2019-03-21 10:07:44 -耗时 : 19
2019-03-21 10:07:44 -返回值 : com.bootdo.common.utils.PageUtils@51c9656d
2019-03-21 10:07:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:07:45 -HTTP METHOD : GET
2019-03-21 10:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:07:45 -参数 : []
2019-03-21 10:07:45 -耗时 : 1
2019-03-21 10:07:45 -返回值 : system/dept/deptTree
2019-03-21 10:07:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:07:45 -HTTP METHOD : GET
2019-03-21 10:07:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:07:45 -参数 : []
2019-03-21 10:07:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:07:45 -==> Parameters: 
2019-03-21 10:07:45 -<==      Total: 3
2019-03-21 10:07:45 -耗时 : 22
2019-03-21 10:07:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:07:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-21 10:07:47 -HTTP METHOD : GET
2019-03-21 10:07:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-21 10:07:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@701f7fce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@364d5983, org.apache.shiro.web.servlet.ShiroHttpServletRequest@323f1b85]
2019-03-21 10:07:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? 
2019-03-21 10:07:47 -==> Parameters: A(String), 2(String)
2019-03-21 10:07:47 -<==      Total: 3
2019-03-21 10:07:48 -耗时 : 1093
2019-03-21 10:07:48 -返回值 : null
2019-03-21 10:09:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:09:36 -HTTP METHOD : GET
2019-03-21 10:09:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:09:36 -参数 : []
2019-03-21 10:09:36 -耗时 : 0
2019-03-21 10:09:36 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:09:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:09:37 -HTTP METHOD : GET
2019-03-21 10:09:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:09:37 -参数 : [userType]
2019-03-21 10:09:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:09:37 -==> Parameters: userType(String)
2019-03-21 10:09:37 -<==      Total: 2
2019-03-21 10:09:37 -耗时 : 6
2019-03-21 10:09:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:09:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:09:37 -HTTP METHOD : GET
2019-03-21 10:09:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:09:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:09:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:09:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:09:37 -<==      Total: 3
2019-03-21 10:09:37 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:09:37 -==> Parameters: 
2019-03-21 10:09:37 -<==      Total: 1
2019-03-21 10:09:37 -耗时 : 8
2019-03-21 10:09:37 -返回值 : com.bootdo.common.utils.PageUtils@5cbcf6e9
2019-03-21 10:09:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:09:43 -HTTP METHOD : GET
2019-03-21 10:09:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:09:43 -参数 : []
2019-03-21 10:09:43 -耗时 : 1
2019-03-21 10:09:43 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:09:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:09:44 -HTTP METHOD : GET
2019-03-21 10:09:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:09:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:09:44 -HTTP METHOD : GET
2019-03-21 10:09:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:09:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:09:44 -参数 : [userType]
2019-03-21 10:09:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:09:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:09:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:09:44 -==> Parameters: userType(String)
2019-03-21 10:09:44 -<==      Total: 2
2019-03-21 10:09:44 -耗时 : 4
2019-03-21 10:09:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:09:44 -<==      Total: 4
2019-03-21 10:09:44 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:09:44 -==> Parameters: 
2019-03-21 10:09:44 -<==      Total: 1
2019-03-21 10:09:44 -耗时 : 14
2019-03-21 10:09:44 -返回值 : com.bootdo.common.utils.PageUtils@6cb87eb6
2019-03-21 10:09:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:09:44 -HTTP METHOD : GET
2019-03-21 10:09:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:09:44 -参数 : []
2019-03-21 10:09:44 -耗时 : 1
2019-03-21 10:09:44 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:09:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:09:44 -HTTP METHOD : GET
2019-03-21 10:09:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:09:44 -参数 : [userType]
2019-03-21 10:09:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:09:44 -==> Parameters: userType(String)
2019-03-21 10:09:44 -<==      Total: 2
2019-03-21 10:09:44 -耗时 : 5
2019-03-21 10:09:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:09:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:09:44 -HTTP METHOD : GET
2019-03-21 10:09:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:09:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:09:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:09:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:09:44 -<==      Total: 3
2019-03-21 10:09:44 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:09:44 -==> Parameters: 
2019-03-21 10:09:44 -<==      Total: 1
2019-03-21 10:09:44 -耗时 : 8
2019-03-21 10:09:44 -返回值 : com.bootdo.common.utils.PageUtils@1b685057
2019-03-21 10:15:21 -请求地址 : http://localhost:8081/index
2019-03-21 10:15:21 -HTTP METHOD : GET
2019-03-21 10:15:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:15:21 -参数 : [{}]
2019-03-21 10:15:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:15:21 -==> Parameters: 1(Long)
2019-03-21 10:15:21 -<==      Total: 46
2019-03-21 10:15:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:15:21 -==> Parameters: 138(Long)
2019-03-21 10:15:21 -<==      Total: 1
2019-03-21 10:15:21 -耗时 : 29
2019-03-21 10:15:21 -返回值 : index_v1
2019-03-21 10:15:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:15:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:15:21.292(Timestamp)
2019-03-21 10:15:21 -<==    Updates: 1
2019-03-21 10:15:21 -请求地址 : http://localhost:8081/main
2019-03-21 10:15:21 -HTTP METHOD : GET
2019-03-21 10:15:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:15:21 -参数 : []
2019-03-21 10:15:21 -耗时 : 5
2019-03-21 10:15:21 -返回值 : main
2019-03-21 10:15:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:15:21 -HTTP METHOD : GET
2019-03-21 10:15:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:15:21 -参数 : []
2019-03-21 10:15:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:15:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:15:21 -<==      Total: 0
2019-03-21 10:15:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:15:21 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:15:21 -<==      Total: 1
2019-03-21 10:15:21 -耗时 : 56
2019-03-21 10:15:21 -返回值 : com.bootdo.common.utils.PageUtils@4a80e727
2019-03-21 10:15:21 -请求地址 : http://localhost:8081/main
2019-03-21 10:15:21 -HTTP METHOD : GET
2019-03-21 10:15:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:15:21 -参数 : []
2019-03-21 10:15:21 -耗时 : 1
2019-03-21 10:15:21 -返回值 : main
2019-03-21 10:15:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:15:24 -HTTP METHOD : GET
2019-03-21 10:15:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:15:24 -参数 : []
2019-03-21 10:15:24 -耗时 : 0
2019-03-21 10:15:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:15:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:15:24 -HTTP METHOD : GET
2019-03-21 10:15:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:15:24 -参数 : [userType]
2019-03-21 10:15:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:15:24 -==> Parameters: userType(String)
2019-03-21 10:15:24 -<==      Total: 2
2019-03-21 10:15:24 -耗时 : 8
2019-03-21 10:15:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:15:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:15:24 -HTTP METHOD : GET
2019-03-21 10:15:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:15:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:15:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:15:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:15:24 -<==      Total: 4
2019-03-21 10:15:24 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:15:24 -==> Parameters: 
2019-03-21 10:15:24 -<==      Total: 1
2019-03-21 10:15:24 -耗时 : 9
2019-03-21 10:15:24 -返回值 : com.bootdo.common.utils.PageUtils@1fec5851
2019-03-21 10:15:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:15:25 -HTTP METHOD : GET
2019-03-21 10:15:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:15:25 -参数 : []
2019-03-21 10:15:25 -耗时 : 0
2019-03-21 10:15:25 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:15:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:15:25 -HTTP METHOD : GET
2019-03-21 10:15:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:15:25 -参数 : [userType]
2019-03-21 10:15:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:15:25 -==> Parameters: userType(String)
2019-03-21 10:15:25 -<==      Total: 2
2019-03-21 10:15:25 -耗时 : 4
2019-03-21 10:15:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:15:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:15:25 -HTTP METHOD : GET
2019-03-21 10:15:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:15:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:15:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:15:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:15:25 -<==      Total: 3
2019-03-21 10:15:25 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:15:25 -==> Parameters: 
2019-03-21 10:15:25 -<==      Total: 1
2019-03-21 10:15:25 -耗时 : 18
2019-03-21 10:15:25 -返回值 : com.bootdo.common.utils.PageUtils@227ea9ef
2019-03-21 10:15:30 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:15:30 -HTTP METHOD : GET
2019-03-21 10:15:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:15:30 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, waterDate=}]
2019-03-21 10:15:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-21 10:15:30 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-21 10:15:30 -<==      Total: 2
2019-03-21 10:15:30 -==>  Preparing: select count(*) from water_log WHERE user_type = ? 
2019-03-21 10:15:30 -==> Parameters: A(String)
2019-03-21 10:15:30 -<==      Total: 1
2019-03-21 10:15:30 -耗时 : 25
2019-03-21 10:15:30 -返回值 : com.bootdo.common.utils.PageUtils@594099a5
2019-03-21 10:15:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:15:31 -HTTP METHOD : GET
2019-03-21 10:15:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:15:31 -参数 : []
2019-03-21 10:15:31 -耗时 : 1
2019-03-21 10:15:31 -返回值 : system/dept/deptTree
2019-03-21 10:15:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:15:31 -HTTP METHOD : GET
2019-03-21 10:15:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:15:31 -参数 : []
2019-03-21 10:15:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:15:31 -==> Parameters: 
2019-03-21 10:15:31 -<==      Total: 3
2019-03-21 10:15:31 -耗时 : 5
2019-03-21 10:15:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:15:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:15:33 -HTTP METHOD : GET
2019-03-21 10:15:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:15:33 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=}]
2019-03-21 10:15:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-21 10:15:33 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-21 10:15:33 -<==      Total: 2
2019-03-21 10:15:33 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? 
2019-03-21 10:15:33 -==> Parameters: A(String), 2(String)
2019-03-21 10:15:33 -<==      Total: 1
2019-03-21 10:15:33 -耗时 : 19
2019-03-21 10:15:33 -返回值 : com.bootdo.common.utils.PageUtils@1680c07c
2019-03-21 10:15:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:15:34 -HTTP METHOD : GET
2019-03-21 10:15:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:15:34 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=}]
2019-03-21 10:15:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-21 10:15:34 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-21 10:15:34 -<==      Total: 2
2019-03-21 10:15:34 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? 
2019-03-21 10:15:34 -==> Parameters: A(String), 2(String)
2019-03-21 10:15:34 -<==      Total: 1
2019-03-21 10:15:34 -耗时 : 8
2019-03-21 10:15:34 -返回值 : com.bootdo.common.utils.PageUtils@63aa8765
2019-03-21 10:15:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-03-21 10:15:35 -HTTP METHOD : GET
2019-03-21 10:15:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-03-21 10:15:35 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@2d964f1d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@46492f84, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68570f65]
2019-03-21 10:15:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? 
2019-03-21 10:15:35 -==> Parameters: A(String), 2(String)
2019-03-21 10:15:35 -<==      Total: 2
2019-03-21 10:15:35 -耗时 : 18
2019-03-21 10:15:35 -返回值 : null
2019-03-21 10:16:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:16:33 -HTTP METHOD : GET
2019-03-21 10:16:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:16:33 -参数 : []
2019-03-21 10:16:33 -耗时 : 1
2019-03-21 10:16:33 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:16:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:16:34 -HTTP METHOD : GET
2019-03-21 10:16:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:16:34 -参数 : [userType]
2019-03-21 10:16:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:16:34 -==> Parameters: userType(String)
2019-03-21 10:16:34 -<==      Total: 2
2019-03-21 10:16:34 -耗时 : 3
2019-03-21 10:16:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:16:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:16:34 -HTTP METHOD : GET
2019-03-21 10:16:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:16:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:16:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:16:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:16:34 -<==      Total: 3
2019-03-21 10:16:34 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:16:34 -==> Parameters: 
2019-03-21 10:16:34 -<==      Total: 1
2019-03-21 10:16:34 -耗时 : 12
2019-03-21 10:16:34 -返回值 : com.bootdo.common.utils.PageUtils@4e9e8248
2019-03-21 10:17:09 -请求地址 : http://localhost:8081/index
2019-03-21 10:17:09 -HTTP METHOD : GET
2019-03-21 10:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:17:09 -参数 : [{}]
2019-03-21 10:17:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:17:09 -==> Parameters: 1(Long)
2019-03-21 10:17:09 -<==      Total: 46
2019-03-21 10:17:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:17:09 -==> Parameters: 138(Long)
2019-03-21 10:17:09 -<==      Total: 1
2019-03-21 10:17:09 -耗时 : 121
2019-03-21 10:17:09 -返回值 : index_v1
2019-03-21 10:17:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:17:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 121(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:17:09.643(Timestamp)
2019-03-21 10:17:09 -请求地址 : http://localhost:8081/main
2019-03-21 10:17:09 -HTTP METHOD : GET
2019-03-21 10:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:17:09 -参数 : []
2019-03-21 10:17:09 -耗时 : 1
2019-03-21 10:17:09 -返回值 : main
2019-03-21 10:17:09 -<==    Updates: 1
2019-03-21 10:17:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:17:10 -HTTP METHOD : GET
2019-03-21 10:17:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:17:10 -参数 : []
2019-03-21 10:17:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:17:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:17:10 -请求地址 : http://localhost:8081/main
2019-03-21 10:17:10 -HTTP METHOD : GET
2019-03-21 10:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:17:10 -参数 : []
2019-03-21 10:17:10 -耗时 : 1
2019-03-21 10:17:10 -返回值 : main
2019-03-21 10:17:10 -<==      Total: 0
2019-03-21 10:17:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:17:10 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:17:10 -<==      Total: 1
2019-03-21 10:17:10 -耗时 : 24
2019-03-21 10:17:10 -返回值 : com.bootdo.common.utils.PageUtils@1247ed44
2019-03-21 10:17:14 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:17:14 -HTTP METHOD : GET
2019-03-21 10:17:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:17:14 -参数 : []
2019-03-21 10:17:14 -耗时 : 0
2019-03-21 10:17:14 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:17:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:17:15 -HTTP METHOD : GET
2019-03-21 10:17:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:17:15 -参数 : [userType]
2019-03-21 10:17:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:17:15 -==> Parameters: userType(String)
2019-03-21 10:17:15 -<==      Total: 2
2019-03-21 10:17:15 -耗时 : 4
2019-03-21 10:17:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:17:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:17:15 -HTTP METHOD : GET
2019-03-21 10:17:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:17:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:17:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:17:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:17:15 -<==      Total: 4
2019-03-21 10:17:15 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:17:15 -==> Parameters: 
2019-03-21 10:17:15 -<==      Total: 1
2019-03-21 10:17:15 -耗时 : 6
2019-03-21 10:17:15 -返回值 : com.bootdo.common.utils.PageUtils@67041662
2019-03-21 10:17:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:17:18 -HTTP METHOD : GET
2019-03-21 10:17:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:17:18 -参数 : []
2019-03-21 10:17:18 -耗时 : 1
2019-03-21 10:17:18 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:17:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:17:18 -HTTP METHOD : GET
2019-03-21 10:17:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:17:18 -参数 : [userType]
2019-03-21 10:17:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:17:18 -==> Parameters: userType(String)
2019-03-21 10:17:18 -<==      Total: 2
2019-03-21 10:17:18 -耗时 : 4
2019-03-21 10:17:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:17:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:17:18 -HTTP METHOD : GET
2019-03-21 10:17:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:17:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:17:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:17:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:17:18 -<==      Total: 3
2019-03-21 10:17:18 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:17:18 -==> Parameters: 
2019-03-21 10:17:18 -<==      Total: 1
2019-03-21 10:17:18 -耗时 : 9
2019-03-21 10:17:18 -返回值 : com.bootdo.common.utils.PageUtils@4da8944a
2019-03-21 10:17:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:17:23 -HTTP METHOD : GET
2019-03-21 10:17:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:17:23 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=}]
2019-03-21 10:17:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-21 10:17:23 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-21 10:17:23 -<==      Total: 2
2019-03-21 10:17:23 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-03-21 10:17:23 -==> Parameters: A(String)
2019-03-21 10:17:23 -<==      Total: 1
2019-03-21 10:17:23 -耗时 : 121
2019-03-21 10:17:23 -返回值 : com.bootdo.common.utils.PageUtils@1cd34267
2019-03-21 10:17:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:17:23 -HTTP METHOD : GET
2019-03-21 10:17:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:17:23 -参数 : []
2019-03-21 10:17:23 -耗时 : 1
2019-03-21 10:17:23 -返回值 : system/dept/deptTree
2019-03-21 10:17:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:17:24 -HTTP METHOD : GET
2019-03-21 10:17:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:17:24 -参数 : []
2019-03-21 10:17:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:17:24 -==> Parameters: 
2019-03-21 10:17:24 -<==      Total: 3
2019-03-21 10:17:24 -耗时 : 3
2019-03-21 10:17:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:17:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/exprotHeatLog
2019-03-21 10:17:26 -HTTP METHOD : GET
2019-03-21 10:17:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog
2019-03-21 10:17:26 -参数 : [com.bootdo.moneyLog.vo.HeatLogVo@1b05661c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2691946c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e50b7c3]
2019-03-21 10:17:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? 
2019-03-21 10:17:26 -==> Parameters: A(String), 2(String)
2019-03-21 10:17:26 -<==      Total: 2
2019-03-21 10:17:26 -耗时 : 16
2019-03-21 10:17:26 -返回值 : null
2019-03-21 10:18:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:18:46 -==> Parameters: 1(Long)
2019-03-21 10:18:46 -<==      Total: 90
2019-03-21 10:18:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:18:46 -HTTP METHOD : GET
2019-03-21 10:18:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:18:46 -参数 : []
2019-03-21 10:18:46 -耗时 : 0
2019-03-21 10:18:46 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:18:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:47 -HTTP METHOD : GET
2019-03-21 10:18:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:47 -参数 : [userType]
2019-03-21 10:18:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:47 -==> Parameters: userType(String)
2019-03-21 10:18:47 -<==      Total: 2
2019-03-21 10:18:47 -耗时 : 3
2019-03-21 10:18:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:18:47 -HTTP METHOD : GET
2019-03-21 10:18:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:18:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:18:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:18:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:47 -<==      Total: 4
2019-03-21 10:18:47 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:18:47 -==> Parameters: 
2019-03-21 10:18:47 -<==      Total: 1
2019-03-21 10:18:47 -耗时 : 7
2019-03-21 10:18:47 -返回值 : com.bootdo.common.utils.PageUtils@5e6b68aa
2019-03-21 10:18:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:18:47 -HTTP METHOD : GET
2019-03-21 10:18:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:18:47 -参数 : []
2019-03-21 10:18:47 -耗时 : 1
2019-03-21 10:18:47 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:18:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:47 -HTTP METHOD : GET
2019-03-21 10:18:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:47 -参数 : [userType]
2019-03-21 10:18:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:47 -==> Parameters: userType(String)
2019-03-21 10:18:47 -<==      Total: 2
2019-03-21 10:18:47 -耗时 : 3
2019-03-21 10:18:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:18:47 -HTTP METHOD : GET
2019-03-21 10:18:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:18:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:18:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:18:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:47 -<==      Total: 3
2019-03-21 10:18:47 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:18:47 -==> Parameters: 
2019-03-21 10:18:47 -<==      Total: 1
2019-03-21 10:18:47 -耗时 : 8
2019-03-21 10:18:47 -返回值 : com.bootdo.common.utils.PageUtils@72ea8560
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:18:48 -参数 : []
2019-03-21 10:18:48 -耗时 : 1
2019-03-21 10:18:48 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:48 -参数 : [userType]
2019-03-21 10:18:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:48 -==> Parameters: userType(String)
2019-03-21 10:18:48 -<==      Total: 2
2019-03-21 10:18:48 -耗时 : 3
2019-03-21 10:18:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:18:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:18:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:18:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:48 -<==      Total: 3
2019-03-21 10:18:48 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:18:48 -==> Parameters: 
2019-03-21 10:18:48 -<==      Total: 1
2019-03-21 10:18:48 -耗时 : 6
2019-03-21 10:18:48 -返回值 : com.bootdo.common.utils.PageUtils@5c9f442e
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:18:48 -参数 : []
2019-03-21 10:18:48 -耗时 : 1
2019-03-21 10:18:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:48 -参数 : [userType]
2019-03-21 10:18:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:48 -==> Parameters: userType(String)
2019-03-21 10:18:48 -<==      Total: 2
2019-03-21 10:18:48 -耗时 : 4
2019-03-21 10:18:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:18:48 -HTTP METHOD : GET
2019-03-21 10:18:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:18:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:18:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:18:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:48 -<==      Total: 3
2019-03-21 10:18:48 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:18:48 -==> Parameters: 
2019-03-21 10:18:48 -<==      Total: 1
2019-03-21 10:18:48 -耗时 : 6
2019-03-21 10:18:48 -返回值 : com.bootdo.common.utils.PageUtils@2036d87a
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:18:49 -参数 : []
2019-03-21 10:18:49 -耗时 : 0
2019-03-21 10:18:49 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:49 -参数 : [userType]
2019-03-21 10:18:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:49 -==> Parameters: userType(String)
2019-03-21 10:18:49 -<==      Total: 2
2019-03-21 10:18:49 -耗时 : 3
2019-03-21 10:18:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:18:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:18:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:18:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:49 -<==      Total: 4
2019-03-21 10:18:49 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:18:49 -==> Parameters: 
2019-03-21 10:18:49 -<==      Total: 1
2019-03-21 10:18:49 -耗时 : 5
2019-03-21 10:18:49 -返回值 : com.bootdo.common.utils.PageUtils@7a62f4d
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:18:49 -参数 : []
2019-03-21 10:18:49 -耗时 : 1
2019-03-21 10:18:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:49 -参数 : [userType]
2019-03-21 10:18:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:49 -==> Parameters: userType(String)
2019-03-21 10:18:49 -<==      Total: 2
2019-03-21 10:18:49 -耗时 : 3
2019-03-21 10:18:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:18:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:18:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:18:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:49 -<==      Total: 3
2019-03-21 10:18:49 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:18:49 -==> Parameters: 
2019-03-21 10:18:49 -<==      Total: 1
2019-03-21 10:18:49 -耗时 : 5
2019-03-21 10:18:49 -返回值 : com.bootdo.common.utils.PageUtils@494dc69f
2019-03-21 10:18:49 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:18:49 -HTTP METHOD : GET
2019-03-21 10:18:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:18:49 -参数 : []
2019-03-21 10:18:49 -耗时 : 0
2019-03-21 10:18:49 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:18:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:50 -HTTP METHOD : GET
2019-03-21 10:18:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:50 -参数 : [userType]
2019-03-21 10:18:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:50 -==> Parameters: userType(String)
2019-03-21 10:18:50 -<==      Total: 2
2019-03-21 10:18:50 -耗时 : 4
2019-03-21 10:18:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:18:50 -HTTP METHOD : GET
2019-03-21 10:18:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:18:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:18:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:18:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:50 -<==      Total: 3
2019-03-21 10:18:50 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:18:50 -==> Parameters: 
2019-03-21 10:18:50 -<==      Total: 1
2019-03-21 10:18:50 -耗时 : 8
2019-03-21 10:18:50 -返回值 : com.bootdo.common.utils.PageUtils@194774bc
2019-03-21 10:18:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:18:50 -HTTP METHOD : GET
2019-03-21 10:18:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:18:50 -参数 : []
2019-03-21 10:18:50 -耗时 : 0
2019-03-21 10:18:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:18:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:50 -HTTP METHOD : GET
2019-03-21 10:18:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:50 -参数 : [userType]
2019-03-21 10:18:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:50 -==> Parameters: userType(String)
2019-03-21 10:18:50 -<==      Total: 2
2019-03-21 10:18:50 -耗时 : 3
2019-03-21 10:18:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:18:50 -HTTP METHOD : GET
2019-03-21 10:18:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:18:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:18:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:18:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:50 -<==      Total: 3
2019-03-21 10:18:50 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:18:50 -==> Parameters: 
2019-03-21 10:18:50 -<==      Total: 1
2019-03-21 10:18:50 -耗时 : 6
2019-03-21 10:18:50 -返回值 : com.bootdo.common.utils.PageUtils@1758e69
2019-03-21 10:18:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:18:51 -HTTP METHOD : GET
2019-03-21 10:18:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:18:51 -参数 : []
2019-03-21 10:18:51 -耗时 : 1
2019-03-21 10:18:51 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:18:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:18:51 -HTTP METHOD : GET
2019-03-21 10:18:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:18:51 -参数 : [userType]
2019-03-21 10:18:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:18:51 -==> Parameters: userType(String)
2019-03-21 10:18:51 -<==      Total: 2
2019-03-21 10:18:51 -耗时 : 4
2019-03-21 10:18:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:18:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:18:51 -HTTP METHOD : GET
2019-03-21 10:18:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:18:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:18:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:18:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:18:51 -<==      Total: 4
2019-03-21 10:18:51 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:18:51 -==> Parameters: 
2019-03-21 10:18:51 -<==      Total: 1
2019-03-21 10:18:51 -耗时 : 6
2019-03-21 10:18:51 -返回值 : com.bootdo.common.utils.PageUtils@bbefe6a
2019-03-21 10:29:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:29:48 -==> Parameters: 1(Long)
2019-03-21 10:29:48 -<==      Total: 90
2019-03-21 10:29:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 10:29:48 -HTTP METHOD : GET
2019-03-21 10:29:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 10:29:48 -参数 : []
2019-03-21 10:29:48 -耗时 : 0
2019-03-21 10:29:48 -返回值 : moneyLog/elecLog/add
2019-03-21 10:29:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:29:48 -HTTP METHOD : GET
2019-03-21 10:29:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:29:48 -参数 : [userType]
2019-03-21 10:29:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:29:48 -==> Parameters: userType(String)
2019-03-21 10:29:48 -<==      Total: 2
2019-03-21 10:29:48 -耗时 : 5
2019-03-21 10:29:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:30:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:30:34 -HTTP METHOD : GET
2019-03-21 10:30:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:30:34 -参数 : []
2019-03-21 10:30:34 -耗时 : 0
2019-03-21 10:30:34 -返回值 : system/dept/deptTree
2019-03-21 10:30:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:30:34 -HTTP METHOD : GET
2019-03-21 10:30:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:30:34 -参数 : []
2019-03-21 10:30:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:30:34 -==> Parameters: 
2019-03-21 10:30:34 -<==      Total: 3
2019-03-21 10:30:34 -耗时 : 3
2019-03-21 10:30:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:30:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-03-21 10:30:37 -HTTP METHOD : POST
2019-03-21 10:30:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-03-21 10:30:37 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@239817f9]
2019-03-21 10:30:37 -==>  Preparing: insert into elec_log ( `elec_id`, `user_id`, `user_name`, `user_type`, `user_org`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:30:37 -==> Parameters: null, 4-4444(String), 电费卡(String), A(String), 2(String), 60(BigDecimal), null, 2019-03(String), 1(Long), null, null, (String)
2019-03-21 10:30:37 -{conn-10002, pstmt-20040} execute error. insert into elec_log
		(
		
			`elec_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:38)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:193)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$b4954ba1.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 10:30:37 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 10:30:37 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 10:30:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:30:37 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
; ]; Column 'elec_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
; ]; Column 'elec_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:38)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:193)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$b4954ba1.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 10:30:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null
; ]; Column 'elec_id' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_id' cannot be null(String), null, 2019-03-21 10:30:37.695(Timestamp)
2019-03-21 10:30:37 -<==    Updates: 1
2019-03-21 10:36:26 -请求地址 : http://localhost:8081/index
2019-03-21 10:36:26 -HTTP METHOD : GET
2019-03-21 10:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:36:26 -参数 : [{}]
2019-03-21 10:36:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:36:26 -==> Parameters: 1(Long)
2019-03-21 10:36:26 -<==      Total: 46
2019-03-21 10:36:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:36:26 -==> Parameters: 138(Long)
2019-03-21 10:36:26 -<==      Total: 1
2019-03-21 10:36:26 -耗时 : 19
2019-03-21 10:36:26 -返回值 : index_v1
2019-03-21 10:36:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:36:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:36:26.056(Timestamp)
2019-03-21 10:36:26 -请求地址 : http://localhost:8081/main
2019-03-21 10:36:26 -HTTP METHOD : GET
2019-03-21 10:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:36:26 -参数 : []
2019-03-21 10:36:26 -耗时 : 1
2019-03-21 10:36:26 -返回值 : main
2019-03-21 10:36:26 -<==    Updates: 1
2019-03-21 10:36:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:36:26 -HTTP METHOD : GET
2019-03-21 10:36:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:36:26 -参数 : []
2019-03-21 10:36:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:36:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:36:26 -<==      Total: 0
2019-03-21 10:36:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:36:26 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:36:26 -<==      Total: 1
2019-03-21 10:36:26 -耗时 : 8
2019-03-21 10:36:26 -返回值 : com.bootdo.common.utils.PageUtils@6638669f
2019-03-21 10:36:26 -请求地址 : http://localhost:8081/main
2019-03-21 10:36:26 -HTTP METHOD : GET
2019-03-21 10:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:36:26 -参数 : []
2019-03-21 10:36:26 -耗时 : 3
2019-03-21 10:36:26 -返回值 : main
2019-03-21 10:36:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:36:47 -HTTP METHOD : GET
2019-03-21 10:36:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:36:47 -参数 : []
2019-03-21 10:36:47 -耗时 : 0
2019-03-21 10:36:47 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:36:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:36:47 -HTTP METHOD : GET
2019-03-21 10:36:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:36:47 -参数 : [userType]
2019-03-21 10:36:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:36:47 -==> Parameters: userType(String)
2019-03-21 10:36:47 -<==      Total: 2
2019-03-21 10:36:47 -耗时 : 3
2019-03-21 10:36:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:36:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:36:47 -HTTP METHOD : GET
2019-03-21 10:36:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:36:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:36:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:36:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:36:47 -<==      Total: 4
2019-03-21 10:36:47 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:36:47 -==> Parameters: 
2019-03-21 10:36:47 -<==      Total: 1
2019-03-21 10:36:47 -耗时 : 87
2019-03-21 10:36:47 -返回值 : com.bootdo.common.utils.PageUtils@2b2fd4c0
2019-03-21 10:36:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 10:36:48 -HTTP METHOD : GET
2019-03-21 10:36:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 10:36:48 -参数 : []
2019-03-21 10:36:48 -耗时 : 1
2019-03-21 10:36:48 -返回值 : moneyLog/elecLog/add
2019-03-21 10:36:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:36:48 -HTTP METHOD : GET
2019-03-21 10:36:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:36:48 -参数 : [userType]
2019-03-21 10:36:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:36:48 -==> Parameters: userType(String)
2019-03-21 10:36:48 -<==      Total: 2
2019-03-21 10:36:48 -耗时 : 7
2019-03-21 10:36:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:37:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:37:12 -HTTP METHOD : GET
2019-03-21 10:37:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:37:12 -参数 : []
2019-03-21 10:37:12 -耗时 : 1
2019-03-21 10:37:12 -返回值 : system/dept/deptTree
2019-03-21 10:37:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:37:12 -HTTP METHOD : GET
2019-03-21 10:37:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:37:12 -参数 : []
2019-03-21 10:37:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:37:12 -==> Parameters: 
2019-03-21 10:37:12 -<==      Total: 3
2019-03-21 10:37:12 -耗时 : 6
2019-03-21 10:37:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:37:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-03-21 10:37:23 -HTTP METHOD : POST
2019-03-21 10:37:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-03-21 10:37:23 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@e8653a4]
2019-03-21 10:37:23 -==>  Preparing: insert into elec_log ( `elec_id`, `user_id`, `user_name`, `user_type`, `user_org`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:37:23 -==> Parameters: null, 4-4444(String), 阿萨德(String), A(String), 2(String), 60(BigDecimal), null, 2019-03(String), 1(Long), 2019-03-21 10:37:23.122(Timestamp), 1(Long), (String)
2019-03-21 10:37:23 -{conn-10002, pstmt-20041} execute error. insert into elec_log
		(
		
			`elec_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`elec_money`, 
			`elec_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
			
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:38)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:193)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$b4954ba1.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 10:37:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:37:23 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
; ]; Column 'elec_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
; ]; Column 'elec_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.save(ElecLogServiceImpl.java:38)
	at com.bootdo.moneyLog.controller.ElecLogController.save(ElecLogController.java:193)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$b4954ba1.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 10:37:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
### The error may involve com.bootdo.moneyLog.dao.ElecLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec_log   (       `elec_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `elec_money`,     `elec_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null
; ]; Column 'elec_date' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_date' cannot be null(String), null, 2019-03-21 10:37:23.129(Timestamp)
2019-03-21 10:37:23 -<==    Updates: 1
2019-03-21 10:37:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-03-21 10:38:22 -请求地址 : http://localhost:8081/index
2019-03-21 10:38:22 -HTTP METHOD : GET
2019-03-21 10:38:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:38:22 -参数 : [{}]
2019-03-21 10:38:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:38:22 -==> Parameters: 1(Long)
2019-03-21 10:38:23 -<==      Total: 46
2019-03-21 10:38:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:38:23 -==> Parameters: 138(Long)
2019-03-21 10:38:23 -<==      Total: 1
2019-03-21 10:38:23 -耗时 : 35
2019-03-21 10:38:23 -返回值 : index_v1
2019-03-21 10:38:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:38:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:38:23.023(Timestamp)
2019-03-21 10:38:23 -<==    Updates: 1
2019-03-21 10:38:23 -请求地址 : http://localhost:8081/main
2019-03-21 10:38:23 -HTTP METHOD : GET
2019-03-21 10:38:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:38:23 -参数 : []
2019-03-21 10:38:23 -耗时 : 0
2019-03-21 10:38:23 -返回值 : main
2019-03-21 10:38:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:38:23 -HTTP METHOD : GET
2019-03-21 10:38:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:38:23 -参数 : []
2019-03-21 10:38:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:38:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:38:23 -<==      Total: 0
2019-03-21 10:38:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:38:23 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:38:23 -<==      Total: 1
2019-03-21 10:38:23 -耗时 : 10
2019-03-21 10:38:23 -返回值 : com.bootdo.common.utils.PageUtils@1afa56b2
2019-03-21 10:38:23 -请求地址 : http://localhost:8081/main
2019-03-21 10:38:23 -HTTP METHOD : GET
2019-03-21 10:38:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:38:23 -参数 : []
2019-03-21 10:38:23 -耗时 : 1
2019-03-21 10:38:23 -返回值 : main
2019-03-21 10:38:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:38:27 -HTTP METHOD : GET
2019-03-21 10:38:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:38:27 -参数 : []
2019-03-21 10:38:27 -耗时 : 0
2019-03-21 10:38:27 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:38:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:38:27 -HTTP METHOD : GET
2019-03-21 10:38:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:38:27 -参数 : [userType]
2019-03-21 10:38:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:38:27 -==> Parameters: userType(String)
2019-03-21 10:38:27 -<==      Total: 2
2019-03-21 10:38:27 -耗时 : 4
2019-03-21 10:38:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:38:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:38:27 -HTTP METHOD : GET
2019-03-21 10:38:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:38:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:38:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:38:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:38:27 -<==      Total: 4
2019-03-21 10:38:27 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:38:27 -==> Parameters: 
2019-03-21 10:38:27 -<==      Total: 1
2019-03-21 10:38:27 -耗时 : 6
2019-03-21 10:38:27 -返回值 : com.bootdo.common.utils.PageUtils@2e462257
2019-03-21 10:38:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 10:38:29 -HTTP METHOD : GET
2019-03-21 10:38:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 10:38:29 -参数 : []
2019-03-21 10:38:29 -耗时 : 0
2019-03-21 10:38:29 -返回值 : moneyLog/elecLog/add
2019-03-21 10:38:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:38:29 -HTTP METHOD : GET
2019-03-21 10:38:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:38:29 -参数 : [userType]
2019-03-21 10:38:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:38:29 -==> Parameters: userType(String)
2019-03-21 10:38:29 -<==      Total: 2
2019-03-21 10:38:29 -耗时 : 4
2019-03-21 10:38:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:38:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 10:38:41 -HTTP METHOD : GET
2019-03-21 10:38:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 10:38:41 -参数 : []
2019-03-21 10:38:41 -耗时 : 1
2019-03-21 10:38:41 -返回值 : system/dept/deptTree
2019-03-21 10:38:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 10:38:41 -HTTP METHOD : GET
2019-03-21 10:38:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 10:38:41 -参数 : []
2019-03-21 10:38:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 10:38:41 -==> Parameters: 
2019-03-21 10:38:41 -<==      Total: 3
2019-03-21 10:38:41 -耗时 : 10
2019-03-21 10:38:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 10:38:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-03-21 10:38:45 -HTTP METHOD : POST
2019-03-21 10:38:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-03-21 10:38:45 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@31bd16be]
2019-03-21 10:38:45 -==>  Preparing: insert into elec_log ( `elec_id`, `user_id`, `user_name`, `user_type`, `user_org`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:38:45 -==> Parameters: null, 4-4444(String), 暗示法(String), A(String), 2(String), 80(BigDecimal), 2019-03-21 10:38:45.615(Timestamp), 2019-03(String), 1(Long), 2019-03-21 10:38:45.615(Timestamp), 1(Long), (String)
2019-03-21 10:38:45 -<==    Updates: 1
2019-03-21 10:38:45 -耗时 : 193
2019-03-21 10:38:45 -返回值 : {msg=操作成功, code=0}
2019-03-21 10:38:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:38:45 -HTTP METHOD : GET
2019-03-21 10:38:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:38:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:38:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:38:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:38:45 -<==      Total: 5
2019-03-21 10:38:45 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:38:45 -==> Parameters: 
2019-03-21 10:38:45 -<==      Total: 1
2019-03-21 10:38:45 -耗时 : 10
2019-03-21 10:38:45 -返回值 : com.bootdo.common.utils.PageUtils@307ccf97
2019-03-21 10:41:08 -请求地址 : http://localhost:8081/index
2019-03-21 10:41:08 -HTTP METHOD : GET
2019-03-21 10:41:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:41:08 -参数 : [{}]
2019-03-21 10:41:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:41:08 -==> Parameters: 1(Long)
2019-03-21 10:41:08 -<==      Total: 46
2019-03-21 10:41:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:41:08 -==> Parameters: 138(Long)
2019-03-21 10:41:08 -<==      Total: 1
2019-03-21 10:41:08 -耗时 : 27
2019-03-21 10:41:08 -返回值 : index_v1
2019-03-21 10:41:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:41:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:41:08.402(Timestamp)
2019-03-21 10:41:08 -<==    Updates: 1
2019-03-21 10:41:08 -请求地址 : http://localhost:8081/main
2019-03-21 10:41:08 -HTTP METHOD : GET
2019-03-21 10:41:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:41:08 -参数 : []
2019-03-21 10:41:08 -耗时 : 0
2019-03-21 10:41:08 -返回值 : main
2019-03-21 10:41:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:41:08 -HTTP METHOD : GET
2019-03-21 10:41:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:41:08 -参数 : []
2019-03-21 10:41:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:41:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:41:08 -<==      Total: 0
2019-03-21 10:41:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:41:08 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:41:08 -<==      Total: 1
2019-03-21 10:41:08 -耗时 : 9
2019-03-21 10:41:08 -返回值 : com.bootdo.common.utils.PageUtils@37f74a41
2019-03-21 10:41:08 -请求地址 : http://localhost:8081/main
2019-03-21 10:41:08 -HTTP METHOD : GET
2019-03-21 10:41:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:41:08 -参数 : []
2019-03-21 10:41:08 -耗时 : 0
2019-03-21 10:41:08 -返回值 : main
2019-03-21 10:41:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:41:11 -==> Parameters: 1(Long)
2019-03-21 10:41:11 -<==      Total: 90
2019-03-21 10:41:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:41:11 -HTTP METHOD : GET
2019-03-21 10:41:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:41:11 -参数 : []
2019-03-21 10:41:11 -耗时 : 1
2019-03-21 10:41:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:41:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:41:11 -HTTP METHOD : GET
2019-03-21 10:41:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:41:11 -参数 : [userType]
2019-03-21 10:41:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:41:11 -==> Parameters: userType(String)
2019-03-21 10:41:11 -<==      Total: 2
2019-03-21 10:41:11 -耗时 : 5
2019-03-21 10:41:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:41:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:41:11 -HTTP METHOD : GET
2019-03-21 10:41:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:41:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:41:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:41:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:41:11 -<==      Total: 5
2019-03-21 10:41:11 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:41:11 -==> Parameters: 
2019-03-21 10:41:11 -<==      Total: 1
2019-03-21 10:41:11 -耗时 : 5
2019-03-21 10:41:11 -返回值 : com.bootdo.common.utils.PageUtils@7e51544c
2019-03-21 10:41:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:41:12 -HTTP METHOD : GET
2019-03-21 10:41:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:41:12 -参数 : []
2019-03-21 10:41:12 -耗时 : 0
2019-03-21 10:41:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:41:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:41:12 -HTTP METHOD : GET
2019-03-21 10:41:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:41:12 -参数 : [userType]
2019-03-21 10:41:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:41:12 -==> Parameters: userType(String)
2019-03-21 10:41:12 -<==      Total: 2
2019-03-21 10:41:12 -耗时 : 3
2019-03-21 10:41:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:41:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:41:12 -HTTP METHOD : GET
2019-03-21 10:41:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:41:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:41:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:41:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:41:12 -<==      Total: 3
2019-03-21 10:41:12 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:41:12 -==> Parameters: 
2019-03-21 10:41:12 -<==      Total: 1
2019-03-21 10:41:12 -耗时 : 6
2019-03-21 10:41:12 -返回值 : com.bootdo.common.utils.PageUtils@3abaeffa
2019-03-21 10:41:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 10:41:14 -HTTP METHOD : GET
2019-03-21 10:41:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 10:41:14 -参数 : []
2019-03-21 10:41:14 -耗时 : 0
2019-03-21 10:41:14 -返回值 : moneyLog/heatLog/add
2019-03-21 10:47:07 -请求地址 : http://localhost:8081/index
2019-03-21 10:47:07 -HTTP METHOD : GET
2019-03-21 10:47:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:47:07 -参数 : [{}]
2019-03-21 10:47:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:47:07 -==> Parameters: 1(Long)
2019-03-21 10:47:07 -<==      Total: 46
2019-03-21 10:47:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:47:07 -==> Parameters: 138(Long)
2019-03-21 10:47:07 -<==      Total: 1
2019-03-21 10:47:07 -耗时 : 52
2019-03-21 10:47:07 -返回值 : index_v1
2019-03-21 10:47:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:47:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 52(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:47:07.487(Timestamp)
2019-03-21 10:47:07 -请求地址 : http://localhost:8081/main
2019-03-21 10:47:07 -HTTP METHOD : GET
2019-03-21 10:47:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:47:07 -参数 : []
2019-03-21 10:47:07 -耗时 : 0
2019-03-21 10:47:07 -返回值 : main
2019-03-21 10:47:07 -<==    Updates: 1
2019-03-21 10:47:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:47:07 -HTTP METHOD : GET
2019-03-21 10:47:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:47:07 -参数 : []
2019-03-21 10:47:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:47:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:47:07 -<==      Total: 0
2019-03-21 10:47:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:47:07 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:47:07 -<==      Total: 1
2019-03-21 10:47:07 -耗时 : 10
2019-03-21 10:47:07 -返回值 : com.bootdo.common.utils.PageUtils@683fd725
2019-03-21 10:47:07 -请求地址 : http://localhost:8081/main
2019-03-21 10:47:07 -HTTP METHOD : GET
2019-03-21 10:47:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:47:07 -参数 : []
2019-03-21 10:47:07 -耗时 : 0
2019-03-21 10:47:07 -返回值 : main
2019-03-21 10:47:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:47:10 -HTTP METHOD : GET
2019-03-21 10:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:47:10 -参数 : []
2019-03-21 10:47:10 -耗时 : 0
2019-03-21 10:47:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:47:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:47:10 -HTTP METHOD : GET
2019-03-21 10:47:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:47:10 -参数 : [userType]
2019-03-21 10:47:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:47:10 -==> Parameters: userType(String)
2019-03-21 10:47:10 -<==      Total: 2
2019-03-21 10:47:10 -耗时 : 5
2019-03-21 10:47:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:47:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:47:10 -HTTP METHOD : GET
2019-03-21 10:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:47:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:47:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:47:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:47:10 -<==      Total: 5
2019-03-21 10:47:10 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:47:10 -==> Parameters: 
2019-03-21 10:47:10 -<==      Total: 1
2019-03-21 10:47:10 -耗时 : 6
2019-03-21 10:47:10 -返回值 : com.bootdo.common.utils.PageUtils@2cc1fca9
2019-03-21 10:47:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 10:47:13 -HTTP METHOD : GET
2019-03-21 10:47:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 10:47:13 -参数 : []
2019-03-21 10:47:13 -耗时 : 1
2019-03-21 10:47:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 10:47:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:47:13 -HTTP METHOD : GET
2019-03-21 10:47:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:47:13 -参数 : [userType]
2019-03-21 10:47:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:47:13 -==> Parameters: userType(String)
2019-03-21 10:47:13 -<==      Total: 2
2019-03-21 10:47:13 -耗时 : 5
2019-03-21 10:47:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:47:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 10:47:13 -HTTP METHOD : GET
2019-03-21 10:47:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 10:47:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 10:47:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 10:47:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:47:13 -<==      Total: 3
2019-03-21 10:47:13 -==>  Preparing: select count(*) from heat_log 
2019-03-21 10:47:13 -==> Parameters: 
2019-03-21 10:47:13 -<==      Total: 1
2019-03-21 10:47:13 -耗时 : 7
2019-03-21 10:47:13 -返回值 : com.bootdo.common.utils.PageUtils@40bf0b9b
2019-03-21 10:47:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 10:47:14 -HTTP METHOD : GET
2019-03-21 10:47:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 10:47:14 -参数 : []
2019-03-21 10:47:14 -耗时 : 1
2019-03-21 10:47:14 -返回值 : moneyLog/heatLog/add
2019-03-21 10:49:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:49:06 -HTTP METHOD : GET
2019-03-21 10:49:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:49:06 -参数 : []
2019-03-21 10:49:06 -耗时 : 1
2019-03-21 10:49:06 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:49:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:49:06 -HTTP METHOD : GET
2019-03-21 10:49:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:49:06 -参数 : [userType]
2019-03-21 10:49:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:49:06 -==> Parameters: userType(String)
2019-03-21 10:49:06 -<==      Total: 2
2019-03-21 10:49:06 -耗时 : 6
2019-03-21 10:49:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:49:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:49:06 -HTTP METHOD : GET
2019-03-21 10:49:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:49:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:49:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:49:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:49:06 -<==      Total: 5
2019-03-21 10:49:06 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:49:06 -==> Parameters: 
2019-03-21 10:49:06 -<==      Total: 1
2019-03-21 10:49:06 -耗时 : 5
2019-03-21 10:49:06 -返回值 : com.bootdo.common.utils.PageUtils@7038dec5
2019-03-21 10:49:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 10:49:08 -HTTP METHOD : GET
2019-03-21 10:49:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 10:49:08 -参数 : []
2019-03-21 10:49:08 -耗时 : 1
2019-03-21 10:49:08 -返回值 : moneyLog/elecLog/add
2019-03-21 10:49:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:49:09 -HTTP METHOD : GET
2019-03-21 10:49:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:49:09 -参数 : [userType]
2019-03-21 10:49:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:49:09 -==> Parameters: userType(String)
2019-03-21 10:49:09 -<==      Total: 2
2019-03-21 10:49:09 -耗时 : 4
2019-03-21 10:49:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:51:37 -请求地址 : http://localhost:8081/index
2019-03-21 10:51:37 -HTTP METHOD : GET
2019-03-21 10:51:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 10:51:37 -参数 : [{}]
2019-03-21 10:51:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 10:51:37 -==> Parameters: 1(Long)
2019-03-21 10:51:37 -<==      Total: 46
2019-03-21 10:51:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 10:51:37 -==> Parameters: 138(Long)
2019-03-21 10:51:37 -<==      Total: 1
2019-03-21 10:51:37 -耗时 : 17
2019-03-21 10:51:37 -返回值 : index_v1
2019-03-21 10:51:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 10:51:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 10:51:37.74(Timestamp)
2019-03-21 10:51:37 -请求地址 : http://localhost:8081/main
2019-03-21 10:51:37 -HTTP METHOD : GET
2019-03-21 10:51:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:51:37 -参数 : []
2019-03-21 10:51:37 -耗时 : 20
2019-03-21 10:51:37 -返回值 : main
2019-03-21 10:51:38 -<==    Updates: 1
2019-03-21 10:51:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 10:51:38 -HTTP METHOD : GET
2019-03-21 10:51:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 10:51:38 -参数 : []
2019-03-21 10:51:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 10:51:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 10:51:38 -<==      Total: 0
2019-03-21 10:51:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 10:51:38 -==> Parameters: 1(Long), 0(String)
2019-03-21 10:51:38 -<==      Total: 1
2019-03-21 10:51:38 -耗时 : 7
2019-03-21 10:51:38 -返回值 : com.bootdo.common.utils.PageUtils@d7ffc13
2019-03-21 10:51:38 -请求地址 : http://localhost:8081/main
2019-03-21 10:51:38 -HTTP METHOD : GET
2019-03-21 10:51:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 10:51:38 -参数 : []
2019-03-21 10:51:38 -耗时 : 1
2019-03-21 10:51:38 -返回值 : main
2019-03-21 10:51:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 10:51:39 -==> Parameters: 1(Long)
2019-03-21 10:51:39 -<==      Total: 90
2019-03-21 10:51:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 10:51:39 -HTTP METHOD : GET
2019-03-21 10:51:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 10:51:39 -参数 : []
2019-03-21 10:51:39 -耗时 : 0
2019-03-21 10:51:39 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 10:51:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:51:39 -HTTP METHOD : GET
2019-03-21 10:51:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:51:39 -参数 : [userType]
2019-03-21 10:51:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:51:39 -==> Parameters: userType(String)
2019-03-21 10:51:39 -<==      Total: 2
2019-03-21 10:51:39 -耗时 : 4
2019-03-21 10:51:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:51:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 10:51:39 -HTTP METHOD : GET
2019-03-21 10:51:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 10:51:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 10:51:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 10:51:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:51:39 -<==      Total: 5
2019-03-21 10:51:39 -==>  Preparing: select count(*) from elec_log 
2019-03-21 10:51:39 -==> Parameters: 
2019-03-21 10:51:39 -<==      Total: 1
2019-03-21 10:51:39 -耗时 : 6
2019-03-21 10:51:39 -返回值 : com.bootdo.common.utils.PageUtils@2193ccf
2019-03-21 10:51:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 10:51:40 -HTTP METHOD : GET
2019-03-21 10:51:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 10:51:40 -参数 : []
2019-03-21 10:51:40 -耗时 : 0
2019-03-21 10:51:40 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 10:51:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 10:51:40 -HTTP METHOD : GET
2019-03-21 10:51:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 10:51:40 -参数 : [userType]
2019-03-21 10:51:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 10:51:40 -==> Parameters: userType(String)
2019-03-21 10:51:40 -<==      Total: 2
2019-03-21 10:51:40 -耗时 : 3
2019-03-21 10:51:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 10:51:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 10:51:41 -HTTP METHOD : GET
2019-03-21 10:51:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 10:51:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 10:51:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 10:51:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 10:51:41 -<==      Total: 3
2019-03-21 10:51:41 -==>  Preparing: select count(*) from water_log 
2019-03-21 10:51:41 -==> Parameters: 
2019-03-21 10:51:41 -<==      Total: 1
2019-03-21 10:51:41 -耗时 : 5
2019-03-21 10:51:41 -返回值 : com.bootdo.common.utils.PageUtils@52c8cd0d
2019-03-21 10:51:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-21 10:51:42 -HTTP METHOD : GET
2019-03-21 10:51:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-21 10:51:42 -参数 : []
2019-03-21 10:51:42 -耗时 : 0
2019-03-21 10:51:42 -返回值 : moneyLog/waterLog/add
2019-03-21 10:52:34 -Starting BootdoApplication on ZJZL-20180906VX with PID 15792 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 10:52:34 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 10:52:34 -The following profiles are active: dev
2019-03-21 10:52:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Thu Mar 21 10:52:35 CST 2019]; root of context hierarchy
2019-03-21 10:52:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 10:52:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d54d918] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3fae07bf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 10:52:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 10:52:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:52:53 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 10:52:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:52:53 -Starting service [Tomcat]
2019-03-21 10:52:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 10:52:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 10:52:53 -Initializing Spring embedded WebApplicationContext
2019-03-21 10:52:53 -Root WebApplicationContext: initialization completed in 18768 ms
2019-03-21 10:52:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 10:52:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 10:52:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 10:52:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 10:52:54 -Filter xssFilter was not registered (disabled)
2019-03-21 10:52:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 10:52:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 10:52:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 10:52:54 -Servlet dispatcherServlet mapped to [/]
2019-03-21 10:52:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Thu Mar 21 10:52:35 CST 2019]; root of context hierarchy
2019-03-21 10:52:59 -Using default implementation for ThreadExecutor
2019-03-21 10:52:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 10:52:59 -Quartz Scheduler v.2.2.1 created.
2019-03-21 10:52:59 -RAMJobStore initialized.
2019-03-21 10:52:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 10:52:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 10:52:59 -Quartz scheduler version: 2.2.1
2019-03-21 10:52:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@511d568f
2019-03-21 10:53:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 10:53:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 10:53:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 10:53:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 10:53:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 10:53:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 10:53:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 10:53:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 10:53:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 10:53:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 10:53:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 10:53:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 10:53:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 10:53:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 10:53:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 10:53:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:53:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 10:53:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:53:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 10:53:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 10:53:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 10:53:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 10:53:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 10:53:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 10:53:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 10:53:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 10:53:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 10:53:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 10:53:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 10:53:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 10:53:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 10:53:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 10:53:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:53:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 10:53:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 10:53:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 10:53:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:53:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:53:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 10:53:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 10:53:02 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 10:53:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 10:53:02 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:53:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 10:53:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 10:53:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 10:53:03 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 10:53:03 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 10:53:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:53:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 10:53:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 10:53:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 10:53:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 10:53:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 10:53:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 10:53:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 10:53:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 10:53:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 10:53:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 10:53:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 10:53:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 10:53:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 10:53:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 10:53:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 10:53:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 10:53:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 10:53:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 10:53:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 10:53:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 10:53:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 10:53:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 10:53:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 10:53:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:53:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:53:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 10:53:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 10:53:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 10:53:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 10:53:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 10:53:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 10:53:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 10:53:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 10:53:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 10:53:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 10:53:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 10:53:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 10:53:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 10:53:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Thu Mar 21 10:52:35 CST 2019]; root of context hierarchy
2019-03-21 10:53:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 10:53:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 10:53:07 -Registering beans for JMX exposure on startup
2019-03-21 10:53:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 10:53:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 10:53:07 -Starting beans in phase 2147483647
2019-03-21 10:53:07 -Context refreshed
2019-03-21 10:53:08 -Found 1 custom documentation plugin(s)
2019-03-21 10:53:08 -Scanning for api listing references
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_1
2019-03-21 10:53:09 -Generating unique operation named: addUsingGET_1
2019-03-21 10:53:09 -Generating unique operation named: editUsingGET_1
2019-03-21 10:53:09 -Generating unique operation named: listUsingGET_1
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_2
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_3
2019-03-21 10:53:09 -Generating unique operation named: saveUsingPOST_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingGET_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPOST_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPUT_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 10:53:09 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 10:53:09 -Generating unique operation named: addUsingGET_2
2019-03-21 10:53:09 -Generating unique operation named: editUsingGET_2
2019-03-21 10:53:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 10:53:09 -Generating unique operation named: listUsingGET_2
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_4
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_5
2019-03-21 10:53:09 -Generating unique operation named: saveUsingPOST_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingGET_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPOST_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPUT_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 10:53:09 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 10:53:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 10:53:09 -Generating unique operation named: addUsingGET_3
2019-03-21 10:53:09 -Generating unique operation named: editUsingGET_3
2019-03-21 10:53:09 -Generating unique operation named: listUsingGET_3
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_6
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_7
2019-03-21 10:53:09 -Generating unique operation named: saveUsingPOST_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingGET_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPOST_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPUT_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 10:53:09 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 10:53:09 -Generating unique operation named: addUsingGET_4
2019-03-21 10:53:09 -Generating unique operation named: editUsingGET_4
2019-03-21 10:53:09 -Generating unique operation named: listUsingGET_4
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_8
2019-03-21 10:53:09 -Generating unique operation named: removeUsingPOST_9
2019-03-21 10:53:09 -Generating unique operation named: saveUsingPOST_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingGET_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPUT_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 10:53:10 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 10:53:10 -Generating unique operation named: ElecUsingGET_1
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_5
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_5
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_5
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_10
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_11
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingGET_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPUT_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 10:53:10 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_6
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_6
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_6
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_7
2019-03-21 10:53:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_7
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_12
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_13
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingGET_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPUT_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 10:53:10 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 10:53:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_7
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_8
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_8
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_14
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_15
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingGET_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPUT_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 10:53:10 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_8
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_9
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_9
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_16
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_17
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingGET_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_9
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPUT_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 10:53:10 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_9
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_10
2019-03-21 10:53:10 -Generating unique operation named: infoUsingGET_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingPOST_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingPUT_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 10:53:10 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_10
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_18
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_19
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_9
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_10
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_11
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_20
2019-03-21 10:53:10 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_10
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_11
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_12
2019-03-21 10:53:10 -Generating unique operation named: removeUsingPOST_21
2019-03-21 10:53:10 -Generating unique operation named: saveUsingPOST_10
2019-03-21 10:53:10 -Generating unique operation named: treeUsingGET_1
2019-03-21 10:53:10 -Generating unique operation named: treeUsingGET_2
2019-03-21 10:53:10 -Generating unique operation named: updateUsingPOST_11
2019-03-21 10:53:10 -Generating unique operation named: addUsingGET_11
2019-03-21 10:53:10 -Generating unique operation named: editUsingGET_12
2019-03-21 10:53:10 -Generating unique operation named: listUsingGET_13
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_22
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_23
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingGET_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPUT_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 10:53:11 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_12
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_13
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_14
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_24
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_25
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingGET_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPUT_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 10:53:11 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_13
2019-03-21 10:53:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_14
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_15
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_13
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_14
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_14
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_16
2019-03-21 10:53:11 -Generating unique operation named: listUsingHEAD_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingPOST_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingPUT_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingPATCH_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingDELETE_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 10:53:11 -Generating unique operation named: listUsingTRACE_1
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_14
2019-03-21 10:53:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_15
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_17
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_26
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_15
2019-03-21 10:53:11 -Generating unique operation named: treeUsingGET_3
2019-03-21 10:53:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_15
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_15
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_16
2019-03-21 10:53:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_18
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_27
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_28
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_16
2019-03-21 10:53:11 -Generating unique operation named: updateUsingGET_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_16
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPUT_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 10:53:11 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 10:53:11 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_16
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_17
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_19
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_29
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_30
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_17
2019-03-21 10:53:11 -Generating unique operation named: updateUsingGET_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_17
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPUT_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 10:53:11 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 10:53:11 -Generating unique operation named: addUsingGET_17
2019-03-21 10:53:11 -Generating unique operation named: editUsingGET_18
2019-03-21 10:53:11 -Generating unique operation named: listUsingGET_20
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_31
2019-03-21 10:53:11 -Generating unique operation named: removeUsingPOST_32
2019-03-21 10:53:11 -Generating unique operation named: saveUsingPOST_18
2019-03-21 10:53:11 -Generating unique operation named: updateUsingGET_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPOST_18
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPUT_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 10:53:11 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 10:53:11 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 10:53:11 -Starting Quartz Scheduler now
2019-03-21 10:53:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 10:53:11 -Starting...
2019-03-21 10:53:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:53:11 -Started.
2019-03-21 10:53:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 10:53:11 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-21 10:53:11 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:53:11 -Stopping service [Tomcat]
2019-03-21 10:53:12 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-21 10:53:12 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-21 10:53:12 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-21 10:53:12 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-21 10:53:12 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-21 10:53:12 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1698fc68: startup date [Thu Mar 21 10:52:35 CST 2019]; root of context hierarchy
2019-03-21 10:53:12 -Stopping beans in phase 2147483647
2019-03-21 10:53:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-21 10:53:12 -Stopping...
2019-03-21 10:53:12 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:53:12 -Stopped.
2019-03-21 10:53:12 -Unregistering JMX-exposed beans on shutdown
2019-03-21 10:53:12 -Unregistering JMX-exposed beans
2019-03-21 10:53:12 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-21 10:53:12 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-21 10:53:12 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-21 10:53:12 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-21 10:53:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-21 10:53:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-21 10:53:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-21 10:53:12 -Shutting down Quartz Scheduler
2019-03-21 10:53:39 -Starting BootdoApplication on ZJZL-20180906VX with PID 13352 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 10:53:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 10:53:39 -The following profiles are active: dev
2019-03-21 10:53:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@295eaa7c: startup date [Thu Mar 21 10:53:39 CST 2019]; root of context hierarchy
2019-03-21 10:53:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 10:53:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$64136043] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$566c8eea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 10:53:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 10:53:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:53:48 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 10:53:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:53:48 -Starting service [Tomcat]
2019-03-21 10:53:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 10:53:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 10:53:49 -Initializing Spring embedded WebApplicationContext
2019-03-21 10:53:49 -Root WebApplicationContext: initialization completed in 9687 ms
2019-03-21 10:53:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 10:53:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 10:53:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 10:53:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 10:53:50 -Filter xssFilter was not registered (disabled)
2019-03-21 10:53:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 10:53:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 10:53:50 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 10:53:50 -Servlet dispatcherServlet mapped to [/]
2019-03-21 10:53:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@295eaa7c: startup date [Thu Mar 21 10:53:39 CST 2019]; root of context hierarchy
2019-03-21 10:53:53 -Using default implementation for ThreadExecutor
2019-03-21 10:53:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 10:53:53 -Quartz Scheduler v.2.2.1 created.
2019-03-21 10:53:53 -RAMJobStore initialized.
2019-03-21 10:53:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 10:53:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 10:53:53 -Quartz scheduler version: 2.2.1
2019-03-21 10:53:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@71469e01
2019-03-21 10:53:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 10:53:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 10:53:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 10:53:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 10:53:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 10:53:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 10:53:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 10:53:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 10:53:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 10:53:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 10:53:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 10:53:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 10:53:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 10:53:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 10:53:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 10:53:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:53:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:53:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 10:53:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 10:53:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 10:53:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 10:53:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 10:53:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 10:53:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 10:53:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 10:53:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 10:53:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 10:53:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 10:53:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 10:53:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 10:53:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 10:53:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:53:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 10:53:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 10:53:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 10:53:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:53:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:53:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 10:53:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 10:53:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 10:53:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:53:57 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 10:53:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 10:53:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 10:53:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 10:53:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 10:53:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 10:53:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 10:53:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 10:53:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 10:53:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 10:53:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 10:53:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 10:53:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 10:53:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 10:53:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 10:53:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 10:53:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 10:53:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 10:53:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 10:53:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 10:53:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 10:53:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 10:53:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 10:53:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 10:53:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 10:53:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 10:53:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 10:53:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:53:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 10:53:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:53:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 10:53:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 10:53:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 10:53:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 10:53:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 10:53:57 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 10:53:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 10:53:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:53:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 10:53:57 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:53:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:53:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 10:53:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 10:53:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 10:53:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 10:53:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 10:53:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 10:53:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@295eaa7c: startup date [Thu Mar 21 10:53:39 CST 2019]; root of context hierarchy
2019-03-21 10:53:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:53:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 10:53:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 10:54:01 -Registering beans for JMX exposure on startup
2019-03-21 10:54:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 10:54:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 10:54:01 -Starting beans in phase 2147483647
2019-03-21 10:54:01 -Context refreshed
2019-03-21 10:54:01 -Found 1 custom documentation plugin(s)
2019-03-21 10:54:02 -Scanning for api listing references
2019-03-21 10:54:02 -Generating unique operation named: removeUsingPOST_1
2019-03-21 10:54:02 -Generating unique operation named: addUsingGET_1
2019-03-21 10:54:02 -Generating unique operation named: editUsingGET_1
2019-03-21 10:54:02 -Generating unique operation named: listUsingGET_1
2019-03-21 10:54:02 -Generating unique operation named: removeUsingPOST_2
2019-03-21 10:54:02 -Generating unique operation named: removeUsingPOST_3
2019-03-21 10:54:02 -Generating unique operation named: saveUsingPOST_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingGET_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingPOST_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingPUT_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 10:54:02 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 10:54:02 -Generating unique operation named: addUsingGET_2
2019-03-21 10:54:02 -Generating unique operation named: editUsingGET_2
2019-03-21 10:54:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 10:54:02 -Generating unique operation named: listUsingGET_2
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_4
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_5
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 10:54:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_3
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_3
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_3
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_6
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_7
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_4
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_4
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_4
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_8
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_9
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 10:54:03 -Generating unique operation named: ElecUsingGET_1
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_5
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_5
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_5
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_10
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_11
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_6
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_6
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_6
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_7
2019-03-21 10:54:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_7
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_12
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_13
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 10:54:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_7
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_8
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_8
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_14
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_15
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_8
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_9
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_9
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_16
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_17
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingGET_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_9
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPUT_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 10:54:03 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 10:54:03 -Generating unique operation named: addUsingGET_9
2019-03-21 10:54:03 -Generating unique operation named: editUsingGET_10
2019-03-21 10:54:03 -Generating unique operation named: infoUsingGET_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingPOST_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingPUT_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 10:54:03 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_10
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_18
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_19
2019-03-21 10:54:03 -Generating unique operation named: saveUsingPOST_9
2019-03-21 10:54:03 -Generating unique operation named: updateUsingPOST_10
2019-03-21 10:54:03 -Generating unique operation named: listUsingGET_11
2019-03-21 10:54:03 -Generating unique operation named: removeUsingPOST_20
2019-03-21 10:54:04 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_10
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_11
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_12
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_21
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_10
2019-03-21 10:54:04 -Generating unique operation named: treeUsingGET_1
2019-03-21 10:54:04 -Generating unique operation named: treeUsingGET_2
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_11
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_11
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_12
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_13
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_22
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_23
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingGET_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPUT_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 10:54:04 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_12
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_13
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_14
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_24
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_25
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingGET_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_13
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPUT_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 10:54:04 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_13
2019-03-21 10:54:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_14
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_15
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_13
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_14
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_14
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_16
2019-03-21 10:54:04 -Generating unique operation named: listUsingHEAD_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingPOST_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingPUT_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingPATCH_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingDELETE_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 10:54:04 -Generating unique operation named: listUsingTRACE_1
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_14
2019-03-21 10:54:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_15
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_17
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_26
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_15
2019-03-21 10:54:04 -Generating unique operation named: treeUsingGET_3
2019-03-21 10:54:04 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_15
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_15
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_16
2019-03-21 10:54:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_18
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_27
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_28
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_16
2019-03-21 10:54:04 -Generating unique operation named: updateUsingGET_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_16
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPUT_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 10:54:04 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 10:54:04 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_16
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_17
2019-03-21 10:54:04 -Generating unique operation named: listUsingGET_19
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_29
2019-03-21 10:54:04 -Generating unique operation named: removeUsingPOST_30
2019-03-21 10:54:04 -Generating unique operation named: saveUsingPOST_17
2019-03-21 10:54:04 -Generating unique operation named: updateUsingGET_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPOST_17
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPUT_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 10:54:04 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 10:54:04 -Generating unique operation named: addUsingGET_17
2019-03-21 10:54:04 -Generating unique operation named: editUsingGET_18
2019-03-21 10:54:05 -Generating unique operation named: listUsingGET_20
2019-03-21 10:54:05 -Generating unique operation named: removeUsingPOST_31
2019-03-21 10:54:05 -Generating unique operation named: removeUsingPOST_32
2019-03-21 10:54:05 -Generating unique operation named: saveUsingPOST_18
2019-03-21 10:54:05 -Generating unique operation named: updateUsingGET_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingPOST_18
2019-03-21 10:54:05 -Generating unique operation named: updateUsingPUT_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 10:54:05 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 10:54:05 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 10:54:06 -Starting Quartz Scheduler now
2019-03-21 10:54:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 10:54:06 -Starting...
2019-03-21 10:54:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:54:06 -Started.
2019-03-21 10:54:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 10:54:06 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-21 10:54:06 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:54:06 -Stopping service [Tomcat]
2019-03-21 10:54:06 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-21 10:54:06 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-21 10:54:06 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-21 10:54:06 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-21 10:54:06 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-21 10:54:06 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@295eaa7c: startup date [Thu Mar 21 10:53:39 CST 2019]; root of context hierarchy
2019-03-21 10:54:06 -Stopping beans in phase 2147483647
2019-03-21 10:54:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-21 10:54:06 -Stopping...
2019-03-21 10:54:06 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:54:06 -Stopped.
2019-03-21 10:54:06 -Unregistering JMX-exposed beans on shutdown
2019-03-21 10:54:06 -Unregistering JMX-exposed beans
2019-03-21 10:54:06 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-21 10:54:06 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-21 10:54:06 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-21 10:54:06 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-21 10:54:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-21 10:54:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-21 10:54:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-21 10:54:06 -Shutting down Quartz Scheduler
2019-03-21 10:58:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 14052 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 10:58:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 10:58:52 -The following profiles are active: dev
2019-03-21 10:58:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8: startup date [Thu Mar 21 10:58:52 CST 2019]; root of context hierarchy
2019-03-21 10:58:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 10:58:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a23f2b6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:58:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$94985a15] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 10:59:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 10:59:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 10:59:03 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 10:59:03 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 10:59:03 -Starting service [Tomcat]
2019-03-21 10:59:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 10:59:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 10:59:03 -Initializing Spring embedded WebApplicationContext
2019-03-21 10:59:03 -Root WebApplicationContext: initialization completed in 11328 ms
2019-03-21 10:59:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 10:59:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 10:59:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 10:59:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 10:59:05 -Filter xssFilter was not registered (disabled)
2019-03-21 10:59:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 10:59:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 10:59:05 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 10:59:05 -Servlet dispatcherServlet mapped to [/]
2019-03-21 10:59:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8: startup date [Thu Mar 21 10:58:52 CST 2019]; root of context hierarchy
2019-03-21 10:59:09 -Using default implementation for ThreadExecutor
2019-03-21 10:59:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 10:59:09 -Quartz Scheduler v.2.2.1 created.
2019-03-21 10:59:09 -RAMJobStore initialized.
2019-03-21 10:59:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 10:59:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 10:59:09 -Quartz scheduler version: 2.2.1
2019-03-21 10:59:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5e2b512b
2019-03-21 10:59:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 10:59:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 10:59:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 10:59:16 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 10:59:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 10:59:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 10:59:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 10:59:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 10:59:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 10:59:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 10:59:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 10:59:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 10:59:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 10:59:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 10:59:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 10:59:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 10:59:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 10:59:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 10:59:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:59:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 10:59:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 10:59:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 10:59:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 10:59:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 10:59:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 10:59:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 10:59:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 10:59:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 10:59:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 10:59:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 10:59:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:59:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:59:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 10:59:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 10:59:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 10:59:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 10:59:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 10:59:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:59:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 10:59:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 10:59:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 10:59:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:59:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 10:59:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 10:59:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 10:59:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 10:59:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 10:59:17 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 10:59:17 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 10:59:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 10:59:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 10:59:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 10:59:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 10:59:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 10:59:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 10:59:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 10:59:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 10:59:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 10:59:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 10:59:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 10:59:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 10:59:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 10:59:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 10:59:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 10:59:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 10:59:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 10:59:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 10:59:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 10:59:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 10:59:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 10:59:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 10:59:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 10:59:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 10:59:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 10:59:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 10:59:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 10:59:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:59:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 10:59:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 10:59:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 10:59:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 10:59:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 10:59:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 10:59:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 10:59:17 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 10:59:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 10:59:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 10:59:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 10:59:17 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 10:59:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 10:59:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 10:59:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 10:59:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 10:59:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 10:59:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 10:59:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 10:59:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:59:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef3efa8: startup date [Thu Mar 21 10:58:52 CST 2019]; root of context hierarchy
2019-03-21 10:59:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:59:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:59:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 10:59:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 10:59:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 10:59:24 -Registering beans for JMX exposure on startup
2019-03-21 10:59:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 10:59:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 10:59:24 -Starting beans in phase 2147483647
2019-03-21 10:59:24 -Context refreshed
2019-03-21 10:59:24 -Found 1 custom documentation plugin(s)
2019-03-21 10:59:25 -Scanning for api listing references
2019-03-21 10:59:25 -Generating unique operation named: removeUsingPOST_1
2019-03-21 10:59:25 -Generating unique operation named: addUsingGET_1
2019-03-21 10:59:25 -Generating unique operation named: editUsingGET_1
2019-03-21 10:59:25 -Generating unique operation named: listUsingGET_1
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_2
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_3
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_2
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_2
2019-03-21 10:59:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_2
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_4
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_5
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 10:59:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_3
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_3
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_3
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_6
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_7
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_4
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_4
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_4
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_8
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_9
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 10:59:26 -Generating unique operation named: ElecUsingGET_1
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_5
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_5
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_5
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_10
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_11
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_6
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_6
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_6
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_7
2019-03-21 10:59:26 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_7
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_12
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_13
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPOST_7
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPUT_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 10:59:26 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 10:59:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 10:59:26 -Generating unique operation named: addUsingGET_7
2019-03-21 10:59:26 -Generating unique operation named: editUsingGET_8
2019-03-21 10:59:26 -Generating unique operation named: listUsingGET_8
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_14
2019-03-21 10:59:26 -Generating unique operation named: removeUsingPOST_15
2019-03-21 10:59:26 -Generating unique operation named: saveUsingPOST_7
2019-03-21 10:59:26 -Generating unique operation named: updateUsingGET_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPUT_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 10:59:27 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_8
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_9
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_9
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_16
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_17
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingGET_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPUT_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 10:59:27 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_9
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_10
2019-03-21 10:59:27 -Generating unique operation named: infoUsingGET_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingPOST_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingPUT_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 10:59:27 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_10
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_18
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_19
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_10
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_11
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_20
2019-03-21 10:59:27 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_10
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_11
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_12
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_21
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_10
2019-03-21 10:59:27 -Generating unique operation named: treeUsingGET_1
2019-03-21 10:59:27 -Generating unique operation named: treeUsingGET_2
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_11
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_11
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_12
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_13
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_22
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_23
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_11
2019-03-21 10:59:27 -Generating unique operation named: updateUsingGET_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_12
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPUT_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 10:59:27 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_12
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_13
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_14
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_24
2019-03-21 10:59:27 -Generating unique operation named: removeUsingPOST_25
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_12
2019-03-21 10:59:27 -Generating unique operation named: updateUsingGET_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_13
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPUT_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 10:59:27 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 10:59:27 -Generating unique operation named: addUsingGET_13
2019-03-21 10:59:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 10:59:27 -Generating unique operation named: editUsingGET_14
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_15
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_13
2019-03-21 10:59:27 -Generating unique operation named: saveUsingPOST_14
2019-03-21 10:59:27 -Generating unique operation named: updateUsingPOST_14
2019-03-21 10:59:27 -Generating unique operation named: listUsingGET_16
2019-03-21 10:59:27 -Generating unique operation named: listUsingHEAD_1
2019-03-21 10:59:27 -Generating unique operation named: listUsingPOST_1
2019-03-21 10:59:28 -Generating unique operation named: listUsingPUT_1
2019-03-21 10:59:28 -Generating unique operation named: listUsingPATCH_1
2019-03-21 10:59:28 -Generating unique operation named: listUsingDELETE_1
2019-03-21 10:59:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 10:59:28 -Generating unique operation named: listUsingTRACE_1
2019-03-21 10:59:28 -Generating unique operation named: addUsingGET_14
2019-03-21 10:59:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 10:59:28 -Generating unique operation named: editUsingGET_15
2019-03-21 10:59:28 -Generating unique operation named: listUsingGET_17
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_26
2019-03-21 10:59:28 -Generating unique operation named: saveUsingPOST_15
2019-03-21 10:59:28 -Generating unique operation named: treeUsingGET_3
2019-03-21 10:59:28 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPOST_15
2019-03-21 10:59:28 -Generating unique operation named: addUsingGET_15
2019-03-21 10:59:28 -Generating unique operation named: editUsingGET_16
2019-03-21 10:59:28 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 10:59:28 -Generating unique operation named: listUsingGET_18
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_27
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_28
2019-03-21 10:59:28 -Generating unique operation named: saveUsingPOST_16
2019-03-21 10:59:28 -Generating unique operation named: updateUsingGET_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPOST_16
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPUT_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 10:59:28 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 10:59:28 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 10:59:28 -Generating unique operation named: addUsingGET_16
2019-03-21 10:59:28 -Generating unique operation named: editUsingGET_17
2019-03-21 10:59:28 -Generating unique operation named: listUsingGET_19
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_29
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_30
2019-03-21 10:59:28 -Generating unique operation named: saveUsingPOST_17
2019-03-21 10:59:28 -Generating unique operation named: updateUsingGET_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPOST_17
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPUT_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 10:59:28 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 10:59:28 -Generating unique operation named: addUsingGET_17
2019-03-21 10:59:28 -Generating unique operation named: editUsingGET_18
2019-03-21 10:59:28 -Generating unique operation named: listUsingGET_20
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_31
2019-03-21 10:59:28 -Generating unique operation named: removeUsingPOST_32
2019-03-21 10:59:28 -Generating unique operation named: saveUsingPOST_18
2019-03-21 10:59:28 -Generating unique operation named: updateUsingGET_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPOST_18
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPUT_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 10:59:28 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 10:59:28 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 10:59:28 -Starting Quartz Scheduler now
2019-03-21 10:59:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 10:59:28 -Starting...
2019-03-21 10:59:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 10:59:28 -Started.
2019-03-21 10:59:28 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 10:59:28 -Using a shared selector for servlet write/read
2019-03-21 10:59:28 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 10:59:28 -Started BootdoApplication in 38.761 seconds (JVM running for 40.821)
2019-03-21 10:59:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 10:59:29 -==> Parameters: 
2019-03-21 10:59:29 -<==      Total: 1
2019-03-21 10:59:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 10:59:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 10:59:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-03-21 10:59:39 -Enabling session validation scheduler...
2019-03-21 10:59:40 -请求地址 : http://localhost:8081/
2019-03-21 10:59:40 -HTTP METHOD : GET
2019-03-21 10:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-21 10:59:40 -参数 : [{}]
2019-03-21 10:59:40 -耗时 : 3
2019-03-21 10:59:40 -返回值 : redirect:/index
2019-03-21 10:59:40 -请求地址 : http://localhost:8081/login;JSESSIONID=7d7fc005-58d5-4015-9e7d-2a21b6143549
2019-03-21 10:59:40 -HTTP METHOD : GET
2019-03-21 10:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 10:59:40 -参数 : [{}]
2019-03-21 10:59:40 -耗时 : 1
2019-03-21 10:59:40 -返回值 : login
2019-03-21 10:59:43 -请求地址 : http://localhost:8081/getVerify
2019-03-21 10:59:43 -HTTP METHOD : GET
2019-03-21 10:59:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 10:59:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1fefd630, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1a01c060]
2019-03-21 10:59:57 -4870
2019-03-21 10:59:57 -耗时 : 14190
2019-03-21 10:59:57 -返回值 : null
2019-03-21 10:59:57 -请求地址 : http://localhost:8081/login
2019-03-21 10:59:57 -HTTP METHOD : GET
2019-03-21 10:59:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 10:59:57 -参数 : [{}]
2019-03-21 10:59:57 -耗时 : 1
2019-03-21 10:59:57 -返回值 : login
2019-03-21 11:00:03 -请求地址 : http://localhost:8081/login
2019-03-21 11:00:03 -HTTP METHOD : POST
2019-03-21 11:00:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 11:00:03 -参数 : [admin, 111111, 4870, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3384b342]
2019-03-21 11:00:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 11:00:03 -==> Parameters: admin(String)
2019-03-21 11:00:03 -<==      Total: 1
2019-03-21 11:00:03 -耗时 : 411
2019-03-21 11:00:03 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:00:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 11:00:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:00:04 -==> Parameters: 1(Long), admin(String), 登录(String), 411(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 11:00:04.13(Timestamp)
2019-03-21 11:00:04 -<==    Updates: 1
2019-03-21 11:00:04 -请求地址 : http://localhost:8081/index
2019-03-21 11:00:04 -HTTP METHOD : GET
2019-03-21 11:00:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:00:04 -参数 : [{}]
2019-03-21 11:00:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:00:04 -==> Parameters: 1(Long)
2019-03-21 11:00:05 -<==      Total: 46
2019-03-21 11:00:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:00:05 -==> Parameters: 138(Long)
2019-03-21 11:00:05 -<==      Total: 1
2019-03-21 11:00:05 -耗时 : 514
2019-03-21 11:00:05 -返回值 : index_v1
2019-03-21 11:00:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:00:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 514(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:00:05.217(Timestamp)
2019-03-21 11:00:05 -<==    Updates: 1
2019-03-21 11:00:05 -请求地址 : http://localhost:8081/main
2019-03-21 11:00:05 -HTTP METHOD : GET
2019-03-21 11:00:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:00:05 -参数 : []
2019-03-21 11:00:05 -耗时 : 1
2019-03-21 11:00:05 -返回值 : main
2019-03-21 11:00:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:00:08 -HTTP METHOD : GET
2019-03-21 11:00:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:00:08 -参数 : []
2019-03-21 11:00:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:00:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:00:08 -<==      Total: 0
2019-03-21 11:00:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:00:08 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:00:08 -<==      Total: 1
2019-03-21 11:00:08 -耗时 : 79
2019-03-21 11:00:08 -返回值 : com.bootdo.common.utils.PageUtils@c8f10bf
2019-03-21 11:00:08 -请求地址 : http://localhost:8081/main
2019-03-21 11:00:08 -HTTP METHOD : GET
2019-03-21 11:00:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:00:08 -参数 : []
2019-03-21 11:00:08 -耗时 : 0
2019-03-21 11:00:08 -返回值 : main
2019-03-21 11:00:18 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-21 11:00:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:00:24 -==> Parameters: 1(Long)
2019-03-21 11:00:24 -<==      Total: 90
2019-03-21 11:00:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:00:24 -HTTP METHOD : GET
2019-03-21 11:00:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:00:24 -参数 : []
2019-03-21 11:00:24 -耗时 : 0
2019-03-21 11:00:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:00:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:00:26 -HTTP METHOD : GET
2019-03-21 11:00:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:00:26 -参数 : [userType]
2019-03-21 11:00:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:00:26 -==> Parameters: userType(String)
2019-03-21 11:00:26 -<==      Total: 2
2019-03-21 11:00:26 -耗时 : 30
2019-03-21 11:00:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:00:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:00:26 -HTTP METHOD : GET
2019-03-21 11:00:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:00:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:00:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:00:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:00:26 -<==      Total: 5
2019-03-21 11:00:26 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:00:26 -==> Parameters: 
2019-03-21 11:00:26 -<==      Total: 1
2019-03-21 11:00:26 -耗时 : 142
2019-03-21 11:00:26 -返回值 : com.bootdo.common.utils.PageUtils@41e99bb8
2019-03-21 11:00:40 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-21 11:00:40 -HTTP METHOD : GET
2019-03-21 11:00:40 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-21 11:00:40 -参数 : []
2019-03-21 11:00:40 -耗时 : 1
2019-03-21 11:00:40 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-21 11:01:12 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-21 11:01:12 -HTTP METHOD : GET
2019-03-21 11:01:12 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-21 11:01:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e4e7373, heatUser]
2019-03-21 11:01:12 -耗时 : 66
2019-03-21 11:01:12 -返回值 : null
2019-03-21 11:03:00 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-21 11:03:00 -HTTP METHOD : GET
2019-03-21 11:03:00 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-21 11:03:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@f4496ee, heatUser]
2019-03-21 11:03:00 -耗时 : 4
2019-03-21 11:03:00 -返回值 : null
2019-03-21 11:03:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:03:34 -HTTP METHOD : GET
2019-03-21 11:03:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:03:34 -参数 : []
2019-03-21 11:03:34 -耗时 : 1
2019-03-21 11:03:34 -返回值 : system/dept/deptTree
2019-03-21 11:03:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:03:35 -HTTP METHOD : GET
2019-03-21 11:03:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:03:35 -参数 : []
2019-03-21 11:03:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:03:35 -==> Parameters: 
2019-03-21 11:03:35 -<==      Total: 3
2019-03-21 11:03:35 -耗时 : 16
2019-03-21 11:03:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:06:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:06:50 -HTTP METHOD : GET
2019-03-21 11:06:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:06:50 -参数 : []
2019-03-21 11:06:50 -耗时 : 0
2019-03-21 11:06:50 -返回值 : system/dept/deptTree
2019-03-21 11:06:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:06:50 -HTTP METHOD : GET
2019-03-21 11:06:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:06:50 -参数 : []
2019-03-21 11:06:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:06:50 -==> Parameters: 
2019-03-21 11:06:50 -<==      Total: 3
2019-03-21 11:06:50 -耗时 : 7
2019-03-21 11:06:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:09:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:09:05 -HTTP METHOD : GET
2019-03-21 11:09:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:09:05 -参数 : []
2019-03-21 11:09:05 -耗时 : 0
2019-03-21 11:09:05 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:09:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:09:06 -HTTP METHOD : GET
2019-03-21 11:09:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:09:06 -参数 : [userType]
2019-03-21 11:09:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:09:06 -==> Parameters: userType(String)
2019-03-21 11:09:06 -<==      Total: 2
2019-03-21 11:09:06 -耗时 : 8
2019-03-21 11:09:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:09:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:09:06 -HTTP METHOD : GET
2019-03-21 11:09:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:09:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:09:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:09:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:09:06 -<==      Total: 5
2019-03-21 11:09:06 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:09:06 -==> Parameters: 
2019-03-21 11:09:06 -<==      Total: 1
2019-03-21 11:09:06 -耗时 : 14
2019-03-21 11:09:06 -返回值 : com.bootdo.common.utils.PageUtils@5e838851
2019-03-21 11:09:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 11:09:07 -HTTP METHOD : GET
2019-03-21 11:09:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 11:09:07 -参数 : []
2019-03-21 11:09:07 -耗时 : 0
2019-03-21 11:09:07 -返回值 : moneyLog/elecLog/add
2019-03-21 11:09:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:09:07 -HTTP METHOD : GET
2019-03-21 11:09:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:09:07 -参数 : [userType]
2019-03-21 11:09:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:09:07 -==> Parameters: userType(String)
2019-03-21 11:09:07 -<==      Total: 2
2019-03-21 11:09:07 -耗时 : 9
2019-03-21 11:09:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:09:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:09:12 -HTTP METHOD : GET
2019-03-21 11:09:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:09:12 -参数 : []
2019-03-21 11:09:12 -耗时 : 0
2019-03-21 11:09:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:09:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:09:12 -HTTP METHOD : GET
2019-03-21 11:09:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:09:12 -参数 : [userType]
2019-03-21 11:09:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:09:12 -==> Parameters: userType(String)
2019-03-21 11:09:12 -<==      Total: 2
2019-03-21 11:09:12 -耗时 : 6
2019-03-21 11:09:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:09:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:09:12 -HTTP METHOD : GET
2019-03-21 11:09:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:09:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:09:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:09:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:09:12 -<==      Total: 3
2019-03-21 11:09:12 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:09:12 -==> Parameters: 
2019-03-21 11:09:12 -<==      Total: 1
2019-03-21 11:09:12 -耗时 : 63
2019-03-21 11:09:12 -返回值 : com.bootdo.common.utils.PageUtils@2f9b0d53
2019-03-21 11:09:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:09:13 -HTTP METHOD : GET
2019-03-21 11:09:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:09:13 -参数 : []
2019-03-21 11:09:13 -耗时 : 0
2019-03-21 11:09:13 -返回值 : moneyLog/heatLog/add
2019-03-21 11:13:58 -请求地址 : http://localhost:8081/index
2019-03-21 11:13:58 -HTTP METHOD : GET
2019-03-21 11:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:13:58 -参数 : [{}]
2019-03-21 11:13:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:13:58 -==> Parameters: 1(Long)
2019-03-21 11:13:58 -<==      Total: 46
2019-03-21 11:13:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:13:58 -==> Parameters: 138(Long)
2019-03-21 11:13:58 -<==      Total: 1
2019-03-21 11:13:58 -耗时 : 22
2019-03-21 11:13:58 -返回值 : index_v1
2019-03-21 11:13:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:13:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:13:58.838(Timestamp)
2019-03-21 11:13:58 -<==    Updates: 1
2019-03-21 11:13:58 -请求地址 : http://localhost:8081/main
2019-03-21 11:13:58 -HTTP METHOD : GET
2019-03-21 11:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:13:58 -参数 : []
2019-03-21 11:13:59 -耗时 : 1
2019-03-21 11:13:59 -返回值 : main
2019-03-21 11:13:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:13:59 -HTTP METHOD : GET
2019-03-21 11:13:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:13:59 -参数 : []
2019-03-21 11:13:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:13:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:13:59 -<==      Total: 0
2019-03-21 11:13:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:13:59 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:13:59 -<==      Total: 1
2019-03-21 11:13:59 -耗时 : 7
2019-03-21 11:13:59 -返回值 : com.bootdo.common.utils.PageUtils@3c92944f
2019-03-21 11:13:59 -请求地址 : http://localhost:8081/main
2019-03-21 11:13:59 -HTTP METHOD : GET
2019-03-21 11:13:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:13:59 -参数 : []
2019-03-21 11:13:59 -耗时 : 0
2019-03-21 11:13:59 -返回值 : main
2019-03-21 11:14:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:14:04 -==> Parameters: 1(Long)
2019-03-21 11:14:04 -<==      Total: 90
2019-03-21 11:14:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:14:04 -HTTP METHOD : GET
2019-03-21 11:14:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:14:04 -参数 : []
2019-03-21 11:14:04 -耗时 : 1
2019-03-21 11:14:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:14:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:14:04 -HTTP METHOD : GET
2019-03-21 11:14:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:14:04 -参数 : [userType]
2019-03-21 11:14:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:14:04 -==> Parameters: userType(String)
2019-03-21 11:14:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:14:04 -HTTP METHOD : GET
2019-03-21 11:14:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:14:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:14:04 -<==      Total: 2
2019-03-21 11:14:04 -耗时 : 8
2019-03-21 11:14:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:14:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:14:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:14:04 -<==      Total: 5
2019-03-21 11:14:04 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:14:04 -==> Parameters: 
2019-03-21 11:14:04 -<==      Total: 1
2019-03-21 11:14:04 -耗时 : 24
2019-03-21 11:14:04 -返回值 : com.bootdo.common.utils.PageUtils@154fc79
2019-03-21 11:14:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:14:05 -HTTP METHOD : GET
2019-03-21 11:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:14:05 -参数 : []
2019-03-21 11:14:05 -耗时 : 0
2019-03-21 11:14:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:14:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:14:05 -HTTP METHOD : GET
2019-03-21 11:14:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:14:05 -参数 : [userType]
2019-03-21 11:14:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:14:05 -==> Parameters: userType(String)
2019-03-21 11:14:05 -<==      Total: 2
2019-03-21 11:14:05 -耗时 : 5
2019-03-21 11:14:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:14:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:14:05 -HTTP METHOD : GET
2019-03-21 11:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:14:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:14:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:14:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:14:05 -<==      Total: 3
2019-03-21 11:14:05 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:14:05 -==> Parameters: 
2019-03-21 11:14:05 -<==      Total: 1
2019-03-21 11:14:05 -耗时 : 7
2019-03-21 11:14:05 -返回值 : com.bootdo.common.utils.PageUtils@2a6e5712
2019-03-21 11:14:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:14:06 -HTTP METHOD : GET
2019-03-21 11:14:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:14:06 -参数 : []
2019-03-21 11:14:06 -耗时 : 1
2019-03-21 11:14:06 -返回值 : moneyLog/heatLog/add
2019-03-21 11:14:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 11364 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 11:14:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 11:14:41 -The following profiles are active: dev
2019-03-21 11:14:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 11:14:41 CST 2019]; root of context hierarchy
2019-03-21 11:14:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 11:14:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1a940d34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ced3bdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 11:14:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 11:14:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:14:50 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 11:14:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 11:14:50 -Starting service [Tomcat]
2019-03-21 11:14:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 11:14:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 11:14:50 -Initializing Spring embedded WebApplicationContext
2019-03-21 11:14:50 -Root WebApplicationContext: initialization completed in 9336 ms
2019-03-21 11:14:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 11:14:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 11:14:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 11:14:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 11:14:51 -Filter xssFilter was not registered (disabled)
2019-03-21 11:14:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 11:14:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 11:14:51 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 11:14:51 -Servlet dispatcherServlet mapped to [/]
2019-03-21 11:14:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 11:14:41 CST 2019]; root of context hierarchy
2019-03-21 11:14:54 -Using default implementation for ThreadExecutor
2019-03-21 11:14:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 11:14:55 -Quartz Scheduler v.2.2.1 created.
2019-03-21 11:14:55 -RAMJobStore initialized.
2019-03-21 11:14:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 11:14:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 11:14:55 -Quartz scheduler version: 2.2.1
2019-03-21 11:14:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@191b44ca
2019-03-21 11:14:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 11:14:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 11:14:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 11:14:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 11:14:58 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 11:14:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 11:14:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 11:14:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 11:14:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 11:14:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 11:14:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 11:14:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 11:14:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 11:14:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 11:14:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 11:14:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:14:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 11:14:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:14:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 11:14:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 11:14:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 11:14:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 11:14:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 11:14:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 11:14:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 11:14:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 11:14:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 11:14:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 11:14:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 11:14:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 11:14:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 11:14:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:14:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 11:14:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 11:14:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 11:14:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:14:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:14:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 11:14:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 11:14:58 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:14:58 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 11:14:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 11:14:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 11:14:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 11:14:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 11:14:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 11:14:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 11:14:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 11:14:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 11:14:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 11:14:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 11:14:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 11:14:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 11:14:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 11:14:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 11:14:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 11:14:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 11:14:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 11:14:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 11:14:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 11:14:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 11:14:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 11:14:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 11:14:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 11:14:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 11:14:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 11:14:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 11:14:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 11:14:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 11:14:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:14:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:14:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 11:14:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 11:14:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 11:14:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 11:14:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 11:14:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 11:14:58 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:14:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:14:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 11:14:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 11:14:58 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:14:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:14:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 11:14:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 11:14:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 11:14:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 11:14:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 11:14:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 11:15:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:15:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 11:14:41 CST 2019]; root of context hierarchy
2019-03-21 11:15:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:15:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:15:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:15:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 11:15:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 11:15:03 -Registering beans for JMX exposure on startup
2019-03-21 11:15:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 11:15:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 11:15:03 -Starting beans in phase 2147483647
2019-03-21 11:15:03 -Context refreshed
2019-03-21 11:15:03 -Found 1 custom documentation plugin(s)
2019-03-21 11:15:03 -Scanning for api listing references
2019-03-21 11:15:04 -Generating unique operation named: removeUsingPOST_1
2019-03-21 11:15:04 -Generating unique operation named: addUsingGET_1
2019-03-21 11:15:04 -Generating unique operation named: editUsingGET_1
2019-03-21 11:15:04 -Generating unique operation named: listUsingGET_1
2019-03-21 11:15:04 -Generating unique operation named: removeUsingPOST_2
2019-03-21 11:15:04 -Generating unique operation named: removeUsingPOST_3
2019-03-21 11:15:04 -Generating unique operation named: saveUsingPOST_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingGET_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPOST_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPUT_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 11:15:04 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 11:15:04 -Generating unique operation named: addUsingGET_2
2019-03-21 11:15:04 -Generating unique operation named: editUsingGET_2
2019-03-21 11:15:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 11:15:04 -Generating unique operation named: listUsingGET_2
2019-03-21 11:15:04 -Generating unique operation named: removeUsingPOST_4
2019-03-21 11:15:04 -Generating unique operation named: removeUsingPOST_5
2019-03-21 11:15:04 -Generating unique operation named: saveUsingPOST_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingGET_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPOST_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPUT_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 11:15:04 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 11:15:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_3
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_3
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_3
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_6
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_7
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_4
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_4
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_4
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_8
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_9
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 11:15:05 -Generating unique operation named: ElecUsingGET_1
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_5
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_5
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_5
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_10
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_11
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_6
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_6
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_6
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_7
2019-03-21 11:15:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_7
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_12
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_13
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 11:15:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_7
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_8
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_8
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_14
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_15
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_8
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_9
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_9
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_16
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_17
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingGET_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_9
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPUT_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 11:15:05 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 11:15:05 -Generating unique operation named: addUsingGET_9
2019-03-21 11:15:05 -Generating unique operation named: editUsingGET_10
2019-03-21 11:15:05 -Generating unique operation named: infoUsingGET_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingPOST_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingPUT_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 11:15:05 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_10
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_18
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_19
2019-03-21 11:15:05 -Generating unique operation named: saveUsingPOST_9
2019-03-21 11:15:05 -Generating unique operation named: updateUsingPOST_10
2019-03-21 11:15:05 -Generating unique operation named: listUsingGET_11
2019-03-21 11:15:05 -Generating unique operation named: removeUsingPOST_20
2019-03-21 11:15:05 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_10
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_11
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_12
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_21
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_10
2019-03-21 11:15:06 -Generating unique operation named: treeUsingGET_1
2019-03-21 11:15:06 -Generating unique operation named: treeUsingGET_2
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_11
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_11
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_12
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_13
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_22
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_23
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingGET_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPUT_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 11:15:06 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_12
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_13
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_14
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_24
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_25
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingGET_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_13
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPUT_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 11:15:06 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_13
2019-03-21 11:15:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_14
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_15
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_13
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_14
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_14
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_16
2019-03-21 11:15:06 -Generating unique operation named: listUsingHEAD_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingPOST_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingPUT_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingPATCH_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingDELETE_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 11:15:06 -Generating unique operation named: listUsingTRACE_1
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_14
2019-03-21 11:15:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_15
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_17
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_26
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_15
2019-03-21 11:15:06 -Generating unique operation named: treeUsingGET_3
2019-03-21 11:15:06 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_15
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_15
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_16
2019-03-21 11:15:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_18
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_27
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_28
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_16
2019-03-21 11:15:06 -Generating unique operation named: updateUsingGET_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_16
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPUT_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 11:15:06 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 11:15:06 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 11:15:06 -Generating unique operation named: addUsingGET_16
2019-03-21 11:15:06 -Generating unique operation named: editUsingGET_17
2019-03-21 11:15:06 -Generating unique operation named: listUsingGET_19
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_29
2019-03-21 11:15:06 -Generating unique operation named: removeUsingPOST_30
2019-03-21 11:15:06 -Generating unique operation named: saveUsingPOST_17
2019-03-21 11:15:06 -Generating unique operation named: updateUsingGET_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPOST_17
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPUT_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 11:15:06 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 11:15:07 -Generating unique operation named: addUsingGET_17
2019-03-21 11:15:07 -Generating unique operation named: editUsingGET_18
2019-03-21 11:15:07 -Generating unique operation named: listUsingGET_20
2019-03-21 11:15:07 -Generating unique operation named: removeUsingPOST_31
2019-03-21 11:15:07 -Generating unique operation named: removeUsingPOST_32
2019-03-21 11:15:07 -Generating unique operation named: saveUsingPOST_18
2019-03-21 11:15:07 -Generating unique operation named: updateUsingGET_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingPOST_18
2019-03-21 11:15:07 -Generating unique operation named: updateUsingPUT_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 11:15:07 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 11:15:07 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 11:15:07 -Starting Quartz Scheduler now
2019-03-21 11:15:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 11:15:07 -Starting...
2019-03-21 11:15:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 11:15:07 -Started.
2019-03-21 11:15:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 11:15:07 -Using a shared selector for servlet write/read
2019-03-21 11:15:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 11:15:07 -Started BootdoApplication in 27.955 seconds (JVM running for 29.582)
2019-03-21 11:15:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 11:15:07 -==> Parameters: 
2019-03-21 11:15:07 -<==      Total: 1
2019-03-21 11:15:59 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-21 11:16:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 11:16:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 11:16:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-03-21 11:16:40 -Enabling session validation scheduler...
2019-03-21 11:16:41 -请求地址 : http://localhost:8081/login;JSESSIONID=bdb09d65-329f-4264-a74b-dfad4720ed2e
2019-03-21 11:16:41 -HTTP METHOD : GET
2019-03-21 11:16:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:16:41 -参数 : [{}]
2019-03-21 11:16:41 -耗时 : 9
2019-03-21 11:16:41 -返回值 : login
2019-03-21 11:16:42 -请求地址 : http://localhost:8081/getVerify
2019-03-21 11:16:42 -HTTP METHOD : GET
2019-03-21 11:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 11:16:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4697df81, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7131dca2]
2019-03-21 11:16:51 -3707
2019-03-21 11:16:51 -耗时 : 8473
2019-03-21 11:16:51 -返回值 : null
2019-03-21 11:16:57 -请求地址 : http://localhost:8081/login
2019-03-21 11:16:57 -HTTP METHOD : POST
2019-03-21 11:16:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 11:16:57 -参数 : [admin, 111111, 3707, org.apache.shiro.web.servlet.ShiroHttpServletRequest@521dc88f]
2019-03-21 11:16:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 11:16:57 -==> Parameters: admin(String)
2019-03-21 11:16:57 -<==      Total: 1
2019-03-21 11:16:57 -耗时 : 414
2019-03-21 11:16:57 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:16:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 11:16:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:16:57 -==> Parameters: 1(Long), admin(String), 登录(String), 414(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 11:16:57.778(Timestamp)
2019-03-21 11:16:57 -请求地址 : http://localhost:8081/index
2019-03-21 11:16:57 -HTTP METHOD : GET
2019-03-21 11:16:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:16:57 -参数 : [{}]
2019-03-21 11:16:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:16:58 -<==    Updates: 1
2019-03-21 11:16:58 -==> Parameters: 1(Long)
2019-03-21 11:16:58 -<==      Total: 46
2019-03-21 11:16:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:16:58 -==> Parameters: 138(Long)
2019-03-21 11:16:58 -<==      Total: 1
2019-03-21 11:16:58 -耗时 : 560
2019-03-21 11:16:58 -返回值 : index_v1
2019-03-21 11:16:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:16:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 560(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:16:58.521(Timestamp)
2019-03-21 11:16:58 -请求地址 : http://localhost:8081/main
2019-03-21 11:16:58 -HTTP METHOD : GET
2019-03-21 11:16:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:16:58 -参数 : []
2019-03-21 11:16:58 -耗时 : 1
2019-03-21 11:16:58 -返回值 : main
2019-03-21 11:16:58 -<==    Updates: 1
2019-03-21 11:16:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:16:58 -HTTP METHOD : GET
2019-03-21 11:16:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:16:58 -参数 : []
2019-03-21 11:16:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:16:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:16:59 -请求地址 : http://localhost:8081/main
2019-03-21 11:16:59 -HTTP METHOD : GET
2019-03-21 11:16:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:16:59 -参数 : []
2019-03-21 11:16:59 -耗时 : 0
2019-03-21 11:16:59 -返回值 : main
2019-03-21 11:16:59 -<==      Total: 0
2019-03-21 11:16:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:16:59 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:16:59 -<==      Total: 1
2019-03-21 11:16:59 -耗时 : 190
2019-03-21 11:16:59 -返回值 : com.bootdo.common.utils.PageUtils@67367ba4
2019-03-21 11:17:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:17:12 -==> Parameters: 1(Long)
2019-03-21 11:17:12 -<==      Total: 90
2019-03-21 11:17:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:17:12 -HTTP METHOD : GET
2019-03-21 11:17:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:17:12 -参数 : []
2019-03-21 11:17:12 -耗时 : 1
2019-03-21 11:17:12 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:17:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:17:13 -HTTP METHOD : GET
2019-03-21 11:17:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:17:13 -参数 : [userType]
2019-03-21 11:17:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:17:13 -==> Parameters: userType(String)
2019-03-21 11:17:13 -<==      Total: 2
2019-03-21 11:17:13 -耗时 : 69
2019-03-21 11:17:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:17:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:17:13 -HTTP METHOD : GET
2019-03-21 11:17:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:17:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:17:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:17:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:17:13 -<==      Total: 5
2019-03-21 11:17:13 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:17:13 -==> Parameters: 
2019-03-21 11:17:13 -<==      Total: 1
2019-03-21 11:17:13 -耗时 : 74
2019-03-21 11:17:13 -返回值 : com.bootdo.common.utils.PageUtils@5675bc6a
2019-03-21 11:17:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:17:14 -HTTP METHOD : GET
2019-03-21 11:17:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:17:14 -参数 : []
2019-03-21 11:17:14 -耗时 : 1
2019-03-21 11:17:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:17:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:17:14 -HTTP METHOD : GET
2019-03-21 11:17:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:17:14 -参数 : [userType]
2019-03-21 11:17:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:17:14 -==> Parameters: userType(String)
2019-03-21 11:17:14 -<==      Total: 2
2019-03-21 11:17:14 -耗时 : 9
2019-03-21 11:17:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:17:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:17:14 -HTTP METHOD : GET
2019-03-21 11:17:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:17:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:17:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:17:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:17:15 -<==      Total: 3
2019-03-21 11:17:15 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:17:15 -==> Parameters: 
2019-03-21 11:17:15 -<==      Total: 1
2019-03-21 11:17:15 -耗时 : 235
2019-03-21 11:17:15 -返回值 : com.bootdo.common.utils.PageUtils@7928bca5
2019-03-21 11:17:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:17:16 -HTTP METHOD : GET
2019-03-21 11:17:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:17:16 -参数 : []
2019-03-21 11:17:16 -耗时 : 1
2019-03-21 11:17:16 -返回值 : moneyLog/heatLog/add
2019-03-21 11:19:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:19:11 -HTTP METHOD : GET
2019-03-21 11:19:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:19:11 -参数 : []
2019-03-21 11:19:11 -耗时 : 1
2019-03-21 11:19:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:19:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:11 -HTTP METHOD : GET
2019-03-21 11:19:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:11 -参数 : [userType]
2019-03-21 11:19:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:11 -==> Parameters: userType(String)
2019-03-21 11:19:11 -<==      Total: 2
2019-03-21 11:19:11 -耗时 : 12
2019-03-21 11:19:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:19:11 -HTTP METHOD : GET
2019-03-21 11:19:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:19:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:19:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:19:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:19:11 -<==      Total: 5
2019-03-21 11:19:11 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:19:11 -==> Parameters: 
2019-03-21 11:19:11 -<==      Total: 1
2019-03-21 11:19:11 -耗时 : 14
2019-03-21 11:19:11 -返回值 : com.bootdo.common.utils.PageUtils@5602c50c
2019-03-21 11:19:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 11:19:13 -HTTP METHOD : GET
2019-03-21 11:19:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 11:19:13 -参数 : []
2019-03-21 11:19:13 -耗时 : 1
2019-03-21 11:19:13 -返回值 : moneyLog/elecLog/add
2019-03-21 11:19:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:14 -HTTP METHOD : GET
2019-03-21 11:19:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:14 -参数 : [userType]
2019-03-21 11:19:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:14 -==> Parameters: userType(String)
2019-03-21 11:19:14 -<==      Total: 2
2019-03-21 11:19:14 -耗时 : 7
2019-03-21 11:19:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:19:15 -HTTP METHOD : GET
2019-03-21 11:19:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:19:15 -参数 : []
2019-03-21 11:19:15 -耗时 : 0
2019-03-21 11:19:15 -返回值 : system/dept/deptTree
2019-03-21 11:19:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:19:15 -HTTP METHOD : GET
2019-03-21 11:19:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:19:15 -参数 : []
2019-03-21 11:19:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:19:15 -==> Parameters: 
2019-03-21 11:19:15 -<==      Total: 3
2019-03-21 11:19:15 -耗时 : 21
2019-03-21 11:19:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:19:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:19:42 -HTTP METHOD : GET
2019-03-21 11:19:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:19:42 -参数 : []
2019-03-21 11:19:42 -耗时 : 1
2019-03-21 11:19:42 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:19:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:42 -HTTP METHOD : GET
2019-03-21 11:19:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:42 -参数 : [userType]
2019-03-21 11:19:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:42 -==> Parameters: userType(String)
2019-03-21 11:19:42 -<==      Total: 2
2019-03-21 11:19:42 -耗时 : 6
2019-03-21 11:19:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:19:42 -HTTP METHOD : GET
2019-03-21 11:19:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:19:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:19:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:19:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:19:42 -<==      Total: 3
2019-03-21 11:19:42 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:19:42 -==> Parameters: 
2019-03-21 11:19:42 -<==      Total: 1
2019-03-21 11:19:42 -耗时 : 9
2019-03-21 11:19:42 -返回值 : com.bootdo.common.utils.PageUtils@e0eb41d
2019-03-21 11:19:43 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:19:43 -HTTP METHOD : GET
2019-03-21 11:19:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:19:43 -参数 : []
2019-03-21 11:19:43 -耗时 : 0
2019-03-21 11:19:43 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:19:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:43 -HTTP METHOD : GET
2019-03-21 11:19:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:43 -参数 : [userType]
2019-03-21 11:19:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:43 -==> Parameters: userType(String)
2019-03-21 11:19:43 -<==      Total: 2
2019-03-21 11:19:43 -耗时 : 6
2019-03-21 11:19:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:19:43 -HTTP METHOD : GET
2019-03-21 11:19:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:19:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:19:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:19:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:19:43 -<==      Total: 3
2019-03-21 11:19:43 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:19:43 -==> Parameters: 
2019-03-21 11:19:43 -<==      Total: 1
2019-03-21 11:19:43 -耗时 : 28
2019-03-21 11:19:43 -返回值 : com.bootdo.common.utils.PageUtils@25c1bec3
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:19:44 -参数 : []
2019-03-21 11:19:44 -耗时 : 1
2019-03-21 11:19:44 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:44 -参数 : [userType]
2019-03-21 11:19:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:44 -==> Parameters: userType(String)
2019-03-21 11:19:44 -<==      Total: 2
2019-03-21 11:19:44 -耗时 : 6
2019-03-21 11:19:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:19:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:19:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:19:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:19:44 -<==      Total: 3
2019-03-21 11:19:44 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:19:44 -==> Parameters: 
2019-03-21 11:19:44 -<==      Total: 1
2019-03-21 11:19:44 -耗时 : 8
2019-03-21 11:19:44 -返回值 : com.bootdo.common.utils.PageUtils@14d88f42
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:19:44 -参数 : []
2019-03-21 11:19:44 -耗时 : 1
2019-03-21 11:19:44 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:19:44 -参数 : [userType]
2019-03-21 11:19:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:19:44 -==> Parameters: userType(String)
2019-03-21 11:19:44 -<==      Total: 2
2019-03-21 11:19:44 -耗时 : 6
2019-03-21 11:19:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:19:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:19:44 -HTTP METHOD : GET
2019-03-21 11:19:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:19:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:19:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:19:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:19:44 -<==      Total: 5
2019-03-21 11:19:44 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:19:44 -==> Parameters: 
2019-03-21 11:19:44 -<==      Total: 1
2019-03-21 11:19:44 -耗时 : 8
2019-03-21 11:19:44 -返回值 : com.bootdo.common.utils.PageUtils@663ef6ea
2019-03-21 11:24:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 12528 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 11:24:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 11:24:46 -The following profiles are active: dev
2019-03-21 11:24:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Thu Mar 21 11:24:46 CST 2019]; root of context hierarchy
2019-03-21 11:24:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 11:24:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$79c4484c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6c1d76f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 11:24:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 11:24:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:24:57 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 11:24:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 11:24:57 -Starting service [Tomcat]
2019-03-21 11:24:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 11:24:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 11:24:57 -Initializing Spring embedded WebApplicationContext
2019-03-21 11:24:57 -Root WebApplicationContext: initialization completed in 11491 ms
2019-03-21 11:24:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 11:24:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 11:24:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 11:24:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 11:24:58 -Filter xssFilter was not registered (disabled)
2019-03-21 11:24:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 11:24:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 11:24:58 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 11:24:58 -Servlet dispatcherServlet mapped to [/]
2019-03-21 11:25:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Thu Mar 21 11:24:46 CST 2019]; root of context hierarchy
2019-03-21 11:25:02 -Using default implementation for ThreadExecutor
2019-03-21 11:25:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 11:25:02 -Quartz Scheduler v.2.2.1 created.
2019-03-21 11:25:02 -RAMJobStore initialized.
2019-03-21 11:25:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 11:25:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 11:25:02 -Quartz scheduler version: 2.2.1
2019-03-21 11:25:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@df432ec
2019-03-21 11:25:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 11:25:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 11:25:07 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 11:25:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 11:25:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 11:25:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 11:25:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 11:25:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 11:25:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 11:25:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 11:25:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 11:25:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 11:25:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 11:25:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 11:25:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 11:25:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:25:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:25:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 11:25:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 11:25:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 11:25:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 11:25:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 11:25:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 11:25:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 11:25:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 11:25:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 11:25:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 11:25:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:25:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:25:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:25:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 11:25:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 11:25:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 11:25:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 11:25:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:25:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 11:25:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 11:25:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 11:25:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:25:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:25:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 11:25:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 11:25:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 11:25:07 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 11:25:07 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:25:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 11:25:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 11:25:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 11:25:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 11:25:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 11:25:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 11:25:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 11:25:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 11:25:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 11:25:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 11:25:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 11:25:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 11:25:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 11:25:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 11:25:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 11:25:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 11:25:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 11:25:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 11:25:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 11:25:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 11:25:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 11:25:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 11:25:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 11:25:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 11:25:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 11:25:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 11:25:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 11:25:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 11:25:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:25:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:25:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 11:25:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 11:25:07 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 11:25:07 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 11:25:07 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 11:25:07 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 11:25:07 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 11:25:07 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:25:07 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 11:25:07 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:25:07 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 11:25:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:25:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 11:25:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 11:25:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 11:25:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 11:25:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 11:25:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 11:25:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:25:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75f65e45: startup date [Thu Mar 21 11:24:46 CST 2019]; root of context hierarchy
2019-03-21 11:25:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:25:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:25:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:25:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 11:25:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 11:25:13 -Registering beans for JMX exposure on startup
2019-03-21 11:25:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 11:25:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 11:25:13 -Starting beans in phase 2147483647
2019-03-21 11:25:13 -Context refreshed
2019-03-21 11:25:13 -Found 1 custom documentation plugin(s)
2019-03-21 11:25:13 -Scanning for api listing references
2019-03-21 11:25:14 -Generating unique operation named: removeUsingPOST_1
2019-03-21 11:25:14 -Generating unique operation named: addUsingGET_1
2019-03-21 11:25:14 -Generating unique operation named: editUsingGET_1
2019-03-21 11:25:14 -Generating unique operation named: listUsingGET_1
2019-03-21 11:25:14 -Generating unique operation named: removeUsingPOST_2
2019-03-21 11:25:14 -Generating unique operation named: removeUsingPOST_3
2019-03-21 11:25:14 -Generating unique operation named: saveUsingPOST_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingGET_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPOST_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPUT_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 11:25:14 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 11:25:14 -Generating unique operation named: addUsingGET_2
2019-03-21 11:25:14 -Generating unique operation named: editUsingGET_2
2019-03-21 11:25:14 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 11:25:14 -Generating unique operation named: listUsingGET_2
2019-03-21 11:25:14 -Generating unique operation named: removeUsingPOST_4
2019-03-21 11:25:14 -Generating unique operation named: removeUsingPOST_5
2019-03-21 11:25:14 -Generating unique operation named: saveUsingPOST_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingGET_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPOST_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPUT_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 11:25:14 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 11:25:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 11:25:14 -Generating unique operation named: addUsingGET_3
2019-03-21 11:25:14 -Generating unique operation named: editUsingGET_3
2019-03-21 11:25:14 -Generating unique operation named: listUsingGET_3
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_6
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_7
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_4
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_4
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_4
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_8
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_9
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 11:25:15 -Generating unique operation named: ElecUsingGET_1
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_5
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_5
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_5
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_10
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_11
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_6
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_6
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_6
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_7
2019-03-21 11:25:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_7
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_12
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_13
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 11:25:15 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_7
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_8
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_8
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_14
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_15
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_8
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_9
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_9
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_16
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_17
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingGET_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_9
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPUT_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 11:25:15 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 11:25:15 -Generating unique operation named: addUsingGET_9
2019-03-21 11:25:15 -Generating unique operation named: editUsingGET_10
2019-03-21 11:25:15 -Generating unique operation named: infoUsingGET_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingPOST_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingPUT_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 11:25:15 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_10
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_18
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_19
2019-03-21 11:25:15 -Generating unique operation named: saveUsingPOST_9
2019-03-21 11:25:15 -Generating unique operation named: updateUsingPOST_10
2019-03-21 11:25:15 -Generating unique operation named: listUsingGET_11
2019-03-21 11:25:15 -Generating unique operation named: removeUsingPOST_20
2019-03-21 11:25:16 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_10
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_11
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_12
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_21
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_10
2019-03-21 11:25:16 -Generating unique operation named: treeUsingGET_1
2019-03-21 11:25:16 -Generating unique operation named: treeUsingGET_2
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_11
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_11
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_12
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_13
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_22
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_23
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingGET_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_12
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPUT_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 11:25:16 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_12
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_13
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_14
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_24
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_25
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_12
2019-03-21 11:25:16 -Generating unique operation named: updateUsingGET_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_13
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPUT_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 11:25:16 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_13
2019-03-21 11:25:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_14
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_15
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_13
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_14
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_14
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_16
2019-03-21 11:25:16 -Generating unique operation named: listUsingHEAD_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingPOST_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingPUT_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingPATCH_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingDELETE_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 11:25:16 -Generating unique operation named: listUsingTRACE_1
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_14
2019-03-21 11:25:16 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_15
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_17
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_26
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_15
2019-03-21 11:25:16 -Generating unique operation named: treeUsingGET_3
2019-03-21 11:25:16 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_15
2019-03-21 11:25:16 -Generating unique operation named: addUsingGET_15
2019-03-21 11:25:16 -Generating unique operation named: editUsingGET_16
2019-03-21 11:25:16 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 11:25:16 -Generating unique operation named: listUsingGET_18
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_27
2019-03-21 11:25:16 -Generating unique operation named: removeUsingPOST_28
2019-03-21 11:25:16 -Generating unique operation named: saveUsingPOST_16
2019-03-21 11:25:16 -Generating unique operation named: updateUsingGET_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPOST_16
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPUT_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 11:25:16 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 11:25:17 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 11:25:17 -Generating unique operation named: addUsingGET_16
2019-03-21 11:25:17 -Generating unique operation named: editUsingGET_17
2019-03-21 11:25:17 -Generating unique operation named: listUsingGET_19
2019-03-21 11:25:17 -Generating unique operation named: removeUsingPOST_29
2019-03-21 11:25:17 -Generating unique operation named: removeUsingPOST_30
2019-03-21 11:25:17 -Generating unique operation named: saveUsingPOST_17
2019-03-21 11:25:17 -Generating unique operation named: updateUsingGET_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPOST_17
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPUT_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 11:25:17 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 11:25:17 -Generating unique operation named: addUsingGET_17
2019-03-21 11:25:17 -Generating unique operation named: editUsingGET_18
2019-03-21 11:25:17 -Generating unique operation named: listUsingGET_20
2019-03-21 11:25:17 -Generating unique operation named: removeUsingPOST_31
2019-03-21 11:25:17 -Generating unique operation named: removeUsingPOST_32
2019-03-21 11:25:17 -Generating unique operation named: saveUsingPOST_18
2019-03-21 11:25:17 -Generating unique operation named: updateUsingGET_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPOST_18
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPUT_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 11:25:17 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 11:25:17 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 11:25:17 -Starting Quartz Scheduler now
2019-03-21 11:25:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 11:25:17 -Starting...
2019-03-21 11:25:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 11:25:17 -Started.
2019-03-21 11:25:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 11:25:17 -Using a shared selector for servlet write/read
2019-03-21 11:25:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 11:25:17 -Started BootdoApplication in 33.763 seconds (JVM running for 35.671)
2019-03-21 11:25:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 11:25:18 -==> Parameters: 
2019-03-21 11:25:18 -<==      Total: 1
2019-03-21 11:26:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-21 11:26:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 11:26:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 11:26:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-03-21 11:26:42 -Enabling session validation scheduler...
2019-03-21 11:26:42 -请求地址 : http://localhost:8081/login;JSESSIONID=06f6e6d6-d296-494b-a399-e29c8aed0215
2019-03-21 11:26:42 -HTTP METHOD : GET
2019-03-21 11:26:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:26:42 -参数 : [{}]
2019-03-21 11:26:42 -耗时 : 5
2019-03-21 11:26:42 -返回值 : login
2019-03-21 11:26:44 -请求地址 : http://localhost:8081/getVerify
2019-03-21 11:26:44 -HTTP METHOD : GET
2019-03-21 11:26:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 11:26:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5441b84d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ddbe904]
2019-03-21 11:26:48 -5743
2019-03-21 11:26:49 -耗时 : 4900
2019-03-21 11:26:49 -返回值 : null
2019-03-21 11:26:55 -请求地址 : http://localhost:8081/login
2019-03-21 11:26:55 -HTTP METHOD : POST
2019-03-21 11:26:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 11:26:55 -参数 : [admin, 111111, 5743, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d33427d]
2019-03-21 11:26:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 11:26:55 -==> Parameters: admin(String)
2019-03-21 11:26:55 -<==      Total: 1
2019-03-21 11:26:55 -耗时 : 177
2019-03-21 11:26:55 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:26:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 11:26:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:26:55 -==> Parameters: 1(Long), admin(String), 登录(String), 178(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 11:26:55.918(Timestamp)
2019-03-21 11:26:56 -请求地址 : http://localhost:8081/index
2019-03-21 11:26:56 -HTTP METHOD : GET
2019-03-21 11:26:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:26:56 -参数 : [{}]
2019-03-21 11:26:56 -<==    Updates: 1
2019-03-21 11:26:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:26:56 -==> Parameters: 1(Long)
2019-03-21 11:26:56 -<==      Total: 46
2019-03-21 11:26:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:26:56 -==> Parameters: 138(Long)
2019-03-21 11:26:56 -<==      Total: 1
2019-03-21 11:26:56 -耗时 : 313
2019-03-21 11:26:56 -返回值 : index_v1
2019-03-21 11:26:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:26:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 314(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:26:56.59(Timestamp)
2019-03-21 11:26:56 -<==    Updates: 1
2019-03-21 11:26:56 -请求地址 : http://localhost:8081/main
2019-03-21 11:26:56 -HTTP METHOD : GET
2019-03-21 11:26:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:26:56 -参数 : []
2019-03-21 11:26:56 -耗时 : 0
2019-03-21 11:26:56 -返回值 : main
2019-03-21 11:26:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:26:57 -HTTP METHOD : GET
2019-03-21 11:26:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:26:57 -参数 : []
2019-03-21 11:26:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:26:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:26:57 -请求地址 : http://localhost:8081/main
2019-03-21 11:26:57 -HTTP METHOD : GET
2019-03-21 11:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:26:57 -参数 : []
2019-03-21 11:26:57 -耗时 : 1
2019-03-21 11:26:57 -返回值 : main
2019-03-21 11:26:57 -<==      Total: 0
2019-03-21 11:26:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:26:57 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:26:57 -<==      Total: 1
2019-03-21 11:26:57 -耗时 : 197
2019-03-21 11:26:57 -返回值 : com.bootdo.common.utils.PageUtils@318287a1
2019-03-21 11:27:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:27:07 -==> Parameters: 1(Long)
2019-03-21 11:27:07 -<==      Total: 90
2019-03-21 11:27:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:07 -HTTP METHOD : GET
2019-03-21 11:27:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:07 -参数 : []
2019-03-21 11:27:07 -耗时 : 0
2019-03-21 11:27:07 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:08 -HTTP METHOD : GET
2019-03-21 11:27:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:08 -参数 : []
2019-03-21 11:27:08 -耗时 : 1
2019-03-21 11:27:08 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:09 -HTTP METHOD : GET
2019-03-21 11:27:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:09 -参数 : [userType]
2019-03-21 11:27:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:09 -==> Parameters: userType(String)
2019-03-21 11:27:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:09 -HTTP METHOD : GET
2019-03-21 11:27:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:09 -<==      Total: 2
2019-03-21 11:27:09 -耗时 : 125
2019-03-21 11:27:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:09 -<==      Total: 3
2019-03-21 11:27:09 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:09 -==> Parameters: 
2019-03-21 11:27:09 -<==      Total: 1
2019-03-21 11:27:09 -耗时 : 346
2019-03-21 11:27:09 -返回值 : com.bootdo.common.utils.PageUtils@3b8864f0
2019-03-21 11:27:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:27:10 -HTTP METHOD : GET
2019-03-21 11:27:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:27:10 -参数 : []
2019-03-21 11:27:10 -耗时 : 1
2019-03-21 11:27:10 -返回值 : moneyLog/heatLog/add
2019-03-21 11:27:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:11 -HTTP METHOD : GET
2019-03-21 11:27:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:11 -参数 : [userType]
2019-03-21 11:27:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:11 -==> Parameters: userType(String)
2019-03-21 11:27:11 -<==      Total: 2
2019-03-21 11:27:11 -耗时 : 174
2019-03-21 11:27:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:27:12 -HTTP METHOD : GET
2019-03-21 11:27:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:27:12 -参数 : []
2019-03-21 11:27:12 -耗时 : 1
2019-03-21 11:27:12 -返回值 : system/dept/deptTree
2019-03-21 11:27:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:27:13 -HTTP METHOD : GET
2019-03-21 11:27:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:27:13 -参数 : []
2019-03-21 11:27:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:27:13 -==> Parameters: 
2019-03-21 11:27:13 -<==      Total: 3
2019-03-21 11:27:13 -耗时 : 51
2019-03-21 11:27:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:27:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:27:17 -HTTP METHOD : GET
2019-03-21 11:27:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:27:17 -参数 : []
2019-03-21 11:27:17 -耗时 : 1
2019-03-21 11:27:17 -返回值 : moneyLog/heatLog/add
2019-03-21 11:27:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:17 -HTTP METHOD : GET
2019-03-21 11:27:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:17 -参数 : [userType]
2019-03-21 11:27:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:17 -==> Parameters: userType(String)
2019-03-21 11:27:17 -<==      Total: 2
2019-03-21 11:27:17 -耗时 : 11
2019-03-21 11:27:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:20 -HTTP METHOD : GET
2019-03-21 11:27:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:20 -参数 : []
2019-03-21 11:27:20 -耗时 : 0
2019-03-21 11:27:20 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:20 -HTTP METHOD : GET
2019-03-21 11:27:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:20 -参数 : [userType]
2019-03-21 11:27:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:20 -==> Parameters: userType(String)
2019-03-21 11:27:20 -<==      Total: 2
2019-03-21 11:27:20 -耗时 : 10
2019-03-21 11:27:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:20 -HTTP METHOD : GET
2019-03-21 11:27:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:20 -<==      Total: 3
2019-03-21 11:27:20 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:20 -==> Parameters: 
2019-03-21 11:27:20 -<==      Total: 1
2019-03-21 11:27:20 -耗时 : 260
2019-03-21 11:27:20 -返回值 : com.bootdo.common.utils.PageUtils@3789e50
2019-03-21 11:27:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-21 11:27:21 -HTTP METHOD : GET
2019-03-21 11:27:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-21 11:27:21 -参数 : []
2019-03-21 11:27:21 -耗时 : 1
2019-03-21 11:27:21 -返回值 : moneyLog/waterLog/add
2019-03-21 11:27:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:21 -HTTP METHOD : GET
2019-03-21 11:27:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:21 -参数 : [userType]
2019-03-21 11:27:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:21 -==> Parameters: userType(String)
2019-03-21 11:27:22 -<==      Total: 2
2019-03-21 11:27:22 -耗时 : 8
2019-03-21 11:27:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-21 11:27:25 -HTTP METHOD : GET
2019-03-21 11:27:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-21 11:27:25 -参数 : []
2019-03-21 11:27:25 -耗时 : 0
2019-03-21 11:27:25 -返回值 : moneyLog/waterLog/add
2019-03-21 11:27:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:26 -HTTP METHOD : GET
2019-03-21 11:27:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:26 -参数 : [userType]
2019-03-21 11:27:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:26 -==> Parameters: userType(String)
2019-03-21 11:27:26 -<==      Total: 2
2019-03-21 11:27:26 -耗时 : 5
2019-03-21 11:27:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-21 11:27:28 -HTTP METHOD : GET
2019-03-21 11:27:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-21 11:27:28 -参数 : []
2019-03-21 11:27:28 -耗时 : 1
2019-03-21 11:27:28 -返回值 : moneyLog/waterLog/add
2019-03-21 11:27:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:28 -HTTP METHOD : GET
2019-03-21 11:27:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:28 -参数 : [userType]
2019-03-21 11:27:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:28 -==> Parameters: userType(String)
2019-03-21 11:27:28 -<==      Total: 2
2019-03-21 11:27:28 -耗时 : 6
2019-03-21 11:27:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:44 -HTTP METHOD : GET
2019-03-21 11:27:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:44 -参数 : []
2019-03-21 11:27:44 -耗时 : 1
2019-03-21 11:27:44 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:44 -HTTP METHOD : GET
2019-03-21 11:27:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:44 -参数 : [userType]
2019-03-21 11:27:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:44 -==> Parameters: userType(String)
2019-03-21 11:27:44 -<==      Total: 2
2019-03-21 11:27:44 -耗时 : 11
2019-03-21 11:27:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:44 -HTTP METHOD : GET
2019-03-21 11:27:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:44 -<==      Total: 3
2019-03-21 11:27:44 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:44 -==> Parameters: 
2019-03-21 11:27:44 -<==      Total: 1
2019-03-21 11:27:44 -耗时 : 96
2019-03-21 11:27:44 -返回值 : com.bootdo.common.utils.PageUtils@58da9b35
2019-03-21 11:27:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:45 -HTTP METHOD : GET
2019-03-21 11:27:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:45 -参数 : []
2019-03-21 11:27:45 -耗时 : 1
2019-03-21 11:27:45 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:45 -HTTP METHOD : GET
2019-03-21 11:27:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:45 -参数 : [userType]
2019-03-21 11:27:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:45 -==> Parameters: userType(String)
2019-03-21 11:27:45 -<==      Total: 2
2019-03-21 11:27:45 -耗时 : 4
2019-03-21 11:27:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:27:45 -HTTP METHOD : GET
2019-03-21 11:27:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:27:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:27:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:27:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:45 -<==      Total: 5
2019-03-21 11:27:45 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:27:45 -==> Parameters: 
2019-03-21 11:27:45 -<==      Total: 1
2019-03-21 11:27:45 -耗时 : 132
2019-03-21 11:27:45 -返回值 : com.bootdo.common.utils.PageUtils@2ba3694f
2019-03-21 11:27:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:45 -HTTP METHOD : GET
2019-03-21 11:27:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:45 -参数 : []
2019-03-21 11:27:45 -耗时 : 1
2019-03-21 11:27:45 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:46 -参数 : [userType]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:46 -==> Parameters: userType(String)
2019-03-21 11:27:46 -<==      Total: 2
2019-03-21 11:27:46 -耗时 : 4
2019-03-21 11:27:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:46 -<==      Total: 3
2019-03-21 11:27:46 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:46 -==> Parameters: 
2019-03-21 11:27:46 -<==      Total: 1
2019-03-21 11:27:46 -耗时 : 10
2019-03-21 11:27:46 -返回值 : com.bootdo.common.utils.PageUtils@5571708a
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:46 -参数 : []
2019-03-21 11:27:46 -耗时 : 1
2019-03-21 11:27:46 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:46 -参数 : [userType]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:46 -==> Parameters: userType(String)
2019-03-21 11:27:46 -<==      Total: 2
2019-03-21 11:27:46 -耗时 : 5
2019-03-21 11:27:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:46 -<==      Total: 3
2019-03-21 11:27:46 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:46 -==> Parameters: 
2019-03-21 11:27:46 -<==      Total: 1
2019-03-21 11:27:46 -耗时 : 8
2019-03-21 11:27:46 -返回值 : com.bootdo.common.utils.PageUtils@216709b
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:46 -参数 : []
2019-03-21 11:27:46 -耗时 : 0
2019-03-21 11:27:46 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:46 -参数 : [userType]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:46 -==> Parameters: userType(String)
2019-03-21 11:27:46 -<==      Total: 2
2019-03-21 11:27:46 -耗时 : 5
2019-03-21 11:27:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:46 -HTTP METHOD : GET
2019-03-21 11:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:46 -<==      Total: 3
2019-03-21 11:27:46 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:46 -==> Parameters: 
2019-03-21 11:27:46 -<==      Total: 1
2019-03-21 11:27:46 -耗时 : 8
2019-03-21 11:27:46 -返回值 : com.bootdo.common.utils.PageUtils@5a3ef7a5
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:47 -参数 : []
2019-03-21 11:27:47 -耗时 : 0
2019-03-21 11:27:47 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:47 -参数 : [userType]
2019-03-21 11:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:47 -==> Parameters: userType(String)
2019-03-21 11:27:47 -<==      Total: 2
2019-03-21 11:27:47 -耗时 : 5
2019-03-21 11:27:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:27:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:27:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:27:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:47 -<==      Total: 5
2019-03-21 11:27:47 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:27:47 -==> Parameters: 
2019-03-21 11:27:47 -<==      Total: 1
2019-03-21 11:27:47 -耗时 : 7
2019-03-21 11:27:47 -返回值 : com.bootdo.common.utils.PageUtils@11fb9b3b
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:47 -参数 : []
2019-03-21 11:27:47 -耗时 : 0
2019-03-21 11:27:47 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:47 -参数 : [userType]
2019-03-21 11:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:47 -==> Parameters: userType(String)
2019-03-21 11:27:47 -<==      Total: 2
2019-03-21 11:27:47 -耗时 : 3
2019-03-21 11:27:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:47 -HTTP METHOD : GET
2019-03-21 11:27:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:47 -<==      Total: 3
2019-03-21 11:27:47 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:47 -==> Parameters: 
2019-03-21 11:27:47 -<==      Total: 1
2019-03-21 11:27:47 -耗时 : 8
2019-03-21 11:27:47 -返回值 : com.bootdo.common.utils.PageUtils@acd0645
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:48 -参数 : []
2019-03-21 11:27:48 -耗时 : 0
2019-03-21 11:27:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:48 -参数 : [userType]
2019-03-21 11:27:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:48 -==> Parameters: userType(String)
2019-03-21 11:27:48 -<==      Total: 2
2019-03-21 11:27:48 -耗时 : 5
2019-03-21 11:27:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:48 -<==      Total: 3
2019-03-21 11:27:48 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:48 -==> Parameters: 
2019-03-21 11:27:48 -<==      Total: 1
2019-03-21 11:27:48 -耗时 : 9
2019-03-21 11:27:48 -返回值 : com.bootdo.common.utils.PageUtils@2ef647cb
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:48 -参数 : []
2019-03-21 11:27:48 -耗时 : 1
2019-03-21 11:27:48 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:48 -参数 : [userType]
2019-03-21 11:27:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:48 -==> Parameters: userType(String)
2019-03-21 11:27:48 -<==      Total: 2
2019-03-21 11:27:48 -耗时 : 7
2019-03-21 11:27:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:27:48 -HTTP METHOD : GET
2019-03-21 11:27:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:27:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:27:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:27:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:48 -<==      Total: 5
2019-03-21 11:27:48 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:27:48 -==> Parameters: 
2019-03-21 11:27:48 -<==      Total: 1
2019-03-21 11:27:48 -耗时 : 8
2019-03-21 11:27:48 -返回值 : com.bootdo.common.utils.PageUtils@5a6cf5f
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:49 -参数 : []
2019-03-21 11:27:49 -耗时 : 1
2019-03-21 11:27:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:49 -参数 : [userType]
2019-03-21 11:27:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:49 -==> Parameters: userType(String)
2019-03-21 11:27:49 -<==      Total: 2
2019-03-21 11:27:49 -耗时 : 4
2019-03-21 11:27:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:49 -<==      Total: 3
2019-03-21 11:27:49 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:49 -==> Parameters: 
2019-03-21 11:27:49 -<==      Total: 1
2019-03-21 11:27:49 -耗时 : 14
2019-03-21 11:27:49 -返回值 : com.bootdo.common.utils.PageUtils@46163830
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:49 -参数 : []
2019-03-21 11:27:49 -耗时 : 1
2019-03-21 11:27:49 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:49 -参数 : [userType]
2019-03-21 11:27:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:49 -==> Parameters: userType(String)
2019-03-21 11:27:49 -<==      Total: 2
2019-03-21 11:27:49 -耗时 : 3
2019-03-21 11:27:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:49 -<==      Total: 3
2019-03-21 11:27:49 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:49 -==> Parameters: 
2019-03-21 11:27:49 -<==      Total: 1
2019-03-21 11:27:49 -耗时 : 6
2019-03-21 11:27:49 -返回值 : com.bootdo.common.utils.PageUtils@3daa408e
2019-03-21 11:27:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:49 -HTTP METHOD : GET
2019-03-21 11:27:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:49 -参数 : []
2019-03-21 11:27:49 -耗时 : 0
2019-03-21 11:27:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:50 -参数 : [userType]
2019-03-21 11:27:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:50 -==> Parameters: userType(String)
2019-03-21 11:27:50 -<==      Total: 2
2019-03-21 11:27:50 -耗时 : 4
2019-03-21 11:27:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:50 -<==      Total: 3
2019-03-21 11:27:50 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:50 -==> Parameters: 
2019-03-21 11:27:50 -<==      Total: 1
2019-03-21 11:27:50 -耗时 : 8
2019-03-21 11:27:50 -返回值 : com.bootdo.common.utils.PageUtils@31f79803
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:50 -参数 : []
2019-03-21 11:27:50 -耗时 : 1
2019-03-21 11:27:50 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:50 -参数 : [userType]
2019-03-21 11:27:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:50 -==> Parameters: userType(String)
2019-03-21 11:27:50 -<==      Total: 2
2019-03-21 11:27:50 -耗时 : 6
2019-03-21 11:27:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:27:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:27:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:27:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:50 -<==      Total: 5
2019-03-21 11:27:50 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:27:50 -==> Parameters: 
2019-03-21 11:27:50 -<==      Total: 1
2019-03-21 11:27:50 -耗时 : 18
2019-03-21 11:27:50 -返回值 : com.bootdo.common.utils.PageUtils@14b5d54e
2019-03-21 11:27:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:50 -HTTP METHOD : GET
2019-03-21 11:27:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:50 -参数 : []
2019-03-21 11:27:50 -耗时 : 1
2019-03-21 11:27:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:51 -HTTP METHOD : GET
2019-03-21 11:27:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:51 -参数 : [userType]
2019-03-21 11:27:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:51 -==> Parameters: userType(String)
2019-03-21 11:27:51 -<==      Total: 2
2019-03-21 11:27:51 -耗时 : 6
2019-03-21 11:27:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:51 -HTTP METHOD : GET
2019-03-21 11:27:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:51 -<==      Total: 3
2019-03-21 11:27:51 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:51 -==> Parameters: 
2019-03-21 11:27:51 -<==      Total: 1
2019-03-21 11:27:51 -耗时 : 10
2019-03-21 11:27:51 -返回值 : com.bootdo.common.utils.PageUtils@6c2bca07
2019-03-21 11:27:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:51 -HTTP METHOD : GET
2019-03-21 11:27:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:51 -参数 : []
2019-03-21 11:27:51 -耗时 : 0
2019-03-21 11:27:51 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:51 -HTTP METHOD : GET
2019-03-21 11:27:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:51 -参数 : [userType]
2019-03-21 11:27:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:51 -==> Parameters: userType(String)
2019-03-21 11:27:51 -<==      Total: 2
2019-03-21 11:27:51 -耗时 : 4
2019-03-21 11:27:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:51 -HTTP METHOD : GET
2019-03-21 11:27:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:51 -<==      Total: 3
2019-03-21 11:27:51 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:51 -==> Parameters: 
2019-03-21 11:27:51 -<==      Total: 1
2019-03-21 11:27:51 -耗时 : 7
2019-03-21 11:27:51 -返回值 : com.bootdo.common.utils.PageUtils@1c556489
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:52 -参数 : []
2019-03-21 11:27:52 -耗时 : 0
2019-03-21 11:27:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:52 -参数 : [userType]
2019-03-21 11:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:52 -==> Parameters: userType(String)
2019-03-21 11:27:52 -<==      Total: 2
2019-03-21 11:27:52 -耗时 : 3
2019-03-21 11:27:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:52 -<==      Total: 3
2019-03-21 11:27:52 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:52 -==> Parameters: 
2019-03-21 11:27:52 -<==      Total: 1
2019-03-21 11:27:52 -耗时 : 15
2019-03-21 11:27:52 -返回值 : com.bootdo.common.utils.PageUtils@6db43e0
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:27:52 -参数 : []
2019-03-21 11:27:52 -耗时 : 1
2019-03-21 11:27:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:52 -参数 : [userType]
2019-03-21 11:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:52 -==> Parameters: userType(String)
2019-03-21 11:27:52 -<==      Total: 2
2019-03-21 11:27:52 -耗时 : 4
2019-03-21 11:27:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:27:52 -HTTP METHOD : GET
2019-03-21 11:27:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:27:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:27:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:27:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:52 -<==      Total: 5
2019-03-21 11:27:52 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:27:52 -==> Parameters: 
2019-03-21 11:27:52 -<==      Total: 1
2019-03-21 11:27:52 -耗时 : 8
2019-03-21 11:27:52 -返回值 : com.bootdo.common.utils.PageUtils@16c94c7d
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:27:53 -参数 : []
2019-03-21 11:27:53 -耗时 : 1
2019-03-21 11:27:53 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:53 -参数 : [userType]
2019-03-21 11:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:53 -==> Parameters: userType(String)
2019-03-21 11:27:53 -<==      Total: 2
2019-03-21 11:27:53 -耗时 : 3
2019-03-21 11:27:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:27:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:27:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:27:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:53 -<==      Total: 3
2019-03-21 11:27:53 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:27:53 -==> Parameters: 
2019-03-21 11:27:53 -<==      Total: 1
2019-03-21 11:27:53 -耗时 : 5
2019-03-21 11:27:53 -返回值 : com.bootdo.common.utils.PageUtils@1d7e8655
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:27:53 -参数 : []
2019-03-21 11:27:53 -耗时 : 0
2019-03-21 11:27:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:27:53 -参数 : [userType]
2019-03-21 11:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:27:53 -==> Parameters: userType(String)
2019-03-21 11:27:53 -<==      Total: 2
2019-03-21 11:27:53 -耗时 : 4
2019-03-21 11:27:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:27:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:27:53 -HTTP METHOD : GET
2019-03-21 11:27:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:27:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:27:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:27:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:27:53 -<==      Total: 3
2019-03-21 11:27:53 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:27:53 -==> Parameters: 
2019-03-21 11:27:53 -<==      Total: 1
2019-03-21 11:27:53 -耗时 : 11
2019-03-21 11:27:53 -返回值 : com.bootdo.common.utils.PageUtils@2d5017dd
2019-03-21 11:28:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:28:04 -HTTP METHOD : GET
2019-03-21 11:28:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:28:04 -参数 : []
2019-03-21 11:28:04 -耗时 : 1
2019-03-21 11:28:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:28:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:28:04 -HTTP METHOD : GET
2019-03-21 11:28:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:28:04 -参数 : [userType]
2019-03-21 11:28:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:28:04 -==> Parameters: userType(String)
2019-03-21 11:28:04 -<==      Total: 2
2019-03-21 11:28:04 -耗时 : 5
2019-03-21 11:28:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:28:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:28:04 -HTTP METHOD : GET
2019-03-21 11:28:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:28:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:28:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:28:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:28:04 -<==      Total: 5
2019-03-21 11:28:04 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:28:04 -==> Parameters: 
2019-03-21 11:28:04 -<==      Total: 1
2019-03-21 11:28:04 -耗时 : 6
2019-03-21 11:28:04 -返回值 : com.bootdo.common.utils.PageUtils@7f418e2
2019-03-21 11:28:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-21 11:28:06 -HTTP METHOD : GET
2019-03-21 11:28:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-21 11:28:06 -参数 : [1, {}]
2019-03-21 11:28:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-21 11:28:06 -==> Parameters: 1(Long)
2019-03-21 11:28:06 -<==      Total: 1
2019-03-21 11:28:06 -耗时 : 6
2019-03-21 11:28:06 -返回值 : moneyLog/elecLog/edit
2019-03-21 11:28:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:28:06 -HTTP METHOD : GET
2019-03-21 11:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:28:06 -参数 : [userType]
2019-03-21 11:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:28:06 -==> Parameters: userType(String)
2019-03-21 11:28:06 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-21 11:28:06 -HTTP METHOD : GET
2019-03-21 11:28:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:28:06 -参数 : [userOrg]
2019-03-21 11:28:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:28:06 -<==      Total: 2
2019-03-21 11:28:06 -==> Parameters: userOrg(String)
2019-03-21 11:28:06 -耗时 : 4
2019-03-21 11:28:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:28:06 -<==      Total: 0
2019-03-21 11:28:06 -耗时 : 6
2019-03-21 11:28:06 -返回值 : []
2019-03-21 11:28:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:28:21 -HTTP METHOD : GET
2019-03-21 11:28:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:28:21 -参数 : []
2019-03-21 11:28:21 -耗时 : 0
2019-03-21 11:28:21 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:28:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:28:21 -HTTP METHOD : GET
2019-03-21 11:28:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:28:21 -参数 : [userType]
2019-03-21 11:28:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:28:21 -==> Parameters: userType(String)
2019-03-21 11:28:21 -<==      Total: 2
2019-03-21 11:28:21 -耗时 : 6
2019-03-21 11:28:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:28:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:28:21 -HTTP METHOD : GET
2019-03-21 11:28:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:28:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:28:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:28:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:28:21 -<==      Total: 3
2019-03-21 11:28:21 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:28:21 -==> Parameters: 
2019-03-21 11:28:21 -<==      Total: 1
2019-03-21 11:28:21 -耗时 : 9
2019-03-21 11:28:21 -返回值 : com.bootdo.common.utils.PageUtils@23cf8e6c
2019-03-21 11:28:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:28:22 -HTTP METHOD : GET
2019-03-21 11:28:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:28:22 -参数 : []
2019-03-21 11:28:22 -耗时 : 1
2019-03-21 11:28:22 -返回值 : moneyLog/heatLog/add
2019-03-21 11:28:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:28:23 -HTTP METHOD : GET
2019-03-21 11:28:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:28:23 -参数 : [userType]
2019-03-21 11:28:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:28:23 -==> Parameters: userType(String)
2019-03-21 11:28:23 -<==      Total: 2
2019-03-21 11:28:23 -耗时 : 4
2019-03-21 11:28:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:28:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:28:43 -HTTP METHOD : GET
2019-03-21 11:28:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:28:43 -参数 : []
2019-03-21 11:28:43 -耗时 : 1
2019-03-21 11:28:43 -返回值 : system/dept/deptTree
2019-03-21 11:28:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:28:43 -HTTP METHOD : GET
2019-03-21 11:28:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:28:43 -参数 : []
2019-03-21 11:28:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:28:43 -==> Parameters: 
2019-03-21 11:28:43 -<==      Total: 3
2019-03-21 11:28:43 -耗时 : 4
2019-03-21 11:28:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:28:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-03-21 11:28:53 -HTTP METHOD : POST
2019-03-21 11:28:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-03-21 11:28:53 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@106d71e5]
2019-03-21 11:28:53 -==>  Preparing: insert into heat_log ( `heat_id`, `user_id`, `user_name`, `user_type`, `user_org`, `heat_ money`, `heat_date `, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:28:53 -==> Parameters: null, 4-4444(String), 爱说大(String), A(String), 2(String), 80(BigDecimal), 2019-03-21 11:28:53.12(Timestamp), 2019-03(String), 1(Long), 2019-03-21 11:28:53.12(Timestamp), 1(Long), (String)
2019-03-21 11:28:53 -{conn-10001, pstmt-20021} execute error. insert into heat_log
		(	
			`heat_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_ money`, 
			`heat_date `, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$ce5b6ab4.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 11:28:53 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 11:28:53 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 11:28:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:28:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/save(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'(String), null, 2019-03-21 11:28:53.545(Timestamp)
2019-03-21 11:28:53 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$ce5b6ab4.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 11:28:53 -<==    Updates: 1
2019-03-21 11:28:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-03-21 11:28:55 -HTTP METHOD : POST
2019-03-21 11:28:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-03-21 11:28:55 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@70c2b676]
2019-03-21 11:28:55 -==>  Preparing: insert into heat_log ( `heat_id`, `user_id`, `user_name`, `user_type`, `user_org`, `heat_ money`, `heat_date `, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:28:55 -==> Parameters: null, 4-4444(String), 爱说大(String), A(String), 2(String), 80(BigDecimal), 2019-03-21 11:28:55.533(Timestamp), 2019-03(String), 1(Long), 2019-03-21 11:28:55.533(Timestamp), 1(Long), (String)
2019-03-21 11:28:55 -{conn-10001, pstmt-20022} execute error. insert into heat_log
		(	
			`heat_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_ money`, 
			`heat_date `, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$ce5b6ab4.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 11:28:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:28:55 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$ce5b6ab4.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 11:28:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/save(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'(String), null, 2019-03-21 11:28:55.542(Timestamp)
2019-03-21 11:28:55 -<==    Updates: 1
2019-03-21 11:34:33 -Starting BootdoApplication on ZJZL-20180906VX with PID 2028 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 11:34:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 11:34:34 -The following profiles are active: dev
2019-03-21 11:34:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d24ffa1: startup date [Thu Mar 21 11:34:34 CST 2019]; root of context hierarchy
2019-03-21 11:34:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 11:34:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5fb9e293] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5213113a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 11:34:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 11:34:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:34:43 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 11:34:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 11:34:43 -Starting service [Tomcat]
2019-03-21 11:34:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 11:34:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 11:34:43 -Initializing Spring embedded WebApplicationContext
2019-03-21 11:34:43 -Root WebApplicationContext: initialization completed in 9538 ms
2019-03-21 11:34:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 11:34:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 11:34:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 11:34:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 11:34:44 -Filter xssFilter was not registered (disabled)
2019-03-21 11:34:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 11:34:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 11:34:44 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 11:34:45 -Servlet dispatcherServlet mapped to [/]
2019-03-21 11:34:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d24ffa1: startup date [Thu Mar 21 11:34:34 CST 2019]; root of context hierarchy
2019-03-21 11:34:49 -Using default implementation for ThreadExecutor
2019-03-21 11:34:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 11:34:49 -Quartz Scheduler v.2.2.1 created.
2019-03-21 11:34:49 -RAMJobStore initialized.
2019-03-21 11:34:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 11:34:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 11:34:49 -Quartz scheduler version: 2.2.1
2019-03-21 11:34:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7ae0a26
2019-03-21 11:34:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 11:34:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 11:34:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 11:34:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 11:34:52 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 11:34:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 11:34:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 11:34:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 11:34:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 11:34:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 11:34:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 11:34:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 11:34:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 11:34:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 11:34:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 11:34:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:34:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 11:34:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:34:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 11:34:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 11:34:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 11:34:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 11:34:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 11:34:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 11:34:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 11:34:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 11:34:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 11:34:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 11:34:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 11:34:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 11:34:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 11:34:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:34:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 11:34:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 11:34:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 11:34:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:34:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:34:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 11:34:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 11:34:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 11:34:52 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 11:34:52 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:34:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 11:34:52 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 11:34:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 11:34:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 11:34:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 11:34:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 11:34:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 11:34:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 11:34:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 11:34:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 11:34:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 11:34:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 11:34:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 11:34:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 11:34:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 11:34:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 11:34:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 11:34:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 11:34:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 11:34:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 11:34:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 11:34:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 11:34:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 11:34:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 11:34:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 11:34:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 11:34:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 11:34:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 11:34:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 11:34:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:34:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 11:34:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:34:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 11:34:53 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 11:34:53 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 11:34:53 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 11:34:53 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 11:34:53 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 11:34:53 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:53 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 11:34:53 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:34:53 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:34:53 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 11:34:53 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:34:53 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 11:34:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:34:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 11:34:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 11:34:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 11:34:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 11:34:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 11:34:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 11:34:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:34:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d24ffa1: startup date [Thu Mar 21 11:34:34 CST 2019]; root of context hierarchy
2019-03-21 11:34:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:34:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:34:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:34:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 11:34:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 11:34:57 -Registering beans for JMX exposure on startup
2019-03-21 11:34:57 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 11:34:57 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 11:34:57 -Starting beans in phase 2147483647
2019-03-21 11:34:57 -Context refreshed
2019-03-21 11:34:57 -Found 1 custom documentation plugin(s)
2019-03-21 11:34:57 -Scanning for api listing references
2019-03-21 11:34:57 -Generating unique operation named: removeUsingPOST_1
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_2
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_3
2019-03-21 11:34:58 -Generating unique operation named: saveUsingPOST_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPUT_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 11:34:58 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_2
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_2
2019-03-21 11:34:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_2
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_4
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_5
2019-03-21 11:34:58 -Generating unique operation named: saveUsingPOST_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingGET_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPUT_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 11:34:58 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 11:34:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_3
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_3
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_3
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_6
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_7
2019-03-21 11:34:58 -Generating unique operation named: saveUsingPOST_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingGET_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPUT_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 11:34:58 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_4
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_4
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_4
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_8
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_9
2019-03-21 11:34:58 -Generating unique operation named: saveUsingPOST_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingGET_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPUT_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 11:34:58 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 11:34:58 -Generating unique operation named: ElecUsingGET_1
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_5
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_5
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_5
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_10
2019-03-21 11:34:58 -Generating unique operation named: removeUsingPOST_11
2019-03-21 11:34:58 -Generating unique operation named: saveUsingPOST_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingGET_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPUT_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 11:34:58 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_6
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_6
2019-03-21 11:34:58 -Generating unique operation named: updateUsingPOST_6
2019-03-21 11:34:58 -Generating unique operation named: addUsingGET_6
2019-03-21 11:34:58 -Generating unique operation named: editUsingGET_7
2019-03-21 11:34:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 11:34:58 -Generating unique operation named: listUsingGET_7
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_12
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_13
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingGET_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPUT_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 11:34:59 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 11:34:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_7
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_8
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_8
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_14
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_15
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingGET_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPUT_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 11:34:59 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_8
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_9
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_9
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_16
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_17
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingGET_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPUT_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 11:34:59 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_9
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_10
2019-03-21 11:34:59 -Generating unique operation named: infoUsingGET_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingPOST_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingPUT_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 11:34:59 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_10
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_18
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_19
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_10
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_11
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_20
2019-03-21 11:34:59 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_10
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_11
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_12
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_21
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_10
2019-03-21 11:34:59 -Generating unique operation named: treeUsingGET_1
2019-03-21 11:34:59 -Generating unique operation named: treeUsingGET_2
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_11
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_11
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_12
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_13
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_22
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_23
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_11
2019-03-21 11:34:59 -Generating unique operation named: updateUsingGET_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_12
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPUT_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 11:34:59 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_12
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_13
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_14
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_24
2019-03-21 11:34:59 -Generating unique operation named: removeUsingPOST_25
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_12
2019-03-21 11:34:59 -Generating unique operation named: updateUsingGET_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_13
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPUT_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 11:34:59 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 11:34:59 -Generating unique operation named: addUsingGET_13
2019-03-21 11:34:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 11:34:59 -Generating unique operation named: editUsingGET_14
2019-03-21 11:34:59 -Generating unique operation named: listUsingGET_15
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_13
2019-03-21 11:34:59 -Generating unique operation named: saveUsingPOST_14
2019-03-21 11:34:59 -Generating unique operation named: updateUsingPOST_14
2019-03-21 11:35:00 -Generating unique operation named: listUsingGET_16
2019-03-21 11:35:00 -Generating unique operation named: listUsingHEAD_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingPOST_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingPUT_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingPATCH_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingDELETE_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 11:35:00 -Generating unique operation named: listUsingTRACE_1
2019-03-21 11:35:00 -Generating unique operation named: addUsingGET_14
2019-03-21 11:35:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 11:35:00 -Generating unique operation named: editUsingGET_15
2019-03-21 11:35:00 -Generating unique operation named: listUsingGET_17
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_26
2019-03-21 11:35:00 -Generating unique operation named: saveUsingPOST_15
2019-03-21 11:35:00 -Generating unique operation named: treeUsingGET_3
2019-03-21 11:35:00 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPOST_15
2019-03-21 11:35:00 -Generating unique operation named: addUsingGET_15
2019-03-21 11:35:00 -Generating unique operation named: editUsingGET_16
2019-03-21 11:35:00 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 11:35:00 -Generating unique operation named: listUsingGET_18
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_27
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_28
2019-03-21 11:35:00 -Generating unique operation named: saveUsingPOST_16
2019-03-21 11:35:00 -Generating unique operation named: updateUsingGET_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPOST_16
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPUT_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 11:35:00 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 11:35:00 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 11:35:00 -Generating unique operation named: addUsingGET_16
2019-03-21 11:35:00 -Generating unique operation named: editUsingGET_17
2019-03-21 11:35:00 -Generating unique operation named: listUsingGET_19
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_29
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_30
2019-03-21 11:35:00 -Generating unique operation named: saveUsingPOST_17
2019-03-21 11:35:00 -Generating unique operation named: updateUsingGET_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPOST_17
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPUT_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 11:35:00 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 11:35:00 -Generating unique operation named: addUsingGET_17
2019-03-21 11:35:00 -Generating unique operation named: editUsingGET_18
2019-03-21 11:35:00 -Generating unique operation named: listUsingGET_20
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_31
2019-03-21 11:35:00 -Generating unique operation named: removeUsingPOST_32
2019-03-21 11:35:00 -Generating unique operation named: saveUsingPOST_18
2019-03-21 11:35:00 -Generating unique operation named: updateUsingGET_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPOST_18
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPUT_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 11:35:00 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 11:35:00 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 11:35:00 -Starting Quartz Scheduler now
2019-03-21 11:35:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 11:35:00 -Starting...
2019-03-21 11:35:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 11:35:00 -Started.
2019-03-21 11:35:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 11:35:00 -Using a shared selector for servlet write/read
2019-03-21 11:35:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 11:35:00 -Started BootdoApplication in 28.825 seconds (JVM running for 30.668)
2019-03-21 11:35:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 11:35:01 -==> Parameters: 
2019-03-21 11:35:01 -<==      Total: 1
2019-03-21 11:35:53 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-21 11:36:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 11:36:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 11:36:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-03-21 11:36:05 -Enabling session validation scheduler...
2019-03-21 11:36:05 -请求地址 : http://localhost:8081/login;JSESSIONID=0c083b29-deca-4311-8b82-51bf4a7f3209
2019-03-21 11:36:05 -HTTP METHOD : GET
2019-03-21 11:36:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:36:05 -参数 : [{}]
2019-03-21 11:36:05 -耗时 : 3
2019-03-21 11:36:05 -返回值 : login
2019-03-21 11:36:07 -请求地址 : http://localhost:8081/getVerify
2019-03-21 11:36:07 -HTTP METHOD : GET
2019-03-21 11:36:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 11:36:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51f3f852, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5fcdcee4]
2019-03-21 11:36:07 -9126
2019-03-21 11:36:07 -耗时 : 532
2019-03-21 11:36:07 -返回值 : null
2019-03-21 11:36:07 -请求地址 : http://localhost:8081/login
2019-03-21 11:36:07 -HTTP METHOD : GET
2019-03-21 11:36:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:36:07 -参数 : [{}]
2019-03-21 11:36:07 -耗时 : 0
2019-03-21 11:36:07 -返回值 : login
2019-03-21 11:36:21 -请求地址 : http://localhost:8081/login
2019-03-21 11:36:21 -HTTP METHOD : POST
2019-03-21 11:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 11:36:21 -参数 : [admin, 111111, 9126, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d9475bf]
2019-03-21 11:36:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 11:36:21 -==> Parameters: admin(String)
2019-03-21 11:36:22 -<==      Total: 1
2019-03-21 11:36:22 -耗时 : 142
2019-03-21 11:36:22 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:36:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 11:36:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:36:22 -==> Parameters: 1(Long), admin(String), 登录(String), 142(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 11:36:22.146(Timestamp)
2019-03-21 11:36:22 -请求地址 : http://localhost:8081/index
2019-03-21 11:36:22 -HTTP METHOD : GET
2019-03-21 11:36:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:36:22 -参数 : [{}]
2019-03-21 11:36:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:36:22 -==> Parameters: 1(Long)
2019-03-21 11:36:22 -<==    Updates: 1
2019-03-21 11:36:22 -<==      Total: 46
2019-03-21 11:36:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:36:22 -==> Parameters: 138(Long)
2019-03-21 11:36:22 -<==      Total: 1
2019-03-21 11:36:22 -耗时 : 373
2019-03-21 11:36:22 -返回值 : index_v1
2019-03-21 11:36:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:36:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 373(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:36:22.659(Timestamp)
2019-03-21 11:36:22 -<==    Updates: 1
2019-03-21 11:36:22 -请求地址 : http://localhost:8081/main
2019-03-21 11:36:22 -HTTP METHOD : GET
2019-03-21 11:36:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:36:22 -参数 : []
2019-03-21 11:36:22 -耗时 : 1
2019-03-21 11:36:22 -返回值 : main
2019-03-21 11:36:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:36:23 -HTTP METHOD : GET
2019-03-21 11:36:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:36:23 -参数 : []
2019-03-21 11:36:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:36:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:36:23 -请求地址 : http://localhost:8081/main
2019-03-21 11:36:23 -HTTP METHOD : GET
2019-03-21 11:36:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:36:23 -参数 : []
2019-03-21 11:36:23 -耗时 : 0
2019-03-21 11:36:23 -返回值 : main
2019-03-21 11:36:23 -<==      Total: 0
2019-03-21 11:36:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:36:23 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:36:23 -<==      Total: 1
2019-03-21 11:36:23 -耗时 : 175
2019-03-21 11:36:23 -返回值 : com.bootdo.common.utils.PageUtils@62ed29bd
2019-03-21 11:36:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:36:49 -==> Parameters: 1(Long)
2019-03-21 11:36:49 -<==      Total: 90
2019-03-21 11:36:49 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:36:49 -HTTP METHOD : GET
2019-03-21 11:36:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:36:49 -参数 : []
2019-03-21 11:36:49 -耗时 : 0
2019-03-21 11:36:49 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:36:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:36:51 -HTTP METHOD : GET
2019-03-21 11:36:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:36:51 -参数 : [userType]
2019-03-21 11:36:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:36:51 -==> Parameters: userType(String)
2019-03-21 11:36:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:36:51 -HTTP METHOD : GET
2019-03-21 11:36:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:36:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:36:51 -<==      Total: 2
2019-03-21 11:36:51 -耗时 : 94
2019-03-21 11:36:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:36:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:36:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:36:51 -<==      Total: 5
2019-03-21 11:36:51 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:36:51 -==> Parameters: 
2019-03-21 11:36:51 -<==      Total: 1
2019-03-21 11:36:51 -耗时 : 169
2019-03-21 11:36:51 -返回值 : com.bootdo.common.utils.PageUtils@54fc09b2
2019-03-21 11:36:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:36:51 -HTTP METHOD : GET
2019-03-21 11:36:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:36:51 -参数 : []
2019-03-21 11:36:51 -耗时 : 1
2019-03-21 11:36:51 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:36:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:36:52 -HTTP METHOD : GET
2019-03-21 11:36:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:36:52 -参数 : [userType]
2019-03-21 11:36:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:36:52 -==> Parameters: userType(String)
2019-03-21 11:36:52 -<==      Total: 2
2019-03-21 11:36:52 -耗时 : 7
2019-03-21 11:36:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:36:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:36:52 -HTTP METHOD : GET
2019-03-21 11:36:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:36:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:36:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:36:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:36:52 -<==      Total: 3
2019-03-21 11:36:52 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:36:52 -==> Parameters: 
2019-03-21 11:36:52 -<==      Total: 1
2019-03-21 11:36:52 -耗时 : 140
2019-03-21 11:36:52 -返回值 : com.bootdo.common.utils.PageUtils@37d8119c
2019-03-21 11:36:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:36:53 -HTTP METHOD : GET
2019-03-21 11:36:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:36:53 -参数 : []
2019-03-21 11:36:53 -耗时 : 0
2019-03-21 11:36:53 -返回值 : moneyLog/heatLog/add
2019-03-21 11:36:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:36:54 -HTTP METHOD : GET
2019-03-21 11:36:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:36:54 -参数 : [userType]
2019-03-21 11:36:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:36:54 -==> Parameters: userType(String)
2019-03-21 11:36:54 -<==      Total: 2
2019-03-21 11:36:54 -耗时 : 9
2019-03-21 11:36:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:36:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:36:59 -HTTP METHOD : GET
2019-03-21 11:36:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:36:59 -参数 : []
2019-03-21 11:36:59 -耗时 : 1
2019-03-21 11:36:59 -返回值 : system/dept/deptTree
2019-03-21 11:36:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:36:59 -HTTP METHOD : GET
2019-03-21 11:36:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:36:59 -参数 : []
2019-03-21 11:36:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:36:59 -==> Parameters: 
2019-03-21 11:36:59 -<==      Total: 3
2019-03-21 11:36:59 -耗时 : 34
2019-03-21 11:36:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:37:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-03-21 11:37:09 -HTTP METHOD : POST
2019-03-21 11:37:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-03-21 11:37:09 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@523a8943]
2019-03-21 11:37:09 -==>  Preparing: insert into heat_log ( `heat_id`, `user_id`, `user_name`, `user_type`, `user_org`, `heat_money`, `heat_date `, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:37:09 -==> Parameters: null, 4-4444(String), 爱说大(String), A(String), 2(String), 90(BigDecimal), 2019-03-21 11:37:09.729(Timestamp), 2019-03(String), 1(Long), 2019-03-21 11:37:09.729(Timestamp), 1(Long), (String)
2019-03-21 11:37:09 -{conn-10002, pstmt-20015} execute error. insert into heat_log
		(	
			`heat_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_money`, 
			`heat_date `, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cf3ab5e6.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 11:37:09 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 11:37:09 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 11:37:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:37:09 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:33)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:191)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$cf3ab5e6.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 11:37:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/save(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date ' in 'field list'(String), null, 2019-03-21 11:37:09.868(Timestamp)
2019-03-21 11:37:09 -<==    Updates: 1
2019-03-21 11:37:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:37:21 -HTTP METHOD : GET
2019-03-21 11:37:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:37:21 -参数 : []
2019-03-21 11:37:21 -耗时 : 0
2019-03-21 11:37:21 -返回值 : moneyLog/heatLog/add
2019-03-21 11:37:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:37:21 -HTTP METHOD : GET
2019-03-21 11:37:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:37:21 -参数 : [userType]
2019-03-21 11:37:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:37:21 -==> Parameters: userType(String)
2019-03-21 11:37:21 -<==      Total: 2
2019-03-21 11:37:21 -耗时 : 11
2019-03-21 11:37:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:39:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 1696 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 11:39:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 11:39:46 -The following profiles are active: dev
2019-03-21 11:39:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Thu Mar 21 11:39:46 CST 2019]; root of context hierarchy
2019-03-21 11:39:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 11:39:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$90255353] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$827e81fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 11:39:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 11:39:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 11:39:57 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 11:39:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 11:39:57 -Starting service [Tomcat]
2019-03-21 11:39:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 11:39:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 11:39:57 -Initializing Spring embedded WebApplicationContext
2019-03-21 11:39:57 -Root WebApplicationContext: initialization completed in 11342 ms
2019-03-21 11:39:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 11:39:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 11:39:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 11:39:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 11:39:58 -Filter xssFilter was not registered (disabled)
2019-03-21 11:39:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 11:39:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 11:39:58 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 11:39:58 -Servlet dispatcherServlet mapped to [/]
2019-03-21 11:40:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Thu Mar 21 11:39:46 CST 2019]; root of context hierarchy
2019-03-21 11:40:02 -Using default implementation for ThreadExecutor
2019-03-21 11:40:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 11:40:02 -Quartz Scheduler v.2.2.1 created.
2019-03-21 11:40:02 -RAMJobStore initialized.
2019-03-21 11:40:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 11:40:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 11:40:02 -Quartz scheduler version: 2.2.1
2019-03-21 11:40:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@72a0a60d
2019-03-21 11:40:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 11:40:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 11:40:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 11:40:06 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 11:40:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 11:40:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 11:40:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 11:40:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 11:40:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 11:40:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 11:40:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 11:40:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 11:40:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 11:40:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 11:40:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 11:40:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 11:40:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:40:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 11:40:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 11:40:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 11:40:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 11:40:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 11:40:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 11:40:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 11:40:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 11:40:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 11:40:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 11:40:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 11:40:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:40:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:40:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 11:40:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 11:40:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 11:40:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 11:40:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 11:40:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:40:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 11:40:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 11:40:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 11:40:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 11:40:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:40:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 11:40:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 11:40:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 11:40:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 11:40:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 11:40:06 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 11:40:06 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 11:40:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 11:40:06 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 11:40:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 11:40:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 11:40:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 11:40:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 11:40:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 11:40:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 11:40:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 11:40:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 11:40:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 11:40:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 11:40:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 11:40:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 11:40:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 11:40:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 11:40:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 11:40:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 11:40:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 11:40:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 11:40:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 11:40:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 11:40:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 11:40:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 11:40:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 11:40:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 11:40:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 11:40:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:40:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 11:40:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 11:40:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 11:40:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 11:40:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 11:40:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 11:40:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 11:40:06 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 11:40:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 11:40:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 11:40:06 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 11:40:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 11:40:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 11:40:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 11:40:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 11:40:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 11:40:07 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 11:40:07 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 11:40:07 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 11:40:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:40:08 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f053c80: startup date [Thu Mar 21 11:39:46 CST 2019]; root of context hierarchy
2019-03-21 11:40:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:40:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:40:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 11:40:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 11:40:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 11:40:12 -Registering beans for JMX exposure on startup
2019-03-21 11:40:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 11:40:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 11:40:12 -Starting beans in phase 2147483647
2019-03-21 11:40:12 -Context refreshed
2019-03-21 11:40:12 -Found 1 custom documentation plugin(s)
2019-03-21 11:40:12 -Scanning for api listing references
2019-03-21 11:40:12 -Generating unique operation named: removeUsingPOST_1
2019-03-21 11:40:12 -Generating unique operation named: addUsingGET_1
2019-03-21 11:40:13 -Generating unique operation named: editUsingGET_1
2019-03-21 11:40:13 -Generating unique operation named: listUsingGET_1
2019-03-21 11:40:13 -Generating unique operation named: removeUsingPOST_2
2019-03-21 11:40:13 -Generating unique operation named: removeUsingPOST_3
2019-03-21 11:40:13 -Generating unique operation named: saveUsingPOST_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingGET_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingPOST_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingPUT_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 11:40:13 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 11:40:13 -Generating unique operation named: addUsingGET_2
2019-03-21 11:40:13 -Generating unique operation named: editUsingGET_2
2019-03-21 11:40:13 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 11:40:14 -Generating unique operation named: listUsingGET_2
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_4
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_5
2019-03-21 11:40:14 -Generating unique operation named: saveUsingPOST_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingGET_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPOST_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPUT_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 11:40:14 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 11:40:14 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 11:40:14 -Generating unique operation named: addUsingGET_3
2019-03-21 11:40:14 -Generating unique operation named: editUsingGET_3
2019-03-21 11:40:14 -Generating unique operation named: listUsingGET_3
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_6
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_7
2019-03-21 11:40:14 -Generating unique operation named: saveUsingPOST_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingGET_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPOST_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPUT_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 11:40:14 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 11:40:14 -Generating unique operation named: addUsingGET_4
2019-03-21 11:40:14 -Generating unique operation named: editUsingGET_4
2019-03-21 11:40:14 -Generating unique operation named: listUsingGET_4
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_8
2019-03-21 11:40:14 -Generating unique operation named: removeUsingPOST_9
2019-03-21 11:40:14 -Generating unique operation named: saveUsingPOST_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingGET_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPOST_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPUT_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 11:40:14 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 11:40:14 -Generating unique operation named: ElecUsingGET_1
2019-03-21 11:40:14 -Generating unique operation named: addUsingGET_5
2019-03-21 11:40:14 -Generating unique operation named: editUsingGET_5
2019-03-21 11:40:15 -Generating unique operation named: listUsingGET_5
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_10
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_11
2019-03-21 11:40:15 -Generating unique operation named: saveUsingPOST_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingGET_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPOST_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPUT_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 11:40:15 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 11:40:15 -Generating unique operation named: editUsingGET_6
2019-03-21 11:40:15 -Generating unique operation named: listUsingGET_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPOST_6
2019-03-21 11:40:15 -Generating unique operation named: addUsingGET_6
2019-03-21 11:40:15 -Generating unique operation named: editUsingGET_7
2019-03-21 11:40:15 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 11:40:15 -Generating unique operation named: listUsingGET_7
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_12
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_13
2019-03-21 11:40:15 -Generating unique operation named: saveUsingPOST_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingGET_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPOST_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPUT_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 11:40:15 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 11:40:15 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 11:40:15 -Generating unique operation named: addUsingGET_7
2019-03-21 11:40:15 -Generating unique operation named: editUsingGET_8
2019-03-21 11:40:15 -Generating unique operation named: listUsingGET_8
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_14
2019-03-21 11:40:15 -Generating unique operation named: removeUsingPOST_15
2019-03-21 11:40:15 -Generating unique operation named: saveUsingPOST_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingGET_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPOST_8
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPUT_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 11:40:15 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 11:40:16 -Generating unique operation named: addUsingGET_8
2019-03-21 11:40:16 -Generating unique operation named: editUsingGET_9
2019-03-21 11:40:16 -Generating unique operation named: listUsingGET_9
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_16
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_17
2019-03-21 11:40:16 -Generating unique operation named: saveUsingPOST_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingGET_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingPOST_9
2019-03-21 11:40:16 -Generating unique operation named: updateUsingPUT_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 11:40:16 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 11:40:16 -Generating unique operation named: addUsingGET_9
2019-03-21 11:40:16 -Generating unique operation named: editUsingGET_10
2019-03-21 11:40:16 -Generating unique operation named: infoUsingGET_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingPOST_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingPUT_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 11:40:16 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 11:40:16 -Generating unique operation named: listUsingGET_10
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_18
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_19
2019-03-21 11:40:16 -Generating unique operation named: saveUsingPOST_9
2019-03-21 11:40:16 -Generating unique operation named: updateUsingPOST_10
2019-03-21 11:40:16 -Generating unique operation named: listUsingGET_11
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_20
2019-03-21 11:40:16 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 11:40:16 -Generating unique operation named: addUsingGET_10
2019-03-21 11:40:16 -Generating unique operation named: editUsingGET_11
2019-03-21 11:40:16 -Generating unique operation named: listUsingGET_12
2019-03-21 11:40:16 -Generating unique operation named: removeUsingPOST_21
2019-03-21 11:40:16 -Generating unique operation named: saveUsingPOST_10
2019-03-21 11:40:16 -Generating unique operation named: treeUsingGET_1
2019-03-21 11:40:16 -Generating unique operation named: treeUsingGET_2
2019-03-21 11:40:16 -Generating unique operation named: updateUsingPOST_11
2019-03-21 11:40:16 -Generating unique operation named: addUsingGET_11
2019-03-21 11:40:17 -Generating unique operation named: editUsingGET_12
2019-03-21 11:40:17 -Generating unique operation named: listUsingGET_13
2019-03-21 11:40:17 -Generating unique operation named: removeUsingPOST_22
2019-03-21 11:40:17 -Generating unique operation named: removeUsingPOST_23
2019-03-21 11:40:17 -Generating unique operation named: saveUsingPOST_11
2019-03-21 11:40:17 -Generating unique operation named: updateUsingGET_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPOST_12
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPUT_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 11:40:17 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 11:40:17 -Generating unique operation named: addUsingGET_12
2019-03-21 11:40:17 -Generating unique operation named: editUsingGET_13
2019-03-21 11:40:17 -Generating unique operation named: listUsingGET_14
2019-03-21 11:40:17 -Generating unique operation named: removeUsingPOST_24
2019-03-21 11:40:17 -Generating unique operation named: removeUsingPOST_25
2019-03-21 11:40:17 -Generating unique operation named: saveUsingPOST_12
2019-03-21 11:40:17 -Generating unique operation named: updateUsingGET_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPOST_13
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPUT_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 11:40:17 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 11:40:17 -Generating unique operation named: addUsingGET_13
2019-03-21 11:40:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 11:40:17 -Generating unique operation named: editUsingGET_14
2019-03-21 11:40:17 -Generating unique operation named: listUsingGET_15
2019-03-21 11:40:17 -Generating unique operation named: saveUsingPOST_13
2019-03-21 11:40:17 -Generating unique operation named: saveUsingPOST_14
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPOST_14
2019-03-21 11:40:17 -Generating unique operation named: listUsingGET_16
2019-03-21 11:40:17 -Generating unique operation named: listUsingHEAD_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingPOST_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingPUT_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingPATCH_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingDELETE_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 11:40:17 -Generating unique operation named: listUsingTRACE_1
2019-03-21 11:40:17 -Generating unique operation named: addUsingGET_14
2019-03-21 11:40:17 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 11:40:17 -Generating unique operation named: editUsingGET_15
2019-03-21 11:40:17 -Generating unique operation named: listUsingGET_17
2019-03-21 11:40:17 -Generating unique operation named: removeUsingPOST_26
2019-03-21 11:40:17 -Generating unique operation named: saveUsingPOST_15
2019-03-21 11:40:17 -Generating unique operation named: treeUsingGET_3
2019-03-21 11:40:17 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 11:40:17 -Generating unique operation named: updateUsingPOST_15
2019-03-21 11:40:17 -Generating unique operation named: addUsingGET_15
2019-03-21 11:40:17 -Generating unique operation named: editUsingGET_16
2019-03-21 11:40:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 11:40:18 -Generating unique operation named: listUsingGET_18
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_27
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_28
2019-03-21 11:40:18 -Generating unique operation named: saveUsingPOST_16
2019-03-21 11:40:18 -Generating unique operation named: updateUsingGET_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPOST_16
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPUT_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 11:40:18 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 11:40:18 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 11:40:18 -Generating unique operation named: addUsingGET_16
2019-03-21 11:40:18 -Generating unique operation named: editUsingGET_17
2019-03-21 11:40:18 -Generating unique operation named: listUsingGET_19
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_29
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_30
2019-03-21 11:40:18 -Generating unique operation named: saveUsingPOST_17
2019-03-21 11:40:18 -Generating unique operation named: updateUsingGET_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPOST_17
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPUT_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 11:40:18 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 11:40:18 -Generating unique operation named: addUsingGET_17
2019-03-21 11:40:18 -Generating unique operation named: editUsingGET_18
2019-03-21 11:40:18 -Generating unique operation named: listUsingGET_20
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_31
2019-03-21 11:40:18 -Generating unique operation named: removeUsingPOST_32
2019-03-21 11:40:18 -Generating unique operation named: saveUsingPOST_18
2019-03-21 11:40:18 -Generating unique operation named: updateUsingGET_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPOST_18
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPUT_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 11:40:18 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 11:40:18 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 11:40:18 -Starting Quartz Scheduler now
2019-03-21 11:40:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 11:40:18 -Starting...
2019-03-21 11:40:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 11:40:18 -Started.
2019-03-21 11:40:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 11:40:18 -Using a shared selector for servlet write/read
2019-03-21 11:40:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 11:40:18 -Started BootdoApplication in 35.15 seconds (JVM running for 36.813)
2019-03-21 11:40:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 11:40:19 -==> Parameters: 
2019-03-21 11:40:19 -<==      Total: 1
2019-03-21 11:40:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 11:40:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 11:40:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-03-21 11:40:41 -Enabling session validation scheduler...
2019-03-21 11:40:41 -请求地址 : http://localhost:8081/login;JSESSIONID=0d366345-5297-4709-961d-e9f5a98ab7e7
2019-03-21 11:40:41 -HTTP METHOD : GET
2019-03-21 11:40:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:40:41 -参数 : [{}]
2019-03-21 11:40:41 -耗时 : 3
2019-03-21 11:40:41 -返回值 : login
2019-03-21 11:40:43 -请求地址 : http://localhost:8081/getVerify
2019-03-21 11:40:43 -HTTP METHOD : GET
2019-03-21 11:40:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 11:40:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@63807f27, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c092631]
2019-03-21 11:40:43 -6516
2019-03-21 11:40:43 -耗时 : 496
2019-03-21 11:40:43 -返回值 : null
2019-03-21 11:40:43 -请求地址 : http://localhost:8081/login
2019-03-21 11:40:43 -HTTP METHOD : GET
2019-03-21 11:40:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 11:40:43 -参数 : [{}]
2019-03-21 11:40:43 -耗时 : 1
2019-03-21 11:40:43 -返回值 : login
2019-03-21 11:40:48 -请求地址 : http://localhost:8081/login
2019-03-21 11:40:48 -HTTP METHOD : POST
2019-03-21 11:40:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 11:40:48 -参数 : [admin, 111111, 6516, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3049256f]
2019-03-21 11:40:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 11:40:48 -==> Parameters: admin(String)
2019-03-21 11:40:48 -<==      Total: 1
2019-03-21 11:40:48 -耗时 : 217
2019-03-21 11:40:48 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:40:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 11:40:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:40:48 -==> Parameters: 1(Long), admin(String), 登录(String), 217(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 11:40:48.67(Timestamp)
2019-03-21 11:40:48 -请求地址 : http://localhost:8081/index
2019-03-21 11:40:48 -HTTP METHOD : GET
2019-03-21 11:40:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 11:40:48 -参数 : [{}]
2019-03-21 11:40:48 -<==    Updates: 1
2019-03-21 11:40:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 11:40:48 -==> Parameters: 1(Long)
2019-03-21 11:40:48 -<==      Total: 46
2019-03-21 11:40:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 11:40:48 -==> Parameters: 138(Long)
2019-03-21 11:40:48 -<==      Total: 1
2019-03-21 11:40:48 -耗时 : 233
2019-03-21 11:40:48 -返回值 : index_v1
2019-03-21 11:40:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:40:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 233(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 11:40:49.04(Timestamp)
2019-03-21 11:40:49 -<==    Updates: 1
2019-03-21 11:40:49 -请求地址 : http://localhost:8081/main
2019-03-21 11:40:49 -HTTP METHOD : GET
2019-03-21 11:40:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:40:49 -参数 : []
2019-03-21 11:40:49 -耗时 : 0
2019-03-21 11:40:49 -返回值 : main
2019-03-21 11:40:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 11:40:49 -HTTP METHOD : GET
2019-03-21 11:40:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 11:40:49 -参数 : []
2019-03-21 11:40:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 11:40:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 11:40:49 -请求地址 : http://localhost:8081/main
2019-03-21 11:40:49 -HTTP METHOD : GET
2019-03-21 11:40:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 11:40:49 -参数 : []
2019-03-21 11:40:49 -耗时 : 1
2019-03-21 11:40:49 -返回值 : main
2019-03-21 11:40:49 -<==      Total: 0
2019-03-21 11:40:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 11:40:49 -==> Parameters: 1(Long), 0(String)
2019-03-21 11:40:49 -<==      Total: 1
2019-03-21 11:40:49 -耗时 : 124
2019-03-21 11:40:49 -返回值 : com.bootdo.common.utils.PageUtils@6a51425c
2019-03-21 11:40:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 11:40:56 -==> Parameters: 1(Long)
2019-03-21 11:40:56 -<==      Total: 90
2019-03-21 11:40:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 11:40:56 -HTTP METHOD : GET
2019-03-21 11:40:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 11:40:56 -参数 : []
2019-03-21 11:40:56 -耗时 : 1
2019-03-21 11:40:56 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 11:40:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:40:57 -HTTP METHOD : GET
2019-03-21 11:40:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:40:57 -参数 : [userType]
2019-03-21 11:40:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:40:57 -==> Parameters: userType(String)
2019-03-21 11:40:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 11:40:57 -HTTP METHOD : GET
2019-03-21 11:40:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 11:40:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 11:40:57 -<==      Total: 2
2019-03-21 11:40:57 -耗时 : 70
2019-03-21 11:40:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 11:40:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:40:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:40:57 -<==      Total: 5
2019-03-21 11:40:57 -==>  Preparing: select count(*) from elec_log 
2019-03-21 11:40:57 -==> Parameters: 
2019-03-21 11:40:57 -<==      Total: 1
2019-03-21 11:40:57 -耗时 : 93
2019-03-21 11:40:57 -返回值 : com.bootdo.common.utils.PageUtils@5221e615
2019-03-21 11:40:59 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:40:59 -HTTP METHOD : GET
2019-03-21 11:40:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:40:59 -参数 : []
2019-03-21 11:40:59 -耗时 : 1
2019-03-21 11:40:59 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:40:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:40:59 -HTTP METHOD : GET
2019-03-21 11:40:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:40:59 -参数 : [userType]
2019-03-21 11:40:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:40:59 -==> Parameters: userType(String)
2019-03-21 11:40:59 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:40:59 -HTTP METHOD : GET
2019-03-21 11:40:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:40:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:40:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:40:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:40:59 -<==      Total: 3
2019-03-21 11:40:59 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:40:59 -==> Parameters: 
2019-03-21 11:40:59 -<==      Total: 1
2019-03-21 11:40:59 -耗时 : 30
2019-03-21 11:40:59 -返回值 : com.bootdo.common.utils.PageUtils@6e1ba61
2019-03-21 11:40:59 -<==      Total: 2
2019-03-21 11:40:59 -耗时 : 70
2019-03-21 11:40:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:41:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-21 11:41:00 -HTTP METHOD : GET
2019-03-21 11:41:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-21 11:41:00 -参数 : []
2019-03-21 11:41:00 -耗时 : 1
2019-03-21 11:41:00 -返回值 : /moneyLog/heatLog/heatLog
2019-03-21 11:41:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:41:00 -HTTP METHOD : GET
2019-03-21 11:41:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:41:00 -参数 : [userType]
2019-03-21 11:41:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:41:00 -==> Parameters: userType(String)
2019-03-21 11:41:00 -<==      Total: 2
2019-03-21 11:41:00 -耗时 : 9
2019-03-21 11:41:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:41:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:41:00 -HTTP METHOD : GET
2019-03-21 11:41:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:41:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:41:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:41:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:41:00 -<==      Total: 3
2019-03-21 11:41:00 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:41:00 -==> Parameters: 
2019-03-21 11:41:00 -<==      Total: 1
2019-03-21 11:41:00 -耗时 : 40
2019-03-21 11:41:00 -返回值 : com.bootdo.common.utils.PageUtils@241e9a8e
2019-03-21 11:41:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-21 11:41:02 -HTTP METHOD : GET
2019-03-21 11:41:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-21 11:41:02 -参数 : []
2019-03-21 11:41:02 -耗时 : 1
2019-03-21 11:41:02 -返回值 : moneyLog/heatLog/add
2019-03-21 11:41:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:41:02 -HTTP METHOD : GET
2019-03-21 11:41:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:41:02 -参数 : [userType]
2019-03-21 11:41:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:41:02 -==> Parameters: userType(String)
2019-03-21 11:41:02 -<==      Total: 2
2019-03-21 11:41:02 -耗时 : 6
2019-03-21 11:41:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:41:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:41:05 -HTTP METHOD : GET
2019-03-21 11:41:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:41:05 -参数 : []
2019-03-21 11:41:05 -耗时 : 0
2019-03-21 11:41:05 -返回值 : system/dept/deptTree
2019-03-21 11:41:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:41:05 -HTTP METHOD : GET
2019-03-21 11:41:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:41:05 -参数 : []
2019-03-21 11:41:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:41:05 -==> Parameters: 
2019-03-21 11:41:05 -<==      Total: 3
2019-03-21 11:41:05 -耗时 : 20
2019-03-21 11:41:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:41:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-21 11:41:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-03-21 11:41:19 -HTTP METHOD : POST
2019-03-21 11:41:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-03-21 11:41:19 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@20f99ce8]
2019-03-21 11:41:19 -==>  Preparing: insert into heat_log ( `heat_id`, `user_id`, `user_name`, `user_type`, `user_org`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:41:19 -==> Parameters: null, 4-4444(String), 爱说大(String), A(String), 2(String), 80(BigDecimal), 2019-03-21 11:41:19.043(Timestamp), 2019-03(String), 1(Long), 2019-03-21 11:41:19.043(Timestamp), 1(Long), (String)
2019-03-21 11:41:19 -<==    Updates: 1
2019-03-21 11:41:19 -耗时 : 100
2019-03-21 11:41:19 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:41:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-21 11:41:19 -HTTP METHOD : GET
2019-03-21 11:41:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-21 11:41:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-21 11:41:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-21 11:41:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:41:19 -<==      Total: 4
2019-03-21 11:41:19 -==>  Preparing: select count(*) from heat_log 
2019-03-21 11:41:19 -==> Parameters: 
2019-03-21 11:41:19 -<==      Total: 1
2019-03-21 11:41:19 -耗时 : 10
2019-03-21 11:41:19 -返回值 : com.bootdo.common.utils.PageUtils@430964d1
2019-03-21 11:41:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-21 11:41:21 -HTTP METHOD : GET
2019-03-21 11:41:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-21 11:41:21 -参数 : []
2019-03-21 11:41:21 -耗时 : 1
2019-03-21 11:41:21 -返回值 : /moneyLog/waterLog/waterLog
2019-03-21 11:41:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:41:22 -HTTP METHOD : GET
2019-03-21 11:41:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:41:22 -参数 : [userType]
2019-03-21 11:41:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:41:22 -==> Parameters: userType(String)
2019-03-21 11:41:22 -<==      Total: 2
2019-03-21 11:41:22 -耗时 : 5
2019-03-21 11:41:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:41:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:41:22 -HTTP METHOD : GET
2019-03-21 11:41:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:41:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:41:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:41:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:41:22 -<==      Total: 3
2019-03-21 11:41:22 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:41:22 -==> Parameters: 
2019-03-21 11:41:22 -<==      Total: 1
2019-03-21 11:41:22 -耗时 : 358
2019-03-21 11:41:22 -返回值 : com.bootdo.common.utils.PageUtils@22b47b2f
2019-03-21 11:41:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-21 11:41:23 -HTTP METHOD : GET
2019-03-21 11:41:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-21 11:41:23 -参数 : []
2019-03-21 11:41:23 -耗时 : 1
2019-03-21 11:41:23 -返回值 : moneyLog/waterLog/add
2019-03-21 11:41:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 11:41:23 -HTTP METHOD : GET
2019-03-21 11:41:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 11:41:23 -参数 : [userType]
2019-03-21 11:41:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 11:41:23 -==> Parameters: userType(String)
2019-03-21 11:41:23 -<==      Total: 2
2019-03-21 11:41:23 -耗时 : 6
2019-03-21 11:41:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 11:41:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 11:41:30 -HTTP METHOD : GET
2019-03-21 11:41:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 11:41:30 -参数 : []
2019-03-21 11:41:30 -耗时 : 1
2019-03-21 11:41:30 -返回值 : system/dept/deptTree
2019-03-21 11:41:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 11:41:31 -HTTP METHOD : GET
2019-03-21 11:41:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 11:41:31 -参数 : []
2019-03-21 11:41:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 11:41:31 -==> Parameters: 
2019-03-21 11:41:31 -<==      Total: 3
2019-03-21 11:41:31 -耗时 : 4
2019-03-21 11:41:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 11:41:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-03-21 11:41:37 -HTTP METHOD : POST
2019-03-21 11:41:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-03-21 11:41:37 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@320f4511]
2019-03-21 11:41:37 -==>  Preparing: insert into water_log ( `water_id`, `user_id`, `user_name`, `user_type`, `user_org`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 11:41:37 -==> Parameters: null, 4-4444(String), 爱说大(String), A(String), 2(String), 60(BigDecimal), 2019-03-21 11:41:37.637(Timestamp), 2019-03(String), 1(Long), 2019-03-21 11:41:37.637(Timestamp), 1(Long), (String)
2019-03-21 11:41:37 -<==    Updates: 1
2019-03-21 11:41:37 -耗时 : 120
2019-03-21 11:41:37 -返回值 : {msg=操作成功, code=0}
2019-03-21 11:41:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-21 11:41:37 -HTTP METHOD : GET
2019-03-21 11:41:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-21 11:41:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-21 11:41:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-21 11:41:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 11:41:37 -<==      Total: 4
2019-03-21 11:41:37 -==>  Preparing: select count(*) from water_log 
2019-03-21 11:41:37 -==> Parameters: 
2019-03-21 11:41:37 -<==      Total: 1
2019-03-21 11:41:37 -耗时 : 11
2019-03-21 11:41:37 -返回值 : com.bootdo.common.utils.PageUtils@70d52db5
2019-03-21 12:11:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 437]
2019-03-21 12:25:47 -请求地址 : http://localhost:8081/login;JSESSIONID=3d6148dd-7a9d-4b4f-ba71-12ec888b495c
2019-03-21 12:25:47 -HTTP METHOD : GET
2019-03-21 12:25:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 12:25:47 -参数 : [{}]
2019-03-21 12:25:47 -耗时 : 2
2019-03-21 12:25:47 -返回值 : login
2019-03-21 12:25:47 -请求地址 : http://localhost:8081/login;JSESSIONID=3d6148dd-7a9d-4b4f-ba71-12ec888b495c
2019-03-21 12:25:47 -HTTP METHOD : GET
2019-03-21 12:25:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 12:25:47 -参数 : [{}]
2019-03-21 12:25:47 -耗时 : 1
2019-03-21 12:25:47 -返回值 : login
2019-03-21 12:25:47 -请求地址 : http://localhost:8081/getVerify
2019-03-21 12:25:47 -HTTP METHOD : GET
2019-03-21 12:25:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 12:25:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30f8bc50, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1382293c]
2019-03-21 12:25:47 -1645
2019-03-21 12:25:47 -耗时 : 35
2019-03-21 12:25:47 -返回值 : null
2019-03-21 12:25:47 -请求地址 : http://localhost:8081/getVerify
2019-03-21 12:25:47 -HTTP METHOD : GET
2019-03-21 12:25:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 12:25:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@431e8698, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47acf0bf]
2019-03-21 12:25:47 -4783
2019-03-21 12:25:47 -耗时 : 17
2019-03-21 12:25:47 -返回值 : null
2019-03-21 12:40:41 -Validating all active sessions...
2019-03-21 12:40:41 -Finished session validation.  No sessions were stopped.
2019-03-21 12:41:07 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 833]
2019-03-21 13:38:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 1016]
2019-03-21 13:39:31 -请求地址 : http://localhost:8081/login
2019-03-21 13:39:31 -HTTP METHOD : POST
2019-03-21 13:39:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 13:39:31 -参数 : [admin, 111111, 4783, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a8566d8]
2019-03-21 13:39:31 -验证码校验失败
java.lang.NullPointerException: null
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$861d4982.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 13:39:31 -耗时 : 22
2019-03-21 13:39:31 -返回值 : {msg=验证码校验失败, code=500}
2019-03-21 13:39:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:39:31 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 23(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 13:39:31.54(Timestamp)
2019-03-21 13:39:31 -<==    Updates: 1
2019-03-21 13:39:32 -请求地址 : http://localhost:8081/login
2019-03-21 13:39:32 -HTTP METHOD : POST
2019-03-21 13:39:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 13:39:32 -参数 : [admin, 111111, 4783, org.apache.shiro.web.servlet.ShiroHttpServletRequest@73db00eb]
2019-03-21 13:39:32 -验证码校验失败
java.lang.NullPointerException: null
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$861d4982.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 13:39:32 -耗时 : 5
2019-03-21 13:39:32 -返回值 : {msg=验证码校验失败, code=500}
2019-03-21 13:39:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:39:32 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 13:39:32.721(Timestamp)
2019-03-21 13:39:32 -<==    Updates: 1
2019-03-21 13:39:35 -请求地址 : http://localhost:8081/getVerify
2019-03-21 13:39:35 -HTTP METHOD : GET
2019-03-21 13:39:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 13:39:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@630bdf43, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77888b9c]
2019-03-21 13:39:35 -8247
2019-03-21 13:39:35 -耗时 : 123
2019-03-21 13:39:35 -返回值 : null
2019-03-21 13:39:41 -请求地址 : http://localhost:8081/login
2019-03-21 13:39:41 -HTTP METHOD : POST
2019-03-21 13:39:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 13:39:41 -参数 : [admin, 111111, 8247, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3f49a04a]
2019-03-21 13:39:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 13:39:41 -==> Parameters: admin(String)
2019-03-21 13:39:41 -<==      Total: 1
2019-03-21 13:39:41 -耗时 : 24
2019-03-21 13:39:41 -返回值 : {msg=操作成功, code=0}
2019-03-21 13:39:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:39:41 -==> Parameters: 1(Long), admin(String), 登录(String), 25(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 13:39:41.743(Timestamp)
2019-03-21 13:39:41 -请求地址 : http://localhost:8081/index
2019-03-21 13:39:41 -HTTP METHOD : GET
2019-03-21 13:39:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 13:39:41 -参数 : [{}]
2019-03-21 13:39:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 13:39:41 -==> Parameters: 1(Long)
2019-03-21 13:39:41 -<==      Total: 46
2019-03-21 13:39:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 13:39:41 -==> Parameters: 138(Long)
2019-03-21 13:39:41 -<==      Total: 1
2019-03-21 13:39:41 -耗时 : 40
2019-03-21 13:39:41 -返回值 : index_v1
2019-03-21 13:39:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:39:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 13:39:41.804(Timestamp)
2019-03-21 13:39:41 -<==    Updates: 1
2019-03-21 13:39:41 -请求地址 : http://localhost:8081/main
2019-03-21 13:39:41 -HTTP METHOD : GET
2019-03-21 13:39:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 13:39:41 -参数 : []
2019-03-21 13:39:41 -耗时 : 0
2019-03-21 13:39:41 -返回值 : main
2019-03-21 13:39:41 -<==    Updates: 1
2019-03-21 13:39:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 13:39:42 -HTTP METHOD : GET
2019-03-21 13:39:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 13:39:42 -参数 : []
2019-03-21 13:39:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 13:39:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 13:39:42 -<==      Total: 0
2019-03-21 13:39:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 13:39:42 -==> Parameters: 1(Long), 0(String)
2019-03-21 13:39:42 -<==      Total: 1
2019-03-21 13:39:42 -耗时 : 11
2019-03-21 13:39:42 -返回值 : com.bootdo.common.utils.PageUtils@1674892f
2019-03-21 13:39:42 -请求地址 : http://localhost:8081/main
2019-03-21 13:39:42 -HTTP METHOD : GET
2019-03-21 13:39:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 13:39:42 -参数 : []
2019-03-21 13:39:42 -耗时 : 3
2019-03-21 13:39:42 -返回值 : main
2019-03-21 13:39:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 13:39:52 -==> Parameters: 1(Long)
2019-03-21 13:39:52 -<==      Total: 90
2019-03-21 13:39:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 13:39:52 -HTTP METHOD : GET
2019-03-21 13:39:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 13:39:52 -参数 : []
2019-03-21 13:39:52 -耗时 : 1
2019-03-21 13:39:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 13:39:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:39:53 -HTTP METHOD : GET
2019-03-21 13:39:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:39:53 -参数 : [userType]
2019-03-21 13:39:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:39:53 -==> Parameters: userType(String)
2019-03-21 13:39:53 -<==      Total: 2
2019-03-21 13:39:53 -耗时 : 8
2019-03-21 13:39:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:39:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 13:39:53 -HTTP METHOD : GET
2019-03-21 13:39:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 13:39:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 13:39:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 13:39:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 13:39:53 -<==      Total: 5
2019-03-21 13:39:53 -==>  Preparing: select count(*) from elec_log 
2019-03-21 13:39:53 -==> Parameters: 
2019-03-21 13:39:53 -<==      Total: 1
2019-03-21 13:39:53 -耗时 : 18
2019-03-21 13:39:53 -返回值 : com.bootdo.common.utils.PageUtils@1a1c6ec6
2019-03-21 13:39:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-21 13:39:55 -HTTP METHOD : GET
2019-03-21 13:39:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-21 13:39:55 -参数 : []
2019-03-21 13:39:55 -耗时 : 0
2019-03-21 13:39:55 -返回值 : moneyLog/elecLog/add
2019-03-21 13:39:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:39:55 -HTTP METHOD : GET
2019-03-21 13:39:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:39:55 -参数 : [userType]
2019-03-21 13:39:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:39:55 -==> Parameters: userType(String)
2019-03-21 13:39:55 -<==      Total: 2
2019-03-21 13:39:55 -耗时 : 14
2019-03-21 13:39:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-21 13:40:00 -HTTP METHOD : GET
2019-03-21 13:40:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-21 13:40:00 -参数 : [1, {}]
2019-03-21 13:40:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-21 13:40:00 -==> Parameters: 1(Long)
2019-03-21 13:40:00 -<==      Total: 1
2019-03-21 13:40:00 -耗时 : 12
2019-03-21 13:40:00 -返回值 : moneyLog/elecLog/edit
2019-03-21 13:40:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:40:01 -HTTP METHOD : GET
2019-03-21 13:40:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:01 -参数 : [userType]
2019-03-21 13:40:01 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-21 13:40:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:01 -HTTP METHOD : GET
2019-03-21 13:40:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:01 -参数 : [userOrg]
2019-03-21 13:40:01 -==> Parameters: userType(String)
2019-03-21 13:40:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:01 -==> Parameters: userOrg(String)
2019-03-21 13:40:01 -<==      Total: 2
2019-03-21 13:40:01 -<==      Total: 0
2019-03-21 13:40:01 -耗时 : 6
2019-03-21 13:40:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:01 -耗时 : 5
2019-03-21 13:40:01 -返回值 : []
2019-03-21 13:40:37 -请求地址 : http://localhost:8081/elec/elec
2019-03-21 13:40:37 -HTTP METHOD : GET
2019-03-21 13:40:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-21 13:40:37 -参数 : []
2019-03-21 13:40:37 -耗时 : 1
2019-03-21 13:40:37 -返回值 : elec/elec/elec
2019-03-21 13:40:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:40:38 -HTTP METHOD : GET
2019-03-21 13:40:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:38 -参数 : [userType]
2019-03-21 13:40:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:38 -==> Parameters: userType(String)
2019-03-21 13:40:38 -<==      Total: 2
2019-03-21 13:40:38 -耗时 : 12
2019-03-21 13:40:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:38 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-21 13:40:38 -HTTP METHOD : GET
2019-03-21 13:40:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-21 13:40:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1319c32f]
2019-03-21 13:40:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-21 13:40:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 13:40:38 -<==      Total: 10
2019-03-21 13:40:38 -==>  Preparing: select count(*) from elec 
2019-03-21 13:40:38 -==> Parameters: 
2019-03-21 13:40:38 -<==      Total: 1
2019-03-21 13:40:38 -耗时 : 164
2019-03-21 13:40:38 -返回值 : com.bootdo.common.utils.PageUtils@36a0e972
2019-03-21 13:40:45 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-21 13:40:45 -HTTP METHOD : GET
2019-03-21 13:40:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 13:40:45 -参数 : [1, {}]
2019-03-21 13:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 13:40:45 -==> Parameters: 1(Long)
2019-03-21 13:40:45 -<==      Total: 1
2019-03-21 13:40:45 -耗时 : 10
2019-03-21 13:40:45 -返回值 : elec/elec/edit
2019-03-21 13:40:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:40:46 -HTTP METHOD : GET
2019-03-21 13:40:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:46 -参数 : [userType]
2019-03-21 13:40:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 13:40:46 -HTTP METHOD : GET
2019-03-21 13:40:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:46 -参数 : [userState]
2019-03-21 13:40:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:46 -==> Parameters: userState(String)
2019-03-21 13:40:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:46 -==> Parameters: userType(String)
2019-03-21 13:40:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 13:40:46 -HTTP METHOD : GET
2019-03-21 13:40:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:40:46 -参数 : [elecType]
2019-03-21 13:40:46 -<==      Total: 2
2019-03-21 13:40:46 -耗时 : 4
2019-03-21 13:40:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:46 -<==      Total: 2
2019-03-21 13:40:46 -耗时 : 6
2019-03-21 13:40:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:40:46 -==> Parameters: elecType(String)
2019-03-21 13:40:46 -<==      Total: 2
2019-03-21 13:40:46 -耗时 : 15
2019-03-21 13:40:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:40:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:40:48 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 13:40:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-21 13:40:48.584(Timestamp)
2019-03-21 13:40:48 -<==    Updates: 1
2019-03-21 13:41:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1558]
2019-03-21 13:41:40 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-21 13:41:40 -HTTP METHOD : GET
2019-03-21 13:41:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-21 13:41:40 -参数 : []
2019-03-21 13:41:40 -耗时 : 1
2019-03-21 13:41:40 -返回值 : elec/elec/add
2019-03-21 13:41:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:41:41 -HTTP METHOD : GET
2019-03-21 13:41:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:41 -参数 : [userType]
2019-03-21 13:41:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:41 -==> Parameters: userType(String)
2019-03-21 13:41:41 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 13:41:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 13:41:41 -HTTP METHOD : GET
2019-03-21 13:41:41 -HTTP METHOD : GET
2019-03-21 13:41:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:41 -参数 : [userState]
2019-03-21 13:41:41 -参数 : [elecType]
2019-03-21 13:41:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:41 -==> Parameters: elecType(String)
2019-03-21 13:41:41 -<==      Total: 2
2019-03-21 13:41:41 -<==      Total: 2
2019-03-21 13:41:41 -耗时 : 27
2019-03-21 13:41:41 -耗时 : 24
2019-03-21 13:41:41 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:41 -==> Parameters: userState(String)
2019-03-21 13:41:41 -<==      Total: 2
2019-03-21 13:41:41 -耗时 : 39
2019-03-21 13:41:41 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:46 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-21 13:41:46 -HTTP METHOD : GET
2019-03-21 13:41:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 13:41:46 -参数 : [1, {}]
2019-03-21 13:41:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 13:41:46 -==> Parameters: 1(Long)
2019-03-21 13:41:46 -<==      Total: 1
2019-03-21 13:41:46 -耗时 : 75
2019-03-21 13:41:46 -返回值 : elec/elec/edit
2019-03-21 13:41:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:41:46 -HTTP METHOD : GET
2019-03-21 13:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:46 -参数 : [userType]
2019-03-21 13:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 13:41:46 -HTTP METHOD : GET
2019-03-21 13:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:46 -参数 : [userState]
2019-03-21 13:41:46 -==> Parameters: userType(String)
2019-03-21 13:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:46 -==> Parameters: userState(String)
2019-03-21 13:41:46 -<==      Total: 2
2019-03-21 13:41:46 -<==      Total: 2
2019-03-21 13:41:46 -耗时 : 5
2019-03-21 13:41:46 -耗时 : 4
2019-03-21 13:41:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 13:41:46 -HTTP METHOD : GET
2019-03-21 13:41:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:41:46 -参数 : [elecType]
2019-03-21 13:41:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:41:46 -==> Parameters: elecType(String)
2019-03-21 13:41:46 -<==      Total: 2
2019-03-21 13:41:46 -耗时 : 7
2019-03-21 13:41:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:41:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:41:54 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 13:41:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-21 13:41:54.657(Timestamp)
2019-03-21 13:41:54 -<==    Updates: 1
2019-03-21 13:50:58 -请求地址 : http://localhost:8081/index
2019-03-21 13:50:58 -HTTP METHOD : GET
2019-03-21 13:50:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 13:50:58 -参数 : [{}]
2019-03-21 13:50:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 13:50:58 -==> Parameters: 1(Long)
2019-03-21 13:50:58 -<==      Total: 46
2019-03-21 13:50:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 13:50:58 -==> Parameters: 138(Long)
2019-03-21 13:50:58 -<==      Total: 1
2019-03-21 13:50:58 -耗时 : 70
2019-03-21 13:50:58 -返回值 : index_v1
2019-03-21 13:50:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:50:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 13:50:58.505(Timestamp)
2019-03-21 13:50:58 -<==    Updates: 1
2019-03-21 13:50:58 -请求地址 : http://localhost:8081/main
2019-03-21 13:50:58 -HTTP METHOD : GET
2019-03-21 13:50:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 13:50:58 -参数 : []
2019-03-21 13:50:58 -耗时 : 2
2019-03-21 13:50:58 -返回值 : main
2019-03-21 13:50:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 13:50:59 -HTTP METHOD : GET
2019-03-21 13:50:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 13:50:59 -参数 : []
2019-03-21 13:50:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 13:50:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 13:50:59 -<==      Total: 0
2019-03-21 13:50:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 13:50:59 -==> Parameters: 1(Long), 0(String)
2019-03-21 13:50:59 -<==      Total: 1
2019-03-21 13:50:59 -耗时 : 12
2019-03-21 13:50:59 -返回值 : com.bootdo.common.utils.PageUtils@6b0f3a67
2019-03-21 13:50:59 -请求地址 : http://localhost:8081/main
2019-03-21 13:50:59 -HTTP METHOD : GET
2019-03-21 13:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 13:50:59 -参数 : []
2019-03-21 13:50:59 -耗时 : 1
2019-03-21 13:50:59 -返回值 : main
2019-03-21 13:51:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 13:51:00 -==> Parameters: 1(Long)
2019-03-21 13:51:01 -<==      Total: 90
2019-03-21 13:51:01 -请求地址 : http://localhost:8081/elec/elec
2019-03-21 13:51:01 -HTTP METHOD : GET
2019-03-21 13:51:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-21 13:51:01 -参数 : []
2019-03-21 13:51:01 -耗时 : 0
2019-03-21 13:51:01 -返回值 : elec/elec/elec
2019-03-21 13:51:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:51:01 -HTTP METHOD : GET
2019-03-21 13:51:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:51:01 -参数 : [userType]
2019-03-21 13:51:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:51:01 -==> Parameters: userType(String)
2019-03-21 13:51:01 -<==      Total: 2
2019-03-21 13:51:01 -耗时 : 4
2019-03-21 13:51:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:51:01 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-21 13:51:01 -HTTP METHOD : GET
2019-03-21 13:51:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-21 13:51:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@474546c4]
2019-03-21 13:51:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-21 13:51:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 13:51:01 -<==      Total: 10
2019-03-21 13:51:01 -==>  Preparing: select count(*) from elec 
2019-03-21 13:51:01 -==> Parameters: 
2019-03-21 13:51:01 -<==      Total: 1
2019-03-21 13:51:01 -耗时 : 26
2019-03-21 13:51:01 -返回值 : com.bootdo.common.utils.PageUtils@68d05a2e
2019-03-21 13:51:04 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-21 13:51:04 -HTTP METHOD : GET
2019-03-21 13:51:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 13:51:04 -参数 : [2, {}]
2019-03-21 13:51:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 13:51:04 -==> Parameters: 2(Long)
2019-03-21 13:51:04 -<==      Total: 1
2019-03-21 13:51:04 -耗时 : 5
2019-03-21 13:51:04 -返回值 : elec/elec/edit
2019-03-21 13:51:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:51:05 -HTTP METHOD : GET
2019-03-21 13:51:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:51:05 -参数 : [userType]
2019-03-21 13:51:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:51:05 -==> Parameters: userType(String)
2019-03-21 13:51:05 -<==      Total: 2
2019-03-21 13:51:05 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 13:51:05 -HTTP METHOD : GET
2019-03-21 13:51:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:51:05 -耗时 : 4
2019-03-21 13:51:05 -参数 : [userState]
2019-03-21 13:51:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:51:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:51:05 -==> Parameters: userState(String)
2019-03-21 13:51:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 13:51:05 -HTTP METHOD : GET
2019-03-21 13:51:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:51:05 -参数 : [elecType]
2019-03-21 13:51:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:51:05 -<==      Total: 2
2019-03-21 13:51:05 -==> Parameters: elecType(String)
2019-03-21 13:51:05 -耗时 : 5
2019-03-21 13:51:05 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:51:05 -<==      Total: 2
2019-03-21 13:51:05 -耗时 : 6
2019-03-21 13:51:05 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:51:09 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 13:51:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 13:51:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-21 13:51:09.499(Timestamp)
2019-03-21 13:51:09 -<==    Updates: 1
2019-03-21 13:55:09 -请求地址 : http://localhost:8081/print/print
2019-03-21 13:55:09 -HTTP METHOD : GET
2019-03-21 13:55:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 13:55:09 -参数 : []
2019-03-21 13:55:09 -耗时 : 1
2019-03-21 13:55:09 -返回值 : print/print/print
2019-03-21 13:55:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:55:09 -HTTP METHOD : GET
2019-03-21 13:55:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:55:09 -参数 : [userType]
2019-03-21 13:55:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:55:09 -==> Parameters: userType(String)
2019-03-21 13:55:09 -<==      Total: 2
2019-03-21 13:55:09 -耗时 : 21
2019-03-21 13:55:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:55:09 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 13:55:09 -HTTP METHOD : GET
2019-03-21 13:55:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 13:55:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 13:55:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 13:55:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 13:55:09 -<==      Total: 3
2019-03-21 13:55:09 -==>  Preparing: select count(*) from print 
2019-03-21 13:55:09 -==> Parameters: 
2019-03-21 13:55:09 -<==      Total: 1
2019-03-21 13:55:09 -耗时 : 131
2019-03-21 13:55:09 -返回值 : com.bootdo.common.utils.PageUtils@11978274
2019-03-21 13:55:11 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-21 13:55:11 -HTTP METHOD : GET
2019-03-21 13:55:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-21 13:55:11 -参数 : [1, {}]
2019-03-21 13:55:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-21 13:55:11 -==> Parameters: 1(Long)
2019-03-21 13:55:11 -<==      Total: 1
2019-03-21 13:55:11 -耗时 : 8
2019-03-21 13:55:11 -返回值 : print/print/printEdit
2019-03-21 13:55:59 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-21 13:55:59 -HTTP METHOD : GET
2019-03-21 13:55:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-21 13:55:59 -参数 : [1, {}]
2019-03-21 13:55:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-21 13:55:59 -==> Parameters: 1(Long)
2019-03-21 13:55:59 -<==      Total: 1
2019-03-21 13:55:59 -耗时 : 5
2019-03-21 13:55:59 -返回值 : print/print/edit
2019-03-21 13:55:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:55:59 -HTTP METHOD : GET
2019-03-21 13:55:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:55:59 -参数 : [userType]
2019-03-21 13:55:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:55:59 -==> Parameters: userType(String)
2019-03-21 13:55:59 -<==      Total: 2
2019-03-21 13:55:59 -耗时 : 5
2019-03-21 13:55:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:56:02 -请求地址 : http://localhost:8081/print/print/update
2019-03-21 13:56:02 -HTTP METHOD : POST
2019-03-21 13:56:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.update
2019-03-21 13:56:02 -参数 : [com.bootdo.print.domain.PrintDO@73efa1c0]
2019-03-21 13:56:02 -==>  Preparing: update print SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_price` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `elec_money` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `heat_money` = ?, `water_price` = ?, `water_sum` = ?, `water_money` = ?, `cost_poper` = ?, `print_state` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-03-21 13:56:02 -==> Parameters: 1-0001(String), 张三(String), A(String), 2(Long), 100(String), 200(String), 1(Integer), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 100.00(BigDecimal), 账务(String), 0(String), 2019-03-21 13:56:02.779(Timestamp), 1(Long), (String), 1(Long)
2019-03-21 13:56:04 -<==    Updates: 1
2019-03-21 13:56:04 -耗时 : 1237
2019-03-21 13:56:04 -返回值 : {msg=操作成功, code=0}
2019-03-21 13:56:04 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 13:56:04 -HTTP METHOD : GET
2019-03-21 13:56:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 13:56:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 13:56:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 13:56:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 13:56:04 -<==      Total: 3
2019-03-21 13:56:04 -==>  Preparing: select count(*) from print 
2019-03-21 13:56:04 -==> Parameters: 
2019-03-21 13:56:04 -<==      Total: 1
2019-03-21 13:56:04 -耗时 : 12
2019-03-21 13:56:04 -返回值 : com.bootdo.common.utils.PageUtils@5dfc25a
2019-03-21 13:56:06 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-21 13:56:06 -HTTP METHOD : GET
2019-03-21 13:56:06 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-21 13:56:06 -参数 : [1, {}]
2019-03-21 13:56:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-21 13:56:06 -==> Parameters: 1(Long)
2019-03-21 13:56:06 -<==      Total: 1
2019-03-21 13:56:06 -耗时 : 5
2019-03-21 13:56:06 -返回值 : print/print/edit
2019-03-21 13:56:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:56:06 -HTTP METHOD : GET
2019-03-21 13:56:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:56:06 -参数 : [userType]
2019-03-21 13:56:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:56:06 -==> Parameters: userType(String)
2019-03-21 13:56:06 -<==      Total: 2
2019-03-21 13:56:06 -耗时 : 5
2019-03-21 13:56:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 13:56:18 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 13:56:18 -HTTP METHOD : GET
2019-03-21 13:56:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 13:56:18 -参数 : []
2019-03-21 13:56:18 -耗时 : 0
2019-03-21 13:56:18 -返回值 : print/print/add
2019-03-21 13:56:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 13:56:18 -HTTP METHOD : GET
2019-03-21 13:56:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 13:56:18 -参数 : [userType]
2019-03-21 13:56:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 13:56:18 -==> Parameters: userType(String)
2019-03-21 13:56:18 -<==      Total: 2
2019-03-21 13:56:18 -耗时 : 5
2019-03-21 13:56:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:11:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1991]
2019-03-21 14:15:28 -请求地址 : http://localhost:8081/index
2019-03-21 14:15:28 -HTTP METHOD : GET
2019-03-21 14:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:15:28 -参数 : [{}]
2019-03-21 14:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:15:28 -==> Parameters: 1(Long)
2019-03-21 14:15:28 -<==      Total: 46
2019-03-21 14:15:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:15:28 -==> Parameters: 138(Long)
2019-03-21 14:15:28 -<==      Total: 1
2019-03-21 14:15:28 -耗时 : 198
2019-03-21 14:15:28 -返回值 : index_v1
2019-03-21 14:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:15:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 198(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:15:28.723(Timestamp)
2019-03-21 14:15:29 -<==    Updates: 1
2019-03-21 14:15:29 -请求地址 : http://localhost:8081/main
2019-03-21 14:15:29 -HTTP METHOD : GET
2019-03-21 14:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:15:29 -参数 : []
2019-03-21 14:15:29 -耗时 : 1
2019-03-21 14:15:29 -返回值 : main
2019-03-21 14:15:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:15:30 -HTTP METHOD : GET
2019-03-21 14:15:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:15:30 -参数 : []
2019-03-21 14:15:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:15:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:15:30 -请求地址 : http://localhost:8081/main
2019-03-21 14:15:30 -HTTP METHOD : GET
2019-03-21 14:15:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:15:30 -参数 : []
2019-03-21 14:15:30 -耗时 : 1
2019-03-21 14:15:30 -返回值 : main
2019-03-21 14:15:30 -<==      Total: 0
2019-03-21 14:15:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:15:30 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:15:30 -<==      Total: 1
2019-03-21 14:15:30 -耗时 : 218
2019-03-21 14:15:30 -返回值 : com.bootdo.common.utils.PageUtils@57f93f21
2019-03-21 14:15:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 14:15:34 -==> Parameters: 1(Long)
2019-03-21 14:15:34 -<==      Total: 90
2019-03-21 14:15:34 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:15:34 -HTTP METHOD : GET
2019-03-21 14:15:34 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:15:34 -参数 : []
2019-03-21 14:15:34 -耗时 : 0
2019-03-21 14:15:34 -返回值 : print/print/print
2019-03-21 14:15:35 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:15:35 -HTTP METHOD : GET
2019-03-21 14:15:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:15:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:15:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:15:35 -HTTP METHOD : GET
2019-03-21 14:15:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:15:35 -参数 : [userType]
2019-03-21 14:15:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:15:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:15:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:15:35 -==> Parameters: userType(String)
2019-03-21 14:15:35 -<==      Total: 2
2019-03-21 14:15:35 -耗时 : 6
2019-03-21 14:15:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:15:35 -<==      Total: 3
2019-03-21 14:15:35 -==>  Preparing: select count(*) from print 
2019-03-21 14:15:35 -==> Parameters: 
2019-03-21 14:15:35 -<==      Total: 1
2019-03-21 14:15:35 -耗时 : 13
2019-03-21 14:15:35 -返回值 : com.bootdo.common.utils.PageUtils@a1633c2
2019-03-21 14:15:37 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:15:37 -HTTP METHOD : GET
2019-03-21 14:15:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:15:37 -参数 : []
2019-03-21 14:15:37 -耗时 : 1
2019-03-21 14:15:37 -返回值 : print/print/add
2019-03-21 14:15:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:15:39 -HTTP METHOD : GET
2019-03-21 14:15:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:15:39 -参数 : [userType]
2019-03-21 14:15:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:15:39 -==> Parameters: userType(String)
2019-03-21 14:15:39 -<==      Total: 2
2019-03-21 14:15:39 -耗时 : 4
2019-03-21 14:15:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:21:17 -请求地址 : http://localhost:8081/index
2019-03-21 14:21:17 -HTTP METHOD : GET
2019-03-21 14:21:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:21:17 -参数 : [{}]
2019-03-21 14:21:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:21:17 -==> Parameters: 1(Long)
2019-03-21 14:21:17 -<==      Total: 46
2019-03-21 14:21:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:21:17 -==> Parameters: 138(Long)
2019-03-21 14:21:17 -<==      Total: 1
2019-03-21 14:21:17 -耗时 : 32
2019-03-21 14:21:17 -返回值 : index_v1
2019-03-21 14:21:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:21:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:21:17.856(Timestamp)
2019-03-21 14:21:17 -请求地址 : http://localhost:8081/main
2019-03-21 14:21:17 -HTTP METHOD : GET
2019-03-21 14:21:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:21:17 -参数 : []
2019-03-21 14:21:17 -耗时 : 1
2019-03-21 14:21:17 -返回值 : main
2019-03-21 14:21:18 -<==    Updates: 1
2019-03-21 14:21:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:21:18 -HTTP METHOD : GET
2019-03-21 14:21:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:21:18 -参数 : []
2019-03-21 14:21:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:21:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:21:18 -<==      Total: 0
2019-03-21 14:21:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:21:18 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:21:18 -<==      Total: 1
2019-03-21 14:21:18 -耗时 : 8
2019-03-21 14:21:18 -返回值 : com.bootdo.common.utils.PageUtils@e7e793d
2019-03-21 14:21:18 -请求地址 : http://localhost:8081/main
2019-03-21 14:21:18 -HTTP METHOD : GET
2019-03-21 14:21:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:21:18 -参数 : []
2019-03-21 14:21:18 -耗时 : 0
2019-03-21 14:21:18 -返回值 : main
2019-03-21 14:21:22 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:21:22 -HTTP METHOD : GET
2019-03-21 14:21:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:21:22 -参数 : []
2019-03-21 14:21:22 -耗时 : 1
2019-03-21 14:21:22 -返回值 : print/print/print
2019-03-21 14:21:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:21:23 -HTTP METHOD : GET
2019-03-21 14:21:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:21:23 -参数 : [userType]
2019-03-21 14:21:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:21:23 -==> Parameters: userType(String)
2019-03-21 14:21:23 -<==      Total: 2
2019-03-21 14:21:23 -耗时 : 6
2019-03-21 14:21:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:21:23 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:21:23 -HTTP METHOD : GET
2019-03-21 14:21:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:21:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:21:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:21:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:21:23 -<==      Total: 3
2019-03-21 14:21:23 -==>  Preparing: select count(*) from print 
2019-03-21 14:21:23 -==> Parameters: 
2019-03-21 14:21:23 -<==      Total: 1
2019-03-21 14:21:23 -耗时 : 10
2019-03-21 14:21:23 -返回值 : com.bootdo.common.utils.PageUtils@2e32eddd
2019-03-21 14:21:24 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:21:24 -HTTP METHOD : GET
2019-03-21 14:21:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:21:24 -参数 : []
2019-03-21 14:21:24 -耗时 : 0
2019-03-21 14:21:24 -返回值 : print/print/add
2019-03-21 14:21:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:21:25 -HTTP METHOD : GET
2019-03-21 14:21:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:21:25 -参数 : [userType]
2019-03-21 14:21:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:21:25 -==> Parameters: userType(String)
2019-03-21 14:21:25 -<==      Total: 2
2019-03-21 14:21:25 -耗时 : 4
2019-03-21 14:21:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:22:02 -请求地址 : http://localhost:8081/index
2019-03-21 14:22:02 -HTTP METHOD : GET
2019-03-21 14:22:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:22:02 -参数 : [{}]
2019-03-21 14:22:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:22:02 -==> Parameters: 1(Long)
2019-03-21 14:22:02 -<==      Total: 46
2019-03-21 14:22:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:22:02 -==> Parameters: 138(Long)
2019-03-21 14:22:02 -<==      Total: 1
2019-03-21 14:22:02 -耗时 : 26
2019-03-21 14:22:02 -返回值 : index_v1
2019-03-21 14:22:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:22:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:22:02.07(Timestamp)
2019-03-21 14:22:02 -<==    Updates: 1
2019-03-21 14:22:02 -请求地址 : http://localhost:8081/main
2019-03-21 14:22:02 -HTTP METHOD : GET
2019-03-21 14:22:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:22:02 -参数 : []
2019-03-21 14:22:02 -耗时 : 1
2019-03-21 14:22:02 -返回值 : main
2019-03-21 14:22:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:22:02 -HTTP METHOD : GET
2019-03-21 14:22:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:22:02 -参数 : []
2019-03-21 14:22:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:22:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:22:02 -<==      Total: 0
2019-03-21 14:22:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:22:02 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:22:02 -<==      Total: 1
2019-03-21 14:22:02 -耗时 : 32
2019-03-21 14:22:02 -返回值 : com.bootdo.common.utils.PageUtils@73b2000b
2019-03-21 14:22:02 -请求地址 : http://localhost:8081/main
2019-03-21 14:22:02 -HTTP METHOD : GET
2019-03-21 14:22:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:22:02 -参数 : []
2019-03-21 14:22:02 -耗时 : 1
2019-03-21 14:22:02 -返回值 : main
2019-03-21 14:22:05 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:22:05 -HTTP METHOD : GET
2019-03-21 14:22:05 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:22:05 -参数 : []
2019-03-21 14:22:05 -耗时 : 1
2019-03-21 14:22:05 -返回值 : print/print/print
2019-03-21 14:22:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:22:07 -HTTP METHOD : GET
2019-03-21 14:22:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:22:07 -参数 : [userType]
2019-03-21 14:22:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:22:07 -==> Parameters: userType(String)
2019-03-21 14:22:07 -<==      Total: 2
2019-03-21 14:22:07 -耗时 : 6
2019-03-21 14:22:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:22:07 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:22:07 -HTTP METHOD : GET
2019-03-21 14:22:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:22:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:22:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:22:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:22:07 -<==      Total: 3
2019-03-21 14:22:07 -==>  Preparing: select count(*) from print 
2019-03-21 14:22:07 -==> Parameters: 
2019-03-21 14:22:07 -<==      Total: 1
2019-03-21 14:22:07 -耗时 : 131
2019-03-21 14:22:07 -返回值 : com.bootdo.common.utils.PageUtils@4419c77
2019-03-21 14:22:12 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:22:12 -HTTP METHOD : GET
2019-03-21 14:22:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:22:12 -参数 : []
2019-03-21 14:22:12 -耗时 : 1
2019-03-21 14:22:12 -返回值 : print/print/add
2019-03-21 14:22:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:22:13 -HTTP METHOD : GET
2019-03-21 14:22:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:22:13 -参数 : [userType]
2019-03-21 14:22:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:22:13 -==> Parameters: userType(String)
2019-03-21 14:22:13 -<==      Total: 2
2019-03-21 14:22:13 -耗时 : 8
2019-03-21 14:22:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:22:33 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:22:33 -HTTP METHOD : GET
2019-03-21 14:22:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:22:33 -参数 : []
2019-03-21 14:22:33 -耗时 : 1
2019-03-21 14:22:33 -返回值 : print/print/add
2019-03-21 14:22:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:22:34 -HTTP METHOD : GET
2019-03-21 14:22:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:22:34 -参数 : [userType]
2019-03-21 14:22:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:22:34 -==> Parameters: userType(String)
2019-03-21 14:22:34 -<==      Total: 2
2019-03-21 14:22:34 -耗时 : 5
2019-03-21 14:22:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:22:42 -Validating all active sessions...
2019-03-21 14:22:42 -Finished session validation.  No sessions were stopped.
2019-03-21 14:23:49 -请求地址 : http://localhost:8081/index
2019-03-21 14:23:49 -HTTP METHOD : GET
2019-03-21 14:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:23:49 -参数 : [{}]
2019-03-21 14:23:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:23:49 -==> Parameters: 1(Long)
2019-03-21 14:23:49 -<==      Total: 46
2019-03-21 14:23:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:23:49 -==> Parameters: 138(Long)
2019-03-21 14:23:49 -<==      Total: 1
2019-03-21 14:23:49 -耗时 : 24
2019-03-21 14:23:49 -返回值 : index_v1
2019-03-21 14:23:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:23:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:23:49.678(Timestamp)
2019-03-21 14:23:49 -<==    Updates: 1
2019-03-21 14:23:49 -请求地址 : http://localhost:8081/main
2019-03-21 14:23:49 -HTTP METHOD : GET
2019-03-21 14:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:23:49 -参数 : []
2019-03-21 14:23:49 -耗时 : 2
2019-03-21 14:23:49 -返回值 : main
2019-03-21 14:23:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:23:50 -HTTP METHOD : GET
2019-03-21 14:23:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:23:50 -参数 : []
2019-03-21 14:23:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:23:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:23:50 -<==      Total: 0
2019-03-21 14:23:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:23:50 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:23:50 -<==      Total: 1
2019-03-21 14:23:50 -耗时 : 12
2019-03-21 14:23:50 -返回值 : com.bootdo.common.utils.PageUtils@4015397e
2019-03-21 14:23:50 -请求地址 : http://localhost:8081/main
2019-03-21 14:23:50 -HTTP METHOD : GET
2019-03-21 14:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:23:50 -参数 : []
2019-03-21 14:23:50 -耗时 : 0
2019-03-21 14:23:50 -返回值 : main
2019-03-21 14:23:53 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:23:53 -HTTP METHOD : GET
2019-03-21 14:23:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:23:53 -参数 : []
2019-03-21 14:23:53 -耗时 : 1
2019-03-21 14:23:53 -返回值 : print/print/print
2019-03-21 14:23:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:23:53 -HTTP METHOD : GET
2019-03-21 14:23:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:23:53 -参数 : [userType]
2019-03-21 14:23:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:23:53 -==> Parameters: userType(String)
2019-03-21 14:23:53 -<==      Total: 2
2019-03-21 14:23:53 -耗时 : 4
2019-03-21 14:23:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:23:53 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:23:53 -HTTP METHOD : GET
2019-03-21 14:23:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:23:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:23:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:23:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:23:53 -<==      Total: 3
2019-03-21 14:23:53 -==>  Preparing: select count(*) from print 
2019-03-21 14:23:53 -==> Parameters: 
2019-03-21 14:23:53 -<==      Total: 1
2019-03-21 14:23:53 -耗时 : 9
2019-03-21 14:23:53 -返回值 : com.bootdo.common.utils.PageUtils@64208d47
2019-03-21 14:23:54 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:23:54 -HTTP METHOD : GET
2019-03-21 14:23:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:23:54 -参数 : []
2019-03-21 14:23:54 -耗时 : 2
2019-03-21 14:23:54 -返回值 : print/print/add
2019-03-21 14:23:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:23:54 -HTTP METHOD : GET
2019-03-21 14:23:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:23:54 -参数 : [userType]
2019-03-21 14:23:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:23:54 -==> Parameters: userType(String)
2019-03-21 14:23:54 -<==      Total: 2
2019-03-21 14:23:54 -耗时 : 7
2019-03-21 14:23:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:29:58 -请求地址 : http://localhost:8081/index
2019-03-21 14:29:58 -HTTP METHOD : GET
2019-03-21 14:29:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:29:58 -参数 : [{}]
2019-03-21 14:29:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:29:58 -==> Parameters: 1(Long)
2019-03-21 14:29:58 -<==      Total: 46
2019-03-21 14:29:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:29:58 -==> Parameters: 138(Long)
2019-03-21 14:29:58 -<==      Total: 1
2019-03-21 14:29:58 -耗时 : 22
2019-03-21 14:29:58 -返回值 : index_v1
2019-03-21 14:29:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:29:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:29:58.68(Timestamp)
2019-03-21 14:29:58 -<==    Updates: 1
2019-03-21 14:29:58 -请求地址 : http://localhost:8081/main
2019-03-21 14:29:58 -HTTP METHOD : GET
2019-03-21 14:29:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:29:58 -参数 : []
2019-03-21 14:29:58 -耗时 : 0
2019-03-21 14:29:58 -返回值 : main
2019-03-21 14:29:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:29:59 -HTTP METHOD : GET
2019-03-21 14:29:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:29:59 -参数 : []
2019-03-21 14:29:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:29:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:29:59 -<==      Total: 0
2019-03-21 14:29:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:29:59 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:29:59 -<==      Total: 1
2019-03-21 14:29:59 -耗时 : 9
2019-03-21 14:29:59 -返回值 : com.bootdo.common.utils.PageUtils@4a80be6a
2019-03-21 14:29:59 -请求地址 : http://localhost:8081/main
2019-03-21 14:29:59 -HTTP METHOD : GET
2019-03-21 14:29:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:29:59 -参数 : []
2019-03-21 14:29:59 -耗时 : 1
2019-03-21 14:29:59 -返回值 : main
2019-03-21 14:30:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 14:30:01 -==> Parameters: 1(Long)
2019-03-21 14:30:01 -<==      Total: 90
2019-03-21 14:30:01 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:30:01 -HTTP METHOD : GET
2019-03-21 14:30:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:30:01 -参数 : []
2019-03-21 14:30:01 -耗时 : 1
2019-03-21 14:30:01 -返回值 : print/print/print
2019-03-21 14:30:02 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:30:02 -HTTP METHOD : GET
2019-03-21 14:30:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:30:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:30:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:30:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:30:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:30:02 -HTTP METHOD : GET
2019-03-21 14:30:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:30:02 -参数 : [userType]
2019-03-21 14:30:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:30:02 -==> Parameters: userType(String)
2019-03-21 14:30:02 -<==      Total: 3
2019-03-21 14:30:02 -==>  Preparing: select count(*) from print 
2019-03-21 14:30:02 -==> Parameters: 
2019-03-21 14:30:02 -<==      Total: 2
2019-03-21 14:30:02 -耗时 : 10
2019-03-21 14:30:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:30:02 -<==      Total: 1
2019-03-21 14:30:02 -耗时 : 74
2019-03-21 14:30:02 -返回值 : com.bootdo.common.utils.PageUtils@124e1299
2019-03-21 14:30:04 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:30:04 -HTTP METHOD : GET
2019-03-21 14:30:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:30:04 -参数 : []
2019-03-21 14:30:04 -耗时 : 0
2019-03-21 14:30:04 -返回值 : print/print/add
2019-03-21 14:30:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:30:04 -HTTP METHOD : GET
2019-03-21 14:30:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:30:04 -参数 : [userType]
2019-03-21 14:30:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:30:04 -==> Parameters: userType(String)
2019-03-21 14:30:04 -<==      Total: 2
2019-03-21 14:30:04 -耗时 : 6
2019-03-21 14:30:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:32:29 -请求地址 : http://localhost:8081/index
2019-03-21 14:32:29 -HTTP METHOD : GET
2019-03-21 14:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:32:29 -参数 : [{}]
2019-03-21 14:32:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:32:29 -==> Parameters: 1(Long)
2019-03-21 14:32:29 -<==      Total: 46
2019-03-21 14:32:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:32:29 -==> Parameters: 138(Long)
2019-03-21 14:32:29 -<==      Total: 1
2019-03-21 14:32:29 -耗时 : 36
2019-03-21 14:32:29 -返回值 : index_v1
2019-03-21 14:32:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:32:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:32:29.546(Timestamp)
2019-03-21 14:32:29 -<==    Updates: 1
2019-03-21 14:32:29 -请求地址 : http://localhost:8081/main
2019-03-21 14:32:29 -HTTP METHOD : GET
2019-03-21 14:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:32:29 -参数 : []
2019-03-21 14:32:29 -耗时 : 0
2019-03-21 14:32:29 -返回值 : main
2019-03-21 14:32:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:32:30 -HTTP METHOD : GET
2019-03-21 14:32:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:32:30 -参数 : []
2019-03-21 14:32:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:32:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:32:30 -<==      Total: 0
2019-03-21 14:32:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:32:30 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:32:30 -<==      Total: 1
2019-03-21 14:32:30 -耗时 : 9
2019-03-21 14:32:30 -返回值 : com.bootdo.common.utils.PageUtils@1d883147
2019-03-21 14:32:30 -请求地址 : http://localhost:8081/main
2019-03-21 14:32:30 -HTTP METHOD : GET
2019-03-21 14:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:32:30 -参数 : []
2019-03-21 14:32:30 -耗时 : 1
2019-03-21 14:32:30 -返回值 : main
2019-03-21 14:32:37 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:32:37 -HTTP METHOD : GET
2019-03-21 14:32:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:32:37 -参数 : []
2019-03-21 14:32:37 -耗时 : 0
2019-03-21 14:32:37 -返回值 : print/print/print
2019-03-21 14:32:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:32:38 -HTTP METHOD : GET
2019-03-21 14:32:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:32:38 -参数 : [userType]
2019-03-21 14:32:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:32:38 -==> Parameters: userType(String)
2019-03-21 14:32:38 -<==      Total: 2
2019-03-21 14:32:38 -耗时 : 5
2019-03-21 14:32:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:32:38 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:32:38 -HTTP METHOD : GET
2019-03-21 14:32:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:32:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:32:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:32:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:32:38 -<==      Total: 3
2019-03-21 14:32:38 -==>  Preparing: select count(*) from print 
2019-03-21 14:32:38 -==> Parameters: 
2019-03-21 14:32:38 -<==      Total: 1
2019-03-21 14:32:38 -耗时 : 11
2019-03-21 14:32:38 -返回值 : com.bootdo.common.utils.PageUtils@b4cd191
2019-03-21 14:32:39 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:32:39 -HTTP METHOD : GET
2019-03-21 14:32:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:32:39 -参数 : []
2019-03-21 14:32:39 -耗时 : 1
2019-03-21 14:32:39 -返回值 : print/print/add
2019-03-21 14:32:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:32:40 -HTTP METHOD : GET
2019-03-21 14:32:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:32:40 -参数 : [userType]
2019-03-21 14:32:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:32:40 -==> Parameters: userType(String)
2019-03-21 14:32:40 -<==      Total: 2
2019-03-21 14:32:40 -耗时 : 6
2019-03-21 14:32:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:33:13 -请求地址 : http://localhost:8081/index
2019-03-21 14:33:13 -HTTP METHOD : GET
2019-03-21 14:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:33:13 -参数 : [{}]
2019-03-21 14:33:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:33:13 -==> Parameters: 1(Long)
2019-03-21 14:33:13 -<==      Total: 46
2019-03-21 14:33:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:33:13 -==> Parameters: 138(Long)
2019-03-21 14:33:13 -<==      Total: 1
2019-03-21 14:33:13 -耗时 : 21
2019-03-21 14:33:13 -返回值 : index_v1
2019-03-21 14:33:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:33:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:33:13.946(Timestamp)
2019-03-21 14:33:14 -<==    Updates: 1
2019-03-21 14:33:14 -请求地址 : http://localhost:8081/main
2019-03-21 14:33:14 -HTTP METHOD : GET
2019-03-21 14:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:33:14 -参数 : []
2019-03-21 14:33:14 -耗时 : 0
2019-03-21 14:33:14 -返回值 : main
2019-03-21 14:33:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:33:14 -HTTP METHOD : GET
2019-03-21 14:33:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:33:14 -参数 : []
2019-03-21 14:33:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:33:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:33:14 -<==      Total: 0
2019-03-21 14:33:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:33:14 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:33:14 -<==      Total: 1
2019-03-21 14:33:14 -耗时 : 7
2019-03-21 14:33:14 -返回值 : com.bootdo.common.utils.PageUtils@738b55c8
2019-03-21 14:33:14 -请求地址 : http://localhost:8081/main
2019-03-21 14:33:14 -HTTP METHOD : GET
2019-03-21 14:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:33:14 -参数 : []
2019-03-21 14:33:14 -耗时 : 0
2019-03-21 14:33:14 -返回值 : main
2019-03-21 14:33:18 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:33:18 -HTTP METHOD : GET
2019-03-21 14:33:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:33:18 -参数 : []
2019-03-21 14:33:18 -耗时 : 1
2019-03-21 14:33:18 -返回值 : print/print/print
2019-03-21 14:33:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:33:18 -HTTP METHOD : GET
2019-03-21 14:33:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:33:18 -参数 : [userType]
2019-03-21 14:33:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:33:18 -==> Parameters: userType(String)
2019-03-21 14:33:18 -<==      Total: 2
2019-03-21 14:33:18 -耗时 : 3
2019-03-21 14:33:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:33:18 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:33:18 -HTTP METHOD : GET
2019-03-21 14:33:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:33:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:33:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:33:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:33:18 -<==      Total: 3
2019-03-21 14:33:18 -==>  Preparing: select count(*) from print 
2019-03-21 14:33:18 -==> Parameters: 
2019-03-21 14:33:18 -<==      Total: 1
2019-03-21 14:33:18 -耗时 : 6
2019-03-21 14:33:18 -返回值 : com.bootdo.common.utils.PageUtils@366d8f1a
2019-03-21 14:33:19 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:33:19 -HTTP METHOD : GET
2019-03-21 14:33:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:33:19 -参数 : []
2019-03-21 14:33:19 -耗时 : 1
2019-03-21 14:33:19 -返回值 : print/print/add
2019-03-21 14:33:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:33:19 -HTTP METHOD : GET
2019-03-21 14:33:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:33:19 -参数 : [userType]
2019-03-21 14:33:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:33:19 -==> Parameters: userType(String)
2019-03-21 14:33:19 -<==      Total: 2
2019-03-21 14:33:19 -耗时 : 3
2019-03-21 14:33:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:34:21 -请求地址 : http://localhost:8081/index
2019-03-21 14:34:21 -HTTP METHOD : GET
2019-03-21 14:34:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:34:21 -参数 : [{}]
2019-03-21 14:34:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:34:21 -==> Parameters: 1(Long)
2019-03-21 14:34:21 -<==      Total: 46
2019-03-21 14:34:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:34:21 -==> Parameters: 138(Long)
2019-03-21 14:34:21 -<==      Total: 1
2019-03-21 14:34:21 -耗时 : 24
2019-03-21 14:34:21 -返回值 : index_v1
2019-03-21 14:34:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:34:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:34:21.633(Timestamp)
2019-03-21 14:34:21 -请求地址 : http://localhost:8081/main
2019-03-21 14:34:21 -HTTP METHOD : GET
2019-03-21 14:34:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:34:21 -参数 : []
2019-03-21 14:34:21 -耗时 : 1
2019-03-21 14:34:21 -返回值 : main
2019-03-21 14:34:21 -<==    Updates: 1
2019-03-21 14:34:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:34:22 -HTTP METHOD : GET
2019-03-21 14:34:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:34:22 -参数 : []
2019-03-21 14:34:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:34:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:34:22 -<==      Total: 0
2019-03-21 14:34:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:34:22 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:34:22 -<==      Total: 1
2019-03-21 14:34:22 -耗时 : 7
2019-03-21 14:34:22 -返回值 : com.bootdo.common.utils.PageUtils@5d6b3af0
2019-03-21 14:34:22 -请求地址 : http://localhost:8081/main
2019-03-21 14:34:22 -HTTP METHOD : GET
2019-03-21 14:34:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:34:22 -参数 : []
2019-03-21 14:34:22 -耗时 : 1
2019-03-21 14:34:22 -返回值 : main
2019-03-21 14:34:24 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:34:24 -HTTP METHOD : GET
2019-03-21 14:34:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:34:24 -参数 : []
2019-03-21 14:34:24 -耗时 : 1
2019-03-21 14:34:24 -返回值 : print/print/print
2019-03-21 14:34:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:34:24 -HTTP METHOD : GET
2019-03-21 14:34:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:34:24 -参数 : [userType]
2019-03-21 14:34:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:34:24 -==> Parameters: userType(String)
2019-03-21 14:34:24 -<==      Total: 2
2019-03-21 14:34:24 -耗时 : 3
2019-03-21 14:34:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:34:24 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:34:24 -HTTP METHOD : GET
2019-03-21 14:34:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:34:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:34:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:34:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:34:24 -<==      Total: 3
2019-03-21 14:34:24 -==>  Preparing: select count(*) from print 
2019-03-21 14:34:24 -==> Parameters: 
2019-03-21 14:34:24 -<==      Total: 1
2019-03-21 14:34:24 -耗时 : 7
2019-03-21 14:34:24 -返回值 : com.bootdo.common.utils.PageUtils@4251c3a8
2019-03-21 14:34:25 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:34:25 -HTTP METHOD : GET
2019-03-21 14:34:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:34:25 -参数 : []
2019-03-21 14:34:25 -耗时 : 1
2019-03-21 14:34:25 -返回值 : print/print/add
2019-03-21 14:34:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:34:25 -HTTP METHOD : GET
2019-03-21 14:34:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:34:25 -参数 : [userType]
2019-03-21 14:34:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:34:25 -==> Parameters: userType(String)
2019-03-21 14:34:25 -<==      Total: 2
2019-03-21 14:34:25 -耗时 : 6
2019-03-21 14:34:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:36:11 -请求地址 : http://localhost:8081/index
2019-03-21 14:36:11 -HTTP METHOD : GET
2019-03-21 14:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:36:11 -参数 : [{}]
2019-03-21 14:36:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:36:11 -==> Parameters: 1(Long)
2019-03-21 14:36:11 -<==      Total: 46
2019-03-21 14:36:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:36:11 -==> Parameters: 138(Long)
2019-03-21 14:36:11 -<==      Total: 1
2019-03-21 14:36:11 -耗时 : 36
2019-03-21 14:36:11 -返回值 : index_v1
2019-03-21 14:36:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:36:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:36:11.08(Timestamp)
2019-03-21 14:36:11 -<==    Updates: 1
2019-03-21 14:36:11 -请求地址 : http://localhost:8081/main
2019-03-21 14:36:11 -HTTP METHOD : GET
2019-03-21 14:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:36:11 -参数 : []
2019-03-21 14:36:11 -耗时 : 1
2019-03-21 14:36:11 -返回值 : main
2019-03-21 14:36:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:36:11 -HTTP METHOD : GET
2019-03-21 14:36:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:36:11 -参数 : []
2019-03-21 14:36:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:36:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:36:11 -<==      Total: 0
2019-03-21 14:36:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:36:11 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:36:11 -<==      Total: 1
2019-03-21 14:36:11 -耗时 : 7
2019-03-21 14:36:11 -返回值 : com.bootdo.common.utils.PageUtils@162741cc
2019-03-21 14:36:11 -请求地址 : http://localhost:8081/main
2019-03-21 14:36:11 -HTTP METHOD : GET
2019-03-21 14:36:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:36:11 -参数 : []
2019-03-21 14:36:11 -耗时 : 4
2019-03-21 14:36:11 -返回值 : main
2019-03-21 14:36:13 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:36:13 -HTTP METHOD : GET
2019-03-21 14:36:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:36:13 -参数 : []
2019-03-21 14:36:13 -耗时 : 0
2019-03-21 14:36:13 -返回值 : print/print/print
2019-03-21 14:36:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:36:13 -HTTP METHOD : GET
2019-03-21 14:36:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:36:13 -参数 : [userType]
2019-03-21 14:36:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:36:13 -==> Parameters: userType(String)
2019-03-21 14:36:13 -<==      Total: 2
2019-03-21 14:36:13 -耗时 : 4
2019-03-21 14:36:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:36:13 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:36:13 -HTTP METHOD : GET
2019-03-21 14:36:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:36:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:36:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:36:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:36:13 -<==      Total: 3
2019-03-21 14:36:13 -==>  Preparing: select count(*) from print 
2019-03-21 14:36:13 -==> Parameters: 
2019-03-21 14:36:13 -<==      Total: 1
2019-03-21 14:36:13 -耗时 : 7
2019-03-21 14:36:13 -返回值 : com.bootdo.common.utils.PageUtils@50ebb240
2019-03-21 14:36:14 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:36:14 -HTTP METHOD : GET
2019-03-21 14:36:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:36:14 -参数 : []
2019-03-21 14:36:14 -耗时 : 1
2019-03-21 14:36:14 -返回值 : print/print/add
2019-03-21 14:36:14 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "print/print/add": An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: (Line = 116, Column = 10) Incomplete structure: "<input id="hu" name="hu" class="form-control" type="text/>
								</div>
						</div>
						<div class="form-group">	
								<label class="col-sm-2 control-label">打印状态: 0 未打印; 1 已打印：</label>
								<div class="col-sm-4">
									<input id="printState" name="printState" class="form-control" type="text">
								</div>
								<label class="col-sm-2 control-label">备注：</label>
								<div class="col-sm-4">
									<input id="remark" name="remark" class="form-control" type="text">
								</div>
						</div>
						
							<div class="form-group">
								<div class="col-sm-8 col-sm-offset-3">
									<button type="submit" class="btn btn-primary">提交</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
	</div>
	</div>
	<div th:include="include::footer"></div>
	<script type="text/javascript" src="/js/appjs/print/print/add.js">
	</script>
</body>
</html>
"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-03-21 14:36:14 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)] with root cause
org.attoparser.ParseException: (Line = 116, Column = 10) Incomplete structure: "<input id="hu" name="hu" class="form-control" type="text/>
								</div>
						</div>
						<div class="form-group">	
								<label class="col-sm-2 control-label">打印状态: 0 未打印; 1 已打印：</label>
								<div class="col-sm-4">
									<input id="printState" name="printState" class="form-control" type="text">
								</div>
								<label class="col-sm-2 control-label">备注：</label>
								<div class="col-sm-4">
									<input id="remark" name="remark" class="form-control" type="text">
								</div>
						</div>
						
							<div class="form-group">
								<div class="col-sm-8 col-sm-offset-3">
									<button type="submit" class="btn btn-primary">提交</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
	</div>
	</div>
	<div th:include="include::footer"></div>
	<script type="text/javascript" src="/js/appjs/print/print/add.js">
	</script>
</body>
</html>
"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 14:36:18 -请求地址 : http://localhost:8081/index
2019-03-21 14:36:18 -HTTP METHOD : GET
2019-03-21 14:36:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:36:18 -参数 : [{}]
2019-03-21 14:36:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:36:18 -==> Parameters: 1(Long)
2019-03-21 14:36:18 -<==      Total: 46
2019-03-21 14:36:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:36:18 -==> Parameters: 138(Long)
2019-03-21 14:36:18 -<==      Total: 1
2019-03-21 14:36:18 -耗时 : 14
2019-03-21 14:36:18 -返回值 : index_v1
2019-03-21 14:36:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:36:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:36:18.745(Timestamp)
2019-03-21 14:36:18 -请求地址 : http://localhost:8081/main
2019-03-21 14:36:18 -HTTP METHOD : GET
2019-03-21 14:36:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:36:18 -参数 : []
2019-03-21 14:36:18 -耗时 : 1
2019-03-21 14:36:18 -返回值 : main
2019-03-21 14:36:18 -<==    Updates: 1
2019-03-21 14:36:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:36:19 -HTTP METHOD : GET
2019-03-21 14:36:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:36:19 -参数 : []
2019-03-21 14:36:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:36:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:36:19 -<==      Total: 0
2019-03-21 14:36:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:36:19 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:36:19 -<==      Total: 1
2019-03-21 14:36:19 -耗时 : 7
2019-03-21 14:36:19 -返回值 : com.bootdo.common.utils.PageUtils@3933552a
2019-03-21 14:36:19 -请求地址 : http://localhost:8081/main
2019-03-21 14:36:19 -HTTP METHOD : GET
2019-03-21 14:36:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:36:19 -参数 : []
2019-03-21 14:36:19 -耗时 : 0
2019-03-21 14:36:19 -返回值 : main
2019-03-21 14:36:21 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:36:21 -HTTP METHOD : GET
2019-03-21 14:36:21 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:36:21 -参数 : []
2019-03-21 14:36:21 -耗时 : 1
2019-03-21 14:36:21 -返回值 : print/print/print
2019-03-21 14:36:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:36:22 -HTTP METHOD : GET
2019-03-21 14:36:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:36:22 -参数 : [userType]
2019-03-21 14:36:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:36:22 -==> Parameters: userType(String)
2019-03-21 14:36:22 -<==      Total: 2
2019-03-21 14:36:22 -耗时 : 5
2019-03-21 14:36:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:36:22 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:36:22 -HTTP METHOD : GET
2019-03-21 14:36:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:36:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:36:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:36:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:36:22 -<==      Total: 3
2019-03-21 14:36:22 -==>  Preparing: select count(*) from print 
2019-03-21 14:36:22 -==> Parameters: 
2019-03-21 14:36:22 -<==      Total: 1
2019-03-21 14:36:22 -耗时 : 6
2019-03-21 14:36:22 -返回值 : com.bootdo.common.utils.PageUtils@46a3f743
2019-03-21 14:36:23 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:36:23 -HTTP METHOD : GET
2019-03-21 14:36:23 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:36:23 -参数 : []
2019-03-21 14:36:23 -耗时 : 0
2019-03-21 14:36:23 -返回值 : print/print/add
2019-03-21 14:36:23 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "print/print/add": An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: (Line = 116, Column = 10) Incomplete structure: "<input id="hu" name="hu" class="form-control" type="text/>
								</div>
						</div>
						<div class="form-group">	
								<label class="col-sm-2 control-label">打印状态: 0 未打印; 1 已打印：</label>
								<div class="col-sm-4">
									<input id="printState" name="printState" class="form-control" type="text">
								</div>
								<label class="col-sm-2 control-label">备注：</label>
								<div class="col-sm-4">
									<input id="remark" name="remark" class="form-control" type="text">
								</div>
						</div>
						
							<div class="form-group">
								<div class="col-sm-8 col-sm-offset-3">
									<button type="submit" class="btn btn-primary">提交</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
	</div>
	</div>
	<div th:include="include::footer"></div>
	<script type="text/javascript" src="/js/appjs/print/print/add.js">
	</script>
</body>
</html>
"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-03-21 14:36:23 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/add.html]" - line 116, col 10)] with root cause
org.attoparser.ParseException: (Line = 116, Column = 10) Incomplete structure: "<input id="hu" name="hu" class="form-control" type="text/>
								</div>
						</div>
						<div class="form-group">	
								<label class="col-sm-2 control-label">打印状态: 0 未打印; 1 已打印：</label>
								<div class="col-sm-4">
									<input id="printState" name="printState" class="form-control" type="text">
								</div>
								<label class="col-sm-2 control-label">备注：</label>
								<div class="col-sm-4">
									<input id="remark" name="remark" class="form-control" type="text">
								</div>
						</div>
						
							<div class="form-group">
								<div class="col-sm-8 col-sm-offset-3">
									<button type="submit" class="btn btn-primary">提交</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			</div>
	</div>
	</div>
	<div th:include="include::footer"></div>
	<script type="text/javascript" src="/js/appjs/print/print/add.js">
	</script>
</body>
</html>
"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 14:37:05 -请求地址 : http://localhost:8081/index
2019-03-21 14:37:05 -HTTP METHOD : GET
2019-03-21 14:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:37:05 -参数 : [{}]
2019-03-21 14:37:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:37:05 -==> Parameters: 1(Long)
2019-03-21 14:37:05 -<==      Total: 46
2019-03-21 14:37:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:37:05 -==> Parameters: 138(Long)
2019-03-21 14:37:05 -<==      Total: 1
2019-03-21 14:37:05 -耗时 : 20
2019-03-21 14:37:05 -返回值 : index_v1
2019-03-21 14:37:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:37:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:37:05.838(Timestamp)
2019-03-21 14:37:05 -<==    Updates: 1
2019-03-21 14:37:05 -请求地址 : http://localhost:8081/main
2019-03-21 14:37:05 -HTTP METHOD : GET
2019-03-21 14:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:37:05 -参数 : []
2019-03-21 14:37:05 -耗时 : 2
2019-03-21 14:37:05 -返回值 : main
2019-03-21 14:37:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:37:06 -HTTP METHOD : GET
2019-03-21 14:37:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:37:06 -参数 : []
2019-03-21 14:37:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:37:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:37:06 -<==      Total: 0
2019-03-21 14:37:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:37:06 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:37:06 -<==      Total: 1
2019-03-21 14:37:06 -耗时 : 7
2019-03-21 14:37:06 -返回值 : com.bootdo.common.utils.PageUtils@18198431
2019-03-21 14:37:06 -请求地址 : http://localhost:8081/main
2019-03-21 14:37:06 -HTTP METHOD : GET
2019-03-21 14:37:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:37:06 -参数 : []
2019-03-21 14:37:06 -耗时 : 1
2019-03-21 14:37:06 -返回值 : main
2019-03-21 14:37:12 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:37:12 -HTTP METHOD : GET
2019-03-21 14:37:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:37:12 -参数 : []
2019-03-21 14:37:12 -耗时 : 1
2019-03-21 14:37:12 -返回值 : print/print/print
2019-03-21 14:37:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:37:13 -HTTP METHOD : GET
2019-03-21 14:37:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:37:13 -参数 : [userType]
2019-03-21 14:37:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:37:13 -==> Parameters: userType(String)
2019-03-21 14:37:13 -<==      Total: 2
2019-03-21 14:37:13 -耗时 : 4
2019-03-21 14:37:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:37:13 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:37:13 -HTTP METHOD : GET
2019-03-21 14:37:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:37:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:37:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:37:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:37:13 -<==      Total: 3
2019-03-21 14:37:13 -==>  Preparing: select count(*) from print 
2019-03-21 14:37:13 -==> Parameters: 
2019-03-21 14:37:13 -<==      Total: 1
2019-03-21 14:37:13 -耗时 : 9
2019-03-21 14:37:13 -返回值 : com.bootdo.common.utils.PageUtils@26e713d
2019-03-21 14:37:14 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:37:14 -HTTP METHOD : GET
2019-03-21 14:37:14 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:37:14 -参数 : []
2019-03-21 14:37:14 -耗时 : 1
2019-03-21 14:37:14 -返回值 : print/print/add
2019-03-21 14:37:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:37:14 -HTTP METHOD : GET
2019-03-21 14:37:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:37:14 -参数 : [userType]
2019-03-21 14:37:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:37:14 -==> Parameters: userType(String)
2019-03-21 14:37:14 -<==      Total: 2
2019-03-21 14:37:14 -耗时 : 4
2019-03-21 14:37:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:39:05 -请求地址 : http://localhost:8081/index
2019-03-21 14:39:05 -HTTP METHOD : GET
2019-03-21 14:39:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:39:05 -参数 : [{}]
2019-03-21 14:39:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:39:05 -==> Parameters: 1(Long)
2019-03-21 14:39:05 -<==      Total: 46
2019-03-21 14:39:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:39:05 -==> Parameters: 138(Long)
2019-03-21 14:39:05 -<==      Total: 1
2019-03-21 14:39:05 -耗时 : 23
2019-03-21 14:39:05 -返回值 : index_v1
2019-03-21 14:39:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:39:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:39:05.665(Timestamp)
2019-03-21 14:39:05 -<==    Updates: 1
2019-03-21 14:39:05 -请求地址 : http://localhost:8081/main
2019-03-21 14:39:05 -HTTP METHOD : GET
2019-03-21 14:39:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:39:05 -参数 : []
2019-03-21 14:39:05 -耗时 : 0
2019-03-21 14:39:05 -返回值 : main
2019-03-21 14:39:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:39:06 -HTTP METHOD : GET
2019-03-21 14:39:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:39:06 -参数 : []
2019-03-21 14:39:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:39:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:39:06 -<==      Total: 0
2019-03-21 14:39:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:39:06 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:39:06 -<==      Total: 1
2019-03-21 14:39:06 -耗时 : 6
2019-03-21 14:39:06 -返回值 : com.bootdo.common.utils.PageUtils@66110337
2019-03-21 14:39:06 -请求地址 : http://localhost:8081/main
2019-03-21 14:39:06 -HTTP METHOD : GET
2019-03-21 14:39:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:39:06 -参数 : []
2019-03-21 14:39:06 -耗时 : 1
2019-03-21 14:39:06 -返回值 : main
2019-03-21 14:39:08 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:39:08 -HTTP METHOD : GET
2019-03-21 14:39:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:39:08 -参数 : []
2019-03-21 14:39:08 -耗时 : 1
2019-03-21 14:39:08 -返回值 : print/print/print
2019-03-21 14:39:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:39:08 -HTTP METHOD : GET
2019-03-21 14:39:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:39:08 -参数 : [userType]
2019-03-21 14:39:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:39:08 -==> Parameters: userType(String)
2019-03-21 14:39:08 -<==      Total: 2
2019-03-21 14:39:08 -耗时 : 5
2019-03-21 14:39:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:39:08 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:39:08 -HTTP METHOD : GET
2019-03-21 14:39:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:39:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:39:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:39:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:39:08 -<==      Total: 3
2019-03-21 14:39:08 -==>  Preparing: select count(*) from print 
2019-03-21 14:39:08 -==> Parameters: 
2019-03-21 14:39:08 -<==      Total: 1
2019-03-21 14:39:08 -耗时 : 7
2019-03-21 14:39:08 -返回值 : com.bootdo.common.utils.PageUtils@69e8eed7
2019-03-21 14:39:09 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:39:09 -HTTP METHOD : GET
2019-03-21 14:39:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:39:09 -参数 : []
2019-03-21 14:39:09 -耗时 : 1
2019-03-21 14:39:09 -返回值 : print/print/add
2019-03-21 14:39:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:39:09 -HTTP METHOD : GET
2019-03-21 14:39:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:39:09 -参数 : [userType]
2019-03-21 14:39:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:39:09 -==> Parameters: userType(String)
2019-03-21 14:39:09 -<==      Total: 2
2019-03-21 14:39:09 -耗时 : 5
2019-03-21 14:39:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:40:22 -请求地址 : http://localhost:8081/index
2019-03-21 14:40:22 -HTTP METHOD : GET
2019-03-21 14:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:40:22 -参数 : [{}]
2019-03-21 14:40:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:40:22 -==> Parameters: 1(Long)
2019-03-21 14:40:22 -<==      Total: 46
2019-03-21 14:40:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:40:22 -==> Parameters: 138(Long)
2019-03-21 14:40:22 -<==      Total: 1
2019-03-21 14:40:22 -耗时 : 27
2019-03-21 14:40:22 -返回值 : index_v1
2019-03-21 14:40:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:40:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:40:22.946(Timestamp)
2019-03-21 14:40:23 -<==    Updates: 1
2019-03-21 14:40:23 -请求地址 : http://localhost:8081/main
2019-03-21 14:40:23 -HTTP METHOD : GET
2019-03-21 14:40:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:40:23 -参数 : []
2019-03-21 14:40:23 -耗时 : 3
2019-03-21 14:40:23 -返回值 : main
2019-03-21 14:40:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:40:23 -HTTP METHOD : GET
2019-03-21 14:40:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:40:23 -参数 : []
2019-03-21 14:40:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:40:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:40:23 -<==      Total: 0
2019-03-21 14:40:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:40:23 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:40:23 -<==      Total: 1
2019-03-21 14:40:23 -耗时 : 27
2019-03-21 14:40:23 -返回值 : com.bootdo.common.utils.PageUtils@793244fa
2019-03-21 14:40:23 -请求地址 : http://localhost:8081/main
2019-03-21 14:40:23 -HTTP METHOD : GET
2019-03-21 14:40:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:40:23 -参数 : []
2019-03-21 14:40:23 -耗时 : 1
2019-03-21 14:40:23 -返回值 : main
2019-03-21 14:40:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 14:40:25 -==> Parameters: 1(Long)
2019-03-21 14:40:25 -<==      Total: 90
2019-03-21 14:40:25 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:40:25 -HTTP METHOD : GET
2019-03-21 14:40:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:40:25 -参数 : []
2019-03-21 14:40:25 -耗时 : 0
2019-03-21 14:40:25 -返回值 : print/print/print
2019-03-21 14:40:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:40:25 -HTTP METHOD : GET
2019-03-21 14:40:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:40:25 -参数 : [userType]
2019-03-21 14:40:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:40:25 -==> Parameters: userType(String)
2019-03-21 14:40:25 -<==      Total: 2
2019-03-21 14:40:25 -耗时 : 4
2019-03-21 14:40:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:40:25 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:40:25 -HTTP METHOD : GET
2019-03-21 14:40:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:40:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:40:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:40:25 -<==      Total: 3
2019-03-21 14:40:25 -==>  Preparing: select count(*) from print 
2019-03-21 14:40:25 -==> Parameters: 
2019-03-21 14:40:25 -<==      Total: 1
2019-03-21 14:40:25 -耗时 : 7
2019-03-21 14:40:25 -返回值 : com.bootdo.common.utils.PageUtils@75ca128a
2019-03-21 14:40:26 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:40:26 -HTTP METHOD : GET
2019-03-21 14:40:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:40:26 -参数 : []
2019-03-21 14:40:26 -耗时 : 1
2019-03-21 14:40:26 -返回值 : print/print/add
2019-03-21 14:40:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:40:26 -HTTP METHOD : GET
2019-03-21 14:40:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:40:26 -参数 : [userType]
2019-03-21 14:40:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:40:26 -==> Parameters: userType(String)
2019-03-21 14:40:26 -<==      Total: 2
2019-03-21 14:40:26 -耗时 : 4
2019-03-21 14:40:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:40:41 -Validating all active sessions...
2019-03-21 14:40:41 -Finished session validation.  No sessions were stopped.
2019-03-21 14:41:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 16 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(16)-CONNECTED(16)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 189], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 31], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2415]
2019-03-21 14:43:52 -请求地址 : http://localhost:8081/index
2019-03-21 14:43:52 -HTTP METHOD : GET
2019-03-21 14:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:43:52 -参数 : [{}]
2019-03-21 14:43:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:43:52 -==> Parameters: 1(Long)
2019-03-21 14:43:52 -<==      Total: 46
2019-03-21 14:43:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:43:52 -==> Parameters: 138(Long)
2019-03-21 14:43:52 -<==      Total: 1
2019-03-21 14:43:52 -耗时 : 20
2019-03-21 14:43:52 -返回值 : index_v1
2019-03-21 14:43:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:43:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:43:52.355(Timestamp)
2019-03-21 14:43:52 -请求地址 : http://localhost:8081/main
2019-03-21 14:43:52 -HTTP METHOD : GET
2019-03-21 14:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:43:52 -参数 : []
2019-03-21 14:43:52 -耗时 : 1
2019-03-21 14:43:52 -返回值 : main
2019-03-21 14:43:52 -<==    Updates: 1
2019-03-21 14:43:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:43:52 -HTTP METHOD : GET
2019-03-21 14:43:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:43:52 -参数 : []
2019-03-21 14:43:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:43:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:43:52 -<==      Total: 0
2019-03-21 14:43:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:43:52 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:43:52 -<==      Total: 1
2019-03-21 14:43:52 -耗时 : 6
2019-03-21 14:43:52 -返回值 : com.bootdo.common.utils.PageUtils@5600c26c
2019-03-21 14:43:52 -请求地址 : http://localhost:8081/main
2019-03-21 14:43:52 -HTTP METHOD : GET
2019-03-21 14:43:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:43:52 -参数 : []
2019-03-21 14:43:52 -耗时 : 2
2019-03-21 14:43:52 -返回值 : main
2019-03-21 14:43:54 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:43:54 -HTTP METHOD : GET
2019-03-21 14:43:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:43:54 -参数 : []
2019-03-21 14:43:54 -耗时 : 0
2019-03-21 14:43:54 -返回值 : print/print/print
2019-03-21 14:43:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:43:54 -HTTP METHOD : GET
2019-03-21 14:43:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:43:54 -参数 : [userType]
2019-03-21 14:43:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:43:54 -==> Parameters: userType(String)
2019-03-21 14:43:54 -<==      Total: 2
2019-03-21 14:43:54 -耗时 : 3
2019-03-21 14:43:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:43:54 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:43:54 -HTTP METHOD : GET
2019-03-21 14:43:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:43:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:43:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:43:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:43:54 -<==      Total: 3
2019-03-21 14:43:54 -==>  Preparing: select count(*) from print 
2019-03-21 14:43:54 -==> Parameters: 
2019-03-21 14:43:54 -<==      Total: 1
2019-03-21 14:43:54 -耗时 : 20
2019-03-21 14:43:54 -返回值 : com.bootdo.common.utils.PageUtils@4f518cb1
2019-03-21 14:43:55 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:43:55 -HTTP METHOD : GET
2019-03-21 14:43:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:43:55 -参数 : []
2019-03-21 14:43:55 -耗时 : 0
2019-03-21 14:43:55 -返回值 : print/print/add
2019-03-21 14:43:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:43:55 -HTTP METHOD : GET
2019-03-21 14:43:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:43:55 -参数 : [userType]
2019-03-21 14:43:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:43:55 -==> Parameters: userType(String)
2019-03-21 14:43:55 -<==      Total: 2
2019-03-21 14:43:55 -耗时 : 4
2019-03-21 14:43:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:46:37 -请求地址 : http://localhost:8081/index
2019-03-21 14:46:37 -HTTP METHOD : GET
2019-03-21 14:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:46:37 -参数 : [{}]
2019-03-21 14:46:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:46:37 -==> Parameters: 1(Long)
2019-03-21 14:46:37 -<==      Total: 46
2019-03-21 14:46:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:46:37 -==> Parameters: 138(Long)
2019-03-21 14:46:37 -<==      Total: 1
2019-03-21 14:46:37 -耗时 : 94
2019-03-21 14:46:37 -返回值 : index_v1
2019-03-21 14:46:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:46:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:46:37.677(Timestamp)
2019-03-21 14:46:37 -<==    Updates: 1
2019-03-21 14:46:37 -请求地址 : http://localhost:8081/main
2019-03-21 14:46:37 -HTTP METHOD : GET
2019-03-21 14:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:46:37 -参数 : []
2019-03-21 14:46:37 -耗时 : 1
2019-03-21 14:46:37 -返回值 : main
2019-03-21 14:46:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:46:38 -HTTP METHOD : GET
2019-03-21 14:46:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:46:38 -参数 : []
2019-03-21 14:46:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:46:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:46:38 -<==      Total: 0
2019-03-21 14:46:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:46:38 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:46:38 -<==      Total: 1
2019-03-21 14:46:38 -耗时 : 6
2019-03-21 14:46:38 -返回值 : com.bootdo.common.utils.PageUtils@1b6c6587
2019-03-21 14:46:38 -请求地址 : http://localhost:8081/main
2019-03-21 14:46:38 -HTTP METHOD : GET
2019-03-21 14:46:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:46:38 -参数 : []
2019-03-21 14:46:38 -耗时 : 1
2019-03-21 14:46:38 -返回值 : main
2019-03-21 14:46:51 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:46:51 -HTTP METHOD : GET
2019-03-21 14:46:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:46:51 -参数 : []
2019-03-21 14:46:51 -耗时 : 0
2019-03-21 14:46:51 -返回值 : print/print/print
2019-03-21 14:46:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:46:51 -HTTP METHOD : GET
2019-03-21 14:46:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:46:51 -参数 : [userType]
2019-03-21 14:46:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:46:51 -==> Parameters: userType(String)
2019-03-21 14:46:51 -<==      Total: 2
2019-03-21 14:46:51 -耗时 : 4
2019-03-21 14:46:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:46:51 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:46:51 -HTTP METHOD : GET
2019-03-21 14:46:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:46:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:46:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:46:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:46:51 -<==      Total: 3
2019-03-21 14:46:51 -==>  Preparing: select count(*) from print 
2019-03-21 14:46:51 -==> Parameters: 
2019-03-21 14:46:51 -<==      Total: 1
2019-03-21 14:46:51 -耗时 : 6
2019-03-21 14:46:51 -返回值 : com.bootdo.common.utils.PageUtils@4dc1a542
2019-03-21 14:46:52 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:46:52 -HTTP METHOD : GET
2019-03-21 14:46:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:46:52 -参数 : []
2019-03-21 14:46:52 -耗时 : 1
2019-03-21 14:46:52 -返回值 : print/print/add
2019-03-21 14:46:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:46:52 -HTTP METHOD : GET
2019-03-21 14:46:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:46:52 -参数 : [userType]
2019-03-21 14:46:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:46:52 -==> Parameters: userType(String)
2019-03-21 14:46:52 -<==      Total: 2
2019-03-21 14:46:52 -耗时 : 3
2019-03-21 14:46:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:47:28 -请求地址 : http://localhost:8081/index
2019-03-21 14:47:28 -HTTP METHOD : GET
2019-03-21 14:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:47:28 -参数 : [{}]
2019-03-21 14:47:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:47:28 -==> Parameters: 1(Long)
2019-03-21 14:47:28 -<==      Total: 46
2019-03-21 14:47:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:47:28 -==> Parameters: 138(Long)
2019-03-21 14:47:28 -<==      Total: 1
2019-03-21 14:47:28 -耗时 : 17
2019-03-21 14:47:28 -返回值 : index_v1
2019-03-21 14:47:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:47:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:47:28.117(Timestamp)
2019-03-21 14:47:28 -请求地址 : http://localhost:8081/main
2019-03-21 14:47:28 -HTTP METHOD : GET
2019-03-21 14:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:47:28 -参数 : []
2019-03-21 14:47:28 -耗时 : 1
2019-03-21 14:47:28 -返回值 : main
2019-03-21 14:47:28 -<==    Updates: 1
2019-03-21 14:47:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:47:28 -HTTP METHOD : GET
2019-03-21 14:47:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:47:28 -参数 : []
2019-03-21 14:47:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:47:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:47:28 -<==      Total: 0
2019-03-21 14:47:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:47:28 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:47:28 -<==      Total: 1
2019-03-21 14:47:28 -耗时 : 7
2019-03-21 14:47:28 -返回值 : com.bootdo.common.utils.PageUtils@6297a0fc
2019-03-21 14:47:28 -请求地址 : http://localhost:8081/main
2019-03-21 14:47:28 -HTTP METHOD : GET
2019-03-21 14:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:47:28 -参数 : []
2019-03-21 14:47:28 -耗时 : 1
2019-03-21 14:47:28 -返回值 : main
2019-03-21 14:47:30 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:47:30 -HTTP METHOD : GET
2019-03-21 14:47:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:47:30 -参数 : []
2019-03-21 14:47:30 -耗时 : 1
2019-03-21 14:47:30 -返回值 : print/print/print
2019-03-21 14:47:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:47:31 -HTTP METHOD : GET
2019-03-21 14:47:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:47:31 -参数 : [userType]
2019-03-21 14:47:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:47:31 -==> Parameters: userType(String)
2019-03-21 14:47:31 -<==      Total: 2
2019-03-21 14:47:31 -耗时 : 4
2019-03-21 14:47:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:47:31 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:47:31 -HTTP METHOD : GET
2019-03-21 14:47:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:47:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:47:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:47:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:47:31 -<==      Total: 3
2019-03-21 14:47:31 -==>  Preparing: select count(*) from print 
2019-03-21 14:47:31 -==> Parameters: 
2019-03-21 14:47:31 -<==      Total: 1
2019-03-21 14:47:31 -耗时 : 8
2019-03-21 14:47:31 -返回值 : com.bootdo.common.utils.PageUtils@1bc59f82
2019-03-21 14:47:32 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:47:32 -HTTP METHOD : GET
2019-03-21 14:47:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:47:32 -参数 : []
2019-03-21 14:47:32 -耗时 : 0
2019-03-21 14:47:32 -返回值 : print/print/add
2019-03-21 14:47:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:47:33 -HTTP METHOD : GET
2019-03-21 14:47:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:47:33 -参数 : [userType]
2019-03-21 14:47:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:47:33 -==> Parameters: userType(String)
2019-03-21 14:47:33 -<==      Total: 2
2019-03-21 14:47:33 -耗时 : 4
2019-03-21 14:47:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:50:24 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:50:24 -HTTP METHOD : GET
2019-03-21 14:50:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:50:24 -参数 : []
2019-03-21 14:50:24 -耗时 : 1
2019-03-21 14:50:24 -返回值 : print/print/add
2019-03-21 14:50:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:50:24 -HTTP METHOD : GET
2019-03-21 14:50:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:50:24 -参数 : [userType]
2019-03-21 14:50:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:50:24 -==> Parameters: userType(String)
2019-03-21 14:50:24 -<==      Total: 2
2019-03-21 14:50:24 -耗时 : 5
2019-03-21 14:50:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:50:33 -请求地址 : http://localhost:8081/index
2019-03-21 14:50:33 -HTTP METHOD : GET
2019-03-21 14:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 14:50:33 -参数 : [{}]
2019-03-21 14:50:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 14:50:33 -==> Parameters: 1(Long)
2019-03-21 14:50:33 -<==      Total: 46
2019-03-21 14:50:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 14:50:33 -==> Parameters: 138(Long)
2019-03-21 14:50:33 -<==      Total: 1
2019-03-21 14:50:33 -耗时 : 16
2019-03-21 14:50:33 -返回值 : index_v1
2019-03-21 14:50:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 14:50:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 14:50:33.224(Timestamp)
2019-03-21 14:50:33 -<==    Updates: 1
2019-03-21 14:50:33 -请求地址 : http://localhost:8081/main
2019-03-21 14:50:33 -HTTP METHOD : GET
2019-03-21 14:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:50:33 -参数 : []
2019-03-21 14:50:33 -耗时 : 1
2019-03-21 14:50:33 -返回值 : main
2019-03-21 14:50:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 14:50:33 -HTTP METHOD : GET
2019-03-21 14:50:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 14:50:33 -参数 : []
2019-03-21 14:50:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 14:50:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 14:50:33 -<==      Total: 0
2019-03-21 14:50:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 14:50:33 -==> Parameters: 1(Long), 0(String)
2019-03-21 14:50:33 -<==      Total: 1
2019-03-21 14:50:33 -耗时 : 8
2019-03-21 14:50:33 -返回值 : com.bootdo.common.utils.PageUtils@723dd813
2019-03-21 14:50:34 -请求地址 : http://localhost:8081/main
2019-03-21 14:50:34 -HTTP METHOD : GET
2019-03-21 14:50:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 14:50:34 -参数 : []
2019-03-21 14:50:34 -耗时 : 1
2019-03-21 14:50:34 -返回值 : main
2019-03-21 14:50:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 14:50:37 -==> Parameters: 1(Long)
2019-03-21 14:50:37 -<==      Total: 90
2019-03-21 14:50:37 -请求地址 : http://localhost:8081/print/print
2019-03-21 14:50:37 -HTTP METHOD : GET
2019-03-21 14:50:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 14:50:37 -参数 : []
2019-03-21 14:50:37 -耗时 : 0
2019-03-21 14:50:37 -返回值 : print/print/print
2019-03-21 14:50:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:50:38 -HTTP METHOD : GET
2019-03-21 14:50:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:50:38 -参数 : [userType]
2019-03-21 14:50:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:50:38 -==> Parameters: userType(String)
2019-03-21 14:50:38 -<==      Total: 2
2019-03-21 14:50:38 -耗时 : 3
2019-03-21 14:50:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:50:38 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 14:50:38 -HTTP METHOD : GET
2019-03-21 14:50:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 14:50:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 14:50:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 14:50:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 14:50:38 -<==      Total: 3
2019-03-21 14:50:38 -==>  Preparing: select count(*) from print 
2019-03-21 14:50:38 -==> Parameters: 
2019-03-21 14:50:38 -<==      Total: 1
2019-03-21 14:50:38 -耗时 : 7
2019-03-21 14:50:38 -返回值 : com.bootdo.common.utils.PageUtils@313c2371
2019-03-21 14:50:39 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 14:50:39 -HTTP METHOD : GET
2019-03-21 14:50:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 14:50:39 -参数 : []
2019-03-21 14:50:39 -耗时 : 0
2019-03-21 14:50:39 -返回值 : print/print/add
2019-03-21 14:50:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 14:50:39 -HTTP METHOD : GET
2019-03-21 14:50:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 14:50:39 -参数 : [userType]
2019-03-21 14:50:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 14:50:39 -==> Parameters: userType(String)
2019-03-21 14:50:39 -<==      Total: 2
2019-03-21 14:50:39 -耗时 : 4
2019-03-21 14:50:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 14:50:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 14:50:42 -HTTP METHOD : GET
2019-03-21 14:50:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 14:50:42 -参数 : []
2019-03-21 14:50:42 -耗时 : 0
2019-03-21 14:50:42 -返回值 : system/dept/deptTree
2019-03-21 14:50:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 14:50:43 -HTTP METHOD : GET
2019-03-21 14:50:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 14:50:43 -参数 : []
2019-03-21 14:50:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 14:50:43 -==> Parameters: 
2019-03-21 14:50:43 -<==      Total: 3
2019-03-21 14:50:43 -耗时 : 3
2019-03-21 14:50:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 15:11:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 20 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(20)-CONNECTED(20)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 237], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2846]
2019-03-21 15:16:30 -请求地址 : http://localhost:8081/index
2019-03-21 15:16:30 -HTTP METHOD : GET
2019-03-21 15:16:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 15:16:30 -参数 : [{}]
2019-03-21 15:16:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 15:16:30 -==> Parameters: 1(Long)
2019-03-21 15:16:30 -<==      Total: 46
2019-03-21 15:16:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 15:16:30 -==> Parameters: 138(Long)
2019-03-21 15:16:30 -<==      Total: 1
2019-03-21 15:16:30 -耗时 : 26
2019-03-21 15:16:30 -返回值 : index_v1
2019-03-21 15:16:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:16:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 15:16:30.844(Timestamp)
2019-03-21 15:16:30 -<==    Updates: 1
2019-03-21 15:16:30 -请求地址 : http://localhost:8081/main
2019-03-21 15:16:30 -HTTP METHOD : GET
2019-03-21 15:16:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:16:30 -参数 : []
2019-03-21 15:16:30 -耗时 : 10
2019-03-21 15:16:30 -返回值 : main
2019-03-21 15:16:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 15:16:31 -HTTP METHOD : GET
2019-03-21 15:16:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 15:16:31 -参数 : []
2019-03-21 15:16:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 15:16:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 15:16:31 -<==      Total: 0
2019-03-21 15:16:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 15:16:31 -==> Parameters: 1(Long), 0(String)
2019-03-21 15:16:31 -<==      Total: 1
2019-03-21 15:16:31 -耗时 : 8
2019-03-21 15:16:31 -返回值 : com.bootdo.common.utils.PageUtils@500419e0
2019-03-21 15:16:31 -请求地址 : http://localhost:8081/main
2019-03-21 15:16:31 -HTTP METHOD : GET
2019-03-21 15:16:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:16:31 -参数 : []
2019-03-21 15:16:31 -耗时 : 1
2019-03-21 15:16:31 -返回值 : main
2019-03-21 15:16:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 15:16:35 -==> Parameters: 1(Long)
2019-03-21 15:16:35 -<==      Total: 90
2019-03-21 15:16:35 -请求地址 : http://localhost:8081/print/print
2019-03-21 15:16:35 -HTTP METHOD : GET
2019-03-21 15:16:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 15:16:35 -参数 : []
2019-03-21 15:16:35 -耗时 : 0
2019-03-21 15:16:35 -返回值 : print/print/print
2019-03-21 15:16:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:16:35 -HTTP METHOD : GET
2019-03-21 15:16:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:16:35 -参数 : [userType]
2019-03-21 15:16:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:16:35 -==> Parameters: userType(String)
2019-03-21 15:16:35 -<==      Total: 2
2019-03-21 15:16:35 -耗时 : 3
2019-03-21 15:16:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:16:35 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:16:35 -HTTP METHOD : GET
2019-03-21 15:16:35 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:16:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 15:16:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 15:16:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 15:16:35 -<==      Total: 3
2019-03-21 15:16:35 -==>  Preparing: select count(*) from print 
2019-03-21 15:16:35 -==> Parameters: 
2019-03-21 15:16:35 -<==      Total: 1
2019-03-21 15:16:35 -耗时 : 8
2019-03-21 15:16:35 -返回值 : com.bootdo.common.utils.PageUtils@2d76a2c0
2019-03-21 15:16:37 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 15:16:37 -HTTP METHOD : GET
2019-03-21 15:16:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 15:16:37 -参数 : []
2019-03-21 15:16:37 -耗时 : 0
2019-03-21 15:16:37 -返回值 : print/print/add
2019-03-21 15:16:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:16:37 -HTTP METHOD : GET
2019-03-21 15:16:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:16:37 -参数 : [userType]
2019-03-21 15:16:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:16:37 -==> Parameters: userType(String)
2019-03-21 15:16:37 -<==      Total: 2
2019-03-21 15:16:37 -耗时 : 6
2019-03-21 15:16:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:16:47 -请求地址 : http://localhost:8081/print/print/save
2019-03-21 15:16:47 -HTTP METHOD : POST
2019-03-21 15:16:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.save
2019-03-21 15:16:47 -参数 : [com.bootdo.print.domain.PrintDO@220b899a]
2019-03-21 15:16:47 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_sum`, `water_money`, `account_data`, `cost_data`, `cost_poper`, `print_state`, `print_data`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:16:47 -==> Parameters: (String), (String), (String), null, (String), (String), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, (String), (String), null, 2019-03-21 15:16:47.857(Timestamp), 1(Long), null, null, (String)
2019-03-21 15:16:48 -{conn-10001, pstmt-20042} execute error. insert into print
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_price`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`elec_money`, 
			`heat_price`, 
			`heat_area`, 
			`heat_cost`, 
			`heat_sum`, 
			`heat_money`, 
			`water_price`, 
			`water_sum`, 
			`water_money`, 
			`account_data`, 
			`cost_data`, 
			`cost_poper`, 
			`print_state`, 
			`print_data`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:37)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:97)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$d34c39d3.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 15:16:48 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 15:16:49 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 15:16:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:16:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_sum`,     `water_money`,     `account_data`,     `cost_data`,     `cost_poper`,     `print_state`,     `print_data`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
; ]; Column 'user_org' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null(String), null, 2019-03-21 15:16:49.138(Timestamp)
2019-03-21 15:16:49 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_sum`,     `water_money`,     `account_data`,     `cost_data`,     `cost_poper`,     `print_state`,     `print_data`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
; ]; Column 'user_org' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
### The error may involve com.bootdo.print.dao.PrintDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into print   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `start`,     `end`,     `hu`,     `elec_price`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `elec_money`,     `heat_price`,     `heat_area`,     `heat_cost`,     `heat_sum`,     `heat_money`,     `water_price`,     `water_sum`,     `water_money`,     `account_data`,     `cost_data`,     `cost_poper`,     `print_state`,     `print_data`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
; ]; Column 'user_org' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.save(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.save(PrintServiceImpl.java:37)
	at com.bootdo.print.controller.PrintController.save(PrintController.java:97)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$d34c39d3.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_org' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor272.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-21 15:16:49 -<==    Updates: 1
2019-03-21 15:40:41 -Validating all active sessions...
2019-03-21 15:40:41 -Finished session validation.  No sessions were stopped.
2019-03-21 15:41:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(21)-CONNECTED(21)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 249], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 41], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3279]
2019-03-21 15:47:39 -请求地址 : http://localhost:8081/login;JSESSIONID=274e5e5b-270a-4a5c-baba-944f0b2403f2
2019-03-21 15:47:39 -HTTP METHOD : GET
2019-03-21 15:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:47:39 -参数 : [{}]
2019-03-21 15:47:39 -耗时 : 0
2019-03-21 15:47:39 -返回值 : login
2019-03-21 15:47:39 -请求地址 : http://localhost:8081/getVerify
2019-03-21 15:47:39 -HTTP METHOD : GET
2019-03-21 15:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 15:47:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43aa08ff, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36950421]
2019-03-21 15:47:39 -8864
2019-03-21 15:47:39 -耗时 : 133
2019-03-21 15:47:39 -返回值 : null
2019-03-21 15:47:40 -请求地址 : http://localhost:8081/login
2019-03-21 15:47:40 -HTTP METHOD : GET
2019-03-21 15:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:47:40 -参数 : [{}]
2019-03-21 15:47:40 -耗时 : 1
2019-03-21 15:47:40 -返回值 : login
2019-03-21 15:47:45 -请求地址 : http://localhost:8081/login
2019-03-21 15:47:45 -HTTP METHOD : POST
2019-03-21 15:47:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 15:47:45 -参数 : [admin, 111111, 8864, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3cf993cb]
2019-03-21 15:47:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 15:47:47 -==> Parameters: admin(String)
2019-03-21 15:47:47 -<==      Total: 1
2019-03-21 15:47:47 -耗时 : 2322
2019-03-21 15:47:47 -返回值 : {msg=操作成功, code=0}
2019-03-21 15:47:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:47:47 -==> Parameters: 1(Long), admin(String), 登录(String), 2323(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 15:47:47.968(Timestamp)
2019-03-21 15:47:47 -请求地址 : http://localhost:8081/index
2019-03-21 15:47:47 -HTTP METHOD : GET
2019-03-21 15:47:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 15:47:47 -参数 : [{}]
2019-03-21 15:47:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 15:47:48 -==> Parameters: 1(Long)
2019-03-21 15:47:48 -<==    Updates: 1
2019-03-21 15:47:48 -<==      Total: 46
2019-03-21 15:47:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 15:47:48 -==> Parameters: 138(Long)
2019-03-21 15:47:49 -<==      Total: 1
2019-03-21 15:47:49 -耗时 : 1112
2019-03-21 15:47:49 -返回值 : index_v1
2019-03-21 15:47:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:47:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1112(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 15:47:49.112(Timestamp)
2019-03-21 15:47:49 -请求地址 : http://localhost:8081/main
2019-03-21 15:47:49 -HTTP METHOD : GET
2019-03-21 15:47:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:47:49 -参数 : []
2019-03-21 15:47:49 -耗时 : 2
2019-03-21 15:47:49 -返回值 : main
2019-03-21 15:47:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 15:47:49 -HTTP METHOD : GET
2019-03-21 15:47:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 15:47:49 -参数 : []
2019-03-21 15:47:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 15:47:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 15:47:49 -请求地址 : http://localhost:8081/main
2019-03-21 15:47:49 -HTTP METHOD : GET
2019-03-21 15:47:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:47:49 -参数 : []
2019-03-21 15:47:49 -耗时 : 0
2019-03-21 15:47:49 -返回值 : main
2019-03-21 15:47:50 -<==    Updates: 1
2019-03-21 15:47:50 -<==      Total: 0
2019-03-21 15:47:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 15:47:50 -==> Parameters: 1(Long), 0(String)
2019-03-21 15:47:50 -<==      Total: 1
2019-03-21 15:47:50 -耗时 : 557
2019-03-21 15:47:50 -返回值 : com.bootdo.common.utils.PageUtils@721775c9
2019-03-21 15:47:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 15:47:56 -==> Parameters: 1(Long)
2019-03-21 15:47:56 -<==      Total: 90
2019-03-21 15:47:56 -请求地址 : http://localhost:8081/print/print
2019-03-21 15:47:56 -HTTP METHOD : GET
2019-03-21 15:47:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 15:47:56 -参数 : []
2019-03-21 15:47:56 -耗时 : 0
2019-03-21 15:47:56 -返回值 : print/print/print
2019-03-21 15:47:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:47:57 -HTTP METHOD : GET
2019-03-21 15:47:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:47:57 -参数 : [userType]
2019-03-21 15:47:57 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:47:57 -HTTP METHOD : GET
2019-03-21 15:47:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:47:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 15:47:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 15:47:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 15:47:57 -<==      Total: 3
2019-03-21 15:47:57 -==>  Preparing: select count(*) from print 
2019-03-21 15:47:57 -==> Parameters: 
2019-03-21 15:47:57 -<==      Total: 1
2019-03-21 15:47:57 -耗时 : 165
2019-03-21 15:47:57 -返回值 : com.bootdo.common.utils.PageUtils@28db1f8e
2019-03-21 15:47:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:47:57 -==> Parameters: userType(String)
2019-03-21 15:47:57 -<==      Total: 2
2019-03-21 15:47:57 -耗时 : 579
2019-03-21 15:47:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:47:58 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 15:47:58 -HTTP METHOD : GET
2019-03-21 15:47:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 15:47:58 -参数 : []
2019-03-21 15:47:58 -耗时 : 0
2019-03-21 15:47:58 -返回值 : print/print/add
2019-03-21 15:47:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:47:58 -HTTP METHOD : GET
2019-03-21 15:47:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:47:58 -参数 : [userType]
2019-03-21 15:47:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:47:58 -==> Parameters: userType(String)
2019-03-21 15:47:58 -<==      Total: 2
2019-03-21 15:47:58 -耗时 : 4
2019-03-21 15:47:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:50:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 15:50:52 -HTTP METHOD : GET
2019-03-21 15:50:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 15:50:52 -参数 : []
2019-03-21 15:50:52 -耗时 : 2
2019-03-21 15:50:52 -返回值 : system/dept/deptTree
2019-03-21 15:50:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 15:50:52 -HTTP METHOD : GET
2019-03-21 15:50:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 15:50:52 -参数 : []
2019-03-21 15:50:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 15:50:52 -==> Parameters: 
2019-03-21 15:50:52 -<==      Total: 3
2019-03-21 15:50:52 -耗时 : 17
2019-03-21 15:50:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 15:52:01 -Starting BootdoApplication on ZJZL-20180906VX with PID 17016 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 15:52:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 15:52:02 -The following profiles are active: dev
2019-03-21 15:52:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 15:52:02 CST 2019]; root of context hierarchy
2019-03-21 15:52:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 15:52:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4f922855] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$41eb56fc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 15:52:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 15:52:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 15:52:15 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 15:52:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 15:52:15 -Starting service [Tomcat]
2019-03-21 15:52:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 15:52:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 15:52:16 -Initializing Spring embedded WebApplicationContext
2019-03-21 15:52:16 -Root WebApplicationContext: initialization completed in 14037 ms
2019-03-21 15:52:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 15:52:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 15:52:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 15:52:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 15:52:17 -Filter xssFilter was not registered (disabled)
2019-03-21 15:52:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 15:52:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 15:52:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 15:52:17 -Servlet dispatcherServlet mapped to [/]
2019-03-21 15:52:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 15:52:02 CST 2019]; root of context hierarchy
2019-03-21 15:52:28 -Using default implementation for ThreadExecutor
2019-03-21 15:52:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 15:52:28 -Quartz Scheduler v.2.2.1 created.
2019-03-21 15:52:28 -RAMJobStore initialized.
2019-03-21 15:52:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 15:52:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 15:52:28 -Quartz scheduler version: 2.2.1
2019-03-21 15:52:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7bdb4d69
2019-03-21 15:52:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 15:52:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 15:52:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 15:52:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 15:52:32 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 15:52:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 15:52:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 15:52:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 15:52:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 15:52:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 15:52:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 15:52:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 15:52:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 15:52:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 15:52:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 15:52:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 15:52:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 15:52:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 15:52:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 15:52:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 15:52:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 15:52:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 15:52:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 15:52:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 15:52:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 15:52:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 15:52:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 15:52:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 15:52:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 15:52:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 15:52:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 15:52:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 15:52:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 15:52:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 15:52:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 15:52:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 15:52:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 15:52:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 15:52:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 15:52:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 15:52:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 15:52:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 15:52:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 15:52:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 15:52:32 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 15:52:32 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 15:52:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 15:52:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 15:52:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 15:52:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 15:52:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 15:52:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 15:52:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 15:52:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 15:52:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 15:52:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 15:52:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 15:52:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 15:52:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 15:52:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 15:52:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 15:52:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 15:52:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 15:52:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 15:52:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 15:52:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 15:52:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 15:52:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 15:52:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 15:52:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 15:52:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 15:52:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 15:52:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 15:52:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 15:52:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 15:52:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 15:52:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 15:52:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 15:52:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 15:52:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 15:52:33 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 15:52:33 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 15:52:33 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 15:52:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 15:52:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 15:52:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 15:52:33 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:33 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 15:52:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 15:52:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 15:52:33 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 15:52:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 15:52:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 15:52:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 15:52:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 15:52:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 15:52:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 15:52:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 15:52:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 15:52:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 15:52:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e63ec0b: startup date [Thu Mar 21 15:52:02 CST 2019]; root of context hierarchy
2019-03-21 15:52:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 15:52:35 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 15:52:35 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 15:52:35 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 15:52:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 15:52:37 -Registering beans for JMX exposure on startup
2019-03-21 15:52:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 15:52:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 15:52:37 -Starting beans in phase 2147483647
2019-03-21 15:52:37 -Context refreshed
2019-03-21 15:52:38 -Found 1 custom documentation plugin(s)
2019-03-21 15:52:38 -Scanning for api listing references
2019-03-21 15:52:38 -Generating unique operation named: removeUsingPOST_1
2019-03-21 15:52:38 -Generating unique operation named: addUsingGET_1
2019-03-21 15:52:38 -Generating unique operation named: editUsingGET_1
2019-03-21 15:52:38 -Generating unique operation named: listUsingGET_1
2019-03-21 15:52:38 -Generating unique operation named: removeUsingPOST_2
2019-03-21 15:52:38 -Generating unique operation named: removeUsingPOST_3
2019-03-21 15:52:38 -Generating unique operation named: saveUsingPOST_1
2019-03-21 15:52:38 -Generating unique operation named: updateUsingGET_1
2019-03-21 15:52:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 15:52:38 -Generating unique operation named: updateUsingPOST_1
2019-03-21 15:52:38 -Generating unique operation named: updateUsingPUT_1
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 15:52:39 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 15:52:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 15:52:39 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 15:52:39 -Generating unique operation named: addUsingGET_2
2019-03-21 15:52:39 -Generating unique operation named: editUsingGET_2
2019-03-21 15:52:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 15:52:39 -Generating unique operation named: listUsingGET_2
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_4
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_5
2019-03-21 15:52:39 -Generating unique operation named: saveUsingPOST_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingGET_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPOST_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPUT_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 15:52:39 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 15:52:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 15:52:39 -Generating unique operation named: addUsingGET_3
2019-03-21 15:52:39 -Generating unique operation named: editUsingGET_3
2019-03-21 15:52:39 -Generating unique operation named: listUsingGET_3
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_6
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_7
2019-03-21 15:52:39 -Generating unique operation named: saveUsingPOST_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingGET_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPOST_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPUT_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 15:52:39 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 15:52:39 -Generating unique operation named: addUsingGET_4
2019-03-21 15:52:39 -Generating unique operation named: editUsingGET_4
2019-03-21 15:52:39 -Generating unique operation named: listUsingGET_4
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_8
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_9
2019-03-21 15:52:39 -Generating unique operation named: saveUsingPOST_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingGET_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPOST_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPUT_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 15:52:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 15:52:39 -Generating unique operation named: ElecUsingGET_1
2019-03-21 15:52:39 -Generating unique operation named: addUsingGET_5
2019-03-21 15:52:39 -Generating unique operation named: editUsingGET_5
2019-03-21 15:52:39 -Generating unique operation named: listUsingGET_5
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_10
2019-03-21 15:52:39 -Generating unique operation named: removeUsingPOST_11
2019-03-21 15:52:39 -Generating unique operation named: saveUsingPOST_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingGET_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPOST_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPUT_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 15:52:39 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 15:52:40 -Generating unique operation named: editUsingGET_6
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPOST_6
2019-03-21 15:52:40 -Generating unique operation named: addUsingGET_6
2019-03-21 15:52:40 -Generating unique operation named: editUsingGET_7
2019-03-21 15:52:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_7
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_12
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_13
2019-03-21 15:52:40 -Generating unique operation named: saveUsingPOST_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingGET_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPOST_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPUT_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 15:52:40 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 15:52:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 15:52:40 -Generating unique operation named: addUsingGET_7
2019-03-21 15:52:40 -Generating unique operation named: editUsingGET_8
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_8
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_14
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_15
2019-03-21 15:52:40 -Generating unique operation named: saveUsingPOST_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingGET_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPOST_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPUT_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 15:52:40 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 15:52:40 -Generating unique operation named: addUsingGET_8
2019-03-21 15:52:40 -Generating unique operation named: editUsingGET_9
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_9
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_16
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_17
2019-03-21 15:52:40 -Generating unique operation named: saveUsingPOST_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingGET_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPOST_9
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPUT_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 15:52:40 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 15:52:40 -Generating unique operation named: addUsingGET_9
2019-03-21 15:52:40 -Generating unique operation named: editUsingGET_10
2019-03-21 15:52:40 -Generating unique operation named: infoUsingGET_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingPOST_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingPUT_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 15:52:40 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_10
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_18
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_19
2019-03-21 15:52:40 -Generating unique operation named: saveUsingPOST_9
2019-03-21 15:52:40 -Generating unique operation named: updateUsingPOST_10
2019-03-21 15:52:40 -Generating unique operation named: listUsingGET_11
2019-03-21 15:52:40 -Generating unique operation named: removeUsingPOST_20
2019-03-21 15:52:40 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 15:52:41 -Generating unique operation named: addUsingGET_10
2019-03-21 15:52:41 -Generating unique operation named: editUsingGET_11
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_12
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_21
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_10
2019-03-21 15:52:41 -Generating unique operation named: treeUsingGET_1
2019-03-21 15:52:41 -Generating unique operation named: treeUsingGET_2
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPOST_11
2019-03-21 15:52:41 -Generating unique operation named: addUsingGET_11
2019-03-21 15:52:41 -Generating unique operation named: editUsingGET_12
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_13
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_22
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_23
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_11
2019-03-21 15:52:41 -Generating unique operation named: updateUsingGET_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPOST_12
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPUT_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 15:52:41 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 15:52:41 -Generating unique operation named: addUsingGET_12
2019-03-21 15:52:41 -Generating unique operation named: editUsingGET_13
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_14
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_24
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_25
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_12
2019-03-21 15:52:41 -Generating unique operation named: updateUsingGET_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPOST_13
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPUT_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 15:52:41 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 15:52:41 -Generating unique operation named: addUsingGET_13
2019-03-21 15:52:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 15:52:41 -Generating unique operation named: editUsingGET_14
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_15
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_13
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_14
2019-03-21 15:52:41 -Generating unique operation named: updateUsingPOST_14
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_16
2019-03-21 15:52:41 -Generating unique operation named: listUsingHEAD_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingPOST_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingPUT_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingPATCH_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingDELETE_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 15:52:41 -Generating unique operation named: listUsingTRACE_1
2019-03-21 15:52:41 -Generating unique operation named: addUsingGET_14
2019-03-21 15:52:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 15:52:41 -Generating unique operation named: editUsingGET_15
2019-03-21 15:52:41 -Generating unique operation named: listUsingGET_17
2019-03-21 15:52:41 -Generating unique operation named: removeUsingPOST_26
2019-03-21 15:52:41 -Generating unique operation named: saveUsingPOST_15
2019-03-21 15:52:41 -Generating unique operation named: treeUsingGET_3
2019-03-21 15:52:41 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPOST_15
2019-03-21 15:52:42 -Generating unique operation named: addUsingGET_15
2019-03-21 15:52:42 -Generating unique operation named: editUsingGET_16
2019-03-21 15:52:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 15:52:42 -Generating unique operation named: listUsingGET_18
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_27
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_28
2019-03-21 15:52:42 -Generating unique operation named: saveUsingPOST_16
2019-03-21 15:52:42 -Generating unique operation named: updateUsingGET_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPOST_16
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPUT_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 15:52:42 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 15:52:42 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 15:52:42 -Generating unique operation named: addUsingGET_16
2019-03-21 15:52:42 -Generating unique operation named: editUsingGET_17
2019-03-21 15:52:42 -Generating unique operation named: listUsingGET_19
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_29
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_30
2019-03-21 15:52:42 -Generating unique operation named: saveUsingPOST_17
2019-03-21 15:52:42 -Generating unique operation named: updateUsingGET_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPOST_17
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPUT_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 15:52:42 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 15:52:42 -Generating unique operation named: addUsingGET_17
2019-03-21 15:52:42 -Generating unique operation named: editUsingGET_18
2019-03-21 15:52:42 -Generating unique operation named: listUsingGET_20
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_31
2019-03-21 15:52:42 -Generating unique operation named: removeUsingPOST_32
2019-03-21 15:52:42 -Generating unique operation named: saveUsingPOST_18
2019-03-21 15:52:42 -Generating unique operation named: updateUsingGET_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPOST_18
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPUT_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 15:52:42 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 15:52:42 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 15:52:42 -Starting Quartz Scheduler now
2019-03-21 15:52:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 15:52:42 -Starting...
2019-03-21 15:52:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 15:52:42 -Started.
2019-03-21 15:52:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 15:52:42 -Using a shared selector for servlet write/read
2019-03-21 15:52:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 15:52:42 -Started BootdoApplication in 42.898 seconds (JVM running for 44.665)
2019-03-21 15:52:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 15:52:43 -==> Parameters: 
2019-03-21 15:52:43 -<==      Total: 1
2019-03-21 15:52:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 15:52:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 15:52:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-03-21 15:52:58 -Enabling session validation scheduler...
2019-03-21 15:52:58 -请求地址 : http://localhost:8081/login;JSESSIONID=d32043ec-8a91-4ddf-8702-365a3a1937e0
2019-03-21 15:52:58 -HTTP METHOD : GET
2019-03-21 15:52:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:52:58 -参数 : [{}]
2019-03-21 15:52:58 -耗时 : 6
2019-03-21 15:52:58 -返回值 : login
2019-03-21 15:53:00 -请求地址 : http://localhost:8081/getVerify
2019-03-21 15:53:00 -HTTP METHOD : GET
2019-03-21 15:53:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 15:53:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2634e57c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5e7cfdbe]
2019-03-21 15:53:03 -5202
2019-03-21 15:53:03 -耗时 : 3477
2019-03-21 15:53:03 -返回值 : null
2019-03-21 15:53:08 -请求地址 : http://localhost:8081/login
2019-03-21 15:53:08 -HTTP METHOD : POST
2019-03-21 15:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 15:53:08 -参数 : [admin, 111111, 5202, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7693207e]
2019-03-21 15:53:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 15:53:08 -==> Parameters: admin(String)
2019-03-21 15:53:09 -<==      Total: 1
2019-03-21 15:53:09 -耗时 : 179
2019-03-21 15:53:09 -返回值 : {msg=操作成功, code=0}
2019-03-21 15:53:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 15:53:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:53:09 -==> Parameters: 1(Long), admin(String), 登录(String), 179(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 15:53:09.12(Timestamp)
2019-03-21 15:53:09 -请求地址 : http://localhost:8081/index
2019-03-21 15:53:09 -HTTP METHOD : GET
2019-03-21 15:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 15:53:09 -参数 : [{}]
2019-03-21 15:53:09 -<==    Updates: 1
2019-03-21 15:53:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 15:53:09 -==> Parameters: 1(Long)
2019-03-21 15:53:10 -<==      Total: 46
2019-03-21 15:53:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 15:53:10 -==> Parameters: 138(Long)
2019-03-21 15:53:10 -<==      Total: 1
2019-03-21 15:53:10 -耗时 : 1063
2019-03-21 15:53:10 -返回值 : index_v1
2019-03-21 15:53:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:53:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1063(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 15:53:10.659(Timestamp)
2019-03-21 15:53:10 -<==    Updates: 1
2019-03-21 15:53:11 -请求地址 : http://localhost:8081/main
2019-03-21 15:53:11 -HTTP METHOD : GET
2019-03-21 15:53:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:53:11 -参数 : []
2019-03-21 15:53:11 -耗时 : 1
2019-03-21 15:53:11 -返回值 : main
2019-03-21 15:53:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 15:53:11 -HTTP METHOD : GET
2019-03-21 15:53:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 15:53:11 -参数 : []
2019-03-21 15:53:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 15:53:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 15:53:11 -<==      Total: 0
2019-03-21 15:53:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 15:53:11 -==> Parameters: 1(Long), 0(String)
2019-03-21 15:53:11 -请求地址 : http://localhost:8081/main
2019-03-21 15:53:11 -HTTP METHOD : GET
2019-03-21 15:53:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:53:11 -参数 : []
2019-03-21 15:53:11 -耗时 : 0
2019-03-21 15:53:11 -返回值 : main
2019-03-21 15:53:11 -<==      Total: 1
2019-03-21 15:53:11 -耗时 : 190
2019-03-21 15:53:11 -返回值 : com.bootdo.common.utils.PageUtils@2fdb4dc7
2019-03-21 15:53:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 15:53:13 -==> Parameters: 1(Long)
2019-03-21 15:53:13 -<==      Total: 90
2019-03-21 15:53:13 -请求地址 : http://localhost:8081/print/print
2019-03-21 15:53:13 -HTTP METHOD : GET
2019-03-21 15:53:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 15:53:13 -参数 : []
2019-03-21 15:53:13 -耗时 : 1
2019-03-21 15:53:13 -返回值 : print/print/print
2019-03-21 15:53:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:53:15 -HTTP METHOD : GET
2019-03-21 15:53:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:53:15 -参数 : [userType]
2019-03-21 15:53:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:53:15 -==> Parameters: userType(String)
2019-03-21 15:53:15 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:53:15 -HTTP METHOD : GET
2019-03-21 15:53:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:53:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 15:53:15 -<==      Total: 2
2019-03-21 15:53:15 -耗时 : 108
2019-03-21 15:53:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:53:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 15:53:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 15:53:15 -<==      Total: 3
2019-03-21 15:53:15 -==>  Preparing: select count(*) from print 
2019-03-21 15:53:15 -==> Parameters: 
2019-03-21 15:53:15 -<==      Total: 1
2019-03-21 15:53:15 -耗时 : 166
2019-03-21 15:53:15 -返回值 : com.bootdo.common.utils.PageUtils@2b8c012b
2019-03-21 15:53:19 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 15:53:19 -HTTP METHOD : GET
2019-03-21 15:53:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 15:53:19 -参数 : []
2019-03-21 15:53:19 -耗时 : 0
2019-03-21 15:53:19 -返回值 : print/print/add
2019-03-21 15:53:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:53:20 -HTTP METHOD : GET
2019-03-21 15:53:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:53:20 -参数 : [userType]
2019-03-21 15:53:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:53:20 -==> Parameters: userType(String)
2019-03-21 15:53:20 -<==      Total: 2
2019-03-21 15:53:20 -耗时 : 8
2019-03-21 15:53:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:53:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-21 15:54:57 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 15:55:16 -请求地址 : http://localhost:8081/
2019-03-21 15:55:16 -HTTP METHOD : GET
2019-03-21 15:55:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-21 15:55:16 -参数 : [{}]
2019-03-21 15:55:16 -耗时 : 0
2019-03-21 15:55:16 -返回值 : redirect:/index
2019-03-21 15:55:16 -请求地址 : http://localhost:8081/login;JSESSIONID=695a3054-59d5-4848-baa7-a85efbeb9bd0
2019-03-21 15:55:16 -HTTP METHOD : GET
2019-03-21 15:55:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:55:16 -参数 : [{}]
2019-03-21 15:55:16 -耗时 : 1
2019-03-21 15:55:16 -返回值 : login
2019-03-21 15:55:25 -请求地址 : http://localhost:8081/
2019-03-21 15:55:25 -HTTP METHOD : GET
2019-03-21 15:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-21 15:55:25 -参数 : [{}]
2019-03-21 15:55:25 -耗时 : 1
2019-03-21 15:55:25 -返回值 : redirect:/index
2019-03-21 15:55:25 -请求地址 : http://localhost:8081/login
2019-03-21 15:55:25 -HTTP METHOD : GET
2019-03-21 15:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:55:25 -参数 : [{}]
2019-03-21 15:55:25 -耗时 : 0
2019-03-21 15:55:25 -返回值 : login
2019-03-21 15:55:27 -请求地址 : http://localhost:8081/getVerify
2019-03-21 15:55:27 -HTTP METHOD : GET
2019-03-21 15:55:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 15:55:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28f7d39f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7a12f371]
2019-03-21 15:55:27 -5280
2019-03-21 15:55:27 -耗时 : 17
2019-03-21 15:55:27 -返回值 : null
2019-03-21 15:55:28 -请求地址 : http://localhost:8081/login
2019-03-21 15:55:28 -HTTP METHOD : GET
2019-03-21 15:55:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 15:55:28 -参数 : [{}]
2019-03-21 15:55:28 -耗时 : 1
2019-03-21 15:55:28 -返回值 : login
2019-03-21 15:55:34 -请求地址 : http://localhost:8081/login
2019-03-21 15:55:34 -HTTP METHOD : POST
2019-03-21 15:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 15:55:34 -参数 : [admin, 111111, 5280, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4139bd71]
2019-03-21 15:55:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 15:55:34 -==> Parameters: admin(String)
2019-03-21 15:55:34 -<==      Total: 1
2019-03-21 15:55:34 -耗时 : 12
2019-03-21 15:55:34 -返回值 : {msg=操作成功, code=0}
2019-03-21 15:55:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:55:34 -==> Parameters: 1(Long), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 15:55:34.913(Timestamp)
2019-03-21 15:55:34 -请求地址 : http://localhost:8081/index
2019-03-21 15:55:34 -HTTP METHOD : GET
2019-03-21 15:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 15:55:34 -参数 : [{}]
2019-03-21 15:55:35 -<==    Updates: 1
2019-03-21 15:55:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 15:55:35 -==> Parameters: 1(Long)
2019-03-21 15:55:35 -<==      Total: 46
2019-03-21 15:55:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 15:55:35 -==> Parameters: 138(Long)
2019-03-21 15:55:35 -<==      Total: 1
2019-03-21 15:55:35 -耗时 : 766
2019-03-21 15:55:35 -返回值 : index_v1
2019-03-21 15:55:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 15:55:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 766(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 15:55:35.734(Timestamp)
2019-03-21 15:55:35 -请求地址 : http://localhost:8081/main
2019-03-21 15:55:35 -HTTP METHOD : GET
2019-03-21 15:55:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:55:35 -参数 : []
2019-03-21 15:55:35 -耗时 : 1
2019-03-21 15:55:35 -返回值 : main
2019-03-21 15:55:35 -<==    Updates: 1
2019-03-21 15:55:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 15:55:36 -HTTP METHOD : GET
2019-03-21 15:55:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 15:55:36 -参数 : []
2019-03-21 15:55:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 15:55:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 15:55:36 -<==      Total: 0
2019-03-21 15:55:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 15:55:36 -==> Parameters: 1(Long), 0(String)
2019-03-21 15:55:36 -<==      Total: 1
2019-03-21 15:55:36 -耗时 : 46
2019-03-21 15:55:36 -返回值 : com.bootdo.common.utils.PageUtils@3744f369
2019-03-21 15:55:36 -请求地址 : http://localhost:8081/main
2019-03-21 15:55:36 -HTTP METHOD : GET
2019-03-21 15:55:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 15:55:36 -参数 : []
2019-03-21 15:55:36 -耗时 : 1
2019-03-21 15:55:36 -返回值 : main
2019-03-21 15:55:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 15:55:47 -==> Parameters: 1(Long)
2019-03-21 15:55:47 -<==      Total: 90
2019-03-21 15:55:47 -请求地址 : http://localhost:8081/print/print
2019-03-21 15:55:47 -HTTP METHOD : GET
2019-03-21 15:55:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 15:55:47 -参数 : []
2019-03-21 15:55:47 -耗时 : 0
2019-03-21 15:55:47 -返回值 : print/print/print
2019-03-21 15:55:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:55:49 -HTTP METHOD : GET
2019-03-21 15:55:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:55:49 -参数 : [userType]
2019-03-21 15:55:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:55:49 -==> Parameters: userType(String)
2019-03-21 15:55:49 -<==      Total: 2
2019-03-21 15:55:49 -耗时 : 5
2019-03-21 15:55:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:55:49 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:55:49 -HTTP METHOD : GET
2019-03-21 15:55:49 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:55:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 15:55:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 15:55:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 15:55:49 -<==      Total: 3
2019-03-21 15:55:49 -==>  Preparing: select count(*) from print 
2019-03-21 15:55:49 -==> Parameters: 
2019-03-21 15:55:49 -<==      Total: 1
2019-03-21 15:55:49 -耗时 : 58
2019-03-21 15:55:49 -返回值 : com.bootdo.common.utils.PageUtils@125b3f55
2019-03-21 15:56:07 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:07 -HTTP METHOD : GET
2019-03-21 15:56:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:07 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:07 -<==      Total: 0
2019-03-21 15:56:07 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:07 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:07 -<==      Total: 1
2019-03-21 15:56:07 -耗时 : 15
2019-03-21 15:56:07 -返回值 : com.bootdo.common.utils.PageUtils@775b6cfd
2019-03-21 15:56:08 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:08 -HTTP METHOD : GET
2019-03-21 15:56:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:08 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:08 -<==      Total: 0
2019-03-21 15:56:08 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:08 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:08 -<==      Total: 1
2019-03-21 15:56:08 -耗时 : 8
2019-03-21 15:56:08 -返回值 : com.bootdo.common.utils.PageUtils@350c4181
2019-03-21 15:56:09 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:09 -HTTP METHOD : GET
2019-03-21 15:56:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:09 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:09 -<==      Total: 0
2019-03-21 15:56:09 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:09 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:09 -<==      Total: 1
2019-03-21 15:56:09 -耗时 : 12
2019-03-21 15:56:09 -返回值 : com.bootdo.common.utils.PageUtils@1b2e2c44
2019-03-21 15:56:10 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:10 -HTTP METHOD : GET
2019-03-21 15:56:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:10 -<==      Total: 0
2019-03-21 15:56:10 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:10 -<==      Total: 1
2019-03-21 15:56:10 -耗时 : 8
2019-03-21 15:56:10 -返回值 : com.bootdo.common.utils.PageUtils@38523a0a
2019-03-21 15:56:10 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:10 -HTTP METHOD : GET
2019-03-21 15:56:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:10 -<==      Total: 0
2019-03-21 15:56:10 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:10 -<==      Total: 1
2019-03-21 15:56:10 -耗时 : 10
2019-03-21 15:56:10 -返回值 : com.bootdo.common.utils.PageUtils@d0a6f3c
2019-03-21 15:56:10 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:10 -HTTP METHOD : GET
2019-03-21 15:56:10 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:10 -<==      Total: 0
2019-03-21 15:56:10 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:10 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:10 -<==      Total: 1
2019-03-21 15:56:10 -耗时 : 8
2019-03-21 15:56:10 -返回值 : com.bootdo.common.utils.PageUtils@2f7a5670
2019-03-21 15:56:11 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:11 -HTTP METHOD : GET
2019-03-21 15:56:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:11 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:11 -<==      Total: 0
2019-03-21 15:56:11 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:11 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:11 -<==      Total: 1
2019-03-21 15:56:11 -耗时 : 8
2019-03-21 15:56:11 -返回值 : com.bootdo.common.utils.PageUtils@38f156c4
2019-03-21 15:56:12 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:12 -HTTP METHOD : GET
2019-03-21 15:56:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:12 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:12 -<==      Total: 0
2019-03-21 15:56:12 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:12 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:12 -<==      Total: 1
2019-03-21 15:56:12 -耗时 : 9
2019-03-21 15:56:12 -返回值 : com.bootdo.common.utils.PageUtils@524db5e7
2019-03-21 15:56:13 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:13 -HTTP METHOD : GET
2019-03-21 15:56:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-23}]
2019-03-21 15:56:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:13 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:13 -<==      Total: 0
2019-03-21 15:56:13 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:13 -==> Parameters: 2019-03-23 00:00:00(String), 2019-03-23 23:59:59(String)
2019-03-21 15:56:13 -<==      Total: 1
2019-03-21 15:56:13 -耗时 : 9
2019-03-21 15:56:13 -返回值 : com.bootdo.common.utils.PageUtils@4e94a6e
2019-03-21 15:56:18 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:18 -HTTP METHOD : GET
2019-03-21 15:56:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 15:56:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 15:56:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 15:56:18 -<==      Total: 3
2019-03-21 15:56:18 -==>  Preparing: select count(*) from print 
2019-03-21 15:56:18 -==> Parameters: 
2019-03-21 15:56:18 -<==      Total: 1
2019-03-21 15:56:18 -耗时 : 12
2019-03-21 15:56:18 -返回值 : com.bootdo.common.utils.PageUtils@39c74383
2019-03-21 15:56:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 15:56:26 -HTTP METHOD : GET
2019-03-21 15:56:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 15:56:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-21 15:56:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-21 15:56:26 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 15:56:26 -<==      Total: 2
2019-03-21 15:56:26 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-21 15:56:26 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-21 15:56:26 -<==      Total: 1
2019-03-21 15:56:26 -耗时 : 10
2019-03-21 15:56:26 -返回值 : com.bootdo.common.utils.PageUtils@76fd0b12
2019-03-21 15:56:38 -请求地址 : http://localhost:8081/print/print/add
2019-03-21 15:56:38 -HTTP METHOD : GET
2019-03-21 15:56:38 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-21 15:56:38 -参数 : []
2019-03-21 15:56:38 -耗时 : 0
2019-03-21 15:56:38 -返回值 : print/print/add
2019-03-21 15:56:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:56:38 -HTTP METHOD : GET
2019-03-21 15:56:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:56:38 -参数 : [userType]
2019-03-21 15:56:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:56:38 -==> Parameters: userType(String)
2019-03-21 15:56:38 -<==      Total: 2
2019-03-21 15:56:38 -耗时 : 5
2019-03-21 15:56:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 15:56:47 -请求地址 : http://localhost:8081/print/print/edit/2
2019-03-21 15:56:47 -HTTP METHOD : GET
2019-03-21 15:56:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-21 15:56:47 -参数 : [2, {}]
2019-03-21 15:56:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-21 15:56:47 -==> Parameters: 2(Long)
2019-03-21 15:56:47 -<==      Total: 1
2019-03-21 15:56:47 -耗时 : 6
2019-03-21 15:56:47 -返回值 : print/print/edit
2019-03-21 15:56:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 15:56:48 -HTTP METHOD : GET
2019-03-21 15:56:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 15:56:48 -参数 : [userType]
2019-03-21 15:56:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 15:56:48 -==> Parameters: userType(String)
2019-03-21 15:56:48 -<==      Total: 2
2019-03-21 15:56:48 -耗时 : 5
2019-03-21 15:56:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 16:23:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-03-21 19:06:19 -Starting BootdoApplication on ZJZL-20180906VX with PID 13864 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 19:06:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 19:06:19 -The following profiles are active: dev
2019-03-21 19:06:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Thu Mar 21 19:06:20 CST 2019]; root of context hierarchy
2019-03-21 19:06:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 19:06:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$faf816ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ed514595] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 19:06:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 19:06:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:06:40 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 19:06:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 19:06:41 -Starting service [Tomcat]
2019-03-21 19:06:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 19:06:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 19:06:41 -Initializing Spring embedded WebApplicationContext
2019-03-21 19:06:41 -Root WebApplicationContext: initialization completed in 21510 ms
2019-03-21 19:06:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 19:06:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 19:06:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 19:06:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 19:06:43 -Filter xssFilter was not registered (disabled)
2019-03-21 19:06:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 19:06:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 19:06:43 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 19:06:43 -Servlet dispatcherServlet mapped to [/]
2019-03-21 19:06:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Thu Mar 21 19:06:20 CST 2019]; root of context hierarchy
2019-03-21 19:06:48 -Using default implementation for ThreadExecutor
2019-03-21 19:06:48 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 19:06:48 -Quartz Scheduler v.2.2.1 created.
2019-03-21 19:06:48 -RAMJobStore initialized.
2019-03-21 19:06:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 19:06:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 19:06:48 -Quartz scheduler version: 2.2.1
2019-03-21 19:06:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b7cf475
2019-03-21 19:06:49 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 19:06:49 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 19:06:52 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 19:06:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 19:06:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 19:06:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 19:06:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 19:06:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 19:06:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 19:06:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 19:06:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 19:06:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 19:06:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 19:06:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 19:06:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 19:06:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:06:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:06:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 19:06:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 19:06:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 19:06:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 19:06:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 19:06:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 19:06:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 19:06:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 19:06:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 19:06:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 19:06:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 19:06:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 19:06:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 19:06:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 19:06:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:06:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 19:06:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 19:06:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 19:06:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:06:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:06:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 19:06:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 19:06:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 19:06:52 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:06:52 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 19:06:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 19:06:52 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 19:06:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 19:06:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 19:06:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 19:06:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 19:06:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 19:06:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 19:06:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 19:06:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 19:06:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 19:06:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 19:06:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 19:06:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 19:06:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 19:06:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 19:06:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 19:06:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 19:06:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 19:06:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 19:06:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 19:06:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 19:06:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 19:06:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 19:06:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 19:06:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 19:06:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 19:06:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 19:06:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 19:06:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:06:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:06:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 19:06:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 19:06:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 19:06:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 19:06:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 19:06:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 19:06:52 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:06:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:06:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 19:06:52 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:06:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 19:06:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:06:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 19:06:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 19:06:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 19:06:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 19:06:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 19:06:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 19:06:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:06:55 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@45c8d09f: startup date [Thu Mar 21 19:06:20 CST 2019]; root of context hierarchy
2019-03-21 19:06:55 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:06:55 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:06:55 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:06:55 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 19:06:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 19:07:00 -Registering beans for JMX exposure on startup
2019-03-21 19:07:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 19:07:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 19:07:00 -Starting beans in phase 2147483647
2019-03-21 19:07:00 -Context refreshed
2019-03-21 19:07:00 -Found 1 custom documentation plugin(s)
2019-03-21 19:07:00 -Scanning for api listing references
2019-03-21 19:07:01 -Generating unique operation named: removeUsingPOST_1
2019-03-21 19:07:01 -Generating unique operation named: addUsingGET_1
2019-03-21 19:07:01 -Generating unique operation named: editUsingGET_1
2019-03-21 19:07:01 -Generating unique operation named: listUsingGET_1
2019-03-21 19:07:01 -Generating unique operation named: removeUsingPOST_2
2019-03-21 19:07:01 -Generating unique operation named: removeUsingPOST_3
2019-03-21 19:07:01 -Generating unique operation named: saveUsingPOST_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingGET_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingPOST_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingPUT_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 19:07:01 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 19:07:01 -Generating unique operation named: addUsingGET_2
2019-03-21 19:07:01 -Generating unique operation named: editUsingGET_2
2019-03-21 19:07:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 19:07:02 -Generating unique operation named: listUsingGET_2
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_4
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_5
2019-03-21 19:07:02 -Generating unique operation named: saveUsingPOST_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingGET_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPOST_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPUT_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 19:07:02 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 19:07:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 19:07:02 -Generating unique operation named: addUsingGET_3
2019-03-21 19:07:02 -Generating unique operation named: editUsingGET_3
2019-03-21 19:07:02 -Generating unique operation named: listUsingGET_3
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_6
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_7
2019-03-21 19:07:02 -Generating unique operation named: saveUsingPOST_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingGET_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPOST_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPUT_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 19:07:02 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 19:07:02 -Generating unique operation named: addUsingGET_4
2019-03-21 19:07:02 -Generating unique operation named: editUsingGET_4
2019-03-21 19:07:02 -Generating unique operation named: listUsingGET_4
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_8
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_9
2019-03-21 19:07:02 -Generating unique operation named: saveUsingPOST_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingGET_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPOST_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPUT_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 19:07:02 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 19:07:02 -Generating unique operation named: ElecUsingGET_1
2019-03-21 19:07:02 -Generating unique operation named: addUsingGET_5
2019-03-21 19:07:02 -Generating unique operation named: editUsingGET_5
2019-03-21 19:07:02 -Generating unique operation named: listUsingGET_5
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_10
2019-03-21 19:07:02 -Generating unique operation named: removeUsingPOST_11
2019-03-21 19:07:02 -Generating unique operation named: saveUsingPOST_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingGET_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPOST_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPUT_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 19:07:02 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 19:07:02 -Generating unique operation named: editUsingGET_6
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPOST_6
2019-03-21 19:07:03 -Generating unique operation named: addUsingGET_6
2019-03-21 19:07:03 -Generating unique operation named: editUsingGET_7
2019-03-21 19:07:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_7
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_12
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_13
2019-03-21 19:07:03 -Generating unique operation named: saveUsingPOST_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingGET_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPOST_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPUT_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 19:07:03 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 19:07:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 19:07:03 -Generating unique operation named: addUsingGET_7
2019-03-21 19:07:03 -Generating unique operation named: editUsingGET_8
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_8
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_14
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_15
2019-03-21 19:07:03 -Generating unique operation named: saveUsingPOST_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingGET_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPOST_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPUT_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 19:07:03 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 19:07:03 -Generating unique operation named: addUsingGET_8
2019-03-21 19:07:03 -Generating unique operation named: editUsingGET_9
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_9
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_16
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_17
2019-03-21 19:07:03 -Generating unique operation named: saveUsingPOST_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingGET_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPOST_9
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPUT_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 19:07:03 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 19:07:03 -Generating unique operation named: addUsingGET_9
2019-03-21 19:07:03 -Generating unique operation named: editUsingGET_10
2019-03-21 19:07:03 -Generating unique operation named: infoUsingGET_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingPOST_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingPUT_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 19:07:03 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_10
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_18
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_19
2019-03-21 19:07:03 -Generating unique operation named: saveUsingPOST_9
2019-03-21 19:07:03 -Generating unique operation named: updateUsingPOST_10
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_11
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_20
2019-03-21 19:07:03 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 19:07:03 -Generating unique operation named: addUsingGET_10
2019-03-21 19:07:03 -Generating unique operation named: editUsingGET_11
2019-03-21 19:07:03 -Generating unique operation named: listUsingGET_12
2019-03-21 19:07:03 -Generating unique operation named: removeUsingPOST_21
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_10
2019-03-21 19:07:04 -Generating unique operation named: treeUsingGET_1
2019-03-21 19:07:04 -Generating unique operation named: treeUsingGET_2
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_11
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_11
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_12
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_13
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_22
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_23
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingGET_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPUT_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 19:07:04 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_12
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_13
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_14
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_24
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_25
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingGET_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPUT_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 19:07:04 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_13
2019-03-21 19:07:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_14
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_15
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_13
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_14
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_14
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_16
2019-03-21 19:07:04 -Generating unique operation named: listUsingHEAD_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingPOST_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingPUT_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingPATCH_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingDELETE_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 19:07:04 -Generating unique operation named: listUsingTRACE_1
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_14
2019-03-21 19:07:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_15
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_17
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_26
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_15
2019-03-21 19:07:04 -Generating unique operation named: treeUsingGET_3
2019-03-21 19:07:04 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_15
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_15
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_16
2019-03-21 19:07:04 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_18
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_27
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_28
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_16
2019-03-21 19:07:04 -Generating unique operation named: updateUsingGET_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_16
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPUT_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 19:07:04 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 19:07:04 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_16
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_17
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_19
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_29
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_30
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_17
2019-03-21 19:07:04 -Generating unique operation named: updateUsingGET_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_17
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPUT_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 19:07:04 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 19:07:04 -Generating unique operation named: addUsingGET_17
2019-03-21 19:07:04 -Generating unique operation named: editUsingGET_18
2019-03-21 19:07:04 -Generating unique operation named: listUsingGET_20
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_31
2019-03-21 19:07:04 -Generating unique operation named: removeUsingPOST_32
2019-03-21 19:07:04 -Generating unique operation named: saveUsingPOST_18
2019-03-21 19:07:04 -Generating unique operation named: updateUsingGET_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPOST_18
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPUT_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 19:07:04 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 19:07:04 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 19:07:04 -Starting Quartz Scheduler now
2019-03-21 19:07:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 19:07:04 -Starting...
2019-03-21 19:07:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 19:07:04 -Started.
2019-03-21 19:07:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 19:07:05 -Using a shared selector for servlet write/read
2019-03-21 19:07:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 19:07:05 -Started BootdoApplication in 48.208 seconds (JVM running for 50.125)
2019-03-21 19:07:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 19:07:05 -==> Parameters: 
2019-03-21 19:07:05 -<==      Total: 1
2019-03-21 19:07:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 19:07:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 19:07:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 99 ms
2019-03-21 19:07:22 -Enabling session validation scheduler...
2019-03-21 19:07:22 -请求地址 : http://localhost:8081/login;JSESSIONID=633a5c50-7518-47e6-acfd-aeec872e4c01
2019-03-21 19:07:22 -HTTP METHOD : GET
2019-03-21 19:07:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:07:22 -参数 : [{}]
2019-03-21 19:07:22 -耗时 : 6
2019-03-21 19:07:22 -返回值 : login
2019-03-21 19:07:26 -请求地址 : http://localhost:8081/getVerify
2019-03-21 19:07:26 -HTTP METHOD : GET
2019-03-21 19:07:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 19:07:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@420eae08, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d8aae17]
2019-03-21 19:07:31 -6623
2019-03-21 19:07:32 -耗时 : 5442
2019-03-21 19:07:32 -返回值 : null
2019-03-21 19:07:40 -请求地址 : http://localhost:8081/login
2019-03-21 19:07:40 -HTTP METHOD : POST
2019-03-21 19:07:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 19:07:40 -参数 : [admin, 111111, 6623, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a018f7f]
2019-03-21 19:07:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 19:07:40 -==> Parameters: admin(String)
2019-03-21 19:07:40 -<==      Total: 1
2019-03-21 19:07:40 -耗时 : 344
2019-03-21 19:07:40 -返回值 : {msg=操作成功, code=0}
2019-03-21 19:07:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 19:07:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:07:40 -==> Parameters: 1(Long), admin(String), 登录(String), 344(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 19:07:40.894(Timestamp)
2019-03-21 19:07:41 -请求地址 : http://localhost:8081/index
2019-03-21 19:07:41 -HTTP METHOD : GET
2019-03-21 19:07:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 19:07:41 -参数 : [{}]
2019-03-21 19:07:41 -<==    Updates: 1
2019-03-21 19:07:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 19:07:41 -==> Parameters: 1(Long)
2019-03-21 19:07:41 -<==      Total: 46
2019-03-21 19:07:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 19:07:41 -==> Parameters: 138(Long)
2019-03-21 19:07:41 -<==      Total: 1
2019-03-21 19:07:41 -耗时 : 646
2019-03-21 19:07:41 -返回值 : index_v1
2019-03-21 19:07:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:07:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 646(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 19:07:41.984(Timestamp)
2019-03-21 19:07:42 -<==    Updates: 1
2019-03-21 19:07:42 -请求地址 : http://localhost:8081/main
2019-03-21 19:07:42 -HTTP METHOD : GET
2019-03-21 19:07:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:07:42 -参数 : []
2019-03-21 19:07:42 -耗时 : 21
2019-03-21 19:07:42 -返回值 : main
2019-03-21 19:07:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 19:07:43 -HTTP METHOD : GET
2019-03-21 19:07:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 19:07:43 -参数 : []
2019-03-21 19:07:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 19:07:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 19:07:43 -<==      Total: 0
2019-03-21 19:07:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 19:07:43 -==> Parameters: 1(Long), 0(String)
2019-03-21 19:07:43 -<==      Total: 1
2019-03-21 19:07:43 -耗时 : 128
2019-03-21 19:07:43 -返回值 : com.bootdo.common.utils.PageUtils@f7321a
2019-03-21 19:07:44 -请求地址 : http://localhost:8081/main
2019-03-21 19:07:44 -HTTP METHOD : GET
2019-03-21 19:07:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:07:44 -参数 : []
2019-03-21 19:07:44 -耗时 : 1
2019-03-21 19:07:44 -返回值 : main
2019-03-21 19:07:53 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-21 19:08:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 19:08:03 -==> Parameters: 1(Long)
2019-03-21 19:08:03 -<==      Total: 90
2019-03-21 19:08:03 -请求地址 : http://localhost:8081/print/print
2019-03-21 19:08:03 -HTTP METHOD : GET
2019-03-21 19:08:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 19:08:03 -参数 : []
2019-03-21 19:08:03 -耗时 : 0
2019-03-21 19:08:03 -返回值 : print/print/print
2019-03-21 19:08:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:08:04 -HTTP METHOD : GET
2019-03-21 19:08:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:08:04 -参数 : [userType]
2019-03-21 19:08:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:08:04 -==> Parameters: userType(String)
2019-03-21 19:08:04 -<==      Total: 2
2019-03-21 19:08:04 -耗时 : 118
2019-03-21 19:08:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 19:08:04 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 19:08:04 -HTTP METHOD : GET
2019-03-21 19:08:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 19:08:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 19:08:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 19:08:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:08:05 -{conn-10001, pstmt-20009} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.list(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.list(PrintServiceImpl.java:29)
	at com.bootdo.print.controller.PrintController.list(PrintController.java:69)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$eab812ea.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 19:08:05 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 19:08:05 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 19:08:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:08:05 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.list(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.list(PrintServiceImpl.java:29)
	at com.bootdo.print.controller.PrintController.list(PrintController.java:69)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$eab812ea.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-21 19:08:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'(String), null, 2019-03-21 19:08:05.521(Timestamp)
2019-03-21 19:08:05 -<==    Updates: 1
2019-03-21 19:12:21 -Starting BootdoApplication on ZJZL-20180906VX with PID 656 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 19:12:21 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 19:12:21 -The following profiles are active: dev
2019-03-21 19:12:21 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ef0d29e: startup date [Thu Mar 21 19:12:21 CST 2019]; root of context hierarchy
2019-03-21 19:12:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 19:12:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$caeb42b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd447157] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 19:12:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 19:12:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:12:31 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 19:12:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 19:12:31 -Starting service [Tomcat]
2019-03-21 19:12:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 19:12:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 19:12:32 -Initializing Spring embedded WebApplicationContext
2019-03-21 19:12:32 -Root WebApplicationContext: initialization completed in 10837 ms
2019-03-21 19:12:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 19:12:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 19:12:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 19:12:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 19:12:33 -Filter xssFilter was not registered (disabled)
2019-03-21 19:12:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 19:12:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 19:12:33 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 19:12:33 -Servlet dispatcherServlet mapped to [/]
2019-03-21 19:12:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ef0d29e: startup date [Thu Mar 21 19:12:21 CST 2019]; root of context hierarchy
2019-03-21 19:12:37 -Using default implementation for ThreadExecutor
2019-03-21 19:12:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 19:12:37 -Quartz Scheduler v.2.2.1 created.
2019-03-21 19:12:37 -RAMJobStore initialized.
2019-03-21 19:12:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 19:12:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 19:12:37 -Quartz scheduler version: 2.2.1
2019-03-21 19:12:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6942ee48
2019-03-21 19:12:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 19:12:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 19:12:43 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 19:12:43 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:43 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 19:12:43 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 19:12:43 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 19:12:43 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 19:12:43 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 19:12:43 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 19:12:43 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 19:12:43 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 19:12:43 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:43 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 19:12:43 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 19:12:43 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 19:12:43 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 19:12:43 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:43 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:43 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 19:12:43 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:12:43 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:12:43 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 19:12:43 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 19:12:43 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 19:12:43 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 19:12:43 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:43 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 19:12:43 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 19:12:43 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 19:12:43 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 19:12:43 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:43 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 19:12:43 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 19:12:43 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 19:12:43 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:43 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 19:12:43 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 19:12:43 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:43 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:43 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 19:12:43 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:43 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 19:12:43 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 19:12:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 19:12:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:12:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 19:12:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 19:12:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 19:12:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:12:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:12:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 19:12:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 19:12:44 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:12:44 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 19:12:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 19:12:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 19:12:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 19:12:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 19:12:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 19:12:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 19:12:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 19:12:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 19:12:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 19:12:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 19:12:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 19:12:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 19:12:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 19:12:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 19:12:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 19:12:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 19:12:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 19:12:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 19:12:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 19:12:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 19:12:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 19:12:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 19:12:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 19:12:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 19:12:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 19:12:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 19:12:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 19:12:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 19:12:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 19:12:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 19:12:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:12:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:12:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 19:12:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 19:12:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 19:12:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 19:12:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 19:12:44 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:12:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 19:12:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:12:44 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:12:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 19:12:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:12:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 19:12:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 19:12:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 19:12:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 19:12:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 19:12:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 19:12:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:12:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ef0d29e: startup date [Thu Mar 21 19:12:21 CST 2019]; root of context hierarchy
2019-03-21 19:12:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:12:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:12:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:12:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 19:12:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 19:12:49 -Registering beans for JMX exposure on startup
2019-03-21 19:12:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 19:12:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 19:12:49 -Starting beans in phase 2147483647
2019-03-21 19:12:49 -Context refreshed
2019-03-21 19:12:49 -Found 1 custom documentation plugin(s)
2019-03-21 19:12:49 -Scanning for api listing references
2019-03-21 19:12:50 -Generating unique operation named: removeUsingPOST_1
2019-03-21 19:12:50 -Generating unique operation named: addUsingGET_1
2019-03-21 19:12:50 -Generating unique operation named: editUsingGET_1
2019-03-21 19:12:50 -Generating unique operation named: listUsingGET_1
2019-03-21 19:12:50 -Generating unique operation named: removeUsingPOST_2
2019-03-21 19:12:50 -Generating unique operation named: removeUsingPOST_3
2019-03-21 19:12:50 -Generating unique operation named: saveUsingPOST_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingGET_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingPOST_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingPUT_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 19:12:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_2
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_2
2019-03-21 19:12:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_2
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_4
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_5
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 19:12:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_3
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_3
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_3
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_6
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_7
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_4
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_4
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_4
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_8
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_9
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 19:12:51 -Generating unique operation named: ElecUsingGET_1
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_5
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_5
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_5
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_10
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_11
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_6
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_6
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_6
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_7
2019-03-21 19:12:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_7
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_12
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_13
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 19:12:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_7
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_8
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_8
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_14
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_15
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 19:12:51 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 19:12:51 -Generating unique operation named: addUsingGET_8
2019-03-21 19:12:51 -Generating unique operation named: editUsingGET_9
2019-03-21 19:12:51 -Generating unique operation named: listUsingGET_9
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_16
2019-03-21 19:12:51 -Generating unique operation named: removeUsingPOST_17
2019-03-21 19:12:51 -Generating unique operation named: saveUsingPOST_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingGET_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPOST_9
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPUT_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 19:12:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 19:12:52 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_9
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_10
2019-03-21 19:12:52 -Generating unique operation named: infoUsingGET_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingPOST_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingPUT_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 19:12:52 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_10
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_18
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_19
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_10
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_11
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_20
2019-03-21 19:12:52 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_10
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_11
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_12
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_21
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_10
2019-03-21 19:12:52 -Generating unique operation named: treeUsingGET_1
2019-03-21 19:12:52 -Generating unique operation named: treeUsingGET_2
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_11
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_11
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_12
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_13
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_22
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_23
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_11
2019-03-21 19:12:52 -Generating unique operation named: updateUsingGET_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_12
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPUT_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 19:12:52 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_12
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_13
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_14
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_24
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_25
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_12
2019-03-21 19:12:52 -Generating unique operation named: updateUsingGET_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_13
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPUT_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 19:12:52 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_13
2019-03-21 19:12:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_14
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_15
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_13
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_14
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_14
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_16
2019-03-21 19:12:52 -Generating unique operation named: listUsingHEAD_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingPOST_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingPUT_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingPATCH_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingDELETE_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 19:12:52 -Generating unique operation named: listUsingTRACE_1
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_14
2019-03-21 19:12:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_15
2019-03-21 19:12:52 -Generating unique operation named: listUsingGET_17
2019-03-21 19:12:52 -Generating unique operation named: removeUsingPOST_26
2019-03-21 19:12:52 -Generating unique operation named: saveUsingPOST_15
2019-03-21 19:12:52 -Generating unique operation named: treeUsingGET_3
2019-03-21 19:12:52 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 19:12:52 -Generating unique operation named: updateUsingPOST_15
2019-03-21 19:12:52 -Generating unique operation named: addUsingGET_15
2019-03-21 19:12:52 -Generating unique operation named: editUsingGET_16
2019-03-21 19:12:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 19:12:53 -Generating unique operation named: listUsingGET_18
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_27
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_28
2019-03-21 19:12:53 -Generating unique operation named: saveUsingPOST_16
2019-03-21 19:12:53 -Generating unique operation named: updateUsingGET_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPOST_16
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPUT_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 19:12:53 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 19:12:53 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 19:12:53 -Generating unique operation named: addUsingGET_16
2019-03-21 19:12:53 -Generating unique operation named: editUsingGET_17
2019-03-21 19:12:53 -Generating unique operation named: listUsingGET_19
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_29
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_30
2019-03-21 19:12:53 -Generating unique operation named: saveUsingPOST_17
2019-03-21 19:12:53 -Generating unique operation named: updateUsingGET_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPOST_17
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPUT_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 19:12:53 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 19:12:53 -Generating unique operation named: addUsingGET_17
2019-03-21 19:12:53 -Generating unique operation named: editUsingGET_18
2019-03-21 19:12:53 -Generating unique operation named: listUsingGET_20
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_31
2019-03-21 19:12:53 -Generating unique operation named: removeUsingPOST_32
2019-03-21 19:12:53 -Generating unique operation named: saveUsingPOST_18
2019-03-21 19:12:53 -Generating unique operation named: updateUsingGET_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPOST_18
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPUT_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 19:12:53 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 19:12:53 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 19:12:53 -Starting Quartz Scheduler now
2019-03-21 19:12:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 19:12:53 -Starting...
2019-03-21 19:12:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 19:12:53 -Started.
2019-03-21 19:12:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 19:12:53 -Using a shared selector for servlet write/read
2019-03-21 19:12:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 19:12:53 -Started BootdoApplication in 34.19 seconds (JVM running for 36.045)
2019-03-21 19:12:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 19:12:54 -==> Parameters: 
2019-03-21 19:12:54 -<==      Total: 1
2019-03-21 19:13:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 19:13:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 19:13:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-03-21 19:13:02 -Enabling session validation scheduler...
2019-03-21 19:13:02 -请求地址 : http://localhost:8081/login;JSESSIONID=071ee410-a64f-4592-b36a-14e65ebbbdde
2019-03-21 19:13:02 -HTTP METHOD : GET
2019-03-21 19:13:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:13:02 -参数 : [{}]
2019-03-21 19:13:02 -耗时 : 4
2019-03-21 19:13:02 -返回值 : login
2019-03-21 19:13:04 -请求地址 : http://localhost:8081/getVerify
2019-03-21 19:13:04 -HTTP METHOD : GET
2019-03-21 19:13:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 19:13:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b91e084, org.apache.shiro.web.servlet.ShiroHttpServletResponse@46a5eb46]
2019-03-21 19:13:07 -3677
2019-03-21 19:13:07 -耗时 : 2824
2019-03-21 19:13:07 -返回值 : null
2019-03-21 19:13:07 -请求地址 : http://localhost:8081/login
2019-03-21 19:13:07 -HTTP METHOD : GET
2019-03-21 19:13:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:13:07 -参数 : [{}]
2019-03-21 19:13:07 -耗时 : 0
2019-03-21 19:13:07 -返回值 : login
2019-03-21 19:13:12 -请求地址 : http://localhost:8081/login
2019-03-21 19:13:12 -HTTP METHOD : POST
2019-03-21 19:13:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 19:13:12 -参数 : [admin, 111111, 3677, org.apache.shiro.web.servlet.ShiroHttpServletRequest@581fd6]
2019-03-21 19:13:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 19:13:12 -==> Parameters: admin(String)
2019-03-21 19:13:12 -<==      Total: 1
2019-03-21 19:13:12 -耗时 : 529
2019-03-21 19:13:12 -返回值 : {msg=操作成功, code=0}
2019-03-21 19:13:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 19:13:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:13:13 -==> Parameters: 1(Long), admin(String), 登录(String), 530(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 19:13:13.024(Timestamp)
2019-03-21 19:13:13 -请求地址 : http://localhost:8081/index
2019-03-21 19:13:13 -HTTP METHOD : GET
2019-03-21 19:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 19:13:13 -参数 : [{}]
2019-03-21 19:13:13 -<==    Updates: 1
2019-03-21 19:13:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 19:13:13 -==> Parameters: 1(Long)
2019-03-21 19:13:13 -<==      Total: 46
2019-03-21 19:13:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 19:13:13 -==> Parameters: 138(Long)
2019-03-21 19:13:13 -<==      Total: 1
2019-03-21 19:13:13 -耗时 : 491
2019-03-21 19:13:13 -返回值 : index_v1
2019-03-21 19:13:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:13:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 491(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 19:13:13.679(Timestamp)
2019-03-21 19:13:13 -<==    Updates: 1
2019-03-21 19:13:14 -请求地址 : http://localhost:8081/main
2019-03-21 19:13:14 -HTTP METHOD : GET
2019-03-21 19:13:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:13:14 -参数 : []
2019-03-21 19:13:14 -耗时 : 0
2019-03-21 19:13:14 -返回值 : main
2019-03-21 19:13:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 19:13:14 -HTTP METHOD : GET
2019-03-21 19:13:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 19:13:14 -参数 : []
2019-03-21 19:13:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 19:13:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 19:13:14 -<==      Total: 0
2019-03-21 19:13:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 19:13:14 -==> Parameters: 1(Long), 0(String)
2019-03-21 19:13:14 -<==      Total: 1
2019-03-21 19:13:14 -耗时 : 50
2019-03-21 19:13:14 -返回值 : com.bootdo.common.utils.PageUtils@4cd86bc9
2019-03-21 19:13:14 -请求地址 : http://localhost:8081/main
2019-03-21 19:13:14 -HTTP METHOD : GET
2019-03-21 19:13:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:13:14 -参数 : []
2019-03-21 19:13:14 -耗时 : 0
2019-03-21 19:13:14 -返回值 : main
2019-03-21 19:13:45 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-21 19:13:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 19:13:56 -==> Parameters: 1(Long)
2019-03-21 19:13:56 -<==      Total: 90
2019-03-21 19:13:56 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-21 19:13:56 -HTTP METHOD : GET
2019-03-21 19:13:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-21 19:13:56 -参数 : []
2019-03-21 19:13:56 -耗时 : 1
2019-03-21 19:13:56 -返回值 : /moneyList/moneyList
2019-03-21 19:14:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 19:14:00 -HTTP METHOD : GET
2019-03-21 19:14:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 19:14:00 -参数 : []
2019-03-21 19:14:00 -耗时 : 1
2019-03-21 19:14:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 19:14:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:14:01 -HTTP METHOD : GET
2019-03-21 19:14:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:14:01 -参数 : [userType]
2019-03-21 19:14:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:14:01 -==> Parameters: userType(String)
2019-03-21 19:14:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:14:01 -HTTP METHOD : GET
2019-03-21 19:14:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:14:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 19:14:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 19:14:01 -<==      Total: 2
2019-03-21 19:14:01 -耗时 : 96
2019-03-21 19:14:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 19:14:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:14:01 -<==      Total: 5
2019-03-21 19:14:01 -==>  Preparing: select count(*) from elec_log 
2019-03-21 19:14:01 -==> Parameters: 
2019-03-21 19:14:01 -<==      Total: 1
2019-03-21 19:14:01 -耗时 : 314
2019-03-21 19:14:01 -返回值 : com.bootdo.common.utils.PageUtils@709b56a2
2019-03-21 19:14:24 -请求地址 : http://localhost:8081/print/print
2019-03-21 19:14:24 -HTTP METHOD : GET
2019-03-21 19:14:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 19:14:24 -参数 : []
2019-03-21 19:14:24 -耗时 : 1
2019-03-21 19:14:24 -返回值 : print/print/print
2019-03-21 19:14:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:14:24 -HTTP METHOD : GET
2019-03-21 19:14:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:14:24 -参数 : [userType]
2019-03-21 19:14:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:14:24 -==> Parameters: userType(String)
2019-03-21 19:14:24 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 19:14:24 -HTTP METHOD : GET
2019-03-21 19:14:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 19:14:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 19:14:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 19:14:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:14:24 -<==      Total: 2
2019-03-21 19:14:24 -耗时 : 73
2019-03-21 19:14:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 19:14:24 -{conn-10001, pstmt-20012} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.list(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.list(PrintServiceImpl.java:29)
	at com.bootdo.print.controller.PrintController.list(PrintController.java:69)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$37058885.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 19:14:24 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-21 19:14:24 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-21 19:14:24 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy131.list(Unknown Source)
	at com.bootdo.print.service.impl.PrintServiceImpl.list(PrintServiceImpl.java:29)
	at com.bootdo.print.controller.PrintController.list(PrintController.java:69)
	at com.bootdo.print.controller.PrintController$$FastClassBySpringCGLIB$$83188fc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.print.controller.PrintController$$EnhancerBySpringCGLIB$$37058885.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-21 19:14:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:14:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\print\PrintMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'print_data' in 'field list'(String), null, 2019-03-21 19:14:24.596(Timestamp)
2019-03-21 19:14:24 -<==    Updates: 1
2019-03-21 19:18:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 19032 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 19:18:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 19:18:58 -The following profiles are active: dev
2019-03-21 19:18:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f0e995e: startup date [Thu Mar 21 19:18:59 CST 2019]; root of context hierarchy
2019-03-21 19:19:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 19:19:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69bcc858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c15f6ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 19:19:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 19:19:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:19:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 19:19:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 19:19:09 -Starting service [Tomcat]
2019-03-21 19:19:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 19:19:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 19:19:10 -Initializing Spring embedded WebApplicationContext
2019-03-21 19:19:10 -Root WebApplicationContext: initialization completed in 11002 ms
2019-03-21 19:19:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 19:19:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 19:19:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 19:19:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 19:19:10 -Filter xssFilter was not registered (disabled)
2019-03-21 19:19:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 19:19:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 19:19:10 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 19:19:10 -Servlet dispatcherServlet mapped to [/]
2019-03-21 19:19:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f0e995e: startup date [Thu Mar 21 19:18:59 CST 2019]; root of context hierarchy
2019-03-21 19:19:14 -Using default implementation for ThreadExecutor
2019-03-21 19:19:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 19:19:14 -Quartz Scheduler v.2.2.1 created.
2019-03-21 19:19:14 -RAMJobStore initialized.
2019-03-21 19:19:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 19:19:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 19:19:14 -Quartz scheduler version: 2.2.1
2019-03-21 19:19:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@127d2aee
2019-03-21 19:19:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 19:19:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 19:19:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 19:19:19 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 19:19:19 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 19:19:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 19:19:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 19:19:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 19:19:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 19:19:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 19:19:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 19:19:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 19:19:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 19:19:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 19:19:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 19:19:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:19:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:19:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 19:19:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 19:19:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 19:19:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 19:19:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 19:19:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 19:19:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 19:19:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 19:19:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 19:19:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 19:19:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:19:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:19:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:19:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 19:19:19 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 19:19:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 19:19:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 19:19:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 19:19:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:19:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 19:19:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 19:19:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 19:19:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:19:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:19:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 19:19:19 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 19:19:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 19:19:19 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:19:19 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 19:19:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 19:19:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 19:19:19 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 19:19:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 19:19:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 19:19:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 19:19:20 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 19:19:20 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 19:19:20 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 19:19:20 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:20 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 19:19:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 19:19:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 19:19:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 19:19:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 19:19:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 19:19:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 19:19:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 19:19:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 19:19:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 19:19:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 19:19:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 19:19:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 19:19:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 19:19:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 19:19:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 19:19:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 19:19:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 19:19:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:19:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 19:19:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:19:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 19:19:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 19:19:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 19:19:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 19:19:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 19:19:20 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:19:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:19:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 19:19:20 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:19:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 19:19:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:19:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 19:19:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 19:19:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 19:19:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 19:19:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 19:19:21 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 19:19:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:19:22 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f0e995e: startup date [Thu Mar 21 19:18:59 CST 2019]; root of context hierarchy
2019-03-21 19:19:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:19:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:19:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:19:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 19:19:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 19:19:25 -Registering beans for JMX exposure on startup
2019-03-21 19:19:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 19:19:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 19:19:25 -Starting beans in phase 2147483647
2019-03-21 19:19:25 -Context refreshed
2019-03-21 19:19:25 -Found 1 custom documentation plugin(s)
2019-03-21 19:19:25 -Scanning for api listing references
2019-03-21 19:19:26 -Generating unique operation named: removeUsingPOST_1
2019-03-21 19:19:26 -Generating unique operation named: addUsingGET_1
2019-03-21 19:19:26 -Generating unique operation named: editUsingGET_1
2019-03-21 19:19:26 -Generating unique operation named: listUsingGET_1
2019-03-21 19:19:26 -Generating unique operation named: removeUsingPOST_2
2019-03-21 19:19:26 -Generating unique operation named: removeUsingPOST_3
2019-03-21 19:19:26 -Generating unique operation named: saveUsingPOST_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingGET_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingPOST_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingPUT_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 19:19:26 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_2
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_2
2019-03-21 19:19:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_2
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_4
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_5
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 19:19:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_3
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_3
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_3
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_6
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_7
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_4
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_4
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_4
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_8
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_9
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 19:19:27 -Generating unique operation named: ElecUsingGET_1
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_5
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_5
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_5
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_10
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_11
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_6
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_6
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_6
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_7
2019-03-21 19:19:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_7
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_12
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_13
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_7
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 19:19:27 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 19:19:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 19:19:27 -Generating unique operation named: addUsingGET_7
2019-03-21 19:19:27 -Generating unique operation named: editUsingGET_8
2019-03-21 19:19:27 -Generating unique operation named: listUsingGET_8
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_14
2019-03-21 19:19:27 -Generating unique operation named: removeUsingPOST_15
2019-03-21 19:19:27 -Generating unique operation named: saveUsingPOST_7
2019-03-21 19:19:27 -Generating unique operation named: updateUsingGET_7
2019-03-21 19:19:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPOST_8
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPUT_7
2019-03-21 19:19:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 19:19:28 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 19:19:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 19:19:28 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 19:19:28 -Generating unique operation named: addUsingGET_8
2019-03-21 19:19:28 -Generating unique operation named: editUsingGET_9
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_9
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_16
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_17
2019-03-21 19:19:28 -Generating unique operation named: saveUsingPOST_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingGET_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPOST_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPUT_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 19:19:28 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 19:19:28 -Generating unique operation named: addUsingGET_9
2019-03-21 19:19:28 -Generating unique operation named: editUsingGET_10
2019-03-21 19:19:28 -Generating unique operation named: infoUsingGET_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingPOST_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingPUT_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 19:19:28 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_10
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_18
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_19
2019-03-21 19:19:28 -Generating unique operation named: saveUsingPOST_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPOST_10
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_11
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_20
2019-03-21 19:19:28 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 19:19:28 -Generating unique operation named: addUsingGET_10
2019-03-21 19:19:28 -Generating unique operation named: editUsingGET_11
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_12
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_21
2019-03-21 19:19:28 -Generating unique operation named: saveUsingPOST_10
2019-03-21 19:19:28 -Generating unique operation named: treeUsingGET_1
2019-03-21 19:19:28 -Generating unique operation named: treeUsingGET_2
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPOST_11
2019-03-21 19:19:28 -Generating unique operation named: addUsingGET_11
2019-03-21 19:19:28 -Generating unique operation named: editUsingGET_12
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_13
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_22
2019-03-21 19:19:28 -Generating unique operation named: removeUsingPOST_23
2019-03-21 19:19:28 -Generating unique operation named: saveUsingPOST_11
2019-03-21 19:19:28 -Generating unique operation named: updateUsingGET_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPOST_12
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPUT_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 19:19:28 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 19:19:28 -Generating unique operation named: addUsingGET_12
2019-03-21 19:19:28 -Generating unique operation named: editUsingGET_13
2019-03-21 19:19:28 -Generating unique operation named: listUsingGET_14
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_24
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_25
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingGET_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPUT_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 19:19:29 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 19:19:29 -Generating unique operation named: addUsingGET_13
2019-03-21 19:19:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 19:19:29 -Generating unique operation named: editUsingGET_14
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_15
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_13
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_14
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_14
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_16
2019-03-21 19:19:29 -Generating unique operation named: listUsingHEAD_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingPOST_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingPUT_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingPATCH_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingDELETE_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 19:19:29 -Generating unique operation named: listUsingTRACE_1
2019-03-21 19:19:29 -Generating unique operation named: addUsingGET_14
2019-03-21 19:19:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 19:19:29 -Generating unique operation named: editUsingGET_15
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_17
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_26
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_15
2019-03-21 19:19:29 -Generating unique operation named: treeUsingGET_3
2019-03-21 19:19:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_15
2019-03-21 19:19:29 -Generating unique operation named: addUsingGET_15
2019-03-21 19:19:29 -Generating unique operation named: editUsingGET_16
2019-03-21 19:19:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_18
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_27
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_28
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_16
2019-03-21 19:19:29 -Generating unique operation named: updateUsingGET_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_16
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPUT_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 19:19:29 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 19:19:29 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 19:19:29 -Generating unique operation named: addUsingGET_16
2019-03-21 19:19:29 -Generating unique operation named: editUsingGET_17
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_19
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_29
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_30
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_17
2019-03-21 19:19:29 -Generating unique operation named: updateUsingGET_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_17
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPUT_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 19:19:29 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 19:19:29 -Generating unique operation named: addUsingGET_17
2019-03-21 19:19:29 -Generating unique operation named: editUsingGET_18
2019-03-21 19:19:29 -Generating unique operation named: listUsingGET_20
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_31
2019-03-21 19:19:29 -Generating unique operation named: removeUsingPOST_32
2019-03-21 19:19:29 -Generating unique operation named: saveUsingPOST_18
2019-03-21 19:19:29 -Generating unique operation named: updateUsingGET_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPOST_18
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPUT_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 19:19:29 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 19:19:29 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 19:19:29 -Starting Quartz Scheduler now
2019-03-21 19:19:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 19:19:29 -Starting...
2019-03-21 19:19:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 19:19:29 -Started.
2019-03-21 19:19:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 19:19:30 -Using a shared selector for servlet write/read
2019-03-21 19:19:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 19:19:30 -Started BootdoApplication in 33.7 seconds (JVM running for 35.284)
2019-03-21 19:19:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 19:19:30 -==> Parameters: 
2019-03-21 19:19:30 -<==      Total: 1
2019-03-21 19:20:21 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-21 19:20:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 19:20:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 19:20:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 114 ms
2019-03-21 19:20:25 -Enabling session validation scheduler...
2019-03-21 19:20:25 -请求地址 : http://localhost:8081/login;JSESSIONID=53203cca-653d-4171-adb4-d768a2ffef7b
2019-03-21 19:20:25 -HTTP METHOD : GET
2019-03-21 19:20:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:20:25 -参数 : [{}]
2019-03-21 19:20:25 -耗时 : 7
2019-03-21 19:20:25 -返回值 : login
2019-03-21 19:20:28 -请求地址 : http://localhost:8081/getVerify
2019-03-21 19:20:28 -HTTP METHOD : GET
2019-03-21 19:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 19:20:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ca9a9e5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@689630a8]
2019-03-21 19:20:28 -9495
2019-03-21 19:20:28 -耗时 : 606
2019-03-21 19:20:28 -返回值 : null
2019-03-21 19:20:28 -请求地址 : http://localhost:8081/login
2019-03-21 19:20:28 -HTTP METHOD : GET
2019-03-21 19:20:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:20:28 -参数 : [{}]
2019-03-21 19:20:28 -耗时 : 1
2019-03-21 19:20:28 -返回值 : login
2019-03-21 19:20:33 -请求地址 : http://localhost:8081/login
2019-03-21 19:20:33 -HTTP METHOD : POST
2019-03-21 19:20:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 19:20:33 -参数 : [admin, 111111, 9495, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3c4870dd]
2019-03-21 19:20:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 19:20:33 -==> Parameters: admin(String)
2019-03-21 19:20:33 -<==      Total: 1
2019-03-21 19:20:33 -耗时 : 150
2019-03-21 19:20:33 -返回值 : {msg=操作成功, code=0}
2019-03-21 19:20:33 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 19:20:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:20:33 -==> Parameters: 1(Long), admin(String), 登录(String), 150(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 19:20:33.831(Timestamp)
2019-03-21 19:20:33 -请求地址 : http://localhost:8081/index
2019-03-21 19:20:33 -HTTP METHOD : GET
2019-03-21 19:20:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 19:20:33 -参数 : [{}]
2019-03-21 19:20:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 19:20:34 -<==    Updates: 1
2019-03-21 19:20:34 -==> Parameters: 1(Long)
2019-03-21 19:20:34 -<==      Total: 46
2019-03-21 19:20:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 19:20:34 -==> Parameters: 138(Long)
2019-03-21 19:20:34 -<==      Total: 1
2019-03-21 19:20:34 -耗时 : 555
2019-03-21 19:20:34 -返回值 : index_v1
2019-03-21 19:20:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:20:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 555(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 19:20:34.508(Timestamp)
2019-03-21 19:20:34 -<==    Updates: 1
2019-03-21 19:20:34 -请求地址 : http://localhost:8081/main
2019-03-21 19:20:34 -HTTP METHOD : GET
2019-03-21 19:20:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:20:34 -参数 : []
2019-03-21 19:20:34 -耗时 : 0
2019-03-21 19:20:34 -返回值 : main
2019-03-21 19:20:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 19:20:35 -HTTP METHOD : GET
2019-03-21 19:20:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 19:20:35 -参数 : []
2019-03-21 19:20:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 19:20:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 19:20:35 -<==      Total: 0
2019-03-21 19:20:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 19:20:35 -==> Parameters: 1(Long), 0(String)
2019-03-21 19:20:35 -<==      Total: 1
2019-03-21 19:20:35 -耗时 : 143
2019-03-21 19:20:35 -返回值 : com.bootdo.common.utils.PageUtils@6bed1a4e
2019-03-21 19:20:35 -请求地址 : http://localhost:8081/main
2019-03-21 19:20:35 -HTTP METHOD : GET
2019-03-21 19:20:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:20:35 -参数 : []
2019-03-21 19:20:35 -耗时 : 0
2019-03-21 19:20:35 -返回值 : main
2019-03-21 19:20:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 19:20:57 -==> Parameters: 1(Long)
2019-03-21 19:20:57 -<==      Total: 90
2019-03-21 19:20:57 -请求地址 : http://localhost:8081/print/print
2019-03-21 19:20:57 -HTTP METHOD : GET
2019-03-21 19:20:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-21 19:20:57 -参数 : []
2019-03-21 19:20:57 -耗时 : 0
2019-03-21 19:20:57 -返回值 : print/print/print
2019-03-21 19:20:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:20:58 -HTTP METHOD : GET
2019-03-21 19:20:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:20:58 -参数 : [userType]
2019-03-21 19:20:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:20:58 -==> Parameters: userType(String)
2019-03-21 19:20:58 -<==      Total: 2
2019-03-21 19:20:58 -耗时 : 30
2019-03-21 19:20:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 19:20:58 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 19:20:58 -HTTP METHOD : GET
2019-03-21 19:20:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 19:20:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-21 19:20:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-21 19:20:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:20:58 -<==      Total: 3
2019-03-21 19:20:58 -==>  Preparing: select count(*) from print 
2019-03-21 19:20:58 -==> Parameters: 
2019-03-21 19:20:58 -<==      Total: 1
2019-03-21 19:20:58 -耗时 : 67
2019-03-21 19:20:58 -返回值 : com.bootdo.common.utils.PageUtils@7f6275b8
2019-03-21 19:21:16 -请求地址 : http://localhost:8081/print/print/list
2019-03-21 19:21:16 -HTTP METHOD : GET
2019-03-21 19:21:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-21 19:21:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-12}]
2019-03-21 19:21:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-03-21 19:21:16 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 19:21:16 -<==      Total: 0
2019-03-21 19:21:16 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-03-21 19:21:16 -==> Parameters: 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-21 19:21:16 -<==      Total: 1
2019-03-21 19:21:16 -耗时 : 14
2019-03-21 19:21:16 -返回值 : com.bootdo.common.utils.PageUtils@723b9eaf
2019-03-21 19:23:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 6564 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 19:23:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 19:23:58 -The following profiles are active: dev
2019-03-21 19:23:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Thu Mar 21 19:23:58 CST 2019]; root of context hierarchy
2019-03-21 19:24:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 19:24:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$492bee5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3b851d03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 19:24:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 19:24:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:24:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 19:24:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 19:24:11 -Starting service [Tomcat]
2019-03-21 19:24:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 19:24:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 19:24:11 -Initializing Spring embedded WebApplicationContext
2019-03-21 19:24:11 -Root WebApplicationContext: initialization completed in 12923 ms
2019-03-21 19:24:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 19:24:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 19:24:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 19:24:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 19:24:12 -Filter xssFilter was not registered (disabled)
2019-03-21 19:24:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 19:24:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 19:24:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 19:24:12 -Servlet dispatcherServlet mapped to [/]
2019-03-21 19:24:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Thu Mar 21 19:23:58 CST 2019]; root of context hierarchy
2019-03-21 19:24:16 -Using default implementation for ThreadExecutor
2019-03-21 19:24:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 19:24:16 -Quartz Scheduler v.2.2.1 created.
2019-03-21 19:24:16 -RAMJobStore initialized.
2019-03-21 19:24:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 19:24:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 19:24:16 -Quartz scheduler version: 2.2.1
2019-03-21 19:24:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@281ca256
2019-03-21 19:24:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 19:24:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 19:24:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 19:24:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 19:24:20 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 19:24:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 19:24:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 19:24:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 19:24:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 19:24:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 19:24:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 19:24:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 19:24:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 19:24:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 19:24:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 19:24:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 19:24:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 19:24:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:24:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:24:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 19:24:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 19:24:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 19:24:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 19:24:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 19:24:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 19:24:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 19:24:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 19:24:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 19:24:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 19:24:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 19:24:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 19:24:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 19:24:20 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 19:24:20 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 19:24:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 19:24:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 19:24:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 19:24:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 19:24:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 19:24:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:24:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 19:24:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 19:24:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 19:24:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:24:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:24:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 19:24:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 19:24:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 19:24:21 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 19:24:21 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:24:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 19:24:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 19:24:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:24:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 19:24:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 19:24:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 19:24:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 19:24:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 19:24:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 19:24:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 19:24:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 19:24:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 19:24:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 19:24:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 19:24:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 19:24:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 19:24:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 19:24:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 19:24:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 19:24:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 19:24:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 19:24:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 19:24:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 19:24:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 19:24:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 19:24:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 19:24:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 19:24:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 19:24:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:24:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 19:24:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:24:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 19:24:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 19:24:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 19:24:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 19:24:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 19:24:21 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:24:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:24:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 19:24:21 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:24:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 19:24:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:24:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 19:24:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 19:24:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 19:24:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 19:24:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 19:24:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 19:24:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:24:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1643d68f: startup date [Thu Mar 21 19:23:58 CST 2019]; root of context hierarchy
2019-03-21 19:24:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:24:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:24:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:24:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 19:24:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 19:24:26 -Registering beans for JMX exposure on startup
2019-03-21 19:24:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 19:24:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 19:24:26 -Starting beans in phase 2147483647
2019-03-21 19:24:26 -Context refreshed
2019-03-21 19:24:26 -Found 1 custom documentation plugin(s)
2019-03-21 19:24:26 -Scanning for api listing references
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_1
2019-03-21 19:24:27 -Generating unique operation named: addUsingGET_1
2019-03-21 19:24:27 -Generating unique operation named: editUsingGET_1
2019-03-21 19:24:27 -Generating unique operation named: listUsingGET_1
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_2
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_3
2019-03-21 19:24:27 -Generating unique operation named: saveUsingPOST_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingGET_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPOST_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPUT_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 19:24:27 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 19:24:27 -Generating unique operation named: addUsingGET_2
2019-03-21 19:24:27 -Generating unique operation named: editUsingGET_2
2019-03-21 19:24:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 19:24:27 -Generating unique operation named: listUsingGET_2
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_4
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_5
2019-03-21 19:24:27 -Generating unique operation named: saveUsingPOST_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingGET_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPOST_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPUT_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 19:24:27 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 19:24:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 19:24:27 -Generating unique operation named: addUsingGET_3
2019-03-21 19:24:27 -Generating unique operation named: editUsingGET_3
2019-03-21 19:24:27 -Generating unique operation named: listUsingGET_3
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_6
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_7
2019-03-21 19:24:27 -Generating unique operation named: saveUsingPOST_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingGET_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPOST_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPUT_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 19:24:27 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 19:24:27 -Generating unique operation named: addUsingGET_4
2019-03-21 19:24:27 -Generating unique operation named: editUsingGET_4
2019-03-21 19:24:27 -Generating unique operation named: listUsingGET_4
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_8
2019-03-21 19:24:27 -Generating unique operation named: removeUsingPOST_9
2019-03-21 19:24:27 -Generating unique operation named: saveUsingPOST_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingGET_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPOST_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPUT_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 19:24:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 19:24:27 -Generating unique operation named: ElecUsingGET_1
2019-03-21 19:24:28 -Generating unique operation named: addUsingGET_5
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_5
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_5
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_10
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_11
2019-03-21 19:24:28 -Generating unique operation named: saveUsingPOST_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingGET_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPOST_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPUT_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 19:24:28 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_6
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPOST_6
2019-03-21 19:24:28 -Generating unique operation named: addUsingGET_6
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_7
2019-03-21 19:24:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_7
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_12
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_13
2019-03-21 19:24:28 -Generating unique operation named: saveUsingPOST_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingGET_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPOST_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPUT_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 19:24:28 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 19:24:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 19:24:28 -Generating unique operation named: addUsingGET_7
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_8
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_8
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_14
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_15
2019-03-21 19:24:28 -Generating unique operation named: saveUsingPOST_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingGET_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPOST_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPUT_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 19:24:28 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 19:24:28 -Generating unique operation named: addUsingGET_8
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_9
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_9
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_16
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_17
2019-03-21 19:24:28 -Generating unique operation named: saveUsingPOST_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingGET_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPOST_9
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPUT_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 19:24:28 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 19:24:28 -Generating unique operation named: addUsingGET_9
2019-03-21 19:24:28 -Generating unique operation named: editUsingGET_10
2019-03-21 19:24:28 -Generating unique operation named: infoUsingGET_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingPOST_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingPUT_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 19:24:28 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 19:24:28 -Generating unique operation named: listUsingGET_10
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_18
2019-03-21 19:24:28 -Generating unique operation named: removeUsingPOST_19
2019-03-21 19:24:28 -Generating unique operation named: saveUsingPOST_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_10
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_11
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_20
2019-03-21 19:24:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 19:24:29 -Generating unique operation named: addUsingGET_10
2019-03-21 19:24:29 -Generating unique operation named: editUsingGET_11
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_12
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_21
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_10
2019-03-21 19:24:29 -Generating unique operation named: treeUsingGET_1
2019-03-21 19:24:29 -Generating unique operation named: treeUsingGET_2
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_11
2019-03-21 19:24:29 -Generating unique operation named: addUsingGET_11
2019-03-21 19:24:29 -Generating unique operation named: editUsingGET_12
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_13
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_22
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_23
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_11
2019-03-21 19:24:29 -Generating unique operation named: updateUsingGET_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_12
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPUT_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 19:24:29 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 19:24:29 -Generating unique operation named: addUsingGET_12
2019-03-21 19:24:29 -Generating unique operation named: editUsingGET_13
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_14
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_24
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_25
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_12
2019-03-21 19:24:29 -Generating unique operation named: updateUsingGET_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_13
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPUT_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 19:24:29 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 19:24:29 -Generating unique operation named: addUsingGET_13
2019-03-21 19:24:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 19:24:29 -Generating unique operation named: editUsingGET_14
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_15
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_13
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_14
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_14
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_16
2019-03-21 19:24:29 -Generating unique operation named: listUsingHEAD_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingPOST_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingPUT_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingPATCH_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingDELETE_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 19:24:29 -Generating unique operation named: listUsingTRACE_1
2019-03-21 19:24:29 -Generating unique operation named: addUsingGET_14
2019-03-21 19:24:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 19:24:29 -Generating unique operation named: editUsingGET_15
2019-03-21 19:24:29 -Generating unique operation named: listUsingGET_17
2019-03-21 19:24:29 -Generating unique operation named: removeUsingPOST_26
2019-03-21 19:24:29 -Generating unique operation named: saveUsingPOST_15
2019-03-21 19:24:29 -Generating unique operation named: treeUsingGET_3
2019-03-21 19:24:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 19:24:29 -Generating unique operation named: updateUsingPOST_15
2019-03-21 19:24:30 -Generating unique operation named: addUsingGET_15
2019-03-21 19:24:30 -Generating unique operation named: editUsingGET_16
2019-03-21 19:24:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 19:24:30 -Generating unique operation named: listUsingGET_18
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_27
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_28
2019-03-21 19:24:30 -Generating unique operation named: saveUsingPOST_16
2019-03-21 19:24:30 -Generating unique operation named: updateUsingGET_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPOST_16
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPUT_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 19:24:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 19:24:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 19:24:30 -Generating unique operation named: addUsingGET_16
2019-03-21 19:24:30 -Generating unique operation named: editUsingGET_17
2019-03-21 19:24:30 -Generating unique operation named: listUsingGET_19
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_29
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_30
2019-03-21 19:24:30 -Generating unique operation named: saveUsingPOST_17
2019-03-21 19:24:30 -Generating unique operation named: updateUsingGET_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPOST_17
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPUT_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 19:24:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 19:24:30 -Generating unique operation named: addUsingGET_17
2019-03-21 19:24:30 -Generating unique operation named: editUsingGET_18
2019-03-21 19:24:30 -Generating unique operation named: listUsingGET_20
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_31
2019-03-21 19:24:30 -Generating unique operation named: removeUsingPOST_32
2019-03-21 19:24:30 -Generating unique operation named: saveUsingPOST_18
2019-03-21 19:24:30 -Generating unique operation named: updateUsingGET_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPOST_18
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPUT_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 19:24:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 19:24:30 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 19:24:30 -Starting Quartz Scheduler now
2019-03-21 19:24:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 19:24:30 -Starting...
2019-03-21 19:24:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 19:24:30 -Started.
2019-03-21 19:24:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 19:24:30 -Using a shared selector for servlet write/read
2019-03-21 19:24:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 19:24:30 -Started BootdoApplication in 34.082 seconds (JVM running for 35.783)
2019-03-21 19:24:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 19:24:31 -==> Parameters: 
2019-03-21 19:24:31 -<==      Total: 1
2019-03-21 19:24:46 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 19:24:46 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 19:24:46 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-03-21 19:24:46 -Enabling session validation scheduler...
2019-03-21 19:24:46 -请求地址 : http://localhost:8081/login;JSESSIONID=f933037c-e180-404d-a254-e5fdf2f16e9f
2019-03-21 19:24:46 -HTTP METHOD : GET
2019-03-21 19:24:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:24:46 -参数 : [{}]
2019-03-21 19:24:46 -耗时 : 7
2019-03-21 19:24:46 -返回值 : login
2019-03-21 19:24:48 -请求地址 : http://localhost:8081/getVerify
2019-03-21 19:24:48 -HTTP METHOD : GET
2019-03-21 19:24:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 19:24:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5683e778, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6e920c8]
2019-03-21 19:24:48 -6382
2019-03-21 19:24:48 -耗时 : 629
2019-03-21 19:24:48 -返回值 : null
2019-03-21 19:24:54 -请求地址 : http://localhost:8081/login
2019-03-21 19:24:54 -HTTP METHOD : POST
2019-03-21 19:24:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 19:24:54 -参数 : [admin, 111111, 6382, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a3678eb]
2019-03-21 19:24:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 19:24:54 -==> Parameters: admin(String)
2019-03-21 19:24:54 -<==      Total: 1
2019-03-21 19:24:54 -耗时 : 164
2019-03-21 19:24:54 -返回值 : {msg=操作成功, code=0}
2019-03-21 19:24:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 19:24:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:24:54 -==> Parameters: 1(Long), admin(String), 登录(String), 164(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 19:24:54.412(Timestamp)
2019-03-21 19:24:54 -<==    Updates: 1
2019-03-21 19:24:54 -请求地址 : http://localhost:8081/index
2019-03-21 19:24:54 -HTTP METHOD : GET
2019-03-21 19:24:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 19:24:54 -参数 : [{}]
2019-03-21 19:24:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 19:24:54 -==> Parameters: 1(Long)
2019-03-21 19:24:54 -<==      Total: 46
2019-03-21 19:24:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 19:24:54 -==> Parameters: 138(Long)
2019-03-21 19:24:54 -<==      Total: 1
2019-03-21 19:24:54 -耗时 : 187
2019-03-21 19:24:54 -返回值 : index_v1
2019-03-21 19:24:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:24:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 187(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 19:24:54.744(Timestamp)
2019-03-21 19:24:54 -<==    Updates: 1
2019-03-21 19:24:55 -请求地址 : http://localhost:8081/main
2019-03-21 19:24:55 -HTTP METHOD : GET
2019-03-21 19:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:24:55 -参数 : []
2019-03-21 19:24:55 -耗时 : 0
2019-03-21 19:24:55 -返回值 : main
2019-03-21 19:24:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 19:24:55 -HTTP METHOD : GET
2019-03-21 19:24:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 19:24:55 -参数 : []
2019-03-21 19:24:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 19:24:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 19:24:55 -<==      Total: 0
2019-03-21 19:24:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 19:24:55 -==> Parameters: 1(Long), 0(String)
2019-03-21 19:24:55 -<==      Total: 1
2019-03-21 19:24:55 -耗时 : 66
2019-03-21 19:24:55 -返回值 : com.bootdo.common.utils.PageUtils@6ec2b069
2019-03-21 19:24:55 -请求地址 : http://localhost:8081/main
2019-03-21 19:24:55 -HTTP METHOD : GET
2019-03-21 19:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:24:55 -参数 : []
2019-03-21 19:24:55 -耗时 : 1
2019-03-21 19:24:55 -返回值 : main
2019-03-21 19:25:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-21 19:35:27 -Starting BootdoApplication on ZJZL-20180906VX with PID 13092 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 19:35:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 19:35:27 -The following profiles are active: dev
2019-03-21 19:35:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c2b6087: startup date [Thu Mar 21 19:35:27 CST 2019]; root of context hierarchy
2019-03-21 19:35:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 19:35:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5058eeb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$42b21d5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 19:35:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 19:35:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 19:35:36 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 19:35:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 19:35:37 -Starting service [Tomcat]
2019-03-21 19:35:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 19:35:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 19:35:37 -Initializing Spring embedded WebApplicationContext
2019-03-21 19:35:37 -Root WebApplicationContext: initialization completed in 9540 ms
2019-03-21 19:35:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 19:35:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 19:35:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 19:35:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 19:35:38 -Filter xssFilter was not registered (disabled)
2019-03-21 19:35:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 19:35:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 19:35:38 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 19:35:38 -Servlet dispatcherServlet mapped to [/]
2019-03-21 19:35:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c2b6087: startup date [Thu Mar 21 19:35:27 CST 2019]; root of context hierarchy
2019-03-21 19:35:41 -Using default implementation for ThreadExecutor
2019-03-21 19:35:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 19:35:41 -Quartz Scheduler v.2.2.1 created.
2019-03-21 19:35:41 -RAMJobStore initialized.
2019-03-21 19:35:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 19:35:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 19:35:41 -Quartz scheduler version: 2.2.1
2019-03-21 19:35:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@78a165db
2019-03-21 19:35:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 19:35:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 19:35:45 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 19:35:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 19:35:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 19:35:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 19:35:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 19:35:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 19:35:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 19:35:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 19:35:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 19:35:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 19:35:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 19:35:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 19:35:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 19:35:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:35:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 19:35:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 19:35:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 19:35:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 19:35:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 19:35:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 19:35:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 19:35:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 19:35:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 19:35:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 19:35:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 19:35:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 19:35:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 19:35:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 19:35:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 19:35:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:35:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 19:35:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 19:35:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 19:35:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:35:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 19:35:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 19:35:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 19:35:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 19:35:45 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 19:35:45 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 19:35:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 19:35:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 19:35:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 19:35:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 19:35:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 19:35:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 19:35:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 19:35:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 19:35:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 19:35:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 19:35:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 19:35:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 19:35:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 19:35:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 19:35:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 19:35:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 19:35:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 19:35:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 19:35:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 19:35:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 19:35:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 19:35:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 19:35:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 19:35:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 19:35:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 19:35:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 19:35:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 19:35:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:35:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 19:35:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 19:35:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 19:35:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 19:35:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 19:35:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 19:35:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 19:35:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 19:35:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 19:35:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 19:35:45 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 19:35:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 19:35:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 19:35:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 19:35:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 19:35:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 19:35:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 19:35:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 19:35:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 19:35:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:35:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c2b6087: startup date [Thu Mar 21 19:35:27 CST 2019]; root of context hierarchy
2019-03-21 19:35:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:35:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:35:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 19:35:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 19:35:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 19:35:49 -Registering beans for JMX exposure on startup
2019-03-21 19:35:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 19:35:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 19:35:49 -Starting beans in phase 2147483647
2019-03-21 19:35:49 -Context refreshed
2019-03-21 19:35:49 -Found 1 custom documentation plugin(s)
2019-03-21 19:35:49 -Scanning for api listing references
2019-03-21 19:35:49 -Generating unique operation named: removeUsingPOST_1
2019-03-21 19:35:49 -Generating unique operation named: addUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_2
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_3
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_2
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_2
2019-03-21 19:35:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_2
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_4
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_5
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 19:35:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_3
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_3
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_3
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_6
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_7
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_4
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_4
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_4
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_8
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_9
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 19:35:50 -Generating unique operation named: ElecUsingGET_1
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_5
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_5
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_5
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_10
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_11
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_6
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_6
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_6
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_7
2019-03-21 19:35:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_7
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_12
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_13
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 19:35:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_7
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_8
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_8
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_14
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_15
2019-03-21 19:35:50 -Generating unique operation named: saveUsingPOST_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingGET_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPOST_8
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPUT_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 19:35:50 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 19:35:50 -Generating unique operation named: addUsingGET_8
2019-03-21 19:35:50 -Generating unique operation named: editUsingGET_9
2019-03-21 19:35:50 -Generating unique operation named: listUsingGET_9
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_16
2019-03-21 19:35:50 -Generating unique operation named: removeUsingPOST_17
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingGET_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPUT_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 19:35:51 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_9
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_10
2019-03-21 19:35:51 -Generating unique operation named: infoUsingGET_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingPOST_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingPUT_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 19:35:51 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_10
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_18
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_19
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_10
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_11
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_20
2019-03-21 19:35:51 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_10
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_11
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_12
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_21
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_10
2019-03-21 19:35:51 -Generating unique operation named: treeUsingGET_1
2019-03-21 19:35:51 -Generating unique operation named: treeUsingGET_2
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_11
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_11
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_12
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_13
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_22
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_23
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_11
2019-03-21 19:35:51 -Generating unique operation named: updateUsingGET_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_12
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPUT_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 19:35:51 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_12
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_13
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_14
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_24
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_25
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_12
2019-03-21 19:35:51 -Generating unique operation named: updateUsingGET_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_13
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPUT_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 19:35:51 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_13
2019-03-21 19:35:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_14
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_15
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_13
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_14
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_14
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_16
2019-03-21 19:35:51 -Generating unique operation named: listUsingHEAD_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingPOST_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingPUT_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingPATCH_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingDELETE_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 19:35:51 -Generating unique operation named: listUsingTRACE_1
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_14
2019-03-21 19:35:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_15
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_17
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_26
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_15
2019-03-21 19:35:51 -Generating unique operation named: treeUsingGET_3
2019-03-21 19:35:51 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 19:35:51 -Generating unique operation named: updateUsingPOST_15
2019-03-21 19:35:51 -Generating unique operation named: addUsingGET_15
2019-03-21 19:35:51 -Generating unique operation named: editUsingGET_16
2019-03-21 19:35:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 19:35:51 -Generating unique operation named: listUsingGET_18
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_27
2019-03-21 19:35:51 -Generating unique operation named: removeUsingPOST_28
2019-03-21 19:35:51 -Generating unique operation named: saveUsingPOST_16
2019-03-21 19:35:52 -Generating unique operation named: updateUsingGET_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPOST_16
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPUT_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 19:35:52 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 19:35:52 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 19:35:52 -Generating unique operation named: addUsingGET_16
2019-03-21 19:35:52 -Generating unique operation named: editUsingGET_17
2019-03-21 19:35:52 -Generating unique operation named: listUsingGET_19
2019-03-21 19:35:52 -Generating unique operation named: removeUsingPOST_29
2019-03-21 19:35:52 -Generating unique operation named: removeUsingPOST_30
2019-03-21 19:35:52 -Generating unique operation named: saveUsingPOST_17
2019-03-21 19:35:52 -Generating unique operation named: updateUsingGET_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPOST_17
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPUT_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 19:35:52 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 19:35:52 -Generating unique operation named: addUsingGET_17
2019-03-21 19:35:52 -Generating unique operation named: editUsingGET_18
2019-03-21 19:35:52 -Generating unique operation named: listUsingGET_20
2019-03-21 19:35:52 -Generating unique operation named: removeUsingPOST_31
2019-03-21 19:35:52 -Generating unique operation named: removeUsingPOST_32
2019-03-21 19:35:52 -Generating unique operation named: saveUsingPOST_18
2019-03-21 19:35:52 -Generating unique operation named: updateUsingGET_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPOST_18
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPUT_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 19:35:52 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 19:35:52 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 19:35:52 -Starting Quartz Scheduler now
2019-03-21 19:35:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 19:35:52 -Starting...
2019-03-21 19:35:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 19:35:52 -Started.
2019-03-21 19:35:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 19:35:52 -Using a shared selector for servlet write/read
2019-03-21 19:35:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 19:35:52 -Started BootdoApplication in 26.891 seconds (JVM running for 28.909)
2019-03-21 19:35:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 19:35:52 -==> Parameters: 
2019-03-21 19:35:52 -<==      Total: 1
2019-03-21 19:36:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 19:36:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 19:36:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-03-21 19:36:05 -Enabling session validation scheduler...
2019-03-21 19:36:05 -请求地址 : http://localhost:8081/login;JSESSIONID=e577f43c-be2c-4c2e-94c2-fad12d6eb126
2019-03-21 19:36:05 -HTTP METHOD : GET
2019-03-21 19:36:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:36:05 -参数 : [{}]
2019-03-21 19:36:05 -耗时 : 6
2019-03-21 19:36:05 -返回值 : login
2019-03-21 19:36:07 -请求地址 : http://localhost:8081/getVerify
2019-03-21 19:36:07 -HTTP METHOD : GET
2019-03-21 19:36:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 19:36:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e4fccea, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a705ffb]
2019-03-21 19:36:07 -4406
2019-03-21 19:36:07 -耗时 : 722
2019-03-21 19:36:07 -返回值 : null
2019-03-21 19:36:07 -请求地址 : http://localhost:8081/login
2019-03-21 19:36:07 -HTTP METHOD : GET
2019-03-21 19:36:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 19:36:07 -参数 : [{}]
2019-03-21 19:36:07 -耗时 : 0
2019-03-21 19:36:07 -返回值 : login
2019-03-21 19:36:45 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-21 19:36:55 -请求地址 : http://localhost:8081/login
2019-03-21 19:36:55 -HTTP METHOD : POST
2019-03-21 19:36:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 19:36:55 -参数 : [admin, 111111, 4406, org.apache.shiro.web.servlet.ShiroHttpServletRequest@734b9875]
2019-03-21 19:36:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 19:36:55 -==> Parameters: admin(String)
2019-03-21 19:36:55 -<==      Total: 1
2019-03-21 19:36:55 -耗时 : 244
2019-03-21 19:36:55 -返回值 : {msg=操作成功, code=0}
2019-03-21 19:36:55 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 19:36:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:36:55 -==> Parameters: 1(Long), admin(String), 登录(String), 244(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 19:36:55.771(Timestamp)
2019-03-21 19:36:55 -请求地址 : http://localhost:8081/index
2019-03-21 19:36:55 -HTTP METHOD : GET
2019-03-21 19:36:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 19:36:55 -参数 : [{}]
2019-03-21 19:36:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 19:36:56 -==> Parameters: 1(Long)
2019-03-21 19:36:56 -<==    Updates: 1
2019-03-21 19:36:56 -<==      Total: 46
2019-03-21 19:36:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 19:36:56 -==> Parameters: 138(Long)
2019-03-21 19:36:56 -<==      Total: 1
2019-03-21 19:36:56 -耗时 : 422
2019-03-21 19:36:56 -返回值 : index_v1
2019-03-21 19:36:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 19:36:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 423(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 19:36:56.342(Timestamp)
2019-03-21 19:36:56 -请求地址 : http://localhost:8081/main
2019-03-21 19:36:56 -HTTP METHOD : GET
2019-03-21 19:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:36:56 -参数 : []
2019-03-21 19:36:56 -耗时 : 1
2019-03-21 19:36:56 -返回值 : main
2019-03-21 19:36:56 -<==    Updates: 1
2019-03-21 19:36:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 19:36:56 -HTTP METHOD : GET
2019-03-21 19:36:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 19:36:56 -参数 : []
2019-03-21 19:36:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 19:36:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 19:36:56 -请求地址 : http://localhost:8081/main
2019-03-21 19:36:56 -HTTP METHOD : GET
2019-03-21 19:36:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 19:36:56 -参数 : []
2019-03-21 19:36:56 -耗时 : 0
2019-03-21 19:36:56 -返回值 : main
2019-03-21 19:36:56 -<==      Total: 0
2019-03-21 19:36:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 19:36:56 -==> Parameters: 1(Long), 0(String)
2019-03-21 19:36:56 -<==      Total: 1
2019-03-21 19:36:56 -耗时 : 216
2019-03-21 19:36:56 -返回值 : com.bootdo.common.utils.PageUtils@3aa55c0
2019-03-21 19:37:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 19:37:33 -==> Parameters: 1(Long)
2019-03-21 19:37:33 -<==      Total: 90
2019-03-21 19:37:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 19:37:33 -HTTP METHOD : GET
2019-03-21 19:37:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 19:37:33 -参数 : []
2019-03-21 19:37:33 -耗时 : 0
2019-03-21 19:37:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 19:37:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:37:34 -HTTP METHOD : GET
2019-03-21 19:37:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:37:34 -参数 : [userType]
2019-03-21 19:37:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:37:34 -==> Parameters: userType(String)
2019-03-21 19:37:34 -<==      Total: 2
2019-03-21 19:37:34 -耗时 : 68
2019-03-21 19:37:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 19:37:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:34 -HTTP METHOD : GET
2019-03-21 19:37:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 19:37:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 19:37:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:37:34 -<==      Total: 5
2019-03-21 19:37:34 -==>  Preparing: select count(*) from elec_log 
2019-03-21 19:37:34 -==> Parameters: 
2019-03-21 19:37:34 -<==      Total: 1
2019-03-21 19:37:34 -耗时 : 58
2019-03-21 19:37:34 -返回值 : com.bootdo.common.utils.PageUtils@1fadd5ee
2019-03-21 19:37:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:42 -HTTP METHOD : GET
2019-03-21 19:37:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-21 19:37:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 19:37:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 19:37:42 -<==      Total: 3
2019-03-21 19:37:42 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 19:37:42 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-21 19:37:42 -<==      Total: 1
2019-03-21 19:37:42 -耗时 : 22
2019-03-21 19:37:42 -返回值 : com.bootdo.common.utils.PageUtils@92da92
2019-03-21 19:37:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:43 -HTTP METHOD : GET
2019-03-21 19:37:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-21 19:37:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 19:37:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 19:37:43 -<==      Total: 3
2019-03-21 19:37:43 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 19:37:43 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-21 19:37:43 -<==      Total: 1
2019-03-21 19:37:43 -耗时 : 20
2019-03-21 19:37:43 -返回值 : com.bootdo.common.utils.PageUtils@21d2a8cd
2019-03-21 19:37:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:44 -HTTP METHOD : GET
2019-03-21 19:37:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-21 19:37:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 19:37:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 19:37:44 -<==      Total: 3
2019-03-21 19:37:44 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 19:37:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-21 19:37:44 -<==      Total: 1
2019-03-21 19:37:44 -耗时 : 15
2019-03-21 19:37:44 -返回值 : com.bootdo.common.utils.PageUtils@730d705b
2019-03-21 19:37:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:50 -HTTP METHOD : GET
2019-03-21 19:37:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 19:37:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 19:37:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 19:37:50 -<==      Total: 5
2019-03-21 19:37:50 -==>  Preparing: select count(*) from elec_log 
2019-03-21 19:37:50 -==> Parameters: 
2019-03-21 19:37:50 -<==      Total: 1
2019-03-21 19:37:50 -耗时 : 14
2019-03-21 19:37:50 -返回值 : com.bootdo.common.utils.PageUtils@1b7520d7
2019-03-21 19:37:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 19:37:59 -HTTP METHOD : GET
2019-03-21 19:37:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 19:37:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-21 19:37:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 19:37:59 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 19:37:59 -<==      Total: 1
2019-03-21 19:37:59 -==>  Preparing: select count(*) from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 19:37:59 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String)
2019-03-21 19:37:59 -<==      Total: 1
2019-03-21 19:37:59 -耗时 : 9
2019-03-21 19:37:59 -返回值 : com.bootdo.common.utils.PageUtils@1d94da1c
2019-03-21 19:38:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/3
2019-03-21 19:38:04 -HTTP METHOD : GET
2019-03-21 19:38:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-21 19:38:04 -参数 : [3, {}]
2019-03-21 19:38:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-21 19:38:04 -==> Parameters: 3(Long)
2019-03-21 19:38:04 -<==      Total: 1
2019-03-21 19:38:04 -耗时 : 13
2019-03-21 19:38:04 -返回值 : moneyLog/elecLog/edit
2019-03-21 19:38:04 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-21 19:38:04 -HTTP METHOD : GET
2019-03-21 19:38:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:38:04 -参数 : [userOrg]
2019-03-21 19:38:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:38:04 -==> Parameters: userOrg(String)
2019-03-21 19:38:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 19:38:04 -HTTP METHOD : GET
2019-03-21 19:38:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 19:38:04 -参数 : [userType]
2019-03-21 19:38:04 -<==      Total: 0
2019-03-21 19:38:04 -耗时 : 6
2019-03-21 19:38:04 -返回值 : []
2019-03-21 19:38:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 19:38:04 -==> Parameters: userType(String)
2019-03-21 19:38:04 -<==      Total: 2
2019-03-21 19:38:04 -耗时 : 129
2019-03-21 19:38:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 20:06:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-03-21 20:36:05 -Validating all active sessions...
2019-03-21 20:36:05 -Finished session validation.  [1] sessions were stopped.
2019-03-21 20:36:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-03-21 21:06:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1296]
2019-03-21 21:36:05 -Validating all active sessions...
2019-03-21 21:36:05 -Finished session validation.  No sessions were stopped.
2019-03-21 21:36:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1729]
2019-03-21 22:06:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2162]
2019-03-21 22:36:05 -Validating all active sessions...
2019-03-21 22:36:05 -Finished session validation.  No sessions were stopped.
2019-03-21 22:36:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2595]
2019-03-21 22:55:32 -请求地址 : http://localhost:8081/login;JSESSIONID=753c7228-8cbc-431d-a092-4200709732a6
2019-03-21 22:55:32 -HTTP METHOD : GET
2019-03-21 22:55:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 22:55:32 -参数 : [{}]
2019-03-21 22:55:32 -耗时 : 3
2019-03-21 22:55:32 -返回值 : login
2019-03-21 22:55:38 -请求地址 : http://localhost:8081/getVerify
2019-03-21 22:55:39 -HTTP METHOD : GET
2019-03-21 22:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 22:55:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d75090d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@bf5f82f]
2019-03-21 22:55:39 -请求地址 : http://localhost:8081/login;JSESSIONID=753c7228-8cbc-431d-a092-4200709732a6
2019-03-21 22:55:39 -HTTP METHOD : GET
2019-03-21 22:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 22:55:39 -参数 : [{}]
2019-03-21 22:55:39 -耗时 : 1
2019-03-21 22:55:39 -返回值 : login
2019-03-21 22:55:39 -请求地址 : http://localhost:8081/getVerify
2019-03-21 22:55:39 -HTTP METHOD : GET
2019-03-21 22:55:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 22:55:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@48727e6e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e8681e5]
2019-03-21 22:55:40 -6000
2019-03-21 22:55:40 -8670
2019-03-21 22:55:40 -耗时 : 975
2019-03-21 22:55:40 -耗时 : 2329
2019-03-21 22:55:40 -返回值 : null
2019-03-21 22:55:40 -返回值 : null
2019-03-21 22:55:47 -请求地址 : http://localhost:8081/login
2019-03-21 22:55:47 -HTTP METHOD : POST
2019-03-21 22:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 22:55:47 -参数 : [admin, 111111, 6000, org.apache.shiro.web.servlet.ShiroHttpServletRequest@58a5348d]
2019-03-21 22:55:47 -耗时 : 1
2019-03-21 22:55:47 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-21 22:55:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 22:55:48 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 22:55:47.427(Timestamp)
2019-03-21 22:55:48 -<==    Updates: 1
2019-03-21 22:55:51 -请求地址 : http://localhost:8081/getVerify
2019-03-21 22:55:51 -HTTP METHOD : GET
2019-03-21 22:55:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 22:55:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@34e90b0f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2d56b106]
2019-03-21 22:55:51 -2430
2019-03-21 22:55:51 -耗时 : 277
2019-03-21 22:55:51 -返回值 : null
2019-03-21 22:55:57 -请求地址 : http://localhost:8081/login
2019-03-21 22:55:57 -HTTP METHOD : POST
2019-03-21 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 22:55:57 -参数 : [admin, 111111, 2430, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dfb28f]
2019-03-21 22:55:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 22:55:57 -==> Parameters: admin(String)
2019-03-21 22:55:57 -<==      Total: 1
2019-03-21 22:55:57 -耗时 : 72
2019-03-21 22:55:57 -返回值 : {msg=操作成功, code=0}
2019-03-21 22:55:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 22:55:57 -==> Parameters: 1(Long), admin(String), 登录(String), 78(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 22:55:57.702(Timestamp)
2019-03-21 22:55:57 -请求地址 : http://localhost:8081/index
2019-03-21 22:55:57 -HTTP METHOD : GET
2019-03-21 22:55:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 22:55:57 -参数 : [{}]
2019-03-21 22:55:57 -<==    Updates: 1
2019-03-21 22:55:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 22:55:57 -==> Parameters: 1(Long)
2019-03-21 22:55:57 -<==      Total: 46
2019-03-21 22:55:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 22:55:57 -==> Parameters: 138(Long)
2019-03-21 22:55:57 -<==      Total: 1
2019-03-21 22:55:57 -耗时 : 158
2019-03-21 22:55:57 -返回值 : index_v1
2019-03-21 22:55:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 22:55:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 158(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 22:55:57.917(Timestamp)
2019-03-21 22:55:58 -<==    Updates: 1
2019-03-21 22:55:58 -请求地址 : http://localhost:8081/main
2019-03-21 22:55:58 -HTTP METHOD : GET
2019-03-21 22:55:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 22:55:58 -参数 : []
2019-03-21 22:55:58 -耗时 : 68
2019-03-21 22:55:58 -返回值 : main
2019-03-21 22:55:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 22:55:58 -HTTP METHOD : GET
2019-03-21 22:55:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 22:55:58 -参数 : []
2019-03-21 22:55:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 22:55:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 22:55:59 -<==      Total: 0
2019-03-21 22:55:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 22:55:59 -==> Parameters: 1(Long), 0(String)
2019-03-21 22:55:59 -<==      Total: 1
2019-03-21 22:55:59 -耗时 : 16
2019-03-21 22:55:59 -返回值 : com.bootdo.common.utils.PageUtils@65228f90
2019-03-21 22:55:59 -请求地址 : http://localhost:8081/main
2019-03-21 22:55:59 -HTTP METHOD : GET
2019-03-21 22:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 22:55:59 -参数 : []
2019-03-21 22:55:59 -耗时 : 0
2019-03-21 22:55:59 -返回值 : main
2019-03-21 22:56:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 22:56:07 -==> Parameters: 1(Long)
2019-03-21 22:56:07 -<==      Total: 90
2019-03-21 22:56:07 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-21 22:56:07 -HTTP METHOD : GET
2019-03-21 22:56:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-21 22:56:07 -参数 : []
2019-03-21 22:56:07 -耗时 : 0
2019-03-21 22:56:07 -返回值 : /moneyList/moneyList
2019-03-21 23:06:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 23:06:17 -==> Parameters: 1(Long)
2019-03-21 23:06:17 -<==      Total: 90
2019-03-21 23:06:17 -请求地址 : http://localhost:8081/elec/elec
2019-03-21 23:06:17 -HTTP METHOD : GET
2019-03-21 23:06:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-21 23:06:17 -参数 : []
2019-03-21 23:06:17 -耗时 : 1
2019-03-21 23:06:17 -返回值 : elec/elec/elec
2019-03-21 23:06:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:06:17 -HTTP METHOD : GET
2019-03-21 23:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:06:17 -参数 : [userType]
2019-03-21 23:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:06:17 -==> Parameters: userType(String)
2019-03-21 23:06:17 -<==      Total: 2
2019-03-21 23:06:17 -耗时 : 6
2019-03-21 23:06:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:06:18 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-21 23:06:18 -HTTP METHOD : GET
2019-03-21 23:06:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-21 23:06:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1861b8f4]
2019-03-21 23:06:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-21 23:06:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 23:06:18 -<==      Total: 10
2019-03-21 23:06:18 -==>  Preparing: select count(*) from elec 
2019-03-21 23:06:18 -==> Parameters: 
2019-03-21 23:06:18 -<==      Total: 1
2019-03-21 23:06:18 -耗时 : 293
2019-03-21 23:06:18 -返回值 : com.bootdo.common.utils.PageUtils@5e913476
2019-03-21 23:06:23 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-21 23:06:23 -HTTP METHOD : GET
2019-03-21 23:06:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 23:06:23 -参数 : [1, {}]
2019-03-21 23:06:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 23:06:23 -==> Parameters: 1(Long)
2019-03-21 23:06:23 -<==      Total: 1
2019-03-21 23:06:23 -耗时 : 37
2019-03-21 23:06:23 -返回值 : elec/elec/edit
2019-03-21 23:06:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:06:24 -HTTP METHOD : GET
2019-03-21 23:06:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:06:24 -参数 : [userType]
2019-03-21 23:06:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:06:24 -==> Parameters: userType(String)
2019-03-21 23:06:24 -<==      Total: 2
2019-03-21 23:06:24 -耗时 : 8
2019-03-21 23:06:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:06:24 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 23:06:24 -HTTP METHOD : GET
2019-03-21 23:06:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:06:24 -参数 : [userState]
2019-03-21 23:06:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:06:24 -==> Parameters: userState(String)
2019-03-21 23:06:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 23:06:24 -HTTP METHOD : GET
2019-03-21 23:06:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:06:24 -参数 : [elecType]
2019-03-21 23:06:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:06:24 -==> Parameters: elecType(String)
2019-03-21 23:06:24 -<==      Total: 2
2019-03-21 23:06:24 -耗时 : 13
2019-03-21 23:06:24 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:06:24 -<==      Total: 2
2019-03-21 23:06:24 -耗时 : 16
2019-03-21 23:06:24 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:06:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:06:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-21 23:06:27.314(Timestamp)
2019-03-21 23:06:27 -<==    Updates: 1
2019-03-21 23:06:27 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 23:06:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3026]
2019-03-21 23:11:53 -请求地址 : http://localhost:8081/elec/elec/edit/7
2019-03-21 23:11:53 -HTTP METHOD : GET
2019-03-21 23:11:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 23:11:53 -参数 : [7, {}]
2019-03-21 23:11:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 23:11:53 -==> Parameters: 7(Long)
2019-03-21 23:11:53 -<==      Total: 1
2019-03-21 23:11:53 -耗时 : 27
2019-03-21 23:11:53 -返回值 : elec/elec/edit
2019-03-21 23:11:54 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 23:11:54 -HTTP METHOD : GET
2019-03-21 23:11:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:11:54 -参数 : [userState]
2019-03-21 23:11:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:11:54 -HTTP METHOD : GET
2019-03-21 23:11:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:11:54 -参数 : [userType]
2019-03-21 23:11:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:11:54 -==> Parameters: userType(String)
2019-03-21 23:11:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:11:54 -==> Parameters: userState(String)
2019-03-21 23:11:54 -<==      Total: 2
2019-03-21 23:11:54 -耗时 : 7
2019-03-21 23:11:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:11:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 23:11:54 -HTTP METHOD : GET
2019-03-21 23:11:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:11:54 -参数 : [elecType]
2019-03-21 23:11:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:11:54 -==> Parameters: elecType(String)
2019-03-21 23:11:54 -<==      Total: 2
2019-03-21 23:11:54 -<==      Total: 2
2019-03-21 23:11:54 -耗时 : 29
2019-03-21 23:11:54 -耗时 : 17
2019-03-21 23:11:54 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:11:54 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:11:58 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 23:11:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:11:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-21 23:11:58.861(Timestamp)
2019-03-21 23:11:59 -<==    Updates: 1
2019-03-21 23:15:19 -请求地址 : http://localhost:8081/elec/elec/edit/7
2019-03-21 23:15:19 -HTTP METHOD : GET
2019-03-21 23:15:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 23:15:19 -参数 : [7, {}]
2019-03-21 23:15:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 23:15:19 -==> Parameters: 7(Long)
2019-03-21 23:15:19 -<==      Total: 1
2019-03-21 23:15:19 -耗时 : 81
2019-03-21 23:15:19 -返回值 : elec/elec/edit
2019-03-21 23:15:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:15:19 -HTTP METHOD : GET
2019-03-21 23:15:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:19 -参数 : [userType]
2019-03-21 23:15:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 23:15:19 -==> Parameters: userType(String)
2019-03-21 23:15:19 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 23:15:19 -HTTP METHOD : GET
2019-03-21 23:15:19 -HTTP METHOD : GET
2019-03-21 23:15:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:19 -参数 : [userState]
2019-03-21 23:15:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:19 -参数 : [elecType]
2019-03-21 23:15:19 -==> Parameters: userState(String)
2019-03-21 23:15:19 -<==      Total: 2
2019-03-21 23:15:19 -<==      Total: 2
2019-03-21 23:15:19 -耗时 : 11
2019-03-21 23:15:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:19 -耗时 : 9
2019-03-21 23:15:19 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:19 -==> Parameters: elecType(String)
2019-03-21 23:15:19 -<==      Total: 2
2019-03-21 23:15:19 -耗时 : 22
2019-03-21 23:15:19 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:23 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 23:15:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:15:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-03,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-03,1"](String), null, 2019-03-21 23:15:23.751(Timestamp)
2019-03-21 23:15:24 -<==    Updates: 1
2019-03-21 23:15:28 -请求地址 : http://localhost:8081/index
2019-03-21 23:15:28 -HTTP METHOD : GET
2019-03-21 23:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 23:15:28 -参数 : [{}]
2019-03-21 23:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 23:15:28 -==> Parameters: 1(Long)
2019-03-21 23:15:28 -<==      Total: 46
2019-03-21 23:15:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 23:15:28 -==> Parameters: 138(Long)
2019-03-21 23:15:28 -<==      Total: 1
2019-03-21 23:15:28 -耗时 : 143
2019-03-21 23:15:28 -返回值 : index_v1
2019-03-21 23:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:15:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 145(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 23:15:28.52(Timestamp)
2019-03-21 23:15:28 -<==    Updates: 1
2019-03-21 23:15:29 -请求地址 : http://localhost:8081/main
2019-03-21 23:15:29 -HTTP METHOD : GET
2019-03-21 23:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:15:29 -参数 : []
2019-03-21 23:15:29 -耗时 : 1
2019-03-21 23:15:29 -返回值 : main
2019-03-21 23:15:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 23:15:38 -请求地址 : http://localhost:8081/main
2019-03-21 23:15:38 -HTTP METHOD : GET
2019-03-21 23:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:15:38 -参数 : []
2019-03-21 23:15:38 -耗时 : 0
2019-03-21 23:15:38 -返回值 : main
2019-03-21 23:15:38 -HTTP METHOD : GET
2019-03-21 23:15:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 23:15:38 -参数 : []
2019-03-21 23:15:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 23:15:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 23:15:39 -<==      Total: 0
2019-03-21 23:15:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 23:15:39 -==> Parameters: 1(Long), 0(String)
2019-03-21 23:15:39 -<==      Total: 1
2019-03-21 23:15:39 -耗时 : 143
2019-03-21 23:15:39 -返回值 : com.bootdo.common.utils.PageUtils@1611f251
2019-03-21 23:15:42 -请求地址 : http://localhost:8081/elec/elec
2019-03-21 23:15:42 -HTTP METHOD : GET
2019-03-21 23:15:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-21 23:15:42 -参数 : []
2019-03-21 23:15:42 -耗时 : 1
2019-03-21 23:15:42 -返回值 : elec/elec/elec
2019-03-21 23:15:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:15:42 -HTTP METHOD : GET
2019-03-21 23:15:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:42 -参数 : [userType]
2019-03-21 23:15:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:42 -==> Parameters: userType(String)
2019-03-21 23:15:42 -<==      Total: 2
2019-03-21 23:15:42 -耗时 : 6
2019-03-21 23:15:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-21 23:15:42 -HTTP METHOD : GET
2019-03-21 23:15:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-21 23:15:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1a546718]
2019-03-21 23:15:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-21 23:15:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 23:15:42 -<==      Total: 10
2019-03-21 23:15:42 -==>  Preparing: select count(*) from elec 
2019-03-21 23:15:42 -==> Parameters: 
2019-03-21 23:15:42 -<==      Total: 1
2019-03-21 23:15:42 -耗时 : 140
2019-03-21 23:15:42 -返回值 : com.bootdo.common.utils.PageUtils@45755b5d
2019-03-21 23:15:46 -请求地址 : http://localhost:8081/elec/elec/edit/8
2019-03-21 23:15:46 -HTTP METHOD : GET
2019-03-21 23:15:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-21 23:15:46 -参数 : [8, {}]
2019-03-21 23:15:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-21 23:15:46 -==> Parameters: 8(Long)
2019-03-21 23:15:46 -<==      Total: 1
2019-03-21 23:15:46 -耗时 : 5
2019-03-21 23:15:46 -返回值 : elec/elec/edit
2019-03-21 23:15:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-21 23:15:46 -HTTP METHOD : GET
2019-03-21 23:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:46 -参数 : [userState]
2019-03-21 23:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:46 -==> Parameters: userState(String)
2019-03-21 23:15:46 -<==      Total: 2
2019-03-21 23:15:46 -耗时 : 6
2019-03-21 23:15:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-21 23:15:46 -HTTP METHOD : GET
2019-03-21 23:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:46 -参数 : [elecType]
2019-03-21 23:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:46 -==> Parameters: elecType(String)
2019-03-21 23:15:46 -<==      Total: 2
2019-03-21 23:15:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:15:46 -HTTP METHOD : GET
2019-03-21 23:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:15:46 -参数 : [userType]
2019-03-21 23:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:15:46 -==> Parameters: userType(String)
2019-03-21 23:15:46 -<==      Total: 2
2019-03-21 23:15:46 -耗时 : 16
2019-03-21 23:15:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:46 -耗时 : 32
2019-03-21 23:15:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:15:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:15:50 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 23:15:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-21 23:15:50.687(Timestamp)
2019-03-21 23:15:51 -<==    Updates: 1
2019-03-21 23:16:00 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-21 23:16:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:16:00 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,"](String), null, 2019-03-21 23:16:00.848(Timestamp)
2019-03-21 23:16:00 -<==    Updates: 1
2019-03-21 23:25:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 18848 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-21 23:25:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-21 23:25:52 -The following profiles are active: dev
2019-03-21 23:25:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Thu Mar 21 23:25:52 CST 2019]; root of context hierarchy
2019-03-21 23:26:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-21 23:26:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b61dd48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8dbb0bef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-21 23:26:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-21 23:26:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-21 23:26:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-21 23:26:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-21 23:26:16 -Starting service [Tomcat]
2019-03-21 23:26:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-21 23:26:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-21 23:26:17 -Initializing Spring embedded WebApplicationContext
2019-03-21 23:26:17 -Root WebApplicationContext: initialization completed in 25145 ms
2019-03-21 23:26:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-21 23:26:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-21 23:26:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-21 23:26:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-21 23:26:19 -Filter xssFilter was not registered (disabled)
2019-03-21 23:26:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-21 23:26:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-21 23:26:19 -Servlet statViewServlet mapped to [/druid/*]
2019-03-21 23:26:19 -Servlet dispatcherServlet mapped to [/]
2019-03-21 23:26:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Thu Mar 21 23:25:52 CST 2019]; root of context hierarchy
2019-03-21 23:26:25 -Using default implementation for ThreadExecutor
2019-03-21 23:26:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-21 23:26:26 -Quartz Scheduler v.2.2.1 created.
2019-03-21 23:26:26 -RAMJobStore initialized.
2019-03-21 23:26:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-21 23:26:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-21 23:26:26 -Quartz scheduler version: 2.2.1
2019-03-21 23:26:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6338afe2
2019-03-21 23:26:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-21 23:26:27 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-21 23:26:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-21 23:26:31 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-21 23:26:31 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-21 23:26:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-21 23:26:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-21 23:26:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-21 23:26:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-21 23:26:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-21 23:26:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-21 23:26:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-21 23:26:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-21 23:26:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-21 23:26:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-21 23:26:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-21 23:26:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-21 23:26:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-21 23:26:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 23:26:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-21 23:26:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-21 23:26:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-21 23:26:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-21 23:26:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-21 23:26:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-21 23:26:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-21 23:26:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-21 23:26:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-21 23:26:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-21 23:26:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-21 23:26:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-21 23:26:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-21 23:26:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-21 23:26:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-21 23:26:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-21 23:26:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-21 23:26:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-21 23:26:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 23:26:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-21 23:26:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-21 23:26:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-21 23:26:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-21 23:26:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-21 23:26:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-21 23:26:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-21 23:26:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-21 23:26:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-21 23:26:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-21 23:26:32 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-21 23:26:32 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-21 23:26:32 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-21 23:26:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-21 23:26:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-21 23:26:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-21 23:26:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-21 23:26:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-21 23:26:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-21 23:26:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-21 23:26:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-21 23:26:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-21 23:26:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-21 23:26:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-21 23:26:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-21 23:26:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-21 23:26:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-21 23:26:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-21 23:26:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-21 23:26:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-21 23:26:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-21 23:26:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-21 23:26:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-21 23:26:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-21 23:26:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-21 23:26:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-21 23:26:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-21 23:26:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-21 23:26:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-21 23:26:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-21 23:26:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-21 23:26:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 23:26:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-21 23:26:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-21 23:26:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-21 23:26:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-21 23:26:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-21 23:26:33 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-21 23:26:33 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-21 23:26:33 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-21 23:26:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-21 23:26:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-21 23:26:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-21 23:26:33 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:33 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-21 23:26:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-21 23:26:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-21 23:26:33 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-21 23:26:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-21 23:26:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-21 23:26:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-21 23:26:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-21 23:26:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-21 23:26:34 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-21 23:26:34 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-21 23:26:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-21 23:26:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 23:26:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Thu Mar 21 23:25:52 CST 2019]; root of context hierarchy
2019-03-21 23:26:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 23:26:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 23:26:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-21 23:26:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-21 23:26:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-21 23:26:46 -Registering beans for JMX exposure on startup
2019-03-21 23:26:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-21 23:26:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-21 23:26:46 -Starting beans in phase 2147483647
2019-03-21 23:26:46 -Context refreshed
2019-03-21 23:26:46 -Found 1 custom documentation plugin(s)
2019-03-21 23:26:46 -Scanning for api listing references
2019-03-21 23:26:47 -Generating unique operation named: removeUsingPOST_1
2019-03-21 23:26:48 -Generating unique operation named: addUsingGET_1
2019-03-21 23:26:48 -Generating unique operation named: editUsingGET_1
2019-03-21 23:26:48 -Generating unique operation named: listUsingGET_1
2019-03-21 23:26:48 -Generating unique operation named: removeUsingPOST_2
2019-03-21 23:26:48 -Generating unique operation named: removeUsingPOST_3
2019-03-21 23:26:48 -Generating unique operation named: saveUsingPOST_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingGET_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingHEAD_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingPOST_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingPUT_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingPATCH_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingDELETE_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-21 23:26:48 -Generating unique operation named: updateUsingTRACE_1
2019-03-21 23:26:48 -Generating unique operation named: addUsingGET_2
2019-03-21 23:26:49 -Generating unique operation named: editUsingGET_2
2019-03-21 23:26:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-21 23:26:49 -Generating unique operation named: listUsingGET_2
2019-03-21 23:26:49 -Generating unique operation named: removeUsingPOST_4
2019-03-21 23:26:49 -Generating unique operation named: removeUsingPOST_5
2019-03-21 23:26:49 -Generating unique operation named: saveUsingPOST_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingGET_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingHEAD_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingPOST_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingPUT_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingPATCH_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingDELETE_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-21 23:26:49 -Generating unique operation named: updateUsingTRACE_2
2019-03-21 23:26:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-21 23:26:49 -Generating unique operation named: addUsingGET_3
2019-03-21 23:26:49 -Generating unique operation named: editUsingGET_3
2019-03-21 23:26:49 -Generating unique operation named: listUsingGET_3
2019-03-21 23:26:49 -Generating unique operation named: removeUsingPOST_6
2019-03-21 23:26:49 -Generating unique operation named: removeUsingPOST_7
2019-03-21 23:26:49 -Generating unique operation named: saveUsingPOST_3
2019-03-21 23:26:49 -Generating unique operation named: updateUsingGET_3
2019-03-21 23:26:49 -Generating unique operation named: updateUsingHEAD_3
2019-03-21 23:26:49 -Generating unique operation named: updateUsingPOST_3
2019-03-21 23:26:49 -Generating unique operation named: updateUsingPUT_3
2019-03-21 23:26:50 -Generating unique operation named: updateUsingPATCH_3
2019-03-21 23:26:50 -Generating unique operation named: updateUsingDELETE_3
2019-03-21 23:26:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-21 23:26:50 -Generating unique operation named: updateUsingTRACE_3
2019-03-21 23:26:50 -Generating unique operation named: addUsingGET_4
2019-03-21 23:26:50 -Generating unique operation named: editUsingGET_4
2019-03-21 23:26:50 -Generating unique operation named: listUsingGET_4
2019-03-21 23:26:50 -Generating unique operation named: removeUsingPOST_8
2019-03-21 23:26:50 -Generating unique operation named: removeUsingPOST_9
2019-03-21 23:26:50 -Generating unique operation named: saveUsingPOST_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingGET_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingHEAD_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingPOST_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingPUT_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingPATCH_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingDELETE_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-21 23:26:50 -Generating unique operation named: updateUsingTRACE_4
2019-03-21 23:26:50 -Generating unique operation named: ElecUsingGET_1
2019-03-21 23:26:50 -Generating unique operation named: addUsingGET_5
2019-03-21 23:26:50 -Generating unique operation named: editUsingGET_5
2019-03-21 23:26:50 -Generating unique operation named: listUsingGET_5
2019-03-21 23:26:50 -Generating unique operation named: removeUsingPOST_10
2019-03-21 23:26:50 -Generating unique operation named: removeUsingPOST_11
2019-03-21 23:26:50 -Generating unique operation named: saveUsingPOST_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingGET_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingHEAD_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPOST_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPUT_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPATCH_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingDELETE_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-21 23:26:51 -Generating unique operation named: updateUsingTRACE_5
2019-03-21 23:26:51 -Generating unique operation named: editUsingGET_6
2019-03-21 23:26:51 -Generating unique operation named: listUsingGET_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPOST_6
2019-03-21 23:26:51 -Generating unique operation named: addUsingGET_6
2019-03-21 23:26:51 -Generating unique operation named: editUsingGET_7
2019-03-21 23:26:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-21 23:26:51 -Generating unique operation named: listUsingGET_7
2019-03-21 23:26:51 -Generating unique operation named: removeUsingPOST_12
2019-03-21 23:26:51 -Generating unique operation named: removeUsingPOST_13
2019-03-21 23:26:51 -Generating unique operation named: saveUsingPOST_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingGET_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingHEAD_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPOST_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPUT_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPATCH_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingDELETE_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-21 23:26:51 -Generating unique operation named: updateUsingTRACE_6
2019-03-21 23:26:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-21 23:26:51 -Generating unique operation named: addUsingGET_7
2019-03-21 23:26:51 -Generating unique operation named: editUsingGET_8
2019-03-21 23:26:51 -Generating unique operation named: listUsingGET_8
2019-03-21 23:26:51 -Generating unique operation named: removeUsingPOST_14
2019-03-21 23:26:51 -Generating unique operation named: removeUsingPOST_15
2019-03-21 23:26:51 -Generating unique operation named: saveUsingPOST_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingGET_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingHEAD_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPOST_8
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPUT_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingPATCH_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingDELETE_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-21 23:26:51 -Generating unique operation named: updateUsingTRACE_7
2019-03-21 23:26:51 -Generating unique operation named: addUsingGET_8
2019-03-21 23:26:51 -Generating unique operation named: editUsingGET_9
2019-03-21 23:26:52 -Generating unique operation named: listUsingGET_9
2019-03-21 23:26:52 -Generating unique operation named: removeUsingPOST_16
2019-03-21 23:26:52 -Generating unique operation named: removeUsingPOST_17
2019-03-21 23:26:52 -Generating unique operation named: saveUsingPOST_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingGET_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingHEAD_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingPOST_9
2019-03-21 23:26:52 -Generating unique operation named: updateUsingPUT_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingPATCH_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingDELETE_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-21 23:26:52 -Generating unique operation named: updateUsingTRACE_8
2019-03-21 23:26:52 -Generating unique operation named: addUsingGET_9
2019-03-21 23:26:52 -Generating unique operation named: editUsingGET_10
2019-03-21 23:26:52 -Generating unique operation named: infoUsingGET_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingHEAD_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingPOST_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingPUT_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingPATCH_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingDELETE_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-21 23:26:52 -Generating unique operation named: infoUsingTRACE_1
2019-03-21 23:26:52 -Generating unique operation named: listUsingGET_10
2019-03-21 23:26:52 -Generating unique operation named: removeUsingPOST_18
2019-03-21 23:26:52 -Generating unique operation named: removeUsingPOST_19
2019-03-21 23:26:52 -Generating unique operation named: saveUsingPOST_9
2019-03-21 23:26:52 -Generating unique operation named: updateUsingPOST_10
2019-03-21 23:26:52 -Generating unique operation named: listUsingGET_11
2019-03-21 23:26:52 -Generating unique operation named: removeUsingPOST_20
2019-03-21 23:26:52 -Generating unique operation named: welcomeUsingGET_1
2019-03-21 23:26:53 -Generating unique operation named: addUsingGET_10
2019-03-21 23:26:53 -Generating unique operation named: editUsingGET_11
2019-03-21 23:26:53 -Generating unique operation named: listUsingGET_12
2019-03-21 23:26:53 -Generating unique operation named: removeUsingPOST_21
2019-03-21 23:26:53 -Generating unique operation named: saveUsingPOST_10
2019-03-21 23:26:53 -Generating unique operation named: treeUsingGET_1
2019-03-21 23:26:53 -Generating unique operation named: treeUsingGET_2
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPOST_11
2019-03-21 23:26:53 -Generating unique operation named: addUsingGET_11
2019-03-21 23:26:53 -Generating unique operation named: editUsingGET_12
2019-03-21 23:26:53 -Generating unique operation named: listUsingGET_13
2019-03-21 23:26:53 -Generating unique operation named: removeUsingPOST_22
2019-03-21 23:26:53 -Generating unique operation named: removeUsingPOST_23
2019-03-21 23:26:53 -Generating unique operation named: saveUsingPOST_11
2019-03-21 23:26:53 -Generating unique operation named: updateUsingGET_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingHEAD_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPOST_12
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPUT_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPATCH_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingDELETE_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-21 23:26:53 -Generating unique operation named: updateUsingTRACE_9
2019-03-21 23:26:53 -Generating unique operation named: addUsingGET_12
2019-03-21 23:26:53 -Generating unique operation named: editUsingGET_13
2019-03-21 23:26:53 -Generating unique operation named: listUsingGET_14
2019-03-21 23:26:53 -Generating unique operation named: removeUsingPOST_24
2019-03-21 23:26:53 -Generating unique operation named: removeUsingPOST_25
2019-03-21 23:26:53 -Generating unique operation named: saveUsingPOST_12
2019-03-21 23:26:53 -Generating unique operation named: updateUsingGET_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingHEAD_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPOST_13
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPUT_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingPATCH_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingDELETE_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-21 23:26:53 -Generating unique operation named: updateUsingTRACE_10
2019-03-21 23:26:53 -Generating unique operation named: addUsingGET_13
2019-03-21 23:26:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-21 23:26:53 -Generating unique operation named: editUsingGET_14
2019-03-21 23:26:54 -Generating unique operation named: listUsingGET_15
2019-03-21 23:26:54 -Generating unique operation named: saveUsingPOST_13
2019-03-21 23:26:54 -Generating unique operation named: saveUsingPOST_14
2019-03-21 23:26:54 -Generating unique operation named: updateUsingPOST_14
2019-03-21 23:26:54 -Generating unique operation named: listUsingGET_16
2019-03-21 23:26:54 -Generating unique operation named: listUsingHEAD_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingPOST_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingPUT_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingPATCH_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingDELETE_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingOPTIONS_1
2019-03-21 23:26:54 -Generating unique operation named: listUsingTRACE_1
2019-03-21 23:26:54 -Generating unique operation named: addUsingGET_14
2019-03-21 23:26:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-21 23:26:54 -Generating unique operation named: editUsingGET_15
2019-03-21 23:26:54 -Generating unique operation named: listUsingGET_17
2019-03-21 23:26:54 -Generating unique operation named: removeUsingPOST_26
2019-03-21 23:26:54 -Generating unique operation named: saveUsingPOST_15
2019-03-21 23:26:54 -Generating unique operation named: treeUsingGET_3
2019-03-21 23:26:55 -Generating unique operation named: treeViewUsingGET_1
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPOST_15
2019-03-21 23:26:55 -Generating unique operation named: addUsingGET_15
2019-03-21 23:26:55 -Generating unique operation named: editUsingGET_16
2019-03-21 23:26:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-21 23:26:55 -Generating unique operation named: listUsingGET_18
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_27
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_28
2019-03-21 23:26:55 -Generating unique operation named: saveUsingPOST_16
2019-03-21 23:26:55 -Generating unique operation named: updateUsingGET_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingHEAD_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPOST_16
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPUT_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPATCH_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingDELETE_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-21 23:26:55 -Generating unique operation named: updateUsingTRACE_11
2019-03-21 23:26:55 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-21 23:26:55 -Generating unique operation named: addUsingGET_16
2019-03-21 23:26:55 -Generating unique operation named: editUsingGET_17
2019-03-21 23:26:55 -Generating unique operation named: listUsingGET_19
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_29
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_30
2019-03-21 23:26:55 -Generating unique operation named: saveUsingPOST_17
2019-03-21 23:26:55 -Generating unique operation named: updateUsingGET_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingHEAD_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPOST_17
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPUT_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPATCH_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingDELETE_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-21 23:26:55 -Generating unique operation named: updateUsingTRACE_12
2019-03-21 23:26:55 -Generating unique operation named: addUsingGET_17
2019-03-21 23:26:55 -Generating unique operation named: editUsingGET_18
2019-03-21 23:26:55 -Generating unique operation named: listUsingGET_20
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_31
2019-03-21 23:26:55 -Generating unique operation named: removeUsingPOST_32
2019-03-21 23:26:55 -Generating unique operation named: saveUsingPOST_18
2019-03-21 23:26:55 -Generating unique operation named: updateUsingGET_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingHEAD_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPOST_18
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPUT_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingPATCH_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingDELETE_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-21 23:26:55 -Generating unique operation named: updateUsingTRACE_13
2019-03-21 23:26:56 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-21 23:26:56 -Starting Quartz Scheduler now
2019-03-21 23:26:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-21 23:26:56 -Starting...
2019-03-21 23:26:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-21 23:26:56 -Started.
2019-03-21 23:26:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-21 23:26:56 -Using a shared selector for servlet write/read
2019-03-21 23:26:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-21 23:26:56 -Started BootdoApplication in 66.917 seconds (JVM running for 69.11)
2019-03-21 23:26:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-21 23:26:57 -==> Parameters: 
2019-03-21 23:26:57 -<==      Total: 1
2019-03-21 23:27:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-21 23:27:16 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-21 23:27:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 158 ms
2019-03-21 23:27:16 -Enabling session validation scheduler...
2019-03-21 23:27:17 -请求地址 : http://localhost:8081/login;JSESSIONID=87031455-1483-408c-87c6-27bdf53616c4
2019-03-21 23:27:17 -HTTP METHOD : GET
2019-03-21 23:27:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-21 23:27:17 -参数 : [{}]
2019-03-21 23:27:17 -耗时 : 8
2019-03-21 23:27:17 -返回值 : login
2019-03-21 23:27:20 -请求地址 : http://localhost:8081/getVerify
2019-03-21 23:27:20 -HTTP METHOD : GET
2019-03-21 23:27:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-21 23:27:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f81998e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@229134ef]
2019-03-21 23:27:27 -8832
2019-03-21 23:27:27 -耗时 : 7158
2019-03-21 23:27:27 -返回值 : null
2019-03-21 23:27:31 -请求地址 : http://localhost:8081/login
2019-03-21 23:27:31 -HTTP METHOD : POST
2019-03-21 23:27:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-21 23:27:31 -参数 : [admin, 111111, 8832, org.apache.shiro.web.servlet.ShiroHttpServletRequest@40f5ad63]
2019-03-21 23:27:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-21 23:27:31 -==> Parameters: admin(String)
2019-03-21 23:27:31 -<==      Total: 1
2019-03-21 23:27:31 -耗时 : 352
2019-03-21 23:27:31 -返回值 : {msg=操作成功, code=0}
2019-03-21 23:27:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-21 23:27:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:27:32 -==> Parameters: 1(Long), admin(String), 登录(String), 352(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-21 23:27:32.174(Timestamp)
2019-03-21 23:27:32 -请求地址 : http://localhost:8081/index
2019-03-21 23:27:32 -HTTP METHOD : GET
2019-03-21 23:27:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 23:27:32 -参数 : [{}]
2019-03-21 23:27:32 -<==    Updates: 1
2019-03-21 23:27:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 23:27:32 -==> Parameters: 1(Long)
2019-03-21 23:27:33 -<==      Total: 46
2019-03-21 23:27:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 23:27:33 -==> Parameters: 138(Long)
2019-03-21 23:27:33 -<==      Total: 1
2019-03-21 23:27:33 -耗时 : 889
2019-03-21 23:27:33 -返回值 : index_v1
2019-03-21 23:27:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:27:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 889(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 23:27:33.382(Timestamp)
2019-03-21 23:27:33 -<==    Updates: 1
2019-03-21 23:27:33 -请求地址 : http://localhost:8081/main
2019-03-21 23:27:33 -HTTP METHOD : GET
2019-03-21 23:27:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:27:33 -参数 : []
2019-03-21 23:27:33 -耗时 : 0
2019-03-21 23:27:33 -返回值 : main
2019-03-21 23:27:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 23:27:34 -HTTP METHOD : GET
2019-03-21 23:27:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 23:27:34 -参数 : []
2019-03-21 23:27:34 -请求地址 : http://localhost:8081/main
2019-03-21 23:27:34 -HTTP METHOD : GET
2019-03-21 23:27:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:27:34 -参数 : []
2019-03-21 23:27:34 -耗时 : 0
2019-03-21 23:27:34 -返回值 : main
2019-03-21 23:27:35 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2019-03-21 23:27:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-21 23:27:42 -==> Parameters: 1(Long)
2019-03-21 23:27:42 -<==      Total: 90
2019-03-21 23:27:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-21 23:27:42 -HTTP METHOD : GET
2019-03-21 23:27:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-21 23:27:42 -参数 : []
2019-03-21 23:27:42 -耗时 : 1
2019-03-21 23:27:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-21 23:27:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-21 23:27:45 -HTTP METHOD : GET
2019-03-21 23:27:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-21 23:27:45 -参数 : [userType]
2019-03-21 23:27:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-21 23:27:45 -==> Parameters: userType(String)
2019-03-21 23:27:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 23:27:46 -HTTP METHOD : GET
2019-03-21 23:27:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 23:27:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-21 23:27:46 -<==      Total: 2
2019-03-21 23:27:46 -耗时 : 458
2019-03-21 23:27:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-21 23:28:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 23:28:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 23:28:38 -<==      Total: 0
2019-03-21 23:28:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 23:28:38 -==> Parameters: 1(Long), 0(String)
2019-03-21 23:28:38 -<==      Total: 1
2019-03-21 23:28:38 -耗时 : 64803
2019-03-21 23:28:38 -返回值 : com.bootdo.common.utils.PageUtils@4abf892f
2019-03-21 23:28:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-21 23:28:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-21 23:28:43 -<==      Total: 5
2019-03-21 23:28:43 -==>  Preparing: select count(*) from elec_log 
2019-03-21 23:28:43 -==> Parameters: 
2019-03-21 23:28:43 -<==      Total: 1
2019-03-21 23:28:43 -耗时 : 57988
2019-03-21 23:28:43 -返回值 : com.bootdo.common.utils.PageUtils@200f1c10
2019-03-21 23:29:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 23:29:17 -HTTP METHOD : GET
2019-03-21 23:29:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 23:29:17 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-21 23:29:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 23:29:17 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 23:29:17 -<==      Total: 3
2019-03-21 23:29:17 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 23:29:17 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-21 23:29:17 -<==      Total: 1
2019-03-21 23:29:17 -耗时 : 35
2019-03-21 23:29:17 -返回值 : com.bootdo.common.utils.PageUtils@45953e3
2019-03-21 23:29:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-21 23:29:18 -HTTP METHOD : GET
2019-03-21 23:29:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-21 23:29:18 -参数 : []
2019-03-21 23:29:18 -耗时 : 0
2019-03-21 23:29:18 -返回值 : system/dept/deptTree
2019-03-21 23:29:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-21 23:29:18 -HTTP METHOD : GET
2019-03-21 23:29:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-21 23:29:18 -参数 : []
2019-03-21 23:29:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-21 23:29:18 -==> Parameters: 
2019-03-21 23:29:18 -<==      Total: 3
2019-03-21 23:29:18 -耗时 : 39
2019-03-21 23:29:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-21 23:29:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-21 23:29:24 -HTTP METHOD : GET
2019-03-21 23:29:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-21 23:29:24 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-21 23:29:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-21 23:29:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-21 23:29:24 -<==      Total: 3
2019-03-21 23:29:24 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-21 23:29:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-21 23:29:24 -<==      Total: 1
2019-03-21 23:29:24 -耗时 : 20
2019-03-21 23:29:24 -返回值 : com.bootdo.common.utils.PageUtils@24645780
2019-03-21 23:29:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-21 23:29:26 -HTTP METHOD : GET
2019-03-21 23:29:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-21 23:29:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2cfb6db5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@51ec973c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3ca1f3a3]
2019-03-21 23:31:36 -请求地址 : http://localhost:8081/index
2019-03-21 23:31:36 -HTTP METHOD : GET
2019-03-21 23:31:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-21 23:31:36 -参数 : [{}]
2019-03-21 23:31:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-21 23:31:36 -==> Parameters: 1(Long)
2019-03-21 23:31:36 -<==      Total: 46
2019-03-21 23:31:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-21 23:31:36 -==> Parameters: 138(Long)
2019-03-21 23:31:36 -<==      Total: 1
2019-03-21 23:31:36 -耗时 : 35
2019-03-21 23:31:36 -返回值 : index_v1
2019-03-21 23:31:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-21 23:31:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-21 23:31:36.641(Timestamp)
2019-03-21 23:31:37 -请求地址 : http://localhost:8081/main
2019-03-21 23:31:37 -HTTP METHOD : GET
2019-03-21 23:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:31:37 -参数 : []
2019-03-21 23:31:37 -耗时 : 1
2019-03-21 23:31:37 -返回值 : main
2019-03-21 23:31:37 -<==    Updates: 1
2019-03-21 23:31:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-21 23:31:38 -HTTP METHOD : GET
2019-03-21 23:31:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-21 23:31:38 -参数 : []
2019-03-21 23:31:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-21 23:31:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-21 23:31:38 -<==      Total: 0
2019-03-21 23:31:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-21 23:31:38 -==> Parameters: 1(Long), 0(String)
2019-03-21 23:31:38 -<==      Total: 1
2019-03-21 23:31:38 -耗时 : 6
2019-03-21 23:31:38 -返回值 : com.bootdo.common.utils.PageUtils@5733a6fb
2019-03-21 23:31:38 -请求地址 : http://localhost:8081/main
2019-03-21 23:31:38 -HTTP METHOD : GET
2019-03-21 23:31:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-21 23:31:38 -参数 : []
2019-03-21 23:31:38 -耗时 : 0
2019-03-21 23:31:38 -返回值 : main
2019-03-21 23:32:15 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)

2019-05-13 08:49:38 -Starting BootdoApplication on PC-201905091110 with PID 15764 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 08:49:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 08:49:39 -The following profiles are active: dev
2019-05-13 08:49:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 08:49:39 CST 2019]; root of context hierarchy
2019-05-13 08:49:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 08:49:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$14971f41] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6f04de8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:46 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 08:49:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 08:49:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 08:49:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 08:49:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 08:49:48 -Starting service [Tomcat]
2019-05-13 08:49:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 08:49:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 08:49:48 -Initializing Spring embedded WebApplicationContext
2019-05-13 08:49:48 -Root WebApplicationContext: initialization completed in 9707 ms
2019-05-13 08:49:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 08:49:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 08:49:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 08:49:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 08:49:49 -Filter xssFilter was not registered (disabled)
2019-05-13 08:49:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 08:49:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 08:49:49 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 08:49:49 -Servlet dispatcherServlet mapped to [/]
2019-05-13 08:49:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 08:49:39 CST 2019]; root of context hierarchy
2019-05-13 08:49:58 -Using default implementation for ThreadExecutor
2019-05-13 08:49:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 08:49:58 -Quartz Scheduler v.2.2.1 created.
2019-05-13 08:49:58 -RAMJobStore initialized.
2019-05-13 08:49:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 08:49:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 08:49:58 -Quartz scheduler version: 2.2.1
2019-05-13 08:49:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-13 08:49:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 08:49:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 08:50:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 08:50:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 08:50:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 08:50:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 08:50:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 08:50:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 08:50:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 08:50:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 08:50:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 08:50:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 08:50:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 08:50:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 08:50:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 08:50:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 08:50:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 08:50:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 08:50:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 08:50:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 08:50:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 08:50:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 08:50:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 08:50:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 08:50:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 08:50:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 08:50:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 08:50:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 08:50:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 08:50:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 08:50:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 08:50:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 08:50:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 08:50:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 08:50:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 08:50:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 08:50:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 08:50:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 08:50:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 08:50:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 08:50:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 08:50:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 08:50:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 08:50:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 08:50:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 08:50:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 08:50:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 08:50:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 08:50:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 08:50:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 08:50:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 08:50:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 08:50:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 08:50:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 08:50:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 08:50:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 08:50:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 08:50:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 08:50:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 08:50:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 08:50:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 08:50:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 08:50:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 08:50:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 08:50:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 08:50:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 08:50:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 08:50:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 08:50:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 08:50:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 08:50:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 08:50:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 08:50:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 08:50:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 08:50:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 08:50:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 08:50:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 08:50:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 08:50:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 08:50:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 08:50:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 08:50:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 08:50:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 08:50:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 08:50:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 08:50:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 08:50:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 08:50:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 08:50:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 08:50:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 08:50:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 08:50:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 08:50:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 08:50:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 08:50:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 08:49:39 CST 2019]; root of context hierarchy
2019-05-13 08:50:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 08:50:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 08:50:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 08:50:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 08:50:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 08:50:06 -Registering beans for JMX exposure on startup
2019-05-13 08:50:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 08:50:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 08:50:06 -Starting beans in phase 2147483647
2019-05-13 08:50:06 -Context refreshed
2019-05-13 08:50:06 -Found 1 custom documentation plugin(s)
2019-05-13 08:50:06 -Scanning for api listing references
2019-05-13 08:50:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_1
2019-05-13 08:50:09 -Generating unique operation named: addUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: editUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: listUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_2
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_3
2019-05-13 08:50:09 -Generating unique operation named: saveUsingPOST_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPOST_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPUT_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 08:50:09 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 08:50:09 -Generating unique operation named: addUsingGET_2
2019-05-13 08:50:09 -Generating unique operation named: editUsingGET_2
2019-05-13 08:50:09 -Generating unique operation named: listUsingGET_2
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_4
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_5
2019-05-13 08:50:09 -Generating unique operation named: saveUsingPOST_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPOST_2
2019-05-13 08:50:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: addUsingGET_3
2019-05-13 08:50:09 -Generating unique operation named: editUsingGET_3
2019-05-13 08:50:09 -Generating unique operation named: listUsingGET_3
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_6
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_7
2019-05-13 08:50:09 -Generating unique operation named: saveUsingPOST_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingGET_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPOST_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPUT_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 08:50:09 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 08:50:09 -Generating unique operation named: addUsingGET_4
2019-05-13 08:50:09 -Generating unique operation named: editUsingGET_4
2019-05-13 08:50:09 -Generating unique operation named: listUsingGET_4
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_8
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_9
2019-05-13 08:50:09 -Generating unique operation named: saveUsingPOST_4
2019-05-13 08:50:09 -Generating unique operation named: updateUsingGET_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPOST_4
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPUT_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 08:50:09 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 08:50:09 -Generating unique operation named: ElecUsingGET_1
2019-05-13 08:50:09 -Generating unique operation named: addUsingGET_5
2019-05-13 08:50:09 -Generating unique operation named: editUsingGET_5
2019-05-13 08:50:09 -Generating unique operation named: listUsingGET_5
2019-05-13 08:50:09 -Generating unique operation named: removeUsingPOST_10
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_11
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPUT_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 08:50:10 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_6
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_6
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_6
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_7
2019-05-13 08:50:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_7
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_12
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_13
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPUT_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 08:50:10 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 08:50:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_7
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_8
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_8
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_14
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_15
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPUT_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 08:50:10 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_8
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_9
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_9
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_16
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_17
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_9
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPUT_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 08:50:10 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_9
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_10
2019-05-13 08:50:10 -Generating unique operation named: infoUsingGET_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingPOST_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingPUT_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 08:50:10 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_10
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_18
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_19
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_9
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_10
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_11
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_20
2019-05-13 08:50:10 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_10
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_11
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_12
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_21
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_10
2019-05-13 08:50:10 -Generating unique operation named: treeUsingGET_1
2019-05-13 08:50:10 -Generating unique operation named: treeUsingGET_2
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_11
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_11
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_12
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_13
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_22
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_23
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_11
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPOST_12
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPUT_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 08:50:10 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 08:50:10 -Generating unique operation named: addUsingGET_12
2019-05-13 08:50:10 -Generating unique operation named: editUsingGET_13
2019-05-13 08:50:10 -Generating unique operation named: listUsingGET_14
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_24
2019-05-13 08:50:10 -Generating unique operation named: removeUsingPOST_25
2019-05-13 08:50:10 -Generating unique operation named: saveUsingPOST_12
2019-05-13 08:50:10 -Generating unique operation named: updateUsingGET_9
2019-05-13 08:50:10 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_13
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPUT_9
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 08:50:11 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 08:50:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 08:50:11 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 08:50:11 -Generating unique operation named: addUsingGET_13
2019-05-13 08:50:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 08:50:11 -Generating unique operation named: editUsingGET_14
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_15
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_13
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_14
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_14
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_16
2019-05-13 08:50:11 -Generating unique operation named: listUsingHEAD_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingPOST_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingPUT_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingPATCH_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingDELETE_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 08:50:11 -Generating unique operation named: listUsingTRACE_1
2019-05-13 08:50:11 -Generating unique operation named: countDDUsingGET_1
2019-05-13 08:50:11 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 08:50:11 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 08:50:11 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 08:50:11 -Generating unique operation named: addUsingGET_14
2019-05-13 08:50:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 08:50:11 -Generating unique operation named: editUsingGET_15
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_17
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_26
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_15
2019-05-13 08:50:11 -Generating unique operation named: treeUsingGET_3
2019-05-13 08:50:11 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_15
2019-05-13 08:50:11 -Generating unique operation named: addUsingGET_15
2019-05-13 08:50:11 -Generating unique operation named: editUsingGET_16
2019-05-13 08:50:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_18
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_27
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_28
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_16
2019-05-13 08:50:11 -Generating unique operation named: updateUsingGET_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_16
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPUT_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 08:50:11 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 08:50:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 08:50:11 -Generating unique operation named: addUsingGET_16
2019-05-13 08:50:11 -Generating unique operation named: editUsingGET_17
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_19
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_29
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_30
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_17
2019-05-13 08:50:11 -Generating unique operation named: updateUsingGET_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_17
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPUT_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 08:50:11 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 08:50:11 -Generating unique operation named: addUsingGET_17
2019-05-13 08:50:11 -Generating unique operation named: editUsingGET_18
2019-05-13 08:50:11 -Generating unique operation named: listUsingGET_20
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_31
2019-05-13 08:50:11 -Generating unique operation named: removeUsingPOST_32
2019-05-13 08:50:11 -Generating unique operation named: saveUsingPOST_18
2019-05-13 08:50:11 -Generating unique operation named: updateUsingGET_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPOST_18
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPUT_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 08:50:11 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 08:50:11 -Starting Quartz Scheduler now
2019-05-13 08:50:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 08:50:11 -Starting...
2019-05-13 08:50:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 08:50:11 -Started.
2019-05-13 08:50:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 08:50:11 -Using a shared selector for servlet write/read
2019-05-13 08:50:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 08:50:11 -Started BootdoApplication in 34.04 seconds (JVM running for 34.829)
2019-05-13 08:50:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 08:50:12 -==> Parameters: 
2019-05-13 08:50:12 -<==      Total: 1
2019-05-13 08:51:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 08:53:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 08:53:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 08:53:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 465 ms
2019-05-13 08:53:41 -Enabling session validation scheduler...
2019-05-13 08:53:41 -请求地址 : http://localhost:8081/
2019-05-13 08:53:41 -HTTP METHOD : GET
2019-05-13 08:53:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-05-13 08:53:41 -参数 : [{}]
2019-05-13 08:53:41 -耗时 : 3
2019-05-13 08:53:41 -返回值 : redirect:/index
2019-05-13 08:53:41 -请求地址 : http://localhost:8081/login;JSESSIONID=e3f015b4-0edd-4deb-9f2d-7fb87be6bbaa
2019-05-13 08:53:41 -HTTP METHOD : GET
2019-05-13 08:53:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 08:53:41 -参数 : [{}]
2019-05-13 08:53:41 -耗时 : 1
2019-05-13 08:53:41 -返回值 : login
2019-05-13 08:53:47 -请求地址 : http://localhost:8081/getVerify
2019-05-13 08:53:47 -HTTP METHOD : GET
2019-05-13 08:53:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 08:53:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@17cd632b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2867c0e6]
2019-05-13 08:53:53 -7491
2019-05-13 08:53:54 -耗时 : 6908
2019-05-13 08:53:54 -返回值 : null
2019-05-13 08:54:03 -请求地址 : http://localhost:8081/login
2019-05-13 08:54:03 -HTTP METHOD : POST
2019-05-13 08:54:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 08:54:03 -参数 : [admin, 111111, 7491, org.apache.shiro.web.servlet.ShiroHttpServletRequest@27ed8c1]
2019-05-13 08:54:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 08:54:03 -==> Parameters: admin(String)
2019-05-13 08:54:03 -<==      Total: 1
2019-05-13 08:54:03 -耗时 : 199
2019-05-13 08:54:03 -返回值 : {msg=操作成功, code=0}
2019-05-13 08:54:03 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 08:54:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 08:54:03 -==> Parameters: 1(Long), admin(String), 登录(String), 199(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 08:54:03.391(Timestamp)
2019-05-13 08:54:03 -<==    Updates: 1
2019-05-13 08:54:03 -请求地址 : http://localhost:8081/index
2019-05-13 08:54:03 -HTTP METHOD : GET
2019-05-13 08:54:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 08:54:03 -参数 : [{}]
2019-05-13 08:54:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 08:54:04 -==> Parameters: 1(Long)
2019-05-13 08:54:04 -<==      Total: 49
2019-05-13 08:54:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 08:54:04 -==> Parameters: 138(Long)
2019-05-13 08:54:04 -<==      Total: 1
2019-05-13 08:54:04 -耗时 : 198
2019-05-13 08:54:04 -返回值 : index_v1
2019-05-13 08:54:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 08:54:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 198(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 08:54:04.182(Timestamp)
2019-05-13 08:54:04 -<==    Updates: 1
2019-05-13 08:54:04 -请求地址 : http://localhost:8081/main
2019-05-13 08:54:04 -HTTP METHOD : GET
2019-05-13 08:54:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 08:54:04 -参数 : []
2019-05-13 08:54:04 -耗时 : 0
2019-05-13 08:54:04 -返回值 : main
2019-05-13 08:54:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 08:54:07 -HTTP METHOD : GET
2019-05-13 08:54:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 08:54:07 -参数 : []
2019-05-13 08:54:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 08:54:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 08:54:07 -<==      Total: 0
2019-05-13 08:54:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 08:54:07 -==> Parameters: 1(Long), 0(String)
2019-05-13 08:54:07 -<==      Total: 1
2019-05-13 08:54:07 -耗时 : 53
2019-05-13 08:54:07 -返回值 : com.bootdo.common.utils.PageUtils@7b3b2d8d
2019-05-13 08:54:07 -请求地址 : http://localhost:8081/main
2019-05-13 08:54:07 -HTTP METHOD : GET
2019-05-13 08:54:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 08:54:07 -参数 : []
2019-05-13 08:54:07 -耗时 : 1
2019-05-13 08:54:07 -返回值 : main
2019-05-13 08:54:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 08:54:20 -==> Parameters: 1(Long)
2019-05-13 08:54:20 -<==      Total: 93
2019-05-13 08:54:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:54:20 -HTTP METHOD : GET
2019-05-13 08:54:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:54:20 -参数 : []
2019-05-13 08:54:20 -耗时 : 0
2019-05-13 08:54:20 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:54:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:54:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:54:21 -HTTP METHOD : GET
2019-05-13 08:54:21 -HTTP METHOD : GET
2019-05-13 08:54:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:21 -参数 : [elecType]
2019-05-13 08:54:21 -参数 : [userType]
2019-05-13 08:54:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:21 -==> Parameters: elecType(String)
2019-05-13 08:54:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:21 -==> Parameters: userType(String)
2019-05-13 08:54:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:21 -HTTP METHOD : GET
2019-05-13 08:54:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:21 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:54:22 -<==      Total: 4
2019-05-13 08:54:22 -耗时 : 107
2019-05-13 08:54:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:54:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:54:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:54:22 -<==      Total: 11
2019-05-13 08:54:22 -耗时 : 261
2019-05-13 08:54:22 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:54:22 -<==      Total: 10
2019-05-13 08:54:22 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:54:22 -==> Parameters: 
2019-05-13 08:54:22 -<==      Total: 1
2019-05-13 08:54:22 -耗时 : 227
2019-05-13 08:54:22 -返回值 : com.bootdo.common.utils.PageUtils@6cead738
2019-05-13 08:54:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:30 -HTTP METHOD : GET
2019-05-13 08:54:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:30 -参数 : [{limit=10, offset=0, userType=C, elecType=, userOrg=, userId=, elecDate=, type=C}]
2019-05-13 08:54:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:30 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:54:30 -<==      Total: 8
2019-05-13 08:54:30 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:30 -==> Parameters: C(String)
2019-05-13 08:54:30 -<==      Total: 1
2019-05-13 08:54:30 -耗时 : 36
2019-05-13 08:54:30 -返回值 : com.bootdo.common.utils.PageUtils@1c320d07
2019-05-13 08:54:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:33 -HTTP METHOD : GET
2019-05-13 08:54:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:33 -参数 : [{limit=10, offset=0, userType=D, elecType=, userOrg=, userId=, elecDate=, type=D}]
2019-05-13 08:54:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:33 -==> Parameters: D(String), 0(Integer), 10(Integer)
2019-05-13 08:54:33 -<==      Total: 0
2019-05-13 08:54:33 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:33 -==> Parameters: D(String)
2019-05-13 08:54:33 -<==      Total: 1
2019-05-13 08:54:33 -耗时 : 15
2019-05-13 08:54:33 -返回值 : com.bootdo.common.utils.PageUtils@235b18bc
2019-05-13 08:54:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:35 -HTTP METHOD : GET
2019-05-13 08:54:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:35 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=, userId=, elecDate=, type=B}]
2019-05-13 08:54:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:35 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-05-13 08:54:35 -<==      Total: 7
2019-05-13 08:54:35 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:35 -==> Parameters: B(String)
2019-05-13 08:54:35 -<==      Total: 1
2019-05-13 08:54:35 -耗时 : 19
2019-05-13 08:54:35 -返回值 : com.bootdo.common.utils.PageUtils@6dbc5265
2019-05-13 08:54:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/2
2019-05-13 08:54:39 -HTTP METHOD : GET
2019-05-13 08:54:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-05-13 08:54:39 -参数 : [2, {}]
2019-05-13 08:54:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-05-13 08:54:39 -==> Parameters: 2(Long)
2019-05-13 08:54:39 -<==      Total: 1
2019-05-13 08:54:39 -耗时 : 7
2019-05-13 08:54:39 -返回值 : moneyLog/elecLog/edit
2019-05-13 08:54:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:54:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:54:40 -HTTP METHOD : GET
2019-05-13 08:54:40 -HTTP METHOD : GET
2019-05-13 08:54:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:40 -参数 : [elecType]
2019-05-13 08:54:40 -参数 : [userType]
2019-05-13 08:54:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:40 -==> Parameters: userType(String)
2019-05-13 08:54:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:40 -==> Parameters: elecType(String)
2019-05-13 08:54:40 -<==      Total: 4
2019-05-13 08:54:40 -耗时 : 12
2019-05-13 08:54:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:54:40 -<==      Total: 11
2019-05-13 08:54:40 -耗时 : 16
2019-05-13 08:54:40 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:54:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:45 -HTTP METHOD : GET
2019-05-13 08:54:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:45 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=, userId=, elecDate=, type=A}]
2019-05-13 08:54:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:45 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-05-13 08:54:45 -<==      Total: 9
2019-05-13 08:54:45 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:45 -==> Parameters: A(String)
2019-05-13 08:54:45 -<==      Total: 1
2019-05-13 08:54:45 -耗时 : 12
2019-05-13 08:54:45 -返回值 : com.bootdo.common.utils.PageUtils@386c0dc0
2019-05-13 08:54:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:51 -HTTP METHOD : GET
2019-05-13 08:54:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:51 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=, userId=, elecDate=, type=B}]
2019-05-13 08:54:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:51 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-05-13 08:54:51 -<==      Total: 7
2019-05-13 08:54:51 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:51 -==> Parameters: B(String)
2019-05-13 08:54:51 -<==      Total: 1
2019-05-13 08:54:51 -耗时 : 15
2019-05-13 08:54:51 -返回值 : com.bootdo.common.utils.PageUtils@46642c2a
2019-05-13 08:54:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:54:54 -HTTP METHOD : GET
2019-05-13 08:54:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:54:54 -参数 : [{limit=10, offset=0, userType=C, elecType=, userOrg=, userId=, elecDate=, type=C}]
2019-05-13 08:54:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:54:54 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:54:54 -<==      Total: 8
2019-05-13 08:54:54 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:54:54 -==> Parameters: C(String)
2019-05-13 08:54:55 -<==      Total: 1
2019-05-13 08:54:55 -耗时 : 22
2019-05-13 08:54:55 -返回值 : com.bootdo.common.utils.PageUtils@2725c0a8
2019-05-13 08:54:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/17
2019-05-13 08:54:58 -HTTP METHOD : GET
2019-05-13 08:54:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-05-13 08:54:58 -参数 : [17, {}]
2019-05-13 08:54:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-05-13 08:54:58 -==> Parameters: 17(Long)
2019-05-13 08:54:58 -<==      Total: 1
2019-05-13 08:54:58 -耗时 : 5
2019-05-13 08:54:58 -返回值 : moneyLog/elecLog/edit
2019-05-13 08:54:58 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:54:58 -HTTP METHOD : GET
2019-05-13 08:54:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:58 -参数 : [elecType]
2019-05-13 08:54:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:54:58 -HTTP METHOD : GET
2019-05-13 08:54:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:54:58 -参数 : [userType]
2019-05-13 08:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:54:58 -==> Parameters: userType(String)
2019-05-13 08:54:58 -==> Parameters: elecType(String)
2019-05-13 08:54:58 -<==      Total: 4
2019-05-13 08:54:58 -耗时 : 5
2019-05-13 08:54:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:54:58 -<==      Total: 11
2019-05-13 08:54:58 -耗时 : 12
2019-05-13 08:54:58 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:55:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/18
2019-05-13 08:55:02 -HTTP METHOD : GET
2019-05-13 08:55:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-05-13 08:55:02 -参数 : [18, {}]
2019-05-13 08:55:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-05-13 08:55:02 -==> Parameters: 18(Long)
2019-05-13 08:55:02 -<==      Total: 1
2019-05-13 08:55:02 -耗时 : 5
2019-05-13 08:55:02 -返回值 : moneyLog/elecLog/edit
2019-05-13 08:55:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:55:02 -HTTP METHOD : GET
2019-05-13 08:55:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:55:02 -参数 : [userType]
2019-05-13 08:55:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:55:02 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:55:02 -==> Parameters: userType(String)
2019-05-13 08:55:02 -HTTP METHOD : GET
2019-05-13 08:55:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:55:02 -参数 : [elecType]
2019-05-13 08:55:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:55:02 -==> Parameters: elecType(String)
2019-05-13 08:55:02 -<==      Total: 4
2019-05-13 08:55:02 -耗时 : 4
2019-05-13 08:55:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:55:02 -<==      Total: 11
2019-05-13 08:55:02 -耗时 : 6
2019-05-13 08:55:02 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:55:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:06 -HTTP METHOD : GET
2019-05-13 08:55:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:06 -参数 : [{limit=10, offset=0, userType=D, elecType=, userOrg=, userId=, elecDate=, type=D}]
2019-05-13 08:55:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:06 -==> Parameters: D(String), 0(Integer), 10(Integer)
2019-05-13 08:55:06 -<==      Total: 0
2019-05-13 08:55:06 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:55:06 -==> Parameters: D(String)
2019-05-13 08:55:06 -<==      Total: 1
2019-05-13 08:55:06 -耗时 : 8
2019-05-13 08:55:06 -返回值 : com.bootdo.common.utils.PageUtils@34102afb
2019-05-13 08:55:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:10 -HTTP METHOD : GET
2019-05-13 08:55:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:10 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=, userId=, elecDate=, type=A}]
2019-05-13 08:55:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:10 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-05-13 08:55:10 -<==      Total: 9
2019-05-13 08:55:10 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-05-13 08:55:10 -==> Parameters: A(String)
2019-05-13 08:55:10 -<==      Total: 1
2019-05-13 08:55:10 -耗时 : 24
2019-05-13 08:55:10 -返回值 : com.bootdo.common.utils.PageUtils@332fdebd
2019-05-13 08:55:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:17 -HTTP METHOD : GET
2019-05-13 08:55:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:17 -参数 : [{limit=10, offset=0, userType=A, elecType=8, userOrg=, userId=, elecDate=, type=8}]
2019-05-13 08:55:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:17 -==> Parameters: A(String), 8(String), 0(Integer), 10(Integer)
2019-05-13 08:55:17 -<==      Total: 1
2019-05-13 08:55:17 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_type = ? 
2019-05-13 08:55:17 -==> Parameters: A(String), 8(String)
2019-05-13 08:55:17 -<==      Total: 1
2019-05-13 08:55:17 -耗时 : 16
2019-05-13 08:55:17 -返回值 : com.bootdo.common.utils.PageUtils@3b00a3db
2019-05-13 08:55:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:19 -HTTP METHOD : GET
2019-05-13 08:55:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:19 -参数 : [{limit=10, offset=0, userType=A, elecType=7, userOrg=, userId=, elecDate=, type=7}]
2019-05-13 08:55:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:19 -==> Parameters: A(String), 7(String), 0(Integer), 10(Integer)
2019-05-13 08:55:19 -<==      Total: 1
2019-05-13 08:55:19 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_type = ? 
2019-05-13 08:55:19 -==> Parameters: A(String), 7(String)
2019-05-13 08:55:19 -<==      Total: 1
2019-05-13 08:55:19 -耗时 : 18
2019-05-13 08:55:19 -返回值 : com.bootdo.common.utils.PageUtils@3a1ee384
2019-05-13 08:55:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:21 -HTTP METHOD : GET
2019-05-13 08:55:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:21 -参数 : [{limit=10, offset=0, userType=A, elecType=11, userOrg=, userId=, elecDate=, type=11}]
2019-05-13 08:55:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:21 -==> Parameters: A(String), 11(String), 0(Integer), 10(Integer)
2019-05-13 08:55:21 -<==      Total: 0
2019-05-13 08:55:21 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_type = ? 
2019-05-13 08:55:21 -==> Parameters: A(String), 11(String)
2019-05-13 08:55:21 -<==      Total: 1
2019-05-13 08:55:21 -耗时 : 12
2019-05-13 08:55:21 -返回值 : com.bootdo.common.utils.PageUtils@3ec84c
2019-05-13 08:55:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:55:24 -HTTP METHOD : GET
2019-05-13 08:55:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:55:24 -参数 : [{limit=10, offset=0, userType=A, elecType=5, userOrg=, userId=, elecDate=, type=5}]
2019-05-13 08:55:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:55:24 -==> Parameters: A(String), 5(String), 0(Integer), 10(Integer)
2019-05-13 08:55:24 -<==      Total: 1
2019-05-13 08:55:24 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_type = ? 
2019-05-13 08:55:24 -==> Parameters: A(String), 5(String)
2019-05-13 08:55:24 -<==      Total: 1
2019-05-13 08:55:24 -耗时 : 8
2019-05-13 08:55:24 -返回值 : com.bootdo.common.utils.PageUtils@7c9387c3
2019-05-13 08:57:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:25 -HTTP METHOD : GET
2019-05-13 08:57:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:25 -参数 : []
2019-05-13 08:57:25 -耗时 : 0
2019-05-13 08:57:25 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:26 -参数 : [userType]
2019-05-13 08:57:26 -参数 : [heatType]
2019-05-13 08:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:26 -==> Parameters: heatType(String)
2019-05-13 08:57:26 -==> Parameters: userType(String)
2019-05-13 08:57:26 -<==      Total: 4
2019-05-13 08:57:26 -<==      Total: 4
2019-05-13 08:57:26 -耗时 : 5
2019-05-13 08:57:26 -耗时 : 5
2019-05-13 08:57:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:26 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:26 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:26 -<==      Total: 6
2019-05-13 08:57:26 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:26 -==> Parameters: 
2019-05-13 08:57:26 -<==      Total: 1
2019-05-13 08:57:26 -耗时 : 90
2019-05-13 08:57:26 -返回值 : com.bootdo.common.utils.PageUtils@9429a25
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:26 -参数 : []
2019-05-13 08:57:26 -耗时 : 0
2019-05-13 08:57:26 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:26 -参数 : [userType]
2019-05-13 08:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:26 -==> Parameters: userType(String)
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:26 -参数 : [waterType]
2019-05-13 08:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:26 -==> Parameters: waterType(String)
2019-05-13 08:57:26 -<==      Total: 4
2019-05-13 08:57:26 -耗时 : 5
2019-05-13 08:57:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:26 -<==      Total: 2
2019-05-13 08:57:26 -耗时 : 16
2019-05-13 08:57:26 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:26 -HTTP METHOD : GET
2019-05-13 08:57:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:26 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:26 -<==      Total: 6
2019-05-13 08:57:26 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:26 -==> Parameters: 
2019-05-13 08:57:26 -<==      Total: 1
2019-05-13 08:57:26 -耗时 : 134
2019-05-13 08:57:26 -返回值 : com.bootdo.common.utils.PageUtils@5fd8891d
2019-05-13 08:57:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:27 -HTTP METHOD : GET
2019-05-13 08:57:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:27 -参数 : []
2019-05-13 08:57:27 -耗时 : 0
2019-05-13 08:57:27 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:27 -HTTP METHOD : GET
2019-05-13 08:57:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:27 -参数 : [userType]
2019-05-13 08:57:27 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:27 -HTTP METHOD : GET
2019-05-13 08:57:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:27 -参数 : [heatType]
2019-05-13 08:57:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:27 -==> Parameters: userType(String)
2019-05-13 08:57:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:27 -==> Parameters: heatType(String)
2019-05-13 08:57:27 -<==      Total: 4
2019-05-13 08:57:27 -耗时 : 5
2019-05-13 08:57:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:27 -<==      Total: 4
2019-05-13 08:57:27 -耗时 : 8
2019-05-13 08:57:27 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:27 -HTTP METHOD : GET
2019-05-13 08:57:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:27 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:27 -<==      Total: 6
2019-05-13 08:57:27 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:27 -==> Parameters: 
2019-05-13 08:57:27 -<==      Total: 1
2019-05-13 08:57:27 -耗时 : 8
2019-05-13 08:57:27 -返回值 : com.bootdo.common.utils.PageUtils@78e47c90
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:28 -参数 : []
2019-05-13 08:57:28 -耗时 : 2
2019-05-13 08:57:28 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:28 -参数 : [userType]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:28 -==> Parameters: userType(String)
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:28 -参数 : [elecType]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:28 -==> Parameters: elecType(String)
2019-05-13 08:57:28 -<==      Total: 4
2019-05-13 08:57:28 -耗时 : 5
2019-05-13 08:57:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:28 -<==      Total: 11
2019-05-13 08:57:28 -耗时 : 8
2019-05-13 08:57:28 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:28 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:28 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:28 -<==      Total: 10
2019-05-13 08:57:28 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:28 -==> Parameters: 
2019-05-13 08:57:28 -<==      Total: 1
2019-05-13 08:57:28 -耗时 : 11
2019-05-13 08:57:28 -返回值 : com.bootdo.common.utils.PageUtils@296b8d63
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:28 -参数 : []
2019-05-13 08:57:28 -耗时 : 0
2019-05-13 08:57:28 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:28 -参数 : [userType]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:28 -==> Parameters: userType(String)
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:28 -参数 : [waterType]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:28 -==> Parameters: waterType(String)
2019-05-13 08:57:28 -<==      Total: 4
2019-05-13 08:57:28 -耗时 : 5
2019-05-13 08:57:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:28 -<==      Total: 2
2019-05-13 08:57:28 -耗时 : 4
2019-05-13 08:57:28 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:28 -HTTP METHOD : GET
2019-05-13 08:57:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:28 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:28 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:28 -<==      Total: 6
2019-05-13 08:57:28 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:28 -==> Parameters: 
2019-05-13 08:57:28 -<==      Total: 1
2019-05-13 08:57:28 -耗时 : 10
2019-05-13 08:57:28 -返回值 : com.bootdo.common.utils.PageUtils@486518d
2019-05-13 08:57:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:29 -HTTP METHOD : GET
2019-05-13 08:57:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:29 -参数 : []
2019-05-13 08:57:29 -耗时 : 0
2019-05-13 08:57:29 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:29 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:29 -HTTP METHOD : GET
2019-05-13 08:57:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:29 -HTTP METHOD : GET
2019-05-13 08:57:29 -参数 : [heatType]
2019-05-13 08:57:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:29 -参数 : [userType]
2019-05-13 08:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:29 -==> Parameters: heatType(String)
2019-05-13 08:57:29 -==> Parameters: userType(String)
2019-05-13 08:57:29 -<==      Total: 4
2019-05-13 08:57:29 -耗时 : 4
2019-05-13 08:57:29 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:29 -HTTP METHOD : GET
2019-05-13 08:57:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:29 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:29 -<==      Total: 4
2019-05-13 08:57:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:29 -耗时 : 28
2019-05-13 08:57:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:29 -<==      Total: 6
2019-05-13 08:57:29 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:29 -==> Parameters: 
2019-05-13 08:57:29 -<==      Total: 1
2019-05-13 08:57:29 -耗时 : 12
2019-05-13 08:57:29 -返回值 : com.bootdo.common.utils.PageUtils@4700f28e
2019-05-13 08:57:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:29 -HTTP METHOD : GET
2019-05-13 08:57:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:29 -参数 : []
2019-05-13 08:57:29 -耗时 : 0
2019-05-13 08:57:29 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:30 -HTTP METHOD : GET
2019-05-13 08:57:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:30 -参数 : [userType]
2019-05-13 08:57:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:30 -HTTP METHOD : GET
2019-05-13 08:57:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:30 -参数 : [elecType]
2019-05-13 08:57:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:30 -==> Parameters: userType(String)
2019-05-13 08:57:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:30 -==> Parameters: elecType(String)
2019-05-13 08:57:30 -<==      Total: 4
2019-05-13 08:57:30 -耗时 : 4
2019-05-13 08:57:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:30 -<==      Total: 11
2019-05-13 08:57:30 -耗时 : 4
2019-05-13 08:57:30 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:30 -HTTP METHOD : GET
2019-05-13 08:57:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:30 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:30 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:30 -<==      Total: 10
2019-05-13 08:57:30 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:30 -==> Parameters: 
2019-05-13 08:57:30 -<==      Total: 1
2019-05-13 08:57:30 -耗时 : 17
2019-05-13 08:57:30 -返回值 : com.bootdo.common.utils.PageUtils@6d12484
2019-05-13 08:57:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:36 -HTTP METHOD : GET
2019-05-13 08:57:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:36 -参数 : []
2019-05-13 08:57:36 -耗时 : 1
2019-05-13 08:57:36 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:36 -HTTP METHOD : GET
2019-05-13 08:57:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:36 -参数 : [userType]
2019-05-13 08:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:36 -==> Parameters: userType(String)
2019-05-13 08:57:36 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:36 -HTTP METHOD : GET
2019-05-13 08:57:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:36 -参数 : [heatType]
2019-05-13 08:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:36 -==> Parameters: heatType(String)
2019-05-13 08:57:36 -<==      Total: 4
2019-05-13 08:57:36 -耗时 : 4
2019-05-13 08:57:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:36 -<==      Total: 4
2019-05-13 08:57:36 -耗时 : 5
2019-05-13 08:57:36 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:36 -HTTP METHOD : GET
2019-05-13 08:57:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:36 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:36 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:36 -<==      Total: 6
2019-05-13 08:57:36 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:36 -==> Parameters: 
2019-05-13 08:57:37 -<==      Total: 1
2019-05-13 08:57:37 -耗时 : 6
2019-05-13 08:57:37 -返回值 : com.bootdo.common.utils.PageUtils@6a00f5f0
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:38 -参数 : []
2019-05-13 08:57:38 -耗时 : 1
2019-05-13 08:57:38 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:38 -参数 : [userType]
2019-05-13 08:57:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:38 -==> Parameters: userType(String)
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:38 -参数 : [waterType]
2019-05-13 08:57:38 -<==      Total: 4
2019-05-13 08:57:38 -耗时 : 8
2019-05-13 08:57:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:38 -==> Parameters: waterType(String)
2019-05-13 08:57:38 -<==      Total: 2
2019-05-13 08:57:38 -耗时 : 12
2019-05-13 08:57:38 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:38 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:38 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:38 -<==      Total: 6
2019-05-13 08:57:38 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:38 -==> Parameters: 
2019-05-13 08:57:38 -<==      Total: 1
2019-05-13 08:57:38 -耗时 : 12
2019-05-13 08:57:38 -返回值 : com.bootdo.common.utils.PageUtils@331d1f29
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:38 -参数 : []
2019-05-13 08:57:38 -耗时 : 1
2019-05-13 08:57:38 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:38 -参数 : [userType]
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:38 -参数 : [heatType]
2019-05-13 08:57:38 -==> Parameters: userType(String)
2019-05-13 08:57:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:38 -==> Parameters: heatType(String)
2019-05-13 08:57:38 -<==      Total: 4
2019-05-13 08:57:38 -<==      Total: 4
2019-05-13 08:57:38 -耗时 : 5
2019-05-13 08:57:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:38 -耗时 : 4
2019-05-13 08:57:38 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:38 -HTTP METHOD : GET
2019-05-13 08:57:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:38 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:38 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:38 -<==      Total: 6
2019-05-13 08:57:38 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:38 -==> Parameters: 
2019-05-13 08:57:38 -<==      Total: 1
2019-05-13 08:57:38 -耗时 : 10
2019-05-13 08:57:38 -返回值 : com.bootdo.common.utils.PageUtils@65c3ce0a
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:39 -参数 : []
2019-05-13 08:57:39 -耗时 : 0
2019-05-13 08:57:39 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:39 -参数 : [userType]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:39 -参数 : [elecType]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:39 -==> Parameters: elecType(String)
2019-05-13 08:57:39 -==> Parameters: userType(String)
2019-05-13 08:57:39 -<==      Total: 4
2019-05-13 08:57:39 -耗时 : 7
2019-05-13 08:57:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:39 -<==      Total: 11
2019-05-13 08:57:39 -耗时 : 5
2019-05-13 08:57:39 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:39 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:39 -<==      Total: 10
2019-05-13 08:57:39 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:39 -==> Parameters: 
2019-05-13 08:57:39 -<==      Total: 1
2019-05-13 08:57:39 -耗时 : 9
2019-05-13 08:57:39 -返回值 : com.bootdo.common.utils.PageUtils@4f5df406
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:39 -参数 : []
2019-05-13 08:57:39 -耗时 : 0
2019-05-13 08:57:39 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:39 -参数 : [userType]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:39 -==> Parameters: userType(String)
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:39 -参数 : [heatType]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:39 -==> Parameters: heatType(String)
2019-05-13 08:57:39 -<==      Total: 4
2019-05-13 08:57:39 -耗时 : 4
2019-05-13 08:57:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:39 -<==      Total: 4
2019-05-13 08:57:39 -耗时 : 3
2019-05-13 08:57:39 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:39 -HTTP METHOD : GET
2019-05-13 08:57:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:39 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:39 -<==      Total: 6
2019-05-13 08:57:39 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:39 -==> Parameters: 
2019-05-13 08:57:39 -<==      Total: 1
2019-05-13 08:57:39 -耗时 : 6
2019-05-13 08:57:39 -返回值 : com.bootdo.common.utils.PageUtils@2123872d
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:40 -参数 : []
2019-05-13 08:57:40 -耗时 : 1
2019-05-13 08:57:40 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:40 -参数 : [userType]
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:40 -参数 : [waterType]
2019-05-13 08:57:40 -==> Parameters: userType(String)
2019-05-13 08:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:40 -==> Parameters: waterType(String)
2019-05-13 08:57:40 -<==      Total: 4
2019-05-13 08:57:40 -<==      Total: 2
2019-05-13 08:57:40 -耗时 : 4
2019-05-13 08:57:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:40 -耗时 : 5
2019-05-13 08:57:40 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:40 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:40 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:40 -<==      Total: 6
2019-05-13 08:57:40 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:40 -==> Parameters: 
2019-05-13 08:57:40 -<==      Total: 1
2019-05-13 08:57:40 -耗时 : 6
2019-05-13 08:57:40 -返回值 : com.bootdo.common.utils.PageUtils@31828d8
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:40 -参数 : []
2019-05-13 08:57:40 -耗时 : 0
2019-05-13 08:57:40 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:40 -参数 : [userType]
2019-05-13 08:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:40 -==> Parameters: userType(String)
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:40 -参数 : [heatType]
2019-05-13 08:57:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:40 -==> Parameters: heatType(String)
2019-05-13 08:57:40 -<==      Total: 4
2019-05-13 08:57:40 -耗时 : 4
2019-05-13 08:57:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:40 -<==      Total: 4
2019-05-13 08:57:40 -耗时 : 6
2019-05-13 08:57:40 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:40 -HTTP METHOD : GET
2019-05-13 08:57:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:40 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:40 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:40 -<==      Total: 6
2019-05-13 08:57:40 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:40 -==> Parameters: 
2019-05-13 08:57:40 -<==      Total: 1
2019-05-13 08:57:40 -耗时 : 9
2019-05-13 08:57:40 -返回值 : com.bootdo.common.utils.PageUtils@53baf93b
2019-05-13 08:57:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:41 -HTTP METHOD : GET
2019-05-13 08:57:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:41 -参数 : []
2019-05-13 08:57:41 -耗时 : 0
2019-05-13 08:57:41 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:41 -HTTP METHOD : GET
2019-05-13 08:57:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:41 -参数 : [userType]
2019-05-13 08:57:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:41 -==> Parameters: userType(String)
2019-05-13 08:57:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:41 -HTTP METHOD : GET
2019-05-13 08:57:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:41 -参数 : [elecType]
2019-05-13 08:57:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:41 -==> Parameters: elecType(String)
2019-05-13 08:57:41 -<==      Total: 4
2019-05-13 08:57:41 -耗时 : 3
2019-05-13 08:57:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:41 -<==      Total: 11
2019-05-13 08:57:41 -耗时 : 18
2019-05-13 08:57:41 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:41 -HTTP METHOD : GET
2019-05-13 08:57:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:41 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:41 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:41 -<==      Total: 10
2019-05-13 08:57:41 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:41 -==> Parameters: 
2019-05-13 08:57:41 -<==      Total: 1
2019-05-13 08:57:41 -耗时 : 6
2019-05-13 08:57:41 -返回值 : com.bootdo.common.utils.PageUtils@58430575
2019-05-13 08:57:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:41 -HTTP METHOD : GET
2019-05-13 08:57:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:41 -参数 : []
2019-05-13 08:57:41 -耗时 : 1
2019-05-13 08:57:41 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:42 -参数 : [userType]
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:42 -参数 : [heatType]
2019-05-13 08:57:42 -==> Parameters: userType(String)
2019-05-13 08:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:42 -==> Parameters: heatType(String)
2019-05-13 08:57:42 -<==      Total: 4
2019-05-13 08:57:42 -耗时 : 4
2019-05-13 08:57:42 -<==      Total: 4
2019-05-13 08:57:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:42 -耗时 : 3
2019-05-13 08:57:42 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:42 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:42 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:42 -<==      Total: 6
2019-05-13 08:57:42 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:42 -==> Parameters: 
2019-05-13 08:57:42 -<==      Total: 1
2019-05-13 08:57:42 -耗时 : 7
2019-05-13 08:57:42 -返回值 : com.bootdo.common.utils.PageUtils@18677c63
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:42 -参数 : []
2019-05-13 08:57:42 -耗时 : 0
2019-05-13 08:57:42 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:42 -参数 : [userType]
2019-05-13 08:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:42 -==> Parameters: userType(String)
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:42 -参数 : [waterType]
2019-05-13 08:57:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:42 -==> Parameters: waterType(String)
2019-05-13 08:57:42 -<==      Total: 4
2019-05-13 08:57:42 -耗时 : 3
2019-05-13 08:57:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:42 -<==      Total: 2
2019-05-13 08:57:42 -耗时 : 3
2019-05-13 08:57:42 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:42 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:42 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:42 -<==      Total: 6
2019-05-13 08:57:42 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:42 -==> Parameters: 
2019-05-13 08:57:42 -<==      Total: 1
2019-05-13 08:57:42 -耗时 : 5
2019-05-13 08:57:42 -返回值 : com.bootdo.common.utils.PageUtils@359a6cfe
2019-05-13 08:57:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:42 -HTTP METHOD : GET
2019-05-13 08:57:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:42 -参数 : []
2019-05-13 08:57:42 -耗时 : 1
2019-05-13 08:57:42 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:43 -参数 : [userType]
2019-05-13 08:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:43 -==> Parameters: userType(String)
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:43 -参数 : [heatType]
2019-05-13 08:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:43 -==> Parameters: heatType(String)
2019-05-13 08:57:43 -<==      Total: 4
2019-05-13 08:57:43 -耗时 : 3
2019-05-13 08:57:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:43 -<==      Total: 4
2019-05-13 08:57:43 -耗时 : 5
2019-05-13 08:57:43 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:43 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:43 -<==      Total: 6
2019-05-13 08:57:43 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:43 -==> Parameters: 
2019-05-13 08:57:43 -<==      Total: 1
2019-05-13 08:57:43 -耗时 : 6
2019-05-13 08:57:43 -返回值 : com.bootdo.common.utils.PageUtils@38389845
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:43 -参数 : []
2019-05-13 08:57:43 -耗时 : 0
2019-05-13 08:57:43 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:43 -参数 : [userType]
2019-05-13 08:57:43 -参数 : [elecType]
2019-05-13 08:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:43 -==> Parameters: elecType(String)
2019-05-13 08:57:43 -==> Parameters: userType(String)
2019-05-13 08:57:43 -<==      Total: 4
2019-05-13 08:57:43 -<==      Total: 11
2019-05-13 08:57:43 -耗时 : 4
2019-05-13 08:57:43 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:43 -耗时 : 4
2019-05-13 08:57:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:43 -HTTP METHOD : GET
2019-05-13 08:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:43 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:43 -<==      Total: 10
2019-05-13 08:57:43 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:43 -==> Parameters: 
2019-05-13 08:57:43 -<==      Total: 1
2019-05-13 08:57:43 -耗时 : 5
2019-05-13 08:57:43 -返回值 : com.bootdo.common.utils.PageUtils@3b2069e1
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:44 -参数 : []
2019-05-13 08:57:44 -耗时 : 1
2019-05-13 08:57:44 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:44 -参数 : [userType]
2019-05-13 08:57:44 -参数 : [heatType]
2019-05-13 08:57:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:44 -==> Parameters: userType(String)
2019-05-13 08:57:44 -==> Parameters: heatType(String)
2019-05-13 08:57:44 -<==      Total: 4
2019-05-13 08:57:44 -<==      Total: 4
2019-05-13 08:57:44 -耗时 : 3
2019-05-13 08:57:44 -耗时 : 3
2019-05-13 08:57:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:44 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:44 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:44 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:44 -<==      Total: 6
2019-05-13 08:57:44 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:44 -==> Parameters: 
2019-05-13 08:57:44 -<==      Total: 1
2019-05-13 08:57:44 -耗时 : 7
2019-05-13 08:57:44 -返回值 : com.bootdo.common.utils.PageUtils@3045cdb5
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:44 -参数 : []
2019-05-13 08:57:44 -耗时 : 0
2019-05-13 08:57:44 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:44 -参数 : [userType]
2019-05-13 08:57:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:44 -==> Parameters: userType(String)
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:44 -参数 : [waterType]
2019-05-13 08:57:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:44 -==> Parameters: waterType(String)
2019-05-13 08:57:44 -<==      Total: 4
2019-05-13 08:57:44 -耗时 : 3
2019-05-13 08:57:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:44 -<==      Total: 2
2019-05-13 08:57:44 -耗时 : 4
2019-05-13 08:57:44 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:44 -HTTP METHOD : GET
2019-05-13 08:57:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:44 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:44 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:44 -<==      Total: 6
2019-05-13 08:57:44 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:44 -==> Parameters: 
2019-05-13 08:57:44 -<==      Total: 1
2019-05-13 08:57:44 -耗时 : 6
2019-05-13 08:57:44 -返回值 : com.bootdo.common.utils.PageUtils@383a8658
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:45 -参数 : []
2019-05-13 08:57:45 -耗时 : 0
2019-05-13 08:57:45 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:45 -参数 : [userType]
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:45 -参数 : [heatType]
2019-05-13 08:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:45 -==> Parameters: userType(String)
2019-05-13 08:57:45 -==> Parameters: heatType(String)
2019-05-13 08:57:45 -<==      Total: 4
2019-05-13 08:57:45 -耗时 : 3
2019-05-13 08:57:45 -<==      Total: 4
2019-05-13 08:57:45 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:45 -耗时 : 3
2019-05-13 08:57:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:45 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:45 -<==      Total: 6
2019-05-13 08:57:45 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:45 -==> Parameters: 
2019-05-13 08:57:45 -<==      Total: 1
2019-05-13 08:57:45 -耗时 : 6
2019-05-13 08:57:45 -返回值 : com.bootdo.common.utils.PageUtils@6acad266
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:45 -参数 : []
2019-05-13 08:57:45 -耗时 : 0
2019-05-13 08:57:45 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:45 -参数 : [userType]
2019-05-13 08:57:45 -参数 : [elecType]
2019-05-13 08:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:45 -==> Parameters: userType(String)
2019-05-13 08:57:45 -==> Parameters: elecType(String)
2019-05-13 08:57:45 -<==      Total: 4
2019-05-13 08:57:45 -<==      Total: 11
2019-05-13 08:57:45 -耗时 : 3
2019-05-13 08:57:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:45 -耗时 : 3
2019-05-13 08:57:45 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:45 -HTTP METHOD : GET
2019-05-13 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:45 -<==      Total: 10
2019-05-13 08:57:45 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:45 -==> Parameters: 
2019-05-13 08:57:45 -<==      Total: 1
2019-05-13 08:57:45 -耗时 : 5
2019-05-13 08:57:45 -返回值 : com.bootdo.common.utils.PageUtils@28f032b9
2019-05-13 08:57:46 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:57:46 -HTTP METHOD : GET
2019-05-13 08:57:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:57:46 -参数 : []
2019-05-13 08:57:46 -耗时 : 0
2019-05-13 08:57:46 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:57:46 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:57:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:46 -HTTP METHOD : GET
2019-05-13 08:57:46 -HTTP METHOD : GET
2019-05-13 08:57:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:46 -参数 : [waterType]
2019-05-13 08:57:46 -参数 : [userType]
2019-05-13 08:57:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:46 -==> Parameters: waterType(String)
2019-05-13 08:57:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:46 -==> Parameters: userType(String)
2019-05-13 08:57:46 -<==      Total: 2
2019-05-13 08:57:46 -耗时 : 5
2019-05-13 08:57:46 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:46 -<==      Total: 4
2019-05-13 08:57:46 -耗时 : 10
2019-05-13 08:57:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:57:46 -HTTP METHOD : GET
2019-05-13 08:57:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:57:46 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:57:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:57:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:46 -<==      Total: 6
2019-05-13 08:57:46 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:57:46 -==> Parameters: 
2019-05-13 08:57:46 -<==      Total: 1
2019-05-13 08:57:46 -耗时 : 6
2019-05-13 08:57:46 -返回值 : com.bootdo.common.utils.PageUtils@3e150bef
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:47 -参数 : []
2019-05-13 08:57:47 -耗时 : 1
2019-05-13 08:57:47 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:47 -参数 : [userType]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:47 -参数 : [heatType]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:47 -==> Parameters: userType(String)
2019-05-13 08:57:47 -==> Parameters: heatType(String)
2019-05-13 08:57:47 -<==      Total: 4
2019-05-13 08:57:47 -耗时 : 6
2019-05-13 08:57:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:47 -<==      Total: 4
2019-05-13 08:57:47 -耗时 : 5
2019-05-13 08:57:47 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:47 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:47 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:47 -<==      Total: 6
2019-05-13 08:57:47 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:47 -==> Parameters: 
2019-05-13 08:57:47 -<==      Total: 1
2019-05-13 08:57:47 -耗时 : 5
2019-05-13 08:57:47 -返回值 : com.bootdo.common.utils.PageUtils@4901b513
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:57:47 -参数 : []
2019-05-13 08:57:47 -耗时 : 0
2019-05-13 08:57:47 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:47 -参数 : [elecType]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:47 -==> Parameters: elecType(String)
2019-05-13 08:57:47 -参数 : [userType]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:47 -==> Parameters: userType(String)
2019-05-13 08:57:47 -<==      Total: 11
2019-05-13 08:57:47 -<==      Total: 4
2019-05-13 08:57:47 -耗时 : 4
2019-05-13 08:57:47 -耗时 : 4
2019-05-13 08:57:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:47 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:57:47 -HTTP METHOD : GET
2019-05-13 08:57:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:57:47 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:57:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:57:47 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:47 -<==      Total: 10
2019-05-13 08:57:47 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:57:47 -==> Parameters: 
2019-05-13 08:57:47 -<==      Total: 1
2019-05-13 08:57:47 -耗时 : 5
2019-05-13 08:57:47 -返回值 : com.bootdo.common.utils.PageUtils@178d82b6
2019-05-13 08:57:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:57:51 -HTTP METHOD : GET
2019-05-13 08:57:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:57:51 -参数 : []
2019-05-13 08:57:51 -耗时 : 1
2019-05-13 08:57:51 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:57:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:57:51 -HTTP METHOD : GET
2019-05-13 08:57:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:51 -参数 : [userType]
2019-05-13 08:57:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:51 -==> Parameters: userType(String)
2019-05-13 08:57:51 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:57:51 -HTTP METHOD : GET
2019-05-13 08:57:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:57:51 -参数 : [heatType]
2019-05-13 08:57:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:57:51 -==> Parameters: heatType(String)
2019-05-13 08:57:51 -<==      Total: 4
2019-05-13 08:57:51 -耗时 : 3
2019-05-13 08:57:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:51 -<==      Total: 4
2019-05-13 08:57:51 -耗时 : 6
2019-05-13 08:57:51 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:57:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:51 -HTTP METHOD : GET
2019-05-13 08:57:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:51 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:57:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:57:51 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:57:51 -<==      Total: 6
2019-05-13 08:57:51 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:57:51 -==> Parameters: 
2019-05-13 08:57:51 -<==      Total: 1
2019-05-13 08:57:51 -耗时 : 5
2019-05-13 08:57:51 -返回值 : com.bootdo.common.utils.PageUtils@95a2359
2019-05-13 08:57:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:54 -HTTP METHOD : GET
2019-05-13 08:57:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:54 -参数 : [{limit=10, offset=0, userType=B, heatType=, userOrg=, userId=, heatDate=, type=B}]
2019-05-13 08:57:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:57:54 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-05-13 08:57:54 -<==      Total: 1
2019-05-13 08:57:54 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-05-13 08:57:54 -==> Parameters: B(String)
2019-05-13 08:57:54 -<==      Total: 1
2019-05-13 08:57:54 -耗时 : 14
2019-05-13 08:57:54 -返回值 : com.bootdo.common.utils.PageUtils@6a166262
2019-05-13 08:57:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:56 -HTTP METHOD : GET
2019-05-13 08:57:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:56 -参数 : [{limit=10, offset=0, userType=C, heatType=, userOrg=, userId=, heatDate=, type=C}]
2019-05-13 08:57:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:57:56 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:57:56 -<==      Total: 0
2019-05-13 08:57:56 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-05-13 08:57:56 -==> Parameters: C(String)
2019-05-13 08:57:56 -<==      Total: 1
2019-05-13 08:57:56 -耗时 : 11
2019-05-13 08:57:56 -返回值 : com.bootdo.common.utils.PageUtils@63385829
2019-05-13 08:57:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:57:58 -HTTP METHOD : GET
2019-05-13 08:57:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:57:58 -参数 : [{limit=10, offset=0, userType=D, heatType=, userOrg=, userId=, heatDate=, type=D}]
2019-05-13 08:57:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:57:58 -==> Parameters: D(String), 0(Integer), 10(Integer)
2019-05-13 08:57:58 -<==      Total: 0
2019-05-13 08:57:58 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-05-13 08:57:58 -==> Parameters: D(String)
2019-05-13 08:57:58 -<==      Total: 1
2019-05-13 08:57:58 -耗时 : 5
2019-05-13 08:57:58 -返回值 : com.bootdo.common.utils.PageUtils@1c9c4400
2019-05-13 08:58:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:00 -HTTP METHOD : GET
2019-05-13 08:58:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:00 -参数 : [{limit=10, offset=0, userType=C, heatType=, userOrg=, userId=, heatDate=, type=C}]
2019-05-13 08:58:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:00 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:58:00 -<==      Total: 0
2019-05-13 08:58:00 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? 
2019-05-13 08:58:00 -==> Parameters: C(String)
2019-05-13 08:58:00 -<==      Total: 1
2019-05-13 08:58:00 -耗时 : 6
2019-05-13 08:58:00 -返回值 : com.bootdo.common.utils.PageUtils@5785c7dc
2019-05-13 08:58:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:02 -HTTP METHOD : GET
2019-05-13 08:58:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:02 -参数 : [{limit=10, offset=0, userType=C, heatType=2, userOrg=, userId=, heatDate=, type=2}]
2019-05-13 08:58:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and heat_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:02 -==> Parameters: C(String), 2(String), 0(Integer), 10(Integer)
2019-05-13 08:58:02 -<==      Total: 0
2019-05-13 08:58:02 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and heat_type = ? 
2019-05-13 08:58:02 -==> Parameters: C(String), 2(String)
2019-05-13 08:58:02 -<==      Total: 1
2019-05-13 08:58:02 -耗时 : 15
2019-05-13 08:58:02 -返回值 : com.bootdo.common.utils.PageUtils@25170cd1
2019-05-13 08:58:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:04 -HTTP METHOD : GET
2019-05-13 08:58:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:04 -参数 : []
2019-05-13 08:58:04 -耗时 : 1
2019-05-13 08:58:04 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:04 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:04 -HTTP METHOD : GET
2019-05-13 08:58:04 -HTTP METHOD : GET
2019-05-13 08:58:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:04 -参数 : [waterType]
2019-05-13 08:58:04 -参数 : [userType]
2019-05-13 08:58:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:04 -==> Parameters: userType(String)
2019-05-13 08:58:04 -==> Parameters: waterType(String)
2019-05-13 08:58:04 -<==      Total: 2
2019-05-13 08:58:04 -<==      Total: 4
2019-05-13 08:58:04 -耗时 : 2
2019-05-13 08:58:04 -耗时 : 2
2019-05-13 08:58:04 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:04 -HTTP METHOD : GET
2019-05-13 08:58:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:04 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:04 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:04 -<==      Total: 6
2019-05-13 08:58:04 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:04 -==> Parameters: 
2019-05-13 08:58:04 -<==      Total: 1
2019-05-13 08:58:04 -耗时 : 5
2019-05-13 08:58:04 -返回值 : com.bootdo.common.utils.PageUtils@32b499e
2019-05-13 08:58:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:06 -HTTP METHOD : GET
2019-05-13 08:58:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:06 -参数 : [{limit=10, offset=0, userType=C, waterType=, userOrg=, userId=, waterDate=, type=C}]
2019-05-13 08:58:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:06 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:58:06 -<==      Total: 0
2019-05-13 08:58:06 -==>  Preparing: select count(*) from water_log WHERE user_type = ? 
2019-05-13 08:58:06 -==> Parameters: C(String)
2019-05-13 08:58:06 -<==      Total: 1
2019-05-13 08:58:06 -耗时 : 15
2019-05-13 08:58:06 -返回值 : com.bootdo.common.utils.PageUtils@54cb8ca6
2019-05-13 08:58:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:07 -HTTP METHOD : GET
2019-05-13 08:58:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:07 -参数 : [{limit=10, offset=0, userType=D, waterType=, userOrg=, userId=, waterDate=, type=D}]
2019-05-13 08:58:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:07 -==> Parameters: D(String), 0(Integer), 10(Integer)
2019-05-13 08:58:07 -<==      Total: 0
2019-05-13 08:58:07 -==>  Preparing: select count(*) from water_log WHERE user_type = ? 
2019-05-13 08:58:07 -==> Parameters: D(String)
2019-05-13 08:58:07 -<==      Total: 1
2019-05-13 08:58:07 -耗时 : 9
2019-05-13 08:58:07 -返回值 : com.bootdo.common.utils.PageUtils@74e5aa70
2019-05-13 08:58:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:09 -HTTP METHOD : GET
2019-05-13 08:58:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:09 -参数 : [{limit=10, offset=0, userType=B, waterType=, userOrg=, userId=, waterDate=, type=B}]
2019-05-13 08:58:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:09 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-05-13 08:58:09 -<==      Total: 1
2019-05-13 08:58:09 -==>  Preparing: select count(*) from water_log WHERE user_type = ? 
2019-05-13 08:58:09 -==> Parameters: B(String)
2019-05-13 08:58:09 -<==      Total: 1
2019-05-13 08:58:09 -耗时 : 11
2019-05-13 08:58:09 -返回值 : com.bootdo.common.utils.PageUtils@77b783e2
2019-05-13 08:58:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:11 -HTTP METHOD : GET
2019-05-13 08:58:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:11 -参数 : [{limit=10, offset=0, userType=B, waterType=1, userOrg=, userId=, waterDate=, type=1}]
2019-05-13 08:58:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:11 -==> Parameters: B(String), 1(String), 0(Integer), 10(Integer)
2019-05-13 08:58:11 -<==      Total: 0
2019-05-13 08:58:11 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-05-13 08:58:11 -==> Parameters: B(String), 1(String)
2019-05-13 08:58:11 -<==      Total: 1
2019-05-13 08:58:11 -耗时 : 14
2019-05-13 08:58:11 -返回值 : com.bootdo.common.utils.PageUtils@754f0fad
2019-05-13 08:58:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:13 -HTTP METHOD : GET
2019-05-13 08:58:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:13 -参数 : [{limit=10, offset=0, userType=B, waterType=2, userOrg=, userId=, waterDate=, type=2}]
2019-05-13 08:58:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:13 -==> Parameters: B(String), 2(String), 0(Integer), 10(Integer)
2019-05-13 08:58:13 -<==      Total: 1
2019-05-13 08:58:13 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-05-13 08:58:13 -==> Parameters: B(String), 2(String)
2019-05-13 08:58:13 -<==      Total: 1
2019-05-13 08:58:13 -耗时 : 11
2019-05-13 08:58:13 -返回值 : com.bootdo.common.utils.PageUtils@20a445fb
2019-05-13 08:58:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:15 -HTTP METHOD : GET
2019-05-13 08:58:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:15 -参数 : [{limit=10, offset=0, userType=D, waterType=2, userOrg=, userId=, waterDate=, type=D}]
2019-05-13 08:58:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and water_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:15 -==> Parameters: D(String), 2(String), 0(Integer), 10(Integer)
2019-05-13 08:58:15 -<==      Total: 0
2019-05-13 08:58:15 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and water_type = ? 
2019-05-13 08:58:15 -==> Parameters: D(String), 2(String)
2019-05-13 08:58:15 -<==      Total: 1
2019-05-13 08:58:15 -耗时 : 12
2019-05-13 08:58:15 -返回值 : com.bootdo.common.utils.PageUtils@eb519b7
2019-05-13 08:58:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:16 -HTTP METHOD : GET
2019-05-13 08:58:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:16 -参数 : []
2019-05-13 08:58:16 -耗时 : 0
2019-05-13 08:58:16 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:16 -HTTP METHOD : GET
2019-05-13 08:58:16 -HTTP METHOD : GET
2019-05-13 08:58:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:16 -参数 : [heatType]
2019-05-13 08:58:16 -参数 : [userType]
2019-05-13 08:58:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:16 -==> Parameters: heatType(String)
2019-05-13 08:58:16 -==> Parameters: userType(String)
2019-05-13 08:58:16 -<==      Total: 4
2019-05-13 08:58:16 -<==      Total: 4
2019-05-13 08:58:16 -耗时 : 3
2019-05-13 08:58:16 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:16 -耗时 : 3
2019-05-13 08:58:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:16 -HTTP METHOD : GET
2019-05-13 08:58:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:16 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:16 -<==      Total: 6
2019-05-13 08:58:16 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:16 -==> Parameters: 
2019-05-13 08:58:16 -<==      Total: 1
2019-05-13 08:58:16 -耗时 : 6
2019-05-13 08:58:16 -返回值 : com.bootdo.common.utils.PageUtils@18cf2d22
2019-05-13 08:58:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:17 -HTTP METHOD : GET
2019-05-13 08:58:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:17 -参数 : []
2019-05-13 08:58:17 -耗时 : 0
2019-05-13 08:58:17 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:17 -HTTP METHOD : GET
2019-05-13 08:58:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:17 -参数 : [userType]
2019-05-13 08:58:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:17 -==> Parameters: userType(String)
2019-05-13 08:58:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:17 -HTTP METHOD : GET
2019-05-13 08:58:17 -<==      Total: 4
2019-05-13 08:58:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:17 -参数 : [elecType]
2019-05-13 08:58:17 -耗时 : 4
2019-05-13 08:58:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:17 -==> Parameters: elecType(String)
2019-05-13 08:58:17 -<==      Total: 11
2019-05-13 08:58:17 -耗时 : 4
2019-05-13 08:58:17 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:17 -HTTP METHOD : GET
2019-05-13 08:58:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:17 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:17 -<==      Total: 10
2019-05-13 08:58:17 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:17 -==> Parameters: 
2019-05-13 08:58:17 -<==      Total: 1
2019-05-13 08:58:17 -耗时 : 4
2019-05-13 08:58:17 -返回值 : com.bootdo.common.utils.PageUtils@75ad35e2
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:18 -参数 : []
2019-05-13 08:58:18 -耗时 : 0
2019-05-13 08:58:18 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -参数 : [userType]
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -参数 : [heatType]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==> Parameters: userType(String)
2019-05-13 08:58:18 -==> Parameters: heatType(String)
2019-05-13 08:58:18 -<==      Total: 4
2019-05-13 08:58:18 -<==      Total: 4
2019-05-13 08:58:18 -耗时 : 3
2019-05-13 08:58:18 -耗时 : 3
2019-05-13 08:58:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:18 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:18 -<==      Total: 6
2019-05-13 08:58:18 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:18 -==> Parameters: 
2019-05-13 08:58:18 -<==      Total: 1
2019-05-13 08:58:18 -耗时 : 6
2019-05-13 08:58:18 -返回值 : com.bootdo.common.utils.PageUtils@67b3b3b9
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:18 -参数 : []
2019-05-13 08:58:18 -耗时 : 0
2019-05-13 08:58:18 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -参数 : [userType]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==> Parameters: userType(String)
2019-05-13 08:58:18 -<==      Total: 4
2019-05-13 08:58:18 -耗时 : 4
2019-05-13 08:58:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -参数 : [waterType]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==> Parameters: waterType(String)
2019-05-13 08:58:18 -<==      Total: 2
2019-05-13 08:58:18 -耗时 : 3
2019-05-13 08:58:18 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:18 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:18 -<==      Total: 6
2019-05-13 08:58:18 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:18 -==> Parameters: 
2019-05-13 08:58:18 -<==      Total: 1
2019-05-13 08:58:18 -耗时 : 6
2019-05-13 08:58:18 -返回值 : com.bootdo.common.utils.PageUtils@2af030b4
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:18 -参数 : []
2019-05-13 08:58:18 -耗时 : 1
2019-05-13 08:58:18 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:18 -参数 : [userType]
2019-05-13 08:58:18 -参数 : [heatType]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:18 -==> Parameters: userType(String)
2019-05-13 08:58:18 -==> Parameters: heatType(String)
2019-05-13 08:58:18 -<==      Total: 4
2019-05-13 08:58:18 -<==      Total: 4
2019-05-13 08:58:18 -耗时 : 3
2019-05-13 08:58:18 -耗时 : 3
2019-05-13 08:58:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:18 -HTTP METHOD : GET
2019-05-13 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:18 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:18 -<==      Total: 6
2019-05-13 08:58:18 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:18 -==> Parameters: 
2019-05-13 08:58:18 -<==      Total: 1
2019-05-13 08:58:18 -耗时 : 6
2019-05-13 08:58:18 -返回值 : com.bootdo.common.utils.PageUtils@37f4da46
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:19 -参数 : []
2019-05-13 08:58:19 -耗时 : 1
2019-05-13 08:58:19 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:19 -参数 : [userType]
2019-05-13 08:58:19 -参数 : [elecType]
2019-05-13 08:58:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:19 -==> Parameters: elecType(String)
2019-05-13 08:58:19 -==> Parameters: userType(String)
2019-05-13 08:58:19 -<==      Total: 4
2019-05-13 08:58:19 -<==      Total: 11
2019-05-13 08:58:19 -耗时 : 3
2019-05-13 08:58:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:19 -耗时 : 3
2019-05-13 08:58:19 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:19 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:19 -<==      Total: 10
2019-05-13 08:58:19 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:19 -==> Parameters: 
2019-05-13 08:58:19 -<==      Total: 1
2019-05-13 08:58:19 -耗时 : 5
2019-05-13 08:58:19 -返回值 : com.bootdo.common.utils.PageUtils@474ac0d5
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:19 -参数 : []
2019-05-13 08:58:19 -耗时 : 1
2019-05-13 08:58:19 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:19 -参数 : [userType]
2019-05-13 08:58:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:19 -==> Parameters: userType(String)
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:19 -参数 : [heatType]
2019-05-13 08:58:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:19 -==> Parameters: heatType(String)
2019-05-13 08:58:19 -<==      Total: 4
2019-05-13 08:58:19 -耗时 : 3
2019-05-13 08:58:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:19 -<==      Total: 4
2019-05-13 08:58:19 -耗时 : 2
2019-05-13 08:58:19 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:19 -HTTP METHOD : GET
2019-05-13 08:58:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:19 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:19 -<==      Total: 6
2019-05-13 08:58:19 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:19 -==> Parameters: 
2019-05-13 08:58:19 -<==      Total: 1
2019-05-13 08:58:19 -耗时 : 6
2019-05-13 08:58:19 -返回值 : com.bootdo.common.utils.PageUtils@1c3aa3c8
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:20 -参数 : []
2019-05-13 08:58:20 -耗时 : 0
2019-05-13 08:58:20 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:20 -参数 : [userType]
2019-05-13 08:58:20 -参数 : [waterType]
2019-05-13 08:58:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:20 -==> Parameters: userType(String)
2019-05-13 08:58:20 -==> Parameters: waterType(String)
2019-05-13 08:58:20 -<==      Total: 2
2019-05-13 08:58:20 -<==      Total: 4
2019-05-13 08:58:20 -耗时 : 3
2019-05-13 08:58:20 -耗时 : 3
2019-05-13 08:58:20 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:20 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:20 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:20 -<==      Total: 6
2019-05-13 08:58:20 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:20 -==> Parameters: 
2019-05-13 08:58:20 -<==      Total: 1
2019-05-13 08:58:20 -耗时 : 4
2019-05-13 08:58:20 -返回值 : com.bootdo.common.utils.PageUtils@553556ee
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:20 -参数 : []
2019-05-13 08:58:20 -耗时 : 0
2019-05-13 08:58:20 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:20 -参数 : [heatType]
2019-05-13 08:58:20 -参数 : [userType]
2019-05-13 08:58:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:20 -==> Parameters: heatType(String)
2019-05-13 08:58:20 -==> Parameters: userType(String)
2019-05-13 08:58:20 -<==      Total: 4
2019-05-13 08:58:20 -耗时 : 3
2019-05-13 08:58:20 -<==      Total: 4
2019-05-13 08:58:20 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:20 -耗时 : 3
2019-05-13 08:58:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:20 -HTTP METHOD : GET
2019-05-13 08:58:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:20 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:20 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:20 -<==      Total: 6
2019-05-13 08:58:20 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:20 -==> Parameters: 
2019-05-13 08:58:20 -<==      Total: 1
2019-05-13 08:58:20 -耗时 : 7
2019-05-13 08:58:20 -返回值 : com.bootdo.common.utils.PageUtils@249d407c
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:22 -参数 : []
2019-05-13 08:58:22 -耗时 : 1
2019-05-13 08:58:22 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:22 -参数 : [userType]
2019-05-13 08:58:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:22 -参数 : [elecType]
2019-05-13 08:58:22 -==> Parameters: userType(String)
2019-05-13 08:58:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:22 -==> Parameters: elecType(String)
2019-05-13 08:58:22 -<==      Total: 4
2019-05-13 08:58:22 -耗时 : 3
2019-05-13 08:58:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:22 -<==      Total: 11
2019-05-13 08:58:22 -耗时 : 8
2019-05-13 08:58:22 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:22 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:22 -<==      Total: 10
2019-05-13 08:58:22 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:22 -==> Parameters: 
2019-05-13 08:58:22 -<==      Total: 1
2019-05-13 08:58:22 -耗时 : 4
2019-05-13 08:58:22 -返回值 : com.bootdo.common.utils.PageUtils@64d93b9d
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:22 -参数 : []
2019-05-13 08:58:22 -耗时 : 1
2019-05-13 08:58:22 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -参数 : [userType]
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:22 -参数 : [heatType]
2019-05-13 08:58:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:22 -==> Parameters: heatType(String)
2019-05-13 08:58:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:22 -==> Parameters: userType(String)
2019-05-13 08:58:22 -<==      Total: 4
2019-05-13 08:58:22 -<==      Total: 4
2019-05-13 08:58:22 -耗时 : 4
2019-05-13 08:58:22 -耗时 : 4
2019-05-13 08:58:22 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:22 -HTTP METHOD : GET
2019-05-13 08:58:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:22 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:22 -<==      Total: 6
2019-05-13 08:58:22 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:22 -==> Parameters: 
2019-05-13 08:58:22 -<==      Total: 1
2019-05-13 08:58:22 -耗时 : 7
2019-05-13 08:58:22 -返回值 : com.bootdo.common.utils.PageUtils@35c73ca1
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:23 -参数 : []
2019-05-13 08:58:23 -耗时 : 0
2019-05-13 08:58:23 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:23 -参数 : [waterType]
2019-05-13 08:58:23 -参数 : [userType]
2019-05-13 08:58:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:23 -==> Parameters: waterType(String)
2019-05-13 08:58:23 -==> Parameters: userType(String)
2019-05-13 08:58:23 -<==      Total: 2
2019-05-13 08:58:23 -<==      Total: 4
2019-05-13 08:58:23 -耗时 : 3
2019-05-13 08:58:23 -耗时 : 3
2019-05-13 08:58:23 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:23 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:23 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:23 -<==      Total: 6
2019-05-13 08:58:23 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:23 -==> Parameters: 
2019-05-13 08:58:23 -<==      Total: 1
2019-05-13 08:58:23 -耗时 : 5
2019-05-13 08:58:23 -返回值 : com.bootdo.common.utils.PageUtils@3fbccadb
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:23 -参数 : []
2019-05-13 08:58:23 -耗时 : 0
2019-05-13 08:58:23 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:23 -参数 : [heatType]
2019-05-13 08:58:23 -参数 : [userType]
2019-05-13 08:58:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:23 -==> Parameters: userType(String)
2019-05-13 08:58:23 -==> Parameters: heatType(String)
2019-05-13 08:58:23 -<==      Total: 4
2019-05-13 08:58:23 -<==      Total: 4
2019-05-13 08:58:23 -耗时 : 3
2019-05-13 08:58:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:23 -耗时 : 3
2019-05-13 08:58:23 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:23 -HTTP METHOD : GET
2019-05-13 08:58:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:23 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:23 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:23 -<==      Total: 6
2019-05-13 08:58:23 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:23 -==> Parameters: 
2019-05-13 08:58:23 -<==      Total: 1
2019-05-13 08:58:23 -耗时 : 5
2019-05-13 08:58:23 -返回值 : com.bootdo.common.utils.PageUtils@63524976
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:24 -参数 : []
2019-05-13 08:58:24 -耗时 : 0
2019-05-13 08:58:24 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:24 -参数 : [userType]
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:24 -参数 : [elecType]
2019-05-13 08:58:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:24 -==> Parameters: userType(String)
2019-05-13 08:58:24 -==> Parameters: elecType(String)
2019-05-13 08:58:24 -<==      Total: 4
2019-05-13 08:58:24 -<==      Total: 11
2019-05-13 08:58:24 -耗时 : 2
2019-05-13 08:58:24 -耗时 : 2
2019-05-13 08:58:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:24 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:24 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:24 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:24 -<==      Total: 10
2019-05-13 08:58:24 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:24 -==> Parameters: 
2019-05-13 08:58:24 -<==      Total: 1
2019-05-13 08:58:24 -耗时 : 4
2019-05-13 08:58:24 -返回值 : com.bootdo.common.utils.PageUtils@75c1c6b7
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:24 -参数 : []
2019-05-13 08:58:24 -耗时 : 0
2019-05-13 08:58:24 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:24 -参数 : [userType]
2019-05-13 08:58:24 -参数 : [waterType]
2019-05-13 08:58:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:24 -==> Parameters: userType(String)
2019-05-13 08:58:24 -==> Parameters: waterType(String)
2019-05-13 08:58:24 -<==      Total: 2
2019-05-13 08:58:24 -<==      Total: 4
2019-05-13 08:58:24 -耗时 : 2
2019-05-13 08:58:24 -耗时 : 2
2019-05-13 08:58:24 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:24 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:24 -HTTP METHOD : GET
2019-05-13 08:58:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:24 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:24 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:24 -<==      Total: 6
2019-05-13 08:58:24 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:24 -==> Parameters: 
2019-05-13 08:58:24 -<==      Total: 1
2019-05-13 08:58:24 -耗时 : 5
2019-05-13 08:58:24 -返回值 : com.bootdo.common.utils.PageUtils@6a9d7baf
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:25 -参数 : []
2019-05-13 08:58:25 -耗时 : 0
2019-05-13 08:58:25 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:25 -参数 : [heatType]
2019-05-13 08:58:25 -参数 : [userType]
2019-05-13 08:58:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:25 -==> Parameters: userType(String)
2019-05-13 08:58:25 -==> Parameters: heatType(String)
2019-05-13 08:58:25 -<==      Total: 4
2019-05-13 08:58:25 -<==      Total: 4
2019-05-13 08:58:25 -耗时 : 2
2019-05-13 08:58:25 -耗时 : 2
2019-05-13 08:58:25 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:25 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:25 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:25 -<==      Total: 6
2019-05-13 08:58:25 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:25 -==> Parameters: 
2019-05-13 08:58:25 -<==      Total: 1
2019-05-13 08:58:25 -耗时 : 5
2019-05-13 08:58:25 -返回值 : com.bootdo.common.utils.PageUtils@399ed30d
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:25 -参数 : []
2019-05-13 08:58:25 -耗时 : 0
2019-05-13 08:58:25 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:25 -参数 : [elecType]
2019-05-13 08:58:25 -参数 : [userType]
2019-05-13 08:58:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:25 -==> Parameters: userType(String)
2019-05-13 08:58:25 -==> Parameters: elecType(String)
2019-05-13 08:58:25 -<==      Total: 4
2019-05-13 08:58:25 -<==      Total: 11
2019-05-13 08:58:25 -耗时 : 2
2019-05-13 08:58:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:25 -耗时 : 2
2019-05-13 08:58:25 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:25 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:25 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:25 -<==      Total: 10
2019-05-13 08:58:25 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:25 -==> Parameters: 
2019-05-13 08:58:25 -<==      Total: 1
2019-05-13 08:58:25 -耗时 : 6
2019-05-13 08:58:25 -返回值 : com.bootdo.common.utils.PageUtils@6d111932
2019-05-13 08:58:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:25 -HTTP METHOD : GET
2019-05-13 08:58:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:25 -参数 : []
2019-05-13 08:58:25 -耗时 : 1
2019-05-13 08:58:25 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -参数 : [userType]
2019-05-13 08:58:26 -参数 : [heatType]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==> Parameters: userType(String)
2019-05-13 08:58:26 -==> Parameters: heatType(String)
2019-05-13 08:58:26 -<==      Total: 4
2019-05-13 08:58:26 -<==      Total: 4
2019-05-13 08:58:26 -耗时 : 3
2019-05-13 08:58:26 -耗时 : 3
2019-05-13 08:58:26 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:26 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:26 -<==      Total: 6
2019-05-13 08:58:26 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:26 -==> Parameters: 
2019-05-13 08:58:26 -<==      Total: 1
2019-05-13 08:58:26 -耗时 : 4
2019-05-13 08:58:26 -返回值 : com.bootdo.common.utils.PageUtils@c769c26
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:26 -参数 : []
2019-05-13 08:58:26 -耗时 : 0
2019-05-13 08:58:26 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -参数 : [waterType]
2019-05-13 08:58:26 -参数 : [userType]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==> Parameters: waterType(String)
2019-05-13 08:58:26 -==> Parameters: userType(String)
2019-05-13 08:58:26 -<==      Total: 2
2019-05-13 08:58:26 -<==      Total: 4
2019-05-13 08:58:26 -耗时 : 3
2019-05-13 08:58:26 -耗时 : 3
2019-05-13 08:58:26 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:26 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:26 -<==      Total: 6
2019-05-13 08:58:26 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:26 -==> Parameters: 
2019-05-13 08:58:26 -<==      Total: 1
2019-05-13 08:58:26 -耗时 : 4
2019-05-13 08:58:26 -返回值 : com.bootdo.common.utils.PageUtils@1830f00f
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:26 -参数 : []
2019-05-13 08:58:26 -耗时 : 0
2019-05-13 08:58:26 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:26 -参数 : [userType]
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:26 -参数 : [heatType]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==> Parameters: heatType(String)
2019-05-13 08:58:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:26 -==> Parameters: userType(String)
2019-05-13 08:58:26 -<==      Total: 4
2019-05-13 08:58:26 -耗时 : 3
2019-05-13 08:58:26 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -<==      Total: 4
2019-05-13 08:58:26 -耗时 : 4
2019-05-13 08:58:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:26 -HTTP METHOD : GET
2019-05-13 08:58:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:26 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:26 -<==      Total: 6
2019-05-13 08:58:26 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:26 -==> Parameters: 
2019-05-13 08:58:26 -<==      Total: 1
2019-05-13 08:58:26 -耗时 : 5
2019-05-13 08:58:26 -返回值 : com.bootdo.common.utils.PageUtils@100286ab
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:27 -参数 : []
2019-05-13 08:58:27 -耗时 : 1
2019-05-13 08:58:27 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -参数 : [userType]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -==> Parameters: userType(String)
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -参数 : [elecType]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -<==      Total: 4
2019-05-13 08:58:27 -耗时 : 3
2019-05-13 08:58:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -==> Parameters: elecType(String)
2019-05-13 08:58:27 -<==      Total: 11
2019-05-13 08:58:27 -耗时 : 5
2019-05-13 08:58:27 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:27 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:27 -<==      Total: 10
2019-05-13 08:58:27 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:27 -==> Parameters: 
2019-05-13 08:58:27 -<==      Total: 1
2019-05-13 08:58:27 -耗时 : 5
2019-05-13 08:58:27 -返回值 : com.bootdo.common.utils.PageUtils@5884eef6
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:27 -参数 : []
2019-05-13 08:58:27 -耗时 : 0
2019-05-13 08:58:27 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -参数 : [heatType]
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -参数 : [userType]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -==> Parameters: userType(String)
2019-05-13 08:58:27 -==> Parameters: heatType(String)
2019-05-13 08:58:27 -<==      Total: 4
2019-05-13 08:58:27 -<==      Total: 4
2019-05-13 08:58:27 -耗时 : 3
2019-05-13 08:58:27 -耗时 : 3
2019-05-13 08:58:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:27 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:27 -<==      Total: 6
2019-05-13 08:58:27 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:27 -==> Parameters: 
2019-05-13 08:58:27 -<==      Total: 1
2019-05-13 08:58:27 -耗时 : 6
2019-05-13 08:58:27 -返回值 : com.bootdo.common.utils.PageUtils@2885b85e
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-13 08:58:27 -参数 : []
2019-05-13 08:58:27 -耗时 : 0
2019-05-13 08:58:27 -返回值 : /moneyLog/waterLog/waterLog
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -参数 : [userType]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:27 -参数 : [waterType]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:27 -==> Parameters: waterType(String)
2019-05-13 08:58:27 -==> Parameters: userType(String)
2019-05-13 08:58:27 -<==      Total: 2
2019-05-13 08:58:27 -耗时 : 4
2019-05-13 08:58:27 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -<==      Total: 4
2019-05-13 08:58:27 -耗时 : 6
2019-05-13 08:58:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-13 08:58:27 -HTTP METHOD : GET
2019-05-13 08:58:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-13 08:58:27 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-13 08:58:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-13 08:58:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:27 -<==      Total: 6
2019-05-13 08:58:27 -==>  Preparing: select count(*) from water_log 
2019-05-13 08:58:27 -==> Parameters: 
2019-05-13 08:58:27 -<==      Total: 1
2019-05-13 08:58:27 -耗时 : 4
2019-05-13 08:58:27 -返回值 : com.bootdo.common.utils.PageUtils@7c68c01e
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-13 08:58:29 -参数 : []
2019-05-13 08:58:29 -耗时 : 1
2019-05-13 08:58:29 -返回值 : /moneyLog/heatLog/heatLog
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:29 -参数 : [userType]
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:29 -参数 : [heatType]
2019-05-13 08:58:29 -==> Parameters: userType(String)
2019-05-13 08:58:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:29 -==> Parameters: heatType(String)
2019-05-13 08:58:29 -<==      Total: 4
2019-05-13 08:58:29 -耗时 : 4
2019-05-13 08:58:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:29 -<==      Total: 4
2019-05-13 08:58:29 -耗时 : 5
2019-05-13 08:58:29 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-13 08:58:29 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-13 08:58:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-13 08:58:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:29 -<==      Total: 6
2019-05-13 08:58:29 -==>  Preparing: select count(*) from heat_log 
2019-05-13 08:58:29 -==> Parameters: 
2019-05-13 08:58:29 -<==      Total: 1
2019-05-13 08:58:29 -耗时 : 4
2019-05-13 08:58:29 -返回值 : com.bootdo.common.utils.PageUtils@4021a83d
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 08:58:29 -参数 : []
2019-05-13 08:58:29 -耗时 : 1
2019-05-13 08:58:29 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:29 -参数 : [elecType]
2019-05-13 08:58:29 -参数 : [userType]
2019-05-13 08:58:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:29 -==> Parameters: elecType(String)
2019-05-13 08:58:29 -==> Parameters: userType(String)
2019-05-13 08:58:29 -<==      Total: 4
2019-05-13 08:58:29 -<==      Total: 11
2019-05-13 08:58:29 -耗时 : 2
2019-05-13 08:58:29 -耗时 : 3
2019-05-13 08:58:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:29 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 08:58:29 -HTTP METHOD : GET
2019-05-13 08:58:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 08:58:29 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 08:58:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 08:58:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:29 -<==      Total: 10
2019-05-13 08:58:29 -==>  Preparing: select count(*) from elec_log 
2019-05-13 08:58:29 -==> Parameters: 
2019-05-13 08:58:29 -<==      Total: 1
2019-05-13 08:58:29 -耗时 : 6
2019-05-13 08:58:29 -返回值 : com.bootdo.common.utils.PageUtils@79ab2513
2019-05-13 08:58:32 -请求地址 : http://localhost:8081/elec/elec
2019-05-13 08:58:32 -HTTP METHOD : GET
2019-05-13 08:58:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-13 08:58:32 -参数 : []
2019-05-13 08:58:32 -耗时 : 0
2019-05-13 08:58:32 -返回值 : elec/elec/elec
2019-05-13 08:58:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 08:58:33 -HTTP METHOD : GET
2019-05-13 08:58:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:33 -参数 : [elecType]
2019-05-13 08:58:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:33 -==> Parameters: elecType(String)
2019-05-13 08:58:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:58:33 -HTTP METHOD : GET
2019-05-13 08:58:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:58:33 -参数 : [userType]
2019-05-13 08:58:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:58:33 -==> Parameters: userType(String)
2019-05-13 08:58:33 -<==      Total: 11
2019-05-13 08:58:33 -<==      Total: 4
2019-05-13 08:58:33 -耗时 : 4
2019-05-13 08:58:33 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:33 -耗时 : 3
2019-05-13 08:58:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:58:33 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:33 -HTTP METHOD : GET
2019-05-13 08:58:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:33 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@70b8ebeb]
2019-05-13 08:58:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-13 08:58:33 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:58:33 -<==      Total: 10
2019-05-13 08:58:33 -==>  Preparing: select count(*) from elec 
2019-05-13 08:58:33 -==> Parameters: 
2019-05-13 08:58:33 -<==      Total: 1
2019-05-13 08:58:33 -耗时 : 61
2019-05-13 08:58:33 -返回值 : com.bootdo.common.utils.PageUtils@afc92da
2019-05-13 08:58:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:35 -HTTP METHOD : GET
2019-05-13 08:58:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:35 -参数 : [{limit=10, offset=0, userType=C, elecType=, userOrg=, userId=, createTime=, queryType=1, type=C}, com.bootdo.elec.domain.ElecDO@53db0d56]
2019-05-13 08:58:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:35 -==> Parameters: C(String), 0(Integer), 10(Integer)
2019-05-13 08:58:35 -<==      Total: 1
2019-05-13 08:58:35 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-05-13 08:58:35 -==> Parameters: C(String)
2019-05-13 08:58:35 -<==      Total: 1
2019-05-13 08:58:35 -耗时 : 9
2019-05-13 08:58:35 -返回值 : com.bootdo.common.utils.PageUtils@4848aca9
2019-05-13 08:58:37 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:37 -HTTP METHOD : GET
2019-05-13 08:58:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:37 -参数 : [{limit=10, offset=0, userType=B, elecType=, userOrg=, userId=, createTime=, queryType=1, type=B}, com.bootdo.elec.domain.ElecDO@173665a9]
2019-05-13 08:58:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:37 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-05-13 08:58:37 -<==      Total: 3
2019-05-13 08:58:37 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-05-13 08:58:37 -==> Parameters: B(String)
2019-05-13 08:58:37 -<==      Total: 1
2019-05-13 08:58:37 -耗时 : 10
2019-05-13 08:58:37 -返回值 : com.bootdo.common.utils.PageUtils@4ba0c0ce
2019-05-13 08:58:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:39 -HTTP METHOD : GET
2019-05-13 08:58:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:39 -参数 : [{limit=10, offset=0, userType=A, elecType=, userOrg=, userId=, createTime=, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@36407225]
2019-05-13 08:58:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:39 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-05-13 08:58:39 -<==      Total: 9
2019-05-13 08:58:39 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-05-13 08:58:39 -==> Parameters: A(String)
2019-05-13 08:58:39 -<==      Total: 1
2019-05-13 08:58:39 -耗时 : 21
2019-05-13 08:58:39 -返回值 : com.bootdo.common.utils.PageUtils@49cd4653
2019-05-13 08:58:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:41 -HTTP METHOD : GET
2019-05-13 08:58:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:41 -参数 : [{limit=10, offset=0, userType=A, elecType=9, userOrg=, userId=, createTime=, queryType=1, type=9}, com.bootdo.elec.domain.ElecDO@532e7acd]
2019-05-13 08:58:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:41 -==> Parameters: A(String), 9(String), 0(Integer), 10(Integer)
2019-05-13 08:58:41 -<==      Total: 0
2019-05-13 08:58:41 -==>  Preparing: select count(*) from elec WHERE user_type = ? and elec_type = ? 
2019-05-13 08:58:41 -==> Parameters: A(String), 9(String)
2019-05-13 08:58:41 -<==      Total: 1
2019-05-13 08:58:41 -耗时 : 15
2019-05-13 08:58:41 -返回值 : com.bootdo.common.utils.PageUtils@72449eda
2019-05-13 08:58:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:42 -HTTP METHOD : GET
2019-05-13 08:58:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:42 -参数 : [{limit=10, offset=0, userType=A, elecType=7, userOrg=, userId=, createTime=, queryType=1, type=7}, com.bootdo.elec.domain.ElecDO@60583437]
2019-05-13 08:58:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:42 -==> Parameters: A(String), 7(String), 0(Integer), 10(Integer)
2019-05-13 08:58:42 -<==      Total: 0
2019-05-13 08:58:42 -==>  Preparing: select count(*) from elec WHERE user_type = ? and elec_type = ? 
2019-05-13 08:58:42 -==> Parameters: A(String), 7(String)
2019-05-13 08:58:42 -<==      Total: 1
2019-05-13 08:58:42 -耗时 : 10
2019-05-13 08:58:42 -返回值 : com.bootdo.common.utils.PageUtils@687c9660
2019-05-13 08:58:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 08:58:44 -HTTP METHOD : GET
2019-05-13 08:58:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 08:58:44 -参数 : [{limit=10, offset=0, userType=A, elecType=8, userOrg=, userId=, createTime=, queryType=1, type=8}, com.bootdo.elec.domain.ElecDO@117b9f56]
2019-05-13 08:58:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE user_type = ? and elec_type = ? order by id asc limit ?, ? 
2019-05-13 08:58:44 -==> Parameters: A(String), 8(String), 0(Integer), 10(Integer)
2019-05-13 08:58:44 -<==      Total: 0
2019-05-13 08:58:44 -==>  Preparing: select count(*) from elec WHERE user_type = ? and elec_type = ? 
2019-05-13 08:58:44 -==> Parameters: A(String), 8(String)
2019-05-13 08:58:44 -<==      Total: 1
2019-05-13 08:58:44 -耗时 : 11
2019-05-13 08:58:44 -返回值 : com.bootdo.common.utils.PageUtils@6f2c5e6c
2019-05-13 08:58:59 -请求地址 : http://localhost:8081/print/print
2019-05-13 08:58:59 -HTTP METHOD : GET
2019-05-13 08:58:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-13 08:58:59 -参数 : []
2019-05-13 08:58:59 -耗时 : 1
2019-05-13 08:58:59 -返回值 : print/print/print
2019-05-13 08:59:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:59:00 -HTTP METHOD : GET
2019-05-13 08:59:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:59:00 -参数 : [userType]
2019-05-13 08:59:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:59:00 -==> Parameters: userType(String)
2019-05-13 08:59:00 -<==      Total: 4
2019-05-13 08:59:00 -耗时 : 2
2019-05-13 08:59:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:59:00 -请求地址 : http://localhost:8081/print/print/list
2019-05-13 08:59:00 -HTTP METHOD : GET
2019-05-13 08:59:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-13 08:59:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-13 08:59:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-13 08:59:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:59:00 -<==      Total: 6
2019-05-13 08:59:00 -==>  Preparing: select count(*) from print 
2019-05-13 08:59:00 -==> Parameters: 
2019-05-13 08:59:00 -<==      Total: 1
2019-05-13 08:59:00 -耗时 : 50
2019-05-13 08:59:00 -返回值 : com.bootdo.common.utils.PageUtils@3b0265fe
2019-05-13 08:59:03 -请求地址 : http://localhost:8081/print/print/edit/5
2019-05-13 08:59:03 -HTTP METHOD : GET
2019-05-13 08:59:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-05-13 08:59:03 -参数 : [5, {}]
2019-05-13 08:59:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-13 08:59:03 -==> Parameters: 5(Long)
2019-05-13 08:59:03 -<==      Total: 1
2019-05-13 08:59:03 -耗时 : 8
2019-05-13 08:59:03 -返回值 : print/print/edit
2019-05-13 08:59:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 08:59:03 -HTTP METHOD : GET
2019-05-13 08:59:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 08:59:03 -参数 : [userType]
2019-05-13 08:59:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 08:59:03 -==> Parameters: userType(String)
2019-05-13 08:59:03 -<==      Total: 4
2019-05-13 08:59:03 -耗时 : 2
2019-05-13 08:59:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 08:59:17 -请求地址 : http://localhost:8081/common/job
2019-05-13 08:59:17 -HTTP METHOD : GET
2019-05-13 08:59:17 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-05-13 08:59:17 -参数 : []
2019-05-13 08:59:17 -耗时 : 0
2019-05-13 08:59:17 -返回值 : common/job/job
2019-05-13 08:59:19 -请求地址 : http://localhost:8081/common/time
2019-05-13 08:59:19 -HTTP METHOD : GET
2019-05-13 08:59:19 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-05-13 08:59:19 -参数 : []
2019-05-13 08:59:19 -耗时 : 0
2019-05-13 08:59:19 -返回值 : common/job/time
2019-05-13 08:59:35 -请求地址 : http://localhost:8081/sys/online
2019-05-13 08:59:35 -HTTP METHOD : GET
2019-05-13 08:59:35 -CLASS_METHOD : com.bootdo.system.controller.SessionController.online
2019-05-13 08:59:35 -参数 : []
2019-05-13 08:59:35 -耗时 : 8
2019-05-13 08:59:35 -返回值 : system/online/online
2019-05-13 08:59:36 -请求地址 : http://localhost:8081/sys/online/list
2019-05-13 08:59:36 -HTTP METHOD : GET
2019-05-13 08:59:36 -CLASS_METHOD : com.bootdo.system.controller.SessionController.list
2019-05-13 08:59:36 -参数 : []
2019-05-13 08:59:36 -耗时 : 1
2019-05-13 08:59:36 -返回值 : [com.bootdo.system.domain.UserOnline@27d5e7df]
2019-05-13 08:59:46 -请求地址 : http://localhost:8081/common/log
2019-05-13 08:59:46 -HTTP METHOD : GET
2019-05-13 08:59:46 -CLASS_METHOD : com.bootdo.common.controller.LogController.log
2019-05-13 08:59:46 -参数 : []
2019-05-13 08:59:46 -耗时 : 0
2019-05-13 08:59:46 -返回值 : common/log/log
2019-05-13 08:59:46 -请求地址 : http://localhost:8081/common/log/list
2019-05-13 08:59:46 -HTTP METHOD : GET
2019-05-13 08:59:46 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-05-13 08:59:46 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2019-05-13 08:59:46 -==>  Preparing: select count(*) from sys_log 
2019-05-13 08:59:46 -==> Parameters: 
2019-05-13 08:59:47 -<==      Total: 1
2019-05-13 08:59:47 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-05-13 08:59:47 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 08:59:47 -<==      Total: 10
2019-05-13 08:59:47 -耗时 : 845
2019-05-13 08:59:47 -返回值 : PageDO{offset=0, limit=10, total=1858, params={}, param='', rows=[LogDO{id=4771, userId=1, username='admin', operation='请求访问主页', time=198, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Mon May 13 08:54:04 CST 2019}, LogDO{id=4770, userId=1, username='admin', operation='登录', time=199, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Mon May 13 08:54:03 CST 2019}, LogDO{id=4768, userId=1, username='admin', operation='登录', time=27, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Fri May 10 14:23:38 CST 2019}, LogDO{id=4769, userId=1, username='admin', operation='请求访问主页', time=27, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Fri May 10 14:23:38 CST 2019}, LogDO{id=4766, userId=1, username='admin', operation='登录', time=10, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Fri May 10 11:06:12 CST 2019}, LogDO{id=4767, userId=1, username='admin', operation='请求访问主页', time=25, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Fri May 10 11:06:12 CST 2019}, LogDO{id=4765, userId=1, username='admin', operation='请求访问主页', time=23, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Fri May 10 10:25:53 CST 2019}, LogDO{id=4764, userId=1, username='admin', operation='请求访问主页', time=22, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Fri May 10 10:23:33 CST 2019}, LogDO{id=4762, userId=1, username='admin', operation='登录', time=8, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Fri May 10 10:18:59 CST 2019}, LogDO{id=4763, userId=1, username='admin', operation='请求访问主页', time=107, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"', ip='127.0.0.1', gmtCreate=Fri May 10 10:18:59 CST 2019}]}
2019-05-13 09:00:07 -请求地址 : http://localhost:8081/print/print
2019-05-13 09:00:07 -HTTP METHOD : GET
2019-05-13 09:00:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-13 09:00:07 -参数 : []
2019-05-13 09:00:07 -耗时 : 0
2019-05-13 09:00:07 -返回值 : print/print/print
2019-05-13 09:00:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:00:07 -HTTP METHOD : GET
2019-05-13 09:00:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:00:07 -参数 : [userType]
2019-05-13 09:00:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:00:07 -==> Parameters: userType(String)
2019-05-13 09:00:07 -请求地址 : http://localhost:8081/print/print/list
2019-05-13 09:00:07 -HTTP METHOD : GET
2019-05-13 09:00:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-13 09:00:07 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-13 09:00:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-13 09:00:07 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 09:00:07 -<==      Total: 4
2019-05-13 09:00:07 -耗时 : 78
2019-05-13 09:00:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:00:07 -<==      Total: 6
2019-05-13 09:00:07 -==>  Preparing: select count(*) from print 
2019-05-13 09:00:07 -==> Parameters: 
2019-05-13 09:00:07 -<==      Total: 1
2019-05-13 09:00:07 -耗时 : 107
2019-05-13 09:00:07 -返回值 : com.bootdo.common.utils.PageUtils@4ec40c47
2019-05-13 09:03:26 -请求地址 : http://localhost:8081/heat/heat
2019-05-13 09:03:26 -HTTP METHOD : GET
2019-05-13 09:03:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-13 09:03:26 -参数 : []
2019-05-13 09:03:26 -耗时 : 0
2019-05-13 09:03:26 -返回值 : heat/heat/heat
2019-05-13 09:03:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:03:27 -HTTP METHOD : GET
2019-05-13 09:03:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:03:27 -参数 : [userType]
2019-05-13 09:03:27 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 09:03:27 -HTTP METHOD : GET
2019-05-13 09:03:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:03:27 -参数 : [heatType]
2019-05-13 09:03:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:03:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:03:27 -==> Parameters: userType(String)
2019-05-13 09:03:27 -==> Parameters: heatType(String)
2019-05-13 09:03:27 -<==      Total: 4
2019-05-13 09:03:27 -<==      Total: 4
2019-05-13 09:03:27 -耗时 : 4
2019-05-13 09:03:27 -耗时 : 5
2019-05-13 09:03:27 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:03:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:03:27 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-13 09:03:27 -HTTP METHOD : GET
2019-05-13 09:03:27 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-13 09:03:27 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-13 09:03:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-13 09:03:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 09:03:27 -<==      Total: 10
2019-05-13 09:03:27 -==>  Preparing: select count(*) from heat 
2019-05-13 09:03:27 -==> Parameters: 
2019-05-13 09:03:27 -<==      Total: 1
2019-05-13 09:03:27 -耗时 : 53
2019-05-13 09:03:27 -返回值 : com.bootdo.common.utils.PageUtils@7c40d875
2019-05-13 09:03:28 -请求地址 : http://localhost:8081/heat/heatInto
2019-05-13 09:03:28 -HTTP METHOD : GET
2019-05-13 09:03:28 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-05-13 09:03:28 -参数 : []
2019-05-13 09:03:28 -耗时 : 0
2019-05-13 09:03:28 -返回值 : heat/heatInto/heatInto
2019-05-13 09:03:29 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-13 09:03:29 -HTTP METHOD : GET
2019-05-13 09:03:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-13 09:03:29 -参数 : []
2019-05-13 09:03:29 -耗时 : 0
2019-05-13 09:03:29 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-13 09:03:29 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-13 09:03:29 -HTTP METHOD : GET
2019-05-13 09:03:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-13 09:03:29 -参数 : []
2019-05-13 09:03:29 -耗时 : 1
2019-05-13 09:03:29 -返回值 : heat/heatPrice/heatPrice
2019-05-13 09:03:29 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-13 09:03:29 -HTTP METHOD : GET
2019-05-13 09:03:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-13 09:03:29 -参数 : [{limit=10, offset=0}]
2019-05-13 09:03:29 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-13 09:03:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 09:03:30 -<==      Total: 2
2019-05-13 09:03:30 -==>  Preparing: select count(*) from heat_price 
2019-05-13 09:03:30 -==> Parameters: 
2019-05-13 09:03:30 -<==      Total: 1
2019-05-13 09:03:30 -耗时 : 57
2019-05-13 09:03:30 -返回值 : com.bootdo.common.utils.PageUtils@1663a10f
2019-05-13 09:03:39 -请求地址 : http://localhost:8081/heat/heatPrice/edit/1
2019-05-13 09:03:39 -HTTP METHOD : GET
2019-05-13 09:03:39 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.edit
2019-05-13 09:03:39 -参数 : [1, {}]
2019-05-13 09:03:39 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price where id = ? 
2019-05-13 09:03:39 -==> Parameters: 1(Long)
2019-05-13 09:03:39 -<==      Total: 1
2019-05-13 09:03:39 -耗时 : 4
2019-05-13 09:03:39 -返回值 : heat/heatPrice/edit
2019-05-13 09:04:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 09:04:24 -==> Parameters: 1(Long)
2019-05-13 09:04:24 -<==      Total: 93
2019-05-13 09:04:24 -请求地址 : http://localhost:8081/charts/countDD
2019-05-13 09:04:24 -HTTP METHOD : GET
2019-05-13 09:04:24 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-13 09:04:24 -参数 : []
2019-05-13 09:04:24 -耗时 : 7
2019-05-13 09:04:24 -返回值 : charts/countDD
2019-05-13 09:04:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:04:24 -HTTP METHOD : GET
2019-05-13 09:04:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:04:24 -参数 : [userType]
2019-05-13 09:04:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:04:24 -==> Parameters: userType(String)
2019-05-13 09:04:24 -<==      Total: 4
2019-05-13 09:04:24 -耗时 : 3
2019-05-13 09:04:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:04:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:04:29 -HTTP METHOD : GET
2019-05-13 09:04:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:04:29 -参数 : []
2019-05-13 09:04:29 -耗时 : 1
2019-05-13 09:04:29 -返回值 : system/dept/deptTree
2019-05-13 09:04:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:04:30 -HTTP METHOD : GET
2019-05-13 09:04:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:04:30 -参数 : []
2019-05-13 09:04:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:04:30 -==> Parameters: 
2019-05-13 09:04:30 -<==      Total: 3
2019-05-13 09:04:30 -耗时 : 11
2019-05-13 09:04:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:04:34 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-05-13 09:04:34 -HTTP METHOD : POST
2019-05-13 09:04:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-05-13 09:04:34 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7b6225b, com.bootdo.moneyLog.vo.WaterLogVo@6fb43233, com.bootdo.moneyLog.vo.HeatLogVo@6ba39d2c]
2019-05-13 09:04:34 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:04:34 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:04:34 -<==      Total: 1
2019-05-13 09:04:34 -耗时 : 168
2019-05-13 09:04:34 -返回值 : com.bootdo.charts.vo.CountDayVo@6dc7c706
2019-05-13 09:04:44 -请求地址 : http://localhost:8081/charts/countDD/getCountDD
2019-05-13 09:04:44 -HTTP METHOD : POST
2019-05-13 09:04:44 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.getCountD
2019-05-13 09:04:44 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@49a7199d, com.bootdo.moneyLog.vo.WaterLogVo@4dd57c68, com.bootdo.moneyLog.vo.HeatLogVo@76198f4b]
2019-05-13 09:04:44 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE `elec_date` >= ? and `elec_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE `heat_date` >= ? and `heat_date` <= ? and user_type = ? and user_org = ? 
2019-05-13 09:04:44 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), C(String), 2(String)
2019-05-13 09:04:44 -<==      Total: 1
2019-05-13 09:04:44 -耗时 : 21
2019-05-13 09:04:44 -返回值 : com.bootdo.charts.vo.CountDayVo@4929744f
2019-05-13 09:05:17 -请求地址 : http://localhost:8081/elec/elec
2019-05-13 09:05:17 -HTTP METHOD : GET
2019-05-13 09:05:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-13 09:05:17 -参数 : []
2019-05-13 09:05:17 -耗时 : 0
2019-05-13 09:05:17 -返回值 : elec/elec/elec
2019-05-13 09:05:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:05:17 -HTTP METHOD : GET
2019-05-13 09:05:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:05:17 -参数 : [userType]
2019-05-13 09:05:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 09:05:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:05:17 -HTTP METHOD : GET
2019-05-13 09:05:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:05:17 -参数 : [elecType]
2019-05-13 09:05:17 -==> Parameters: userType(String)
2019-05-13 09:05:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:05:17 -==> Parameters: elecType(String)
2019-05-13 09:05:17 -<==      Total: 4
2019-05-13 09:05:17 -耗时 : 3
2019-05-13 09:05:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:05:17 -<==      Total: 11
2019-05-13 09:05:17 -耗时 : 3
2019-05-13 09:05:17 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:05:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 09:05:17 -HTTP METHOD : GET
2019-05-13 09:05:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 09:05:17 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@799b8e8f]
2019-05-13 09:05:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-13 09:05:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 09:05:17 -<==      Total: 10
2019-05-13 09:05:17 -==>  Preparing: select count(*) from elec 
2019-05-13 09:05:17 -==> Parameters: 
2019-05-13 09:05:17 -<==      Total: 1
2019-05-13 09:05:17 -耗时 : 18
2019-05-13 09:05:17 -返回值 : com.bootdo.common.utils.PageUtils@7ac30b48
2019-05-13 09:05:46 -请求地址 : http://localhost:8081/sys/role
2019-05-13 09:05:46 -HTTP METHOD : GET
2019-05-13 09:05:46 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-05-13 09:05:46 -参数 : []
2019-05-13 09:05:46 -耗时 : 1
2019-05-13 09:05:46 -返回值 : system/role/role
2019-05-13 09:05:46 -请求地址 : http://localhost:8081/sys/role/list
2019-05-13 09:05:46 -HTTP METHOD : GET
2019-05-13 09:05:46 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-05-13 09:05:46 -参数 : []
2019-05-13 09:05:46 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-05-13 09:05:46 -==> Parameters: 
2019-05-13 09:05:46 -<==      Total: 10
2019-05-13 09:05:46 -耗时 : 51
2019-05-13 09:05:46 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-05-13 09:05:57 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-05-13 09:05:57 -HTTP METHOD : GET
2019-05-13 09:05:57 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-05-13 09:05:57 -参数 : [1, {}]
2019-05-13 09:05:57 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-05-13 09:05:57 -==> Parameters: 1(Long)
2019-05-13 09:05:57 -<==      Total: 1
2019-05-13 09:05:57 -耗时 : 4
2019-05-13 09:05:57 -返回值 : system/role/edit
2019-05-13 09:05:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:05:57 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 4(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-05-13 09:05:57.058(Timestamp)
2019-05-13 09:05:57 -<==    Updates: 1
2019-05-13 09:05:57 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-05-13 09:05:57 -HTTP METHOD : GET
2019-05-13 09:05:57 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-05-13 09:05:57 -参数 : [1]
2019-05-13 09:05:57 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-05-13 09:05:57 -==> Parameters: 
2019-05-13 09:05:57 -<==      Total: 109
2019-05-13 09:05:57 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-05-13 09:05:57 -==> Parameters: 1(Long)
2019-05-13 09:05:57 -<==      Total: 110
2019-05-13 09:05:57 -耗时 : 24
2019-05-13 09:05:57 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","state":{"selected":true},"text":"年统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","state":{"selected":true},"text":"月统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","state":{"selected":true},"text":"日统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-05-13 09:06:27 -请求地址 : http://localhost:8081/
2019-05-13 09:06:27 -HTTP METHOD : GET
2019-05-13 09:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-05-13 09:06:27 -参数 : [{}]
2019-05-13 09:06:27 -耗时 : 1
2019-05-13 09:06:27 -返回值 : redirect:/index
2019-05-13 09:06:27 -请求地址 : http://localhost:8081/login;JSESSIONID=7b5d2860-3d8b-4ebf-96d4-1b6699fc0343
2019-05-13 09:06:27 -HTTP METHOD : GET
2019-05-13 09:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 09:06:27 -参数 : [{}]
2019-05-13 09:06:27 -耗时 : 0
2019-05-13 09:06:27 -返回值 : login
2019-05-13 09:06:27 -请求地址 : http://localhost:8081/getVerify
2019-05-13 09:06:27 -HTTP METHOD : GET
2019-05-13 09:06:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 09:06:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1231dce3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5dff32f6]
2019-05-13 09:06:27 -4620
2019-05-13 09:06:27 -耗时 : 13
2019-05-13 09:06:27 -返回值 : null
2019-05-13 09:06:46 -请求地址 : http://localhost:8081/login
2019-05-13 09:06:46 -HTTP METHOD : POST
2019-05-13 09:06:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 09:06:46 -参数 : [超级管理员, 111111, 4620, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e1acb3]
2019-05-13 09:06:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 09:06:46 -==> Parameters: 超级管理员(String)
2019-05-13 09:06:46 -<==      Total: 0
2019-05-13 09:06:46 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 超级管理员, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:52)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$de6264e2.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 09:06:46 -耗时 : 126
2019-05-13 09:06:46 -返回值 : {msg=用户或密码错误, code=500}
2019-05-13 09:06:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:06:46 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 126(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 09:06:46.442(Timestamp)
2019-05-13 09:06:46 -<==    Updates: 1
2019-05-13 09:07:04 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 09:07:07 -请求地址 : http://localhost:8081/login
2019-05-13 09:07:07 -HTTP METHOD : POST
2019-05-13 09:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 09:07:07 -参数 : [admin, 111111, 4620, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1943cd76]
2019-05-13 09:07:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 09:07:07 -==> Parameters: admin(String)
2019-05-13 09:07:07 -<==      Total: 1
2019-05-13 09:07:07 -耗时 : 5
2019-05-13 09:07:07 -返回值 : {msg=操作成功, code=0}
2019-05-13 09:07:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:07:07 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 09:07:07.059(Timestamp)
2019-05-13 09:07:07 -请求地址 : http://localhost:8081/index
2019-05-13 09:07:07 -HTTP METHOD : GET
2019-05-13 09:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:07:07 -参数 : [{}]
2019-05-13 09:07:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:07:07 -==> Parameters: 1(Long)
2019-05-13 09:07:07 -<==      Total: 49
2019-05-13 09:07:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:07:07 -==> Parameters: 138(Long)
2019-05-13 09:07:07 -<==    Updates: 1
2019-05-13 09:07:07 -<==      Total: 1
2019-05-13 09:07:07 -耗时 : 175
2019-05-13 09:07:07 -返回值 : index_v1
2019-05-13 09:07:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:07:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 175(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:07:07.259(Timestamp)
2019-05-13 09:07:07 -<==    Updates: 1
2019-05-13 09:07:07 -请求地址 : http://localhost:8081/main
2019-05-13 09:07:07 -HTTP METHOD : GET
2019-05-13 09:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:07:07 -参数 : []
2019-05-13 09:07:07 -耗时 : 0
2019-05-13 09:07:07 -返回值 : main
2019-05-13 09:07:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:07:07 -HTTP METHOD : GET
2019-05-13 09:07:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:07:07 -参数 : []
2019-05-13 09:07:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:07:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:07:07 -请求地址 : http://localhost:8081/main
2019-05-13 09:07:07 -HTTP METHOD : GET
2019-05-13 09:07:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:07:07 -参数 : []
2019-05-13 09:07:07 -耗时 : 0
2019-05-13 09:07:07 -返回值 : main
2019-05-13 09:07:07 -<==      Total: 0
2019-05-13 09:07:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:07:07 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:07:07 -<==      Total: 1
2019-05-13 09:07:07 -耗时 : 124
2019-05-13 09:07:07 -返回值 : com.bootdo.common.utils.PageUtils@2deaa058
2019-05-13 09:07:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 09:07:14 -==> Parameters: 1(Long)
2019-05-13 09:07:14 -<==      Total: 93
2019-05-13 09:07:14 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-13 09:07:14 -HTTP METHOD : GET
2019-05-13 09:07:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-13 09:07:14 -参数 : []
2019-05-13 09:07:14 -耗时 : 0
2019-05-13 09:07:14 -返回值 : /moneyList/moneyList
2019-05-13 09:07:16 -请求地址 : http://localhost:8081/elec/elec
2019-05-13 09:07:16 -HTTP METHOD : GET
2019-05-13 09:07:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-13 09:07:16 -参数 : []
2019-05-13 09:07:16 -耗时 : 1
2019-05-13 09:07:16 -返回值 : elec/elec/elec
2019-05-13 09:07:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:16 -HTTP METHOD : GET
2019-05-13 09:07:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:16 -参数 : [userType]
2019-05-13 09:07:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:16 -==> Parameters: userType(String)
2019-05-13 09:07:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 09:07:16 -HTTP METHOD : GET
2019-05-13 09:07:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:16 -参数 : [elecType]
2019-05-13 09:07:16 -<==      Total: 4
2019-05-13 09:07:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:16 -耗时 : 2
2019-05-13 09:07:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:16 -==> Parameters: elecType(String)
2019-05-13 09:07:16 -<==      Total: 11
2019-05-13 09:07:16 -耗时 : 3
2019-05-13 09:07:16 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 09:07:16 -HTTP METHOD : GET
2019-05-13 09:07:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 09:07:16 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@c26bda3]
2019-05-13 09:07:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-13 09:07:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 09:07:16 -<==      Total: 10
2019-05-13 09:07:16 -==>  Preparing: select count(*) from elec 
2019-05-13 09:07:16 -==> Parameters: 
2019-05-13 09:07:16 -<==      Total: 1
2019-05-13 09:07:16 -耗时 : 4
2019-05-13 09:07:16 -返回值 : com.bootdo.common.utils.PageUtils@6c9f0187
2019-05-13 09:07:25 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-13 09:07:25 -HTTP METHOD : GET
2019-05-13 09:07:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-13 09:07:25 -参数 : []
2019-05-13 09:07:25 -耗时 : 1
2019-05-13 09:07:25 -返回值 : elec/elecInto/elecInto
2019-05-13 09:07:34 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 09:07:34 -HTTP METHOD : GET
2019-05-13 09:07:34 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 09:07:34 -参数 : []
2019-05-13 09:07:34 -耗时 : 0
2019-05-13 09:07:34 -返回值 : charts/countYY
2019-05-13 09:07:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:35 -HTTP METHOD : GET
2019-05-13 09:07:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:35 -参数 : [userType]
2019-05-13 09:07:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:35 -==> Parameters: userType(String)
2019-05-13 09:07:35 -<==      Total: 4
2019-05-13 09:07:35 -耗时 : 3
2019-05-13 09:07:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 09:07:36 -HTTP METHOD : GET
2019-05-13 09:07:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 09:07:36 -参数 : []
2019-05-13 09:07:36 -耗时 : 7
2019-05-13 09:07:36 -返回值 : charts/tableElecYY
2019-05-13 09:07:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:36 -HTTP METHOD : GET
2019-05-13 09:07:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:36 -参数 : [userType]
2019-05-13 09:07:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:36 -==> Parameters: userType(String)
2019-05-13 09:07:36 -<==      Total: 4
2019-05-13 09:07:36 -耗时 : 4
2019-05-13 09:07:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:37 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 09:07:37 -HTTP METHOD : GET
2019-05-13 09:07:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 09:07:37 -参数 : []
2019-05-13 09:07:37 -耗时 : 12
2019-05-13 09:07:37 -返回值 : charts/tableWaterYY
2019-05-13 09:07:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:37 -HTTP METHOD : GET
2019-05-13 09:07:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:37 -参数 : [userType]
2019-05-13 09:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:37 -==> Parameters: userType(String)
2019-05-13 09:07:37 -<==      Total: 4
2019-05-13 09:07:37 -耗时 : 3
2019-05-13 09:07:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:38 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 09:07:38 -HTTP METHOD : GET
2019-05-13 09:07:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 09:07:38 -参数 : []
2019-05-13 09:07:38 -耗时 : 13
2019-05-13 09:07:38 -返回值 : charts/tableHeatYY
2019-05-13 09:07:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:38 -HTTP METHOD : GET
2019-05-13 09:07:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:38 -参数 : [userType]
2019-05-13 09:07:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:38 -==> Parameters: userType(String)
2019-05-13 09:07:38 -<==      Total: 4
2019-05-13 09:07:38 -耗时 : 3
2019-05-13 09:07:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 09:07:39 -HTTP METHOD : GET
2019-05-13 09:07:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 09:07:39 -参数 : []
2019-05-13 09:07:39 -耗时 : 1
2019-05-13 09:07:39 -返回值 : charts/tableWaterYY
2019-05-13 09:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:39 -HTTP METHOD : GET
2019-05-13 09:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:39 -参数 : [userType]
2019-05-13 09:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:39 -==> Parameters: userType(String)
2019-05-13 09:07:39 -<==      Total: 4
2019-05-13 09:07:39 -耗时 : 3
2019-05-13 09:07:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:39 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 09:07:39 -HTTP METHOD : GET
2019-05-13 09:07:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 09:07:39 -参数 : []
2019-05-13 09:07:39 -耗时 : 0
2019-05-13 09:07:39 -返回值 : charts/tableElecYY
2019-05-13 09:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:39 -HTTP METHOD : GET
2019-05-13 09:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:39 -参数 : [userType]
2019-05-13 09:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:39 -==> Parameters: userType(String)
2019-05-13 09:07:39 -<==      Total: 4
2019-05-13 09:07:39 -耗时 : 2
2019-05-13 09:07:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-13 09:07:40 -HTTP METHOD : GET
2019-05-13 09:07:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-13 09:07:40 -参数 : []
2019-05-13 09:07:40 -耗时 : 5
2019-05-13 09:07:40 -返回值 : charts/tableElecMM
2019-05-13 09:07:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:41 -HTTP METHOD : GET
2019-05-13 09:07:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:41 -参数 : [userType]
2019-05-13 09:07:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:41 -==> Parameters: userType(String)
2019-05-13 09:07:41 -<==      Total: 4
2019-05-13 09:07:41 -耗时 : 2
2019-05-13 09:07:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:43 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 09:07:43 -HTTP METHOD : GET
2019-05-13 09:07:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 09:07:43 -参数 : []
2019-05-13 09:07:43 -耗时 : 12
2019-05-13 09:07:43 -返回值 : charts/countMM
2019-05-13 09:07:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:43 -HTTP METHOD : GET
2019-05-13 09:07:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:43 -参数 : [userType]
2019-05-13 09:07:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:43 -==> Parameters: userType(String)
2019-05-13 09:07:43 -<==      Total: 4
2019-05-13 09:07:43 -耗时 : 2
2019-05-13 09:07:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:07:43 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:07:43 -HTTP METHOD : GET
2019-05-13 09:07:43 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:07:43 -参数 : []
2019-05-13 09:07:43 -耗时 : 8
2019-05-13 09:07:43 -返回值 : charts/tableDD
2019-05-13 09:07:45 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-13 09:07:45 -HTTP METHOD : GET
2019-05-13 09:07:45 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-13 09:07:45 -参数 : []
2019-05-13 09:07:45 -耗时 : 5
2019-05-13 09:07:45 -返回值 : charts/tableWaterMM
2019-05-13 09:07:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:07:45 -HTTP METHOD : GET
2019-05-13 09:07:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:07:45 -参数 : [userType]
2019-05-13 09:07:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:07:45 -==> Parameters: userType(String)
2019-05-13 09:07:45 -<==      Total: 4
2019-05-13 09:07:45 -耗时 : 3
2019-05-13 09:07:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:12:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:12:16 -HTTP METHOD : GET
2019-05-13 09:12:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:12:16 -参数 : []
2019-05-13 09:12:16 -耗时 : 0
2019-05-13 09:12:16 -返回值 : system/dept/deptTree
2019-05-13 09:12:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:12:17 -HTTP METHOD : GET
2019-05-13 09:12:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:12:17 -参数 : []
2019-05-13 09:12:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:12:17 -==> Parameters: 
2019-05-13 09:12:17 -<==      Total: 3
2019-05-13 09:12:17 -耗时 : 3
2019-05-13 09:12:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:12:19 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:12:19 -HTTP METHOD : POST
2019-05-13 09:12:19 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:12:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5608841d, com.bootdo.moneyLog.vo.WaterLogVo@2758f2ce, com.bootdo.moneyLog.vo.HeatLogVo@4d63e535]
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:12:19 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:12:19 -<==      Total: 1
2019-05-13 09:12:19 -耗时 : 141
2019-05-13 09:12:19 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:21:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 388]
2019-05-13 09:22:40 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:22:40 -HTTP METHOD : POST
2019-05-13 09:22:40 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:22:40 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5ca1b9a3, com.bootdo.moneyLog.vo.WaterLogVo@2d297d27, com.bootdo.moneyLog.vo.HeatLogVo@5f93c9c4]
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:22:40 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:22:40 -<==      Total: 1
2019-05-13 09:22:40 -耗时 : 74
2019-05-13 09:22:40 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:33:35 -请求地址 : http://localhost:8081/index
2019-05-13 09:33:35 -HTTP METHOD : GET
2019-05-13 09:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:33:35 -参数 : [{}]
2019-05-13 09:33:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:33:35 -==> Parameters: 1(Long)
2019-05-13 09:33:35 -<==      Total: 49
2019-05-13 09:33:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:33:35 -==> Parameters: 138(Long)
2019-05-13 09:33:35 -<==      Total: 1
2019-05-13 09:33:35 -耗时 : 15
2019-05-13 09:33:35 -返回值 : index_v1
2019-05-13 09:33:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:33:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:33:35.446(Timestamp)
2019-05-13 09:33:35 -<==    Updates: 1
2019-05-13 09:33:35 -请求地址 : http://localhost:8081/main
2019-05-13 09:33:35 -HTTP METHOD : GET
2019-05-13 09:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:33:35 -参数 : []
2019-05-13 09:33:35 -耗时 : 0
2019-05-13 09:33:35 -返回值 : main
2019-05-13 09:33:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:33:35 -HTTP METHOD : GET
2019-05-13 09:33:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:33:35 -参数 : []
2019-05-13 09:33:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:33:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:33:35 -<==      Total: 0
2019-05-13 09:33:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:33:35 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:33:35 -<==      Total: 1
2019-05-13 09:33:35 -耗时 : 7
2019-05-13 09:33:35 -返回值 : com.bootdo.common.utils.PageUtils@2c92f07d
2019-05-13 09:33:35 -请求地址 : http://localhost:8081/main
2019-05-13 09:33:35 -HTTP METHOD : GET
2019-05-13 09:33:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:33:35 -参数 : []
2019-05-13 09:33:35 -耗时 : 0
2019-05-13 09:33:35 -返回值 : main
2019-05-13 09:33:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 09:33:44 -==> Parameters: 1(Long)
2019-05-13 09:33:44 -<==      Total: 93
2019-05-13 09:33:44 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 09:33:44 -HTTP METHOD : GET
2019-05-13 09:33:44 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 09:33:44 -参数 : []
2019-05-13 09:33:44 -耗时 : 0
2019-05-13 09:33:44 -返回值 : charts/countMM
2019-05-13 09:33:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:33:45 -HTTP METHOD : GET
2019-05-13 09:33:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:33:45 -参数 : [userType]
2019-05-13 09:33:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:33:45 -==> Parameters: userType(String)
2019-05-13 09:33:45 -<==      Total: 4
2019-05-13 09:33:45 -耗时 : 3
2019-05-13 09:33:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:33:45 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:33:45 -HTTP METHOD : GET
2019-05-13 09:33:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:33:45 -参数 : []
2019-05-13 09:33:45 -耗时 : 0
2019-05-13 09:33:45 -返回值 : charts/tableDD
2019-05-13 09:34:54 -请求地址 : http://localhost:8081/index
2019-05-13 09:34:54 -HTTP METHOD : GET
2019-05-13 09:34:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:34:54 -参数 : [{}]
2019-05-13 09:34:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:34:54 -==> Parameters: 1(Long)
2019-05-13 09:34:54 -<==      Total: 49
2019-05-13 09:34:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:34:54 -==> Parameters: 138(Long)
2019-05-13 09:34:54 -<==      Total: 1
2019-05-13 09:34:54 -耗时 : 13
2019-05-13 09:34:54 -返回值 : index_v1
2019-05-13 09:34:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:34:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:34:54.831(Timestamp)
2019-05-13 09:34:54 -请求地址 : http://localhost:8081/main
2019-05-13 09:34:54 -HTTP METHOD : GET
2019-05-13 09:34:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:34:54 -参数 : []
2019-05-13 09:34:54 -耗时 : 1
2019-05-13 09:34:54 -返回值 : main
2019-05-13 09:34:54 -<==    Updates: 1
2019-05-13 09:34:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:34:55 -HTTP METHOD : GET
2019-05-13 09:34:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:34:55 -参数 : []
2019-05-13 09:34:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:34:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:34:55 -<==      Total: 0
2019-05-13 09:34:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:34:55 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:34:55 -<==      Total: 1
2019-05-13 09:34:55 -耗时 : 6
2019-05-13 09:34:55 -返回值 : com.bootdo.common.utils.PageUtils@554ec31b
2019-05-13 09:34:55 -请求地址 : http://localhost:8081/main
2019-05-13 09:34:55 -HTTP METHOD : GET
2019-05-13 09:34:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:34:55 -参数 : []
2019-05-13 09:34:55 -耗时 : 0
2019-05-13 09:34:55 -返回值 : main
2019-05-13 09:34:58 -请求地址 : http://localhost:8081/index
2019-05-13 09:34:58 -HTTP METHOD : GET
2019-05-13 09:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:34:58 -参数 : [{}]
2019-05-13 09:34:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:34:58 -==> Parameters: 1(Long)
2019-05-13 09:34:58 -<==      Total: 49
2019-05-13 09:34:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:34:58 -==> Parameters: 138(Long)
2019-05-13 09:34:58 -<==      Total: 1
2019-05-13 09:34:58 -耗时 : 12
2019-05-13 09:34:58 -返回值 : index_v1
2019-05-13 09:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:34:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:34:58.037(Timestamp)
2019-05-13 09:34:58 -<==    Updates: 1
2019-05-13 09:34:58 -请求地址 : http://localhost:8081/main
2019-05-13 09:34:58 -HTTP METHOD : GET
2019-05-13 09:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:34:58 -参数 : []
2019-05-13 09:34:58 -耗时 : 3
2019-05-13 09:34:58 -返回值 : main
2019-05-13 09:34:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:34:58 -HTTP METHOD : GET
2019-05-13 09:34:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:34:58 -参数 : []
2019-05-13 09:34:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:34:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:34:58 -<==      Total: 0
2019-05-13 09:34:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:34:58 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:34:58 -<==      Total: 1
2019-05-13 09:34:58 -耗时 : 5
2019-05-13 09:34:58 -返回值 : com.bootdo.common.utils.PageUtils@62c68e89
2019-05-13 09:34:58 -请求地址 : http://localhost:8081/main
2019-05-13 09:34:58 -HTTP METHOD : GET
2019-05-13 09:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:34:58 -参数 : []
2019-05-13 09:34:58 -耗时 : 0
2019-05-13 09:34:58 -返回值 : main
2019-05-13 09:35:08 -请求地址 : http://localhost:8081/index
2019-05-13 09:35:08 -HTTP METHOD : GET
2019-05-13 09:35:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:35:08 -参数 : [{}]
2019-05-13 09:35:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:35:08 -==> Parameters: 1(Long)
2019-05-13 09:35:08 -<==      Total: 49
2019-05-13 09:35:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:35:08 -==> Parameters: 138(Long)
2019-05-13 09:35:08 -<==      Total: 1
2019-05-13 09:35:08 -耗时 : 14
2019-05-13 09:35:08 -返回值 : index_v1
2019-05-13 09:35:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:35:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:35:08.161(Timestamp)
2019-05-13 09:35:08 -请求地址 : http://localhost:8081/main
2019-05-13 09:35:08 -HTTP METHOD : GET
2019-05-13 09:35:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:35:08 -参数 : []
2019-05-13 09:35:08 -耗时 : 3
2019-05-13 09:35:08 -返回值 : main
2019-05-13 09:35:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:35:08 -HTTP METHOD : GET
2019-05-13 09:35:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:35:08 -参数 : []
2019-05-13 09:35:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:35:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:35:08 -<==      Total: 0
2019-05-13 09:35:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:35:08 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:35:08 -<==      Total: 1
2019-05-13 09:35:08 -耗时 : 8
2019-05-13 09:35:08 -返回值 : com.bootdo.common.utils.PageUtils@268b3009
2019-05-13 09:35:08 -请求地址 : http://localhost:8081/main
2019-05-13 09:35:08 -HTTP METHOD : GET
2019-05-13 09:35:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:35:08 -参数 : []
2019-05-13 09:35:08 -耗时 : 0
2019-05-13 09:35:08 -返回值 : main
2019-05-13 09:35:08 -<==    Updates: 1
2019-05-13 09:35:15 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 09:35:15 -HTTP METHOD : GET
2019-05-13 09:35:15 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 09:35:15 -参数 : []
2019-05-13 09:35:15 -耗时 : 0
2019-05-13 09:35:15 -返回值 : charts/countMM
2019-05-13 09:35:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:35:16 -HTTP METHOD : GET
2019-05-13 09:35:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:35:16 -参数 : [userType]
2019-05-13 09:35:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:35:16 -==> Parameters: userType(String)
2019-05-13 09:35:16 -<==      Total: 4
2019-05-13 09:35:16 -耗时 : 3
2019-05-13 09:35:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:35:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-13 09:35:17 -HTTP METHOD : GET
2019-05-13 09:35:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-13 09:35:17 -参数 : []
2019-05-13 09:35:17 -耗时 : 1
2019-05-13 09:35:17 -返回值 : charts/tableElecMM
2019-05-13 09:35:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:35:17 -HTTP METHOD : GET
2019-05-13 09:35:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:35:17 -参数 : [userType]
2019-05-13 09:35:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:35:17 -==> Parameters: userType(String)
2019-05-13 09:35:17 -<==      Total: 4
2019-05-13 09:35:17 -耗时 : 3
2019-05-13 09:35:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:35:17 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:35:17 -HTTP METHOD : GET
2019-05-13 09:35:17 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:35:17 -参数 : []
2019-05-13 09:35:17 -耗时 : 1
2019-05-13 09:35:17 -返回值 : charts/tableDD
2019-05-13 09:35:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:35:24 -HTTP METHOD : GET
2019-05-13 09:35:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:35:24 -参数 : []
2019-05-13 09:35:24 -耗时 : 1
2019-05-13 09:35:24 -返回值 : system/dept/deptTree
2019-05-13 09:35:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:35:25 -HTTP METHOD : GET
2019-05-13 09:35:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:35:25 -参数 : []
2019-05-13 09:35:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:35:25 -==> Parameters: 
2019-05-13 09:35:25 -<==      Total: 3
2019-05-13 09:35:25 -耗时 : 2
2019-05-13 09:35:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:35:27 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:35:27 -HTTP METHOD : POST
2019-05-13 09:35:27 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:35:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@698af42d, com.bootdo.moneyLog.vo.WaterLogVo@326b2c34, com.bootdo.moneyLog.vo.HeatLogVo@62584d98]
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:35:27 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:35:27 -<==      Total: 1
2019-05-13 09:35:27 -耗时 : 97
2019-05-13 09:35:27 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:51:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 820]
2019-05-13 09:53:41 -Validating all active sessions...
2019-05-13 09:53:41 -Finished session validation.  No sessions were stopped.
2019-05-13 09:54:00 -请求地址 : http://localhost:8081/index
2019-05-13 09:54:00 -HTTP METHOD : GET
2019-05-13 09:54:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:54:00 -参数 : [{}]
2019-05-13 09:54:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:54:00 -==> Parameters: 1(Long)
2019-05-13 09:54:00 -<==      Total: 49
2019-05-13 09:54:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:54:00 -==> Parameters: 138(Long)
2019-05-13 09:54:00 -<==      Total: 1
2019-05-13 09:54:00 -耗时 : 16
2019-05-13 09:54:00 -返回值 : index_v1
2019-05-13 09:54:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:54:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:54:00.689(Timestamp)
2019-05-13 09:54:00 -请求地址 : http://localhost:8081/main
2019-05-13 09:54:00 -HTTP METHOD : GET
2019-05-13 09:54:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:54:00 -参数 : []
2019-05-13 09:54:00 -耗时 : 0
2019-05-13 09:54:00 -返回值 : main
2019-05-13 09:54:00 -<==    Updates: 1
2019-05-13 09:54:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:54:00 -HTTP METHOD : GET
2019-05-13 09:54:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:54:00 -参数 : []
2019-05-13 09:54:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:54:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:54:00 -<==      Total: 0
2019-05-13 09:54:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:54:00 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:54:00 -<==      Total: 1
2019-05-13 09:54:00 -耗时 : 5
2019-05-13 09:54:00 -返回值 : com.bootdo.common.utils.PageUtils@673075de
2019-05-13 09:54:01 -请求地址 : http://localhost:8081/main
2019-05-13 09:54:01 -HTTP METHOD : GET
2019-05-13 09:54:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:54:01 -参数 : []
2019-05-13 09:54:01 -耗时 : 0
2019-05-13 09:54:01 -返回值 : main
2019-05-13 09:54:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 09:54:13 -==> Parameters: 1(Long)
2019-05-13 09:54:13 -<==      Total: 93
2019-05-13 09:54:13 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:54:13 -HTTP METHOD : GET
2019-05-13 09:54:13 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:54:13 -参数 : []
2019-05-13 09:54:13 -耗时 : 1
2019-05-13 09:54:13 -返回值 : charts/tableDD
2019-05-13 09:54:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:54:19 -HTTP METHOD : GET
2019-05-13 09:54:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:54:19 -参数 : []
2019-05-13 09:54:19 -耗时 : 0
2019-05-13 09:54:19 -返回值 : system/dept/deptTree
2019-05-13 09:54:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:54:19 -HTTP METHOD : GET
2019-05-13 09:54:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:54:19 -参数 : []
2019-05-13 09:54:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:54:19 -==> Parameters: 
2019-05-13 09:54:19 -<==      Total: 3
2019-05-13 09:54:19 -耗时 : 3
2019-05-13 09:54:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:54:22 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:54:22 -HTTP METHOD : POST
2019-05-13 09:54:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:54:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7265d0b, com.bootdo.moneyLog.vo.WaterLogVo@3c4c1d21, com.bootdo.moneyLog.vo.HeatLogVo@6938aa09]
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:54:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:54:22 -<==      Total: 1
2019-05-13 09:54:22 -耗时 : 87
2019-05-13 09:54:22 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:56:06 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:56:06 -HTTP METHOD : POST
2019-05-13 09:56:06 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:56:06 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2f6da837, com.bootdo.moneyLog.vo.WaterLogVo@3215622c, com.bootdo.moneyLog.vo.HeatLogVo@324c4b17]
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:56:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:56:06 -<==      Total: 1
2019-05-13 09:56:06 -耗时 : 69
2019-05-13 09:56:06 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:57:18 -请求地址 : http://localhost:8081/index
2019-05-13 09:57:18 -HTTP METHOD : GET
2019-05-13 09:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:57:18 -参数 : [{}]
2019-05-13 09:57:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:57:18 -==> Parameters: 1(Long)
2019-05-13 09:57:18 -<==      Total: 49
2019-05-13 09:57:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:57:18 -==> Parameters: 138(Long)
2019-05-13 09:57:18 -<==      Total: 1
2019-05-13 09:57:18 -耗时 : 12
2019-05-13 09:57:18 -返回值 : index_v1
2019-05-13 09:57:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:57:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:57:18.249(Timestamp)
2019-05-13 09:57:18 -请求地址 : http://localhost:8081/main
2019-05-13 09:57:18 -HTTP METHOD : GET
2019-05-13 09:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:57:18 -参数 : []
2019-05-13 09:57:18 -耗时 : 0
2019-05-13 09:57:18 -返回值 : main
2019-05-13 09:57:18 -<==    Updates: 1
2019-05-13 09:57:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:57:18 -HTTP METHOD : GET
2019-05-13 09:57:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:57:18 -参数 : []
2019-05-13 09:57:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:57:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:57:18 -<==      Total: 0
2019-05-13 09:57:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:57:18 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:57:18 -<==      Total: 1
2019-05-13 09:57:18 -耗时 : 10
2019-05-13 09:57:18 -返回值 : com.bootdo.common.utils.PageUtils@3c82a83b
2019-05-13 09:57:18 -请求地址 : http://localhost:8081/main
2019-05-13 09:57:18 -HTTP METHOD : GET
2019-05-13 09:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:57:18 -参数 : []
2019-05-13 09:57:18 -耗时 : 0
2019-05-13 09:57:18 -返回值 : main
2019-05-13 09:58:04 -请求地址 : http://localhost:8081/index
2019-05-13 09:58:04 -HTTP METHOD : GET
2019-05-13 09:58:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:58:04 -参数 : [{}]
2019-05-13 09:58:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:58:04 -==> Parameters: 1(Long)
2019-05-13 09:58:04 -<==      Total: 49
2019-05-13 09:58:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:58:04 -==> Parameters: 138(Long)
2019-05-13 09:58:04 -<==      Total: 1
2019-05-13 09:58:04 -耗时 : 12
2019-05-13 09:58:04 -返回值 : index_v1
2019-05-13 09:58:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:58:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:58:04.76(Timestamp)
2019-05-13 09:58:04 -请求地址 : http://localhost:8081/main
2019-05-13 09:58:04 -HTTP METHOD : GET
2019-05-13 09:58:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:58:04 -参数 : []
2019-05-13 09:58:04 -耗时 : 1
2019-05-13 09:58:04 -返回值 : main
2019-05-13 09:58:04 -<==    Updates: 1
2019-05-13 09:58:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:58:04 -HTTP METHOD : GET
2019-05-13 09:58:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:58:04 -参数 : []
2019-05-13 09:58:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:58:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:58:05 -<==      Total: 0
2019-05-13 09:58:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:58:05 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:58:05 -<==      Total: 1
2019-05-13 09:58:05 -耗时 : 6
2019-05-13 09:58:05 -返回值 : com.bootdo.common.utils.PageUtils@600648fe
2019-05-13 09:58:05 -请求地址 : http://localhost:8081/main
2019-05-13 09:58:05 -HTTP METHOD : GET
2019-05-13 09:58:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:58:05 -参数 : []
2019-05-13 09:58:05 -耗时 : 0
2019-05-13 09:58:05 -返回值 : main
2019-05-13 09:58:07 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:58:07 -HTTP METHOD : GET
2019-05-13 09:58:07 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:58:07 -参数 : []
2019-05-13 09:58:07 -耗时 : 0
2019-05-13 09:58:07 -返回值 : charts/tableDD
2019-05-13 09:58:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:58:13 -HTTP METHOD : GET
2019-05-13 09:58:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:58:13 -参数 : []
2019-05-13 09:58:13 -耗时 : 1
2019-05-13 09:58:13 -返回值 : system/dept/deptTree
2019-05-13 09:58:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:58:13 -HTTP METHOD : GET
2019-05-13 09:58:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:58:13 -参数 : []
2019-05-13 09:58:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:58:13 -==> Parameters: 
2019-05-13 09:58:13 -<==      Total: 3
2019-05-13 09:58:13 -耗时 : 2
2019-05-13 09:58:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:58:15 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:58:15 -HTTP METHOD : POST
2019-05-13 09:58:15 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:58:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@601edd18, com.bootdo.moneyLog.vo.WaterLogVo@4fa9ce33, com.bootdo.moneyLog.vo.HeatLogVo@5a15e5a3]
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:58:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:58:15 -<==      Total: 1
2019-05-13 09:58:15 -耗时 : 82
2019-05-13 09:58:15 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 09:59:32 -请求地址 : http://localhost:8081/index
2019-05-13 09:59:32 -HTTP METHOD : GET
2019-05-13 09:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 09:59:32 -参数 : [{}]
2019-05-13 09:59:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 09:59:32 -==> Parameters: 1(Long)
2019-05-13 09:59:32 -<==      Total: 49
2019-05-13 09:59:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 09:59:32 -==> Parameters: 138(Long)
2019-05-13 09:59:32 -<==      Total: 1
2019-05-13 09:59:32 -耗时 : 15
2019-05-13 09:59:32 -返回值 : index_v1
2019-05-13 09:59:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 09:59:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 09:59:32.626(Timestamp)
2019-05-13 09:59:32 -请求地址 : http://localhost:8081/main
2019-05-13 09:59:32 -HTTP METHOD : GET
2019-05-13 09:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:59:32 -参数 : []
2019-05-13 09:59:32 -耗时 : 1
2019-05-13 09:59:32 -返回值 : main
2019-05-13 09:59:32 -<==    Updates: 1
2019-05-13 09:59:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 09:59:32 -HTTP METHOD : GET
2019-05-13 09:59:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 09:59:32 -参数 : []
2019-05-13 09:59:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 09:59:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 09:59:32 -<==      Total: 0
2019-05-13 09:59:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 09:59:32 -==> Parameters: 1(Long), 0(String)
2019-05-13 09:59:32 -<==      Total: 1
2019-05-13 09:59:32 -耗时 : 7
2019-05-13 09:59:32 -返回值 : com.bootdo.common.utils.PageUtils@ebfbfc4
2019-05-13 09:59:32 -请求地址 : http://localhost:8081/main
2019-05-13 09:59:32 -HTTP METHOD : GET
2019-05-13 09:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 09:59:32 -参数 : []
2019-05-13 09:59:32 -耗时 : 0
2019-05-13 09:59:32 -返回值 : main
2019-05-13 09:59:35 -请求地址 : http://localhost:8081/charts/countDD
2019-05-13 09:59:35 -HTTP METHOD : GET
2019-05-13 09:59:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-13 09:59:35 -参数 : []
2019-05-13 09:59:35 -耗时 : 0
2019-05-13 09:59:35 -返回值 : charts/countDD
2019-05-13 09:59:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 09:59:35 -HTTP METHOD : GET
2019-05-13 09:59:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 09:59:35 -参数 : [userType]
2019-05-13 09:59:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 09:59:35 -==> Parameters: userType(String)
2019-05-13 09:59:35 -<==      Total: 4
2019-05-13 09:59:35 -耗时 : 3
2019-05-13 09:59:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 09:59:37 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 09:59:37 -HTTP METHOD : GET
2019-05-13 09:59:37 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 09:59:37 -参数 : []
2019-05-13 09:59:37 -耗时 : 0
2019-05-13 09:59:37 -返回值 : charts/tableDD
2019-05-13 09:59:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 09:59:43 -HTTP METHOD : GET
2019-05-13 09:59:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 09:59:43 -参数 : []
2019-05-13 09:59:43 -耗时 : 1
2019-05-13 09:59:43 -返回值 : system/dept/deptTree
2019-05-13 09:59:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 09:59:44 -HTTP METHOD : GET
2019-05-13 09:59:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 09:59:44 -参数 : []
2019-05-13 09:59:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 09:59:44 -==> Parameters: 
2019-05-13 09:59:44 -<==      Total: 3
2019-05-13 09:59:44 -耗时 : 4
2019-05-13 09:59:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 09:59:45 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 09:59:45 -HTTP METHOD : POST
2019-05-13 09:59:45 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 09:59:45 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@633be31d, com.bootdo.moneyLog.vo.WaterLogVo@7cd0f7c8, com.bootdo.moneyLog.vo.HeatLogVo@316afcc4]
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 09:59:45 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 09:59:45 -<==      Total: 1
2019-05-13 09:59:45 -耗时 : 70
2019-05-13 09:59:45 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=70080, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=70200, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=4, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=2, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 10:04:22 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-05-13 10:04:22 -HTTP METHOD : GET
2019-05-13 10:04:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-05-13 10:04:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7609d1f4, com.bootdo.moneyLog.vo.HeatLogVo@39937ad3, com.bootdo.moneyLog.vo.WaterLogVo@2c7bd4c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1de8445e]
2019-05-13 10:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 10:04:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 10:04:23 -<==      Total: 4
2019-05-13 10:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 10:04:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 10:04:23 -<==      Total: 1
2019-05-13 10:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 10:04:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 10:04:23 -<==      Total: 1
2019-05-13 10:04:23 -耗时 : 1255
2019-05-13 10:04:23 -返回值 : null
2019-05-13 10:15:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 10:15:34 -==> Parameters: 1(Long)
2019-05-13 10:15:34 -<==      Total: 93
2019-05-13 10:15:34 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 10:15:34 -HTTP METHOD : GET
2019-05-13 10:15:34 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 10:15:34 -参数 : []
2019-05-13 10:15:34 -耗时 : 0
2019-05-13 10:15:34 -返回值 : charts/countMM
2019-05-13 10:15:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 10:15:34 -HTTP METHOD : GET
2019-05-13 10:15:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 10:15:34 -参数 : [userType]
2019-05-13 10:15:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 10:15:34 -==> Parameters: userType(String)
2019-05-13 10:15:34 -<==      Total: 4
2019-05-13 10:15:34 -耗时 : 3
2019-05-13 10:15:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 10:15:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 10:15:47 -HTTP METHOD : GET
2019-05-13 10:15:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 10:15:47 -参数 : []
2019-05-13 10:15:47 -耗时 : 0
2019-05-13 10:15:47 -返回值 : system/dept/deptTree
2019-05-13 10:15:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 10:15:47 -HTTP METHOD : GET
2019-05-13 10:15:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 10:15:47 -参数 : []
2019-05-13 10:15:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 10:15:47 -==> Parameters: 
2019-05-13 10:15:47 -<==      Total: 3
2019-05-13 10:15:47 -耗时 : 3
2019-05-13 10:15:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 10:15:50 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:15:50 -HTTP METHOD : POST
2019-05-13 10:15:50 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:15:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@ecb02d5, com.bootdo.moneyLog.vo.WaterLogVo@118fedd7, com.bootdo.moneyLog.vo.HeatLogVo@73fad231]
2019-05-13 10:15:50 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:15:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:15:50 -<==      Total: 1
2019-05-13 10:15:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:15:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:15:50 -<==      Total: 1
2019-05-13 10:15:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:15:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:15:50 -<==      Total: 1
2019-05-13 10:15:50 -==>  Preparing: SELECT SUM(ELEC_MONEY) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:15:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:15:50 -<==      Total: 1
2019-05-13 10:15:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 10:15:50 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.countMMController.getCountMM(countMMController.java:60)
	at com.bootdo.charts.controller.countMMController$$FastClassBySpringCGLIB$$81fa892e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor165.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countMMController$$EnhancerBySpringCGLIB$$770f3c6c.getCountMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 10:15:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countMM/getCountMM(String), java.lang.NullPointerException(String), null, 2019-05-13 10:15:50.12(Timestamp)
2019-05-13 10:15:50 -<==    Updates: 1
2019-05-13 10:21:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(10)-CONNECTED(10)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 120], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 20], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1250]
2019-05-13 10:27:37 -Starting BootdoApplication on PC-201905091110 with PID 39780 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 10:27:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 10:27:37 -The following profiles are active: dev
2019-05-13 10:27:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 10:27:37 CST 2019]; root of context hierarchy
2019-05-13 10:27:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 10:27:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$876302d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$facf5ed4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 10:27:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 10:27:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 10:27:52 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 10:27:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 10:27:52 -Starting service [Tomcat]
2019-05-13 10:27:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 10:27:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 10:27:52 -Initializing Spring embedded WebApplicationContext
2019-05-13 10:27:52 -Root WebApplicationContext: initialization completed in 15286 ms
2019-05-13 10:27:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 10:27:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 10:27:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 10:27:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 10:27:54 -Filter xssFilter was not registered (disabled)
2019-05-13 10:27:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 10:27:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 10:27:54 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 10:27:54 -Servlet dispatcherServlet mapped to [/]
2019-05-13 10:28:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 10:27:37 CST 2019]; root of context hierarchy
2019-05-13 10:28:07 -Using default implementation for ThreadExecutor
2019-05-13 10:28:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 10:28:07 -Quartz Scheduler v.2.2.1 created.
2019-05-13 10:28:07 -RAMJobStore initialized.
2019-05-13 10:28:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 10:28:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 10:28:07 -Quartz scheduler version: 2.2.1
2019-05-13 10:28:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@799c8758
2019-05-13 10:28:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 10:28:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 10:28:12 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 10:28:12 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 10:28:12 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 10:28:12 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 10:28:12 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 10:28:12 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 10:28:12 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 10:28:12 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 10:28:12 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 10:28:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 10:28:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 10:28:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 10:28:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 10:28:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 10:28:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 10:28:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 10:28:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 10:28:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 10:28:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 10:28:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 10:28:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 10:28:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 10:28:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 10:28:12 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 10:28:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 10:28:12 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 10:28:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 10:28:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 10:28:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 10:28:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 10:28:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 10:28:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 10:28:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 10:28:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 10:28:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 10:28:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 10:28:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 10:28:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 10:28:12 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 10:28:12 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 10:28:12 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 10:28:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 10:28:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 10:28:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 10:28:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 10:28:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 10:28:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 10:28:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 10:28:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 10:28:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 10:28:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 10:28:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 10:28:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 10:28:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 10:28:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 10:28:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 10:28:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 10:28:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 10:28:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 10:28:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 10:28:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 10:28:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 10:28:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 10:28:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 10:28:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 10:28:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 10:28:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 10:28:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 10:28:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 10:28:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 10:28:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 10:28:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 10:28:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 10:28:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 10:28:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 10:28:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 10:28:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 10:28:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 10:28:12 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 10:28:12 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 10:28:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 10:28:12 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 10:28:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 10:28:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 10:28:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 10:28:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 10:28:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 10:28:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 10:28:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 10:28:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 10:28:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 10:27:37 CST 2019]; root of context hierarchy
2019-05-13 10:28:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 10:28:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 10:28:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 10:28:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 10:28:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 10:28:17 -Registering beans for JMX exposure on startup
2019-05-13 10:28:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 10:28:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 10:28:17 -Starting beans in phase 2147483647
2019-05-13 10:28:17 -Context refreshed
2019-05-13 10:28:17 -Found 1 custom documentation plugin(s)
2019-05-13 10:28:17 -Scanning for api listing references
2019-05-13 10:28:18 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 10:28:18 -Generating unique operation named: removeUsingPOST_1
2019-05-13 10:28:18 -Generating unique operation named: addUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: editUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: listUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_2
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_3
2019-05-13 10:28:19 -Generating unique operation named: saveUsingPOST_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPOST_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPUT_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 10:28:19 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 10:28:19 -Generating unique operation named: addUsingGET_2
2019-05-13 10:28:19 -Generating unique operation named: editUsingGET_2
2019-05-13 10:28:19 -Generating unique operation named: listUsingGET_2
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_4
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_5
2019-05-13 10:28:19 -Generating unique operation named: saveUsingPOST_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPOST_2
2019-05-13 10:28:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: addUsingGET_3
2019-05-13 10:28:19 -Generating unique operation named: editUsingGET_3
2019-05-13 10:28:19 -Generating unique operation named: listUsingGET_3
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_6
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_7
2019-05-13 10:28:19 -Generating unique operation named: saveUsingPOST_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingGET_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPOST_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPUT_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 10:28:19 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 10:28:19 -Generating unique operation named: addUsingGET_4
2019-05-13 10:28:19 -Generating unique operation named: editUsingGET_4
2019-05-13 10:28:19 -Generating unique operation named: listUsingGET_4
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_8
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_9
2019-05-13 10:28:19 -Generating unique operation named: saveUsingPOST_4
2019-05-13 10:28:19 -Generating unique operation named: updateUsingGET_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPOST_4
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPUT_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 10:28:19 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 10:28:19 -Generating unique operation named: ElecUsingGET_1
2019-05-13 10:28:19 -Generating unique operation named: addUsingGET_5
2019-05-13 10:28:19 -Generating unique operation named: editUsingGET_5
2019-05-13 10:28:19 -Generating unique operation named: listUsingGET_5
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_10
2019-05-13 10:28:19 -Generating unique operation named: removeUsingPOST_11
2019-05-13 10:28:19 -Generating unique operation named: saveUsingPOST_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingGET_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPUT_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 10:28:20 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_6
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_6
2019-05-13 10:28:20 -Generating unique operation named: addUsingGET_6
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_7
2019-05-13 10:28:20 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_7
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_12
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_13
2019-05-13 10:28:20 -Generating unique operation named: saveUsingPOST_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingGET_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPUT_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 10:28:20 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 10:28:20 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 10:28:20 -Generating unique operation named: addUsingGET_7
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_8
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_8
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_14
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_15
2019-05-13 10:28:20 -Generating unique operation named: saveUsingPOST_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingGET_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_8
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPUT_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 10:28:20 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 10:28:20 -Generating unique operation named: addUsingGET_8
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_9
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_9
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_16
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_17
2019-05-13 10:28:20 -Generating unique operation named: saveUsingPOST_8
2019-05-13 10:28:20 -Generating unique operation named: updateUsingGET_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_9
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPUT_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 10:28:20 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 10:28:20 -Generating unique operation named: addUsingGET_9
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_10
2019-05-13 10:28:20 -Generating unique operation named: infoUsingGET_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingPOST_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingPUT_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 10:28:20 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_10
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_18
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_19
2019-05-13 10:28:20 -Generating unique operation named: saveUsingPOST_9
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_10
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_11
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_20
2019-05-13 10:28:20 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 10:28:20 -Generating unique operation named: addUsingGET_10
2019-05-13 10:28:20 -Generating unique operation named: editUsingGET_11
2019-05-13 10:28:20 -Generating unique operation named: listUsingGET_12
2019-05-13 10:28:20 -Generating unique operation named: removeUsingPOST_21
2019-05-13 10:28:20 -Generating unique operation named: saveUsingPOST_10
2019-05-13 10:28:20 -Generating unique operation named: treeUsingGET_1
2019-05-13 10:28:20 -Generating unique operation named: treeUsingGET_2
2019-05-13 10:28:20 -Generating unique operation named: updateUsingPOST_11
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_11
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_12
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_13
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_22
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_23
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingGET_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPUT_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 10:28:21 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_12
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_13
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_14
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_24
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_25
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingGET_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_13
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPUT_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 10:28:21 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_13
2019-05-13 10:28:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_14
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_15
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_13
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_14
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_14
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_16
2019-05-13 10:28:21 -Generating unique operation named: listUsingHEAD_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingPOST_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingPUT_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingPATCH_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingDELETE_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 10:28:21 -Generating unique operation named: listUsingTRACE_1
2019-05-13 10:28:21 -Generating unique operation named: countDDUsingGET_1
2019-05-13 10:28:21 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 10:28:21 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 10:28:21 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_14
2019-05-13 10:28:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_15
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_17
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_26
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_15
2019-05-13 10:28:21 -Generating unique operation named: treeUsingGET_3
2019-05-13 10:28:21 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_15
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_15
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_16
2019-05-13 10:28:21 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_18
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_27
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_28
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_16
2019-05-13 10:28:21 -Generating unique operation named: updateUsingGET_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_16
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPUT_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 10:28:21 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 10:28:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_16
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_17
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_19
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_29
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_30
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_17
2019-05-13 10:28:21 -Generating unique operation named: updateUsingGET_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_17
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPUT_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 10:28:21 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 10:28:21 -Generating unique operation named: addUsingGET_17
2019-05-13 10:28:21 -Generating unique operation named: editUsingGET_18
2019-05-13 10:28:21 -Generating unique operation named: listUsingGET_20
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_31
2019-05-13 10:28:21 -Generating unique operation named: removeUsingPOST_32
2019-05-13 10:28:21 -Generating unique operation named: saveUsingPOST_18
2019-05-13 10:28:21 -Generating unique operation named: updateUsingGET_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPOST_18
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPUT_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 10:28:21 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 10:28:21 -Starting Quartz Scheduler now
2019-05-13 10:28:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 10:28:21 -Starting...
2019-05-13 10:28:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 10:28:21 -Started.
2019-05-13 10:28:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 10:28:21 -Using a shared selector for servlet write/read
2019-05-13 10:28:22 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 10:28:22 -Started BootdoApplication in 45.894 seconds (JVM running for 46.911)
2019-05-13 10:28:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 10:28:22 -==> Parameters: 
2019-05-13 10:28:22 -<==      Total: 1
2019-05-13 10:29:13 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 10:29:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 10:29:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 10:29:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 114 ms
2019-05-13 10:29:20 -Enabling session validation scheduler...
2019-05-13 10:29:20 -请求地址 : http://localhost:8081/login;JSESSIONID=89ee6662-fa65-4769-bb9e-37824f3011e7
2019-05-13 10:29:20 -HTTP METHOD : GET
2019-05-13 10:29:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 10:29:20 -参数 : [{}]
2019-05-13 10:29:20 -耗时 : 11
2019-05-13 10:29:20 -返回值 : login
2019-05-13 10:29:21 -请求地址 : http://localhost:8081/getVerify
2019-05-13 10:29:21 -HTTP METHOD : GET
2019-05-13 10:29:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 10:29:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@cb5950f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2726ae9]
2019-05-13 10:29:32 -5765
2019-05-13 10:29:32 -耗时 : 10897
2019-05-13 10:29:32 -返回值 : null
2019-05-13 10:29:32 -请求地址 : http://localhost:8081/login
2019-05-13 10:29:32 -HTTP METHOD : GET
2019-05-13 10:29:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 10:29:32 -参数 : [{}]
2019-05-13 10:29:32 -耗时 : 0
2019-05-13 10:29:32 -返回值 : login
2019-05-13 10:29:42 -请求地址 : http://localhost:8081/login
2019-05-13 10:29:42 -HTTP METHOD : POST
2019-05-13 10:29:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 10:29:42 -参数 : [admin, 111111, 5765, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f6b265a]
2019-05-13 10:29:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 10:29:42 -==> Parameters: admin(String)
2019-05-13 10:29:42 -<==      Total: 1
2019-05-13 10:29:42 -耗时 : 160
2019-05-13 10:29:42 -返回值 : {msg=操作成功, code=0}
2019-05-13 10:29:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 10:29:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 10:29:42 -==> Parameters: 1(Long), admin(String), 登录(String), 161(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 10:29:42.541(Timestamp)
2019-05-13 10:29:42 -请求地址 : http://localhost:8081/index
2019-05-13 10:29:42 -HTTP METHOD : GET
2019-05-13 10:29:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 10:29:42 -参数 : [{}]
2019-05-13 10:29:42 -<==    Updates: 1
2019-05-13 10:29:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 10:29:42 -==> Parameters: 1(Long)
2019-05-13 10:29:42 -<==      Total: 49
2019-05-13 10:29:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 10:29:42 -==> Parameters: 138(Long)
2019-05-13 10:29:42 -<==      Total: 1
2019-05-13 10:29:42 -耗时 : 318
2019-05-13 10:29:42 -返回值 : index_v1
2019-05-13 10:29:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 10:29:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 319(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 10:29:42.989(Timestamp)
2019-05-13 10:29:43 -<==    Updates: 1
2019-05-13 10:29:43 -请求地址 : http://localhost:8081/main
2019-05-13 10:29:43 -HTTP METHOD : GET
2019-05-13 10:29:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 10:29:43 -参数 : []
2019-05-13 10:29:43 -耗时 : 0
2019-05-13 10:29:43 -返回值 : main
2019-05-13 10:29:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 10:29:43 -HTTP METHOD : GET
2019-05-13 10:29:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 10:29:43 -参数 : []
2019-05-13 10:29:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 10:29:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 10:29:43 -<==      Total: 0
2019-05-13 10:29:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 10:29:43 -==> Parameters: 1(Long), 0(String)
2019-05-13 10:29:43 -<==      Total: 1
2019-05-13 10:29:43 -耗时 : 41
2019-05-13 10:29:43 -返回值 : com.bootdo.common.utils.PageUtils@4178faee
2019-05-13 10:29:43 -请求地址 : http://localhost:8081/main
2019-05-13 10:29:43 -HTTP METHOD : GET
2019-05-13 10:29:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 10:29:43 -参数 : []
2019-05-13 10:29:43 -耗时 : 4
2019-05-13 10:29:43 -返回值 : main
2019-05-13 10:29:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 10:29:51 -==> Parameters: 1(Long)
2019-05-13 10:29:51 -<==      Total: 93
2019-05-13 10:29:51 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 10:29:51 -HTTP METHOD : GET
2019-05-13 10:29:51 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 10:29:51 -参数 : []
2019-05-13 10:29:51 -耗时 : 9
2019-05-13 10:29:51 -返回值 : charts/countMM
2019-05-13 10:29:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 10:29:51 -HTTP METHOD : GET
2019-05-13 10:29:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 10:29:51 -参数 : [userType]
2019-05-13 10:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 10:29:52 -==> Parameters: userType(String)
2019-05-13 10:29:52 -<==      Total: 4
2019-05-13 10:29:52 -耗时 : 30
2019-05-13 10:29:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 10:29:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 10:29:56 -HTTP METHOD : GET
2019-05-13 10:29:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 10:29:56 -参数 : []
2019-05-13 10:29:56 -耗时 : 4
2019-05-13 10:29:56 -返回值 : system/dept/deptTree
2019-05-13 10:29:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 10:29:56 -HTTP METHOD : GET
2019-05-13 10:29:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 10:29:56 -参数 : []
2019-05-13 10:29:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 10:29:56 -==> Parameters: 
2019-05-13 10:29:56 -<==      Total: 3
2019-05-13 10:29:56 -耗时 : 22
2019-05-13 10:29:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 10:29:58 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:29:58 -HTTP METHOD : POST
2019-05-13 10:29:58 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:29:58 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@39e13111, com.bootdo.moneyLog.vo.WaterLogVo@36e0d0a4, com.bootdo.moneyLog.vo.HeatLogVo@36114736]
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:29:58 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:29:58 -<==      Total: 1
2019-05-13 10:29:58 -耗时 : 176
2019-05-13 10:29:58 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=12, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=20, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=60, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=1, CountMSElecLog=0, totalSum=721, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 10:37:17 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:37:17 -HTTP METHOD : POST
2019-05-13 10:37:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:37:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6860e1ab, com.bootdo.moneyLog.vo.WaterLogVo@7a91d9b2, com.bootdo.moneyLog.vo.HeatLogVo@290adf12]
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:17 -==> Parameters: 2019-03(String), D(String), 2(String)
2019-05-13 10:37:17 -<==      Total: 1
2019-05-13 10:37:17 -耗时 : 118
2019-05-13 10:37:17 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, SumSWaterLog=0, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountMWaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-13 10:37:24 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:37:24 -HTTP METHOD : POST
2019-05-13 10:37:24 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:37:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3f86427e, com.bootdo.moneyLog.vo.WaterLogVo@10f0870, com.bootdo.moneyLog.vo.HeatLogVo@60af9798]
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:24 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:24 -<==      Total: 1
2019-05-13 10:37:24 -耗时 : 87
2019-05-13 10:37:24 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, SumSWaterLog=0, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountMWaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-13 10:37:25 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:37:25 -HTTP METHOD : POST
2019-05-13 10:37:25 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:37:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@26c490f0, com.bootdo.moneyLog.vo.WaterLogVo@716c17dd, com.bootdo.moneyLog.vo.HeatLogVo@7510d7ca]
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:25 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:25 -<==      Total: 1
2019-05-13 10:37:25 -耗时 : 157
2019-05-13 10:37:25 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, SumSWaterLog=0, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountMWaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-13 10:37:26 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:37:26 -HTTP METHOD : POST
2019-05-13 10:37:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:37:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6b52f53f, com.bootdo.moneyLog.vo.WaterLogVo@127a0d04, com.bootdo.moneyLog.vo.HeatLogVo@793bb070]
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_type = ? and user_org = ? 
2019-05-13 10:37:26 -==> Parameters: 2019-03(String), C(String), 2(String)
2019-05-13 10:37:26 -<==      Total: 1
2019-05-13 10:37:26 -耗时 : 103
2019-05-13 10:37:26 -返回值 : {CountSHeatLog=0, CountG2ElecLog=0, CountG3ElecLog=0, SumG1ElecLog=0, CountG1ElecLog=0, SumWSElecLog=0, totalSumElec=0, SumG2ElecLog=0, CountWSElecLog=0, SumWMElecLog=0, totalCount=0, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=0, CountWMElecLog=0, CountMElecLog=0, SumG3ElecLog=0, SumSWaterLog=0, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=0, CountMHeatLog=0, CountGSHeatLog=0, CountWGElecLog=0, SumSElecLog=0, SumMHeatLog=0, SumZElecLog=0, SumWGElecLog=0, CountGMHeatLog=0, CountMWaterLog=0, CountMSElecLog=0, totalSum=0, SumMElecLog=0, totalSumHeat=0, SumMMElecLog=0, SumMWaterLog=0, SumMSElecLog=0}
2019-05-13 10:38:17 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:38:17 -HTTP METHOD : POST
2019-05-13 10:38:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:38:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@320dd159, com.bootdo.moneyLog.vo.WaterLogVo@28fd94e8, com.bootdo.moneyLog.vo.HeatLogVo@21074476]
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:17 -<==      Total: 1
2019-05-13 10:38:17 -耗时 : 93
2019-05-13 10:38:17 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=12, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=20, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=60, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=1, CountMSElecLog=0, totalSum=721, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 10:38:31 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:38:31 -HTTP METHOD : POST
2019-05-13 10:38:31 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:38:31 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4fcc1dab, com.bootdo.moneyLog.vo.WaterLogVo@69aef7e8, com.bootdo.moneyLog.vo.HeatLogVo@126d701d]
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:38:31 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:38:31 -<==      Total: 1
2019-05-13 10:38:31 -耗时 : 74
2019-05-13 10:38:31 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=12, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=20, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=60, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=1, CountMSElecLog=0, totalSum=721, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 10:39:19 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 10:39:19 -HTTP METHOD : POST
2019-05-13 10:39:19 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 10:39:19 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@24d5f890, com.bootdo.moneyLog.vo.WaterLogVo@5a07b76f, com.bootdo.moneyLog.vo.HeatLogVo@73ad64d9]
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 10:39:19 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 10:39:19 -<==      Total: 1
2019-05-13 10:39:19 -耗时 : 77
2019-05-13 10:39:19 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=12, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=20, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=60, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=1, CountMSElecLog=0, totalSum=721, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 10:39:26 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 10:39:26 -HTTP METHOD : GET
2019-05-13 10:39:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 10:39:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@68c4f498, com.bootdo.moneyLog.vo.HeatLogVo@a8b3200, com.bootdo.moneyLog.vo.WaterLogVo@671887d0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@416f3c5c]
2019-05-13 10:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-13 10:39:26 -耗时 : 461
2019-05-13 10:39:26 -返回值 : null
2019-05-13 10:59:13 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 425]
2019-05-13 11:13:52 -请求地址 : http://localhost:8081/login;JSESSIONID=095189a2-605c-42e6-8421-92869c42698a
2019-05-13 11:13:52 -HTTP METHOD : GET
2019-05-13 11:13:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 11:13:52 -参数 : [{}]
2019-05-13 11:13:52 -耗时 : 1
2019-05-13 11:13:52 -返回值 : login
2019-05-13 11:13:53 -请求地址 : http://localhost:8081/getVerify
2019-05-13 11:13:53 -HTTP METHOD : GET
2019-05-13 11:13:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 11:13:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@79fe67dd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a59f16a]
2019-05-13 11:13:53 -0022
2019-05-13 11:13:53 -耗时 : 36
2019-05-13 11:13:53 -返回值 : null
2019-05-13 11:13:53 -请求地址 : http://localhost:8081/login
2019-05-13 11:13:53 -HTTP METHOD : GET
2019-05-13 11:13:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 11:13:53 -参数 : [{}]
2019-05-13 11:13:53 -耗时 : 1
2019-05-13 11:13:53 -返回值 : login
2019-05-13 11:13:58 -请求地址 : http://localhost:8081/login
2019-05-13 11:13:58 -HTTP METHOD : POST
2019-05-13 11:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 11:13:58 -参数 : [admin, 111111, 0022, org.apache.shiro.web.servlet.ShiroHttpServletRequest@37a28708]
2019-05-13 11:13:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 11:13:58 -==> Parameters: admin(String)
2019-05-13 11:13:58 -<==      Total: 1
2019-05-13 11:13:58 -耗时 : 33
2019-05-13 11:13:58 -返回值 : {msg=操作成功, code=0}
2019-05-13 11:13:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 11:13:58 -请求地址 : http://localhost:8081/index
2019-05-13 11:13:58 -HTTP METHOD : GET
2019-05-13 11:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 11:13:58 -参数 : [{}]
2019-05-13 11:13:58 -==> Parameters: 1(Long), admin(String), 登录(String), 33(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 11:13:58.544(Timestamp)
2019-05-13 11:13:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 11:13:58 -==> Parameters: 1(Long)
2019-05-13 11:13:58 -<==      Total: 49
2019-05-13 11:13:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 11:13:58 -==> Parameters: 138(Long)
2019-05-13 11:13:58 -<==      Total: 1
2019-05-13 11:13:58 -耗时 : 51
2019-05-13 11:13:58 -返回值 : index_v1
2019-05-13 11:13:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 11:13:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 52(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 11:13:58.632(Timestamp)
2019-05-13 11:13:58 -请求地址 : http://localhost:8081/main
2019-05-13 11:13:58 -HTTP METHOD : GET
2019-05-13 11:13:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 11:13:58 -参数 : []
2019-05-13 11:13:58 -耗时 : 0
2019-05-13 11:13:58 -返回值 : main
2019-05-13 11:13:58 -<==    Updates: 1
2019-05-13 11:13:58 -<==    Updates: 1
2019-05-13 11:13:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 11:13:58 -HTTP METHOD : GET
2019-05-13 11:13:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 11:13:58 -参数 : []
2019-05-13 11:13:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 11:13:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 11:13:58 -<==      Total: 0
2019-05-13 11:13:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 11:13:58 -==> Parameters: 1(Long), 0(String)
2019-05-13 11:13:58 -<==      Total: 1
2019-05-13 11:13:58 -耗时 : 38
2019-05-13 11:13:58 -返回值 : com.bootdo.common.utils.PageUtils@128fe0d7
2019-05-13 11:13:59 -请求地址 : http://localhost:8081/main
2019-05-13 11:13:59 -HTTP METHOD : GET
2019-05-13 11:13:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 11:13:59 -参数 : []
2019-05-13 11:13:59 -耗时 : 0
2019-05-13 11:13:59 -返回值 : main
2019-05-13 11:14:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 11:14:02 -==> Parameters: 1(Long)
2019-05-13 11:14:03 -<==      Total: 93
2019-05-13 11:14:03 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-13 11:14:03 -HTTP METHOD : GET
2019-05-13 11:14:03 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-13 11:14:03 -参数 : []
2019-05-13 11:14:03 -耗时 : 39
2019-05-13 11:14:03 -返回值 : charts/tableElecMM
2019-05-13 11:14:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 11:14:03 -HTTP METHOD : GET
2019-05-13 11:14:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 11:14:03 -参数 : [userType]
2019-05-13 11:14:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 11:14:03 -==> Parameters: userType(String)
2019-05-13 11:14:03 -<==      Total: 4
2019-05-13 11:14:03 -耗时 : 7
2019-05-13 11:14:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 11:14:04 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 11:14:04 -HTTP METHOD : GET
2019-05-13 11:14:04 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 11:14:04 -参数 : []
2019-05-13 11:14:04 -耗时 : 0
2019-05-13 11:14:04 -返回值 : charts/countMM
2019-05-13 11:14:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 11:14:04 -HTTP METHOD : GET
2019-05-13 11:14:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 11:14:04 -参数 : [userType]
2019-05-13 11:14:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 11:14:04 -==> Parameters: userType(String)
2019-05-13 11:14:04 -<==      Total: 4
2019-05-13 11:14:04 -耗时 : 4
2019-05-13 11:14:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 11:14:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 11:14:51 -HTTP METHOD : GET
2019-05-13 11:14:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 11:14:51 -参数 : []
2019-05-13 11:14:51 -耗时 : 0
2019-05-13 11:14:51 -返回值 : system/dept/deptTree
2019-05-13 11:14:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 11:14:51 -HTTP METHOD : GET
2019-05-13 11:14:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 11:14:51 -参数 : []
2019-05-13 11:14:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 11:14:51 -==> Parameters: 
2019-05-13 11:14:51 -<==      Total: 3
2019-05-13 11:14:51 -耗时 : 7
2019-05-13 11:14:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 11:14:53 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 11:14:53 -HTTP METHOD : POST
2019-05-13 11:14:53 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 11:14:53 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4bb1ded, com.bootdo.moneyLog.vo.WaterLogVo@7ee1efe1, com.bootdo.moneyLog.vo.HeatLogVo@7307d095]
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 11:14:53 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 11:14:53 -<==      Total: 1
2019-05-13 11:14:53 -耗时 : 91
2019-05-13 11:14:53 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=12, CountMMElecLog=0, SumSHeatLog=0, CountSWaterLog=1, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, SumSWaterLog=20, CountSElecLog=0, SumGSHeatLog=0, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=60, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountMWaterLog=1, CountMSElecLog=0, totalSum=721, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 13:55:37 -Starting BootdoApplication on PC-201905091110 with PID 12552 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 13:55:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 13:55:37 -The following profiles are active: dev
2019-05-13 13:55:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 13:55:38 CST 2019]; root of context hierarchy
2019-05-13 13:55:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 13:55:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 13:55:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 13:55:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 13:55:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 13:55:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 13:55:57 -Starting service [Tomcat]
2019-05-13 13:55:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 13:55:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 13:55:58 -Initializing Spring embedded WebApplicationContext
2019-05-13 13:55:58 -Root WebApplicationContext: initialization completed in 19961 ms
2019-05-13 13:55:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 13:55:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 13:55:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 13:55:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 13:55:59 -Filter xssFilter was not registered (disabled)
2019-05-13 13:55:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 13:55:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 13:55:59 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 13:55:59 -Servlet dispatcherServlet mapped to [/]
2019-05-13 13:56:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 13:55:38 CST 2019]; root of context hierarchy
2019-05-13 13:56:10 -Using default implementation for ThreadExecutor
2019-05-13 13:56:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 13:56:10 -Quartz Scheduler v.2.2.1 created.
2019-05-13 13:56:10 -RAMJobStore initialized.
2019-05-13 13:56:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 13:56:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 13:56:10 -Quartz scheduler version: 2.2.1
2019-05-13 13:56:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-05-13 13:56:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 13:56:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 13:56:14 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 13:56:14 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 13:56:14 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 13:56:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 13:56:14 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 13:56:14 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 13:56:14 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 13:56:14 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 13:56:14 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 13:56:14 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 13:56:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 13:56:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 13:56:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 13:56:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 13:56:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 13:56:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 13:56:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 13:56:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 13:56:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 13:56:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 13:56:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 13:56:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 13:56:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 13:56:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 13:56:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 13:56:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 13:56:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 13:56:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 13:56:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 13:56:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 13:56:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 13:56:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 13:56:15 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 13:56:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 13:56:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 13:56:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 13:56:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 13:56:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 13:56:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 13:56:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 13:56:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 13:56:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 13:56:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 13:56:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 13:56:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 13:56:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 13:56:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 13:56:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 13:56:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 13:56:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 13:56:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 13:56:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 13:56:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 13:56:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 13:56:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 13:56:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 13:56:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 13:56:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 13:56:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 13:56:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 13:56:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 13:56:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 13:56:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 13:56:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 13:56:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 13:56:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 13:56:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 13:56:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 13:56:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 13:56:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 13:56:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 13:56:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 13:56:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 13:56:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 13:56:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 13:56:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 13:56:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 13:56:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 13:56:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 13:56:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 13:56:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 13:56:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 13:56:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 13:56:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 13:56:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 13:56:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 13:56:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 13:56:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 13:56:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 13:56:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 13:56:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 13:56:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 13:56:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 13:56:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 13:56:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 13:55:38 CST 2019]; root of context hierarchy
2019-05-13 13:56:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 13:56:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 13:56:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 13:56:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 13:56:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 13:56:20 -Registering beans for JMX exposure on startup
2019-05-13 13:56:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 13:56:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 13:56:20 -Starting beans in phase 2147483647
2019-05-13 13:56:20 -Context refreshed
2019-05-13 13:56:20 -Found 1 custom documentation plugin(s)
2019-05-13 13:56:21 -Scanning for api listing references
2019-05-13 13:56:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 13:56:21 -Generating unique operation named: removeUsingPOST_1
2019-05-13 13:56:21 -Generating unique operation named: addUsingGET_1
2019-05-13 13:56:21 -Generating unique operation named: editUsingGET_1
2019-05-13 13:56:21 -Generating unique operation named: listUsingGET_1
2019-05-13 13:56:21 -Generating unique operation named: removeUsingPOST_2
2019-05-13 13:56:21 -Generating unique operation named: removeUsingPOST_3
2019-05-13 13:56:21 -Generating unique operation named: saveUsingPOST_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingGET_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingPOST_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingPUT_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 13:56:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_2
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_2
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_2
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_4
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_5
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_2
2019-05-13 13:56:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_3
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_3
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_3
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_6
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_7
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingGET_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPUT_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_4
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_4
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_4
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_8
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_9
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingGET_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPUT_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 13:56:22 -Generating unique operation named: ElecUsingGET_1
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_5
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_5
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_5
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_10
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_11
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingGET_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPUT_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_6
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_6
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_6
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_7
2019-05-13 13:56:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_7
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_12
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_13
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingGET_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_7
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPUT_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 13:56:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 13:56:22 -Generating unique operation named: addUsingGET_7
2019-05-13 13:56:22 -Generating unique operation named: editUsingGET_8
2019-05-13 13:56:22 -Generating unique operation named: listUsingGET_8
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_14
2019-05-13 13:56:22 -Generating unique operation named: removeUsingPOST_15
2019-05-13 13:56:22 -Generating unique operation named: saveUsingPOST_7
2019-05-13 13:56:22 -Generating unique operation named: updateUsingGET_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPOST_8
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPUT_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 13:56:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 13:56:23 -Generating unique operation named: addUsingGET_8
2019-05-13 13:56:23 -Generating unique operation named: editUsingGET_9
2019-05-13 13:56:23 -Generating unique operation named: listUsingGET_9
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_16
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_17
2019-05-13 13:56:23 -Generating unique operation named: saveUsingPOST_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingGET_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPOST_9
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPUT_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 13:56:23 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 13:56:23 -Generating unique operation named: addUsingGET_9
2019-05-13 13:56:23 -Generating unique operation named: editUsingGET_10
2019-05-13 13:56:23 -Generating unique operation named: infoUsingGET_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingPOST_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingPUT_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 13:56:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 13:56:23 -Generating unique operation named: listUsingGET_10
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_18
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_19
2019-05-13 13:56:23 -Generating unique operation named: saveUsingPOST_9
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPOST_10
2019-05-13 13:56:23 -Generating unique operation named: listUsingGET_11
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_20
2019-05-13 13:56:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 13:56:23 -Generating unique operation named: addUsingGET_10
2019-05-13 13:56:23 -Generating unique operation named: editUsingGET_11
2019-05-13 13:56:23 -Generating unique operation named: listUsingGET_12
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_21
2019-05-13 13:56:23 -Generating unique operation named: saveUsingPOST_10
2019-05-13 13:56:23 -Generating unique operation named: treeUsingGET_1
2019-05-13 13:56:23 -Generating unique operation named: treeUsingGET_2
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPOST_11
2019-05-13 13:56:23 -Generating unique operation named: addUsingGET_11
2019-05-13 13:56:23 -Generating unique operation named: editUsingGET_12
2019-05-13 13:56:23 -Generating unique operation named: listUsingGET_13
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_22
2019-05-13 13:56:23 -Generating unique operation named: removeUsingPOST_23
2019-05-13 13:56:23 -Generating unique operation named: saveUsingPOST_11
2019-05-13 13:56:23 -Generating unique operation named: updateUsingGET_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPOST_12
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPUT_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 13:56:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 13:56:23 -Generating unique operation named: addUsingGET_12
2019-05-13 13:56:23 -Generating unique operation named: editUsingGET_13
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_14
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_24
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_25
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingGET_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_13
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPUT_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 13:56:24 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 13:56:24 -Generating unique operation named: addUsingGET_13
2019-05-13 13:56:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 13:56:24 -Generating unique operation named: editUsingGET_14
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_15
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_13
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_14
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_14
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_16
2019-05-13 13:56:24 -Generating unique operation named: listUsingHEAD_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingPOST_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingPUT_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingPATCH_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingDELETE_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 13:56:24 -Generating unique operation named: listUsingTRACE_1
2019-05-13 13:56:24 -Generating unique operation named: countDDUsingGET_1
2019-05-13 13:56:24 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 13:56:24 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 13:56:24 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 13:56:24 -Generating unique operation named: addUsingGET_14
2019-05-13 13:56:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 13:56:24 -Generating unique operation named: editUsingGET_15
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_17
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_26
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_15
2019-05-13 13:56:24 -Generating unique operation named: treeUsingGET_3
2019-05-13 13:56:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_15
2019-05-13 13:56:24 -Generating unique operation named: addUsingGET_15
2019-05-13 13:56:24 -Generating unique operation named: editUsingGET_16
2019-05-13 13:56:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_18
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_27
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_28
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_16
2019-05-13 13:56:24 -Generating unique operation named: updateUsingGET_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_16
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPUT_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 13:56:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 13:56:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 13:56:24 -Generating unique operation named: addUsingGET_16
2019-05-13 13:56:24 -Generating unique operation named: editUsingGET_17
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_19
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_29
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_30
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_17
2019-05-13 13:56:24 -Generating unique operation named: updateUsingGET_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_17
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPUT_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 13:56:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 13:56:24 -Generating unique operation named: addUsingGET_17
2019-05-13 13:56:24 -Generating unique operation named: editUsingGET_18
2019-05-13 13:56:24 -Generating unique operation named: listUsingGET_20
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_31
2019-05-13 13:56:24 -Generating unique operation named: removeUsingPOST_32
2019-05-13 13:56:24 -Generating unique operation named: saveUsingPOST_18
2019-05-13 13:56:24 -Generating unique operation named: updateUsingGET_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPOST_18
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPUT_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 13:56:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 13:56:24 -Starting Quartz Scheduler now
2019-05-13 13:56:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 13:56:24 -Starting...
2019-05-13 13:56:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 13:56:24 -Started.
2019-05-13 13:56:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 13:56:24 -Using a shared selector for servlet write/read
2019-05-13 13:56:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 13:56:25 -Started BootdoApplication in 52.456 seconds (JVM running for 57.595)
2019-05-13 13:56:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 13:56:25 -==> Parameters: 
2019-05-13 13:56:25 -<==      Total: 1
2019-05-13 13:56:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 13:56:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 13:56:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-13 13:56:35 -Enabling session validation scheduler...
2019-05-13 13:56:35 -请求地址 : http://localhost:8081/login;JSESSIONID=cdf8f572-fa32-4091-b01a-18951a3b9dd7
2019-05-13 13:56:35 -HTTP METHOD : GET
2019-05-13 13:56:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 13:56:35 -参数 : [{}]
2019-05-13 13:56:35 -耗时 : 7
2019-05-13 13:56:35 -返回值 : login
2019-05-13 13:56:37 -请求地址 : http://localhost:8081/getVerify
2019-05-13 13:56:37 -HTTP METHOD : GET
2019-05-13 13:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 13:56:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@12b30f45, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d197c]
2019-05-13 13:56:48 -6008
2019-05-13 13:56:49 -耗时 : 11476
2019-05-13 13:56:49 -返回值 : null
2019-05-13 13:56:49 -请求地址 : http://localhost:8081/login
2019-05-13 13:56:49 -HTTP METHOD : GET
2019-05-13 13:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 13:56:49 -参数 : [{}]
2019-05-13 13:56:49 -耗时 : 0
2019-05-13 13:56:49 -返回值 : login
2019-05-13 13:56:55 -请求地址 : http://localhost:8081/login
2019-05-13 13:56:55 -HTTP METHOD : POST
2019-05-13 13:56:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 13:56:55 -参数 : [admin, 111111, 6008, org.apache.shiro.web.servlet.ShiroHttpServletRequest@54e03ece]
2019-05-13 13:56:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 13:56:56 -==> Parameters: admin(String)
2019-05-13 13:56:56 -<==      Total: 1
2019-05-13 13:56:56 -耗时 : 196
2019-05-13 13:56:56 -返回值 : {msg=操作成功, code=0}
2019-05-13 13:56:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 13:56:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 13:56:56 -==> Parameters: 1(Long), admin(String), 登录(String), 197(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 13:56:56.193(Timestamp)
2019-05-13 13:56:56 -请求地址 : http://localhost:8081/index
2019-05-13 13:56:56 -HTTP METHOD : GET
2019-05-13 13:56:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 13:56:56 -参数 : [{}]
2019-05-13 13:56:56 -<==    Updates: 1
2019-05-13 13:56:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 13:56:56 -==> Parameters: 1(Long)
2019-05-13 13:56:56 -<==      Total: 49
2019-05-13 13:56:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 13:56:56 -==> Parameters: 138(Long)
2019-05-13 13:56:56 -<==      Total: 1
2019-05-13 13:56:56 -耗时 : 245
2019-05-13 13:56:56 -返回值 : index_v1
2019-05-13 13:56:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 13:56:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 245(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 13:56:56.756(Timestamp)
2019-05-13 13:56:56 -<==    Updates: 1
2019-05-13 13:56:57 -请求地址 : http://localhost:8081/main
2019-05-13 13:56:57 -HTTP METHOD : GET
2019-05-13 13:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 13:56:57 -参数 : []
2019-05-13 13:56:57 -耗时 : 1
2019-05-13 13:56:57 -返回值 : main
2019-05-13 13:56:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 13:56:57 -HTTP METHOD : GET
2019-05-13 13:56:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 13:56:57 -参数 : []
2019-05-13 13:56:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 13:56:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 13:56:57 -<==      Total: 0
2019-05-13 13:56:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 13:56:57 -==> Parameters: 1(Long), 0(String)
2019-05-13 13:56:57 -<==      Total: 1
2019-05-13 13:56:57 -耗时 : 84
2019-05-13 13:56:57 -返回值 : com.bootdo.common.utils.PageUtils@73fc98b8
2019-05-13 13:56:57 -请求地址 : http://localhost:8081/main
2019-05-13 13:56:57 -HTTP METHOD : GET
2019-05-13 13:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 13:56:57 -参数 : []
2019-05-13 13:56:57 -耗时 : 0
2019-05-13 13:56:57 -返回值 : main
2019-05-13 13:57:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 13:57:03 -==> Parameters: 1(Long)
2019-05-13 13:57:03 -<==      Total: 93
2019-05-13 13:57:03 -请求地址 : http://localhost:8081/elec/elec
2019-05-13 13:57:03 -HTTP METHOD : GET
2019-05-13 13:57:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-13 13:57:03 -参数 : []
2019-05-13 13:57:03 -耗时 : 0
2019-05-13 13:57:03 -返回值 : elec/elec/elec
2019-05-13 13:57:04 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 13:57:04 -HTTP METHOD : GET
2019-05-13 13:57:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:57:04 -参数 : [elecType]
2019-05-13 13:57:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:57:04 -==> Parameters: elecType(String)
2019-05-13 13:57:04 -<==      Total: 11
2019-05-13 13:57:04 -耗时 : 35
2019-05-13 13:57:04 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:57:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 13:57:04 -HTTP METHOD : GET
2019-05-13 13:57:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:57:04 -参数 : [userType]
2019-05-13 13:57:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:57:04 -==> Parameters: userType(String)
2019-05-13 13:57:04 -<==      Total: 4
2019-05-13 13:57:04 -耗时 : 5
2019-05-13 13:57:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:57:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-13 13:57:04 -HTTP METHOD : GET
2019-05-13 13:57:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-13 13:57:04 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@336f07e7]
2019-05-13 13:57:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-13 13:57:04 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 13:57:04 -<==      Total: 10
2019-05-13 13:57:04 -==>  Preparing: select count(*) from elec 
2019-05-13 13:57:04 -==> Parameters: 
2019-05-13 13:57:04 -<==      Total: 1
2019-05-13 13:57:04 -耗时 : 130
2019-05-13 13:57:04 -返回值 : com.bootdo.common.utils.PageUtils@60a5c65f
2019-05-13 13:57:09 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-13 13:57:09 -HTTP METHOD : GET
2019-05-13 13:57:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-13 13:57:09 -参数 : []
2019-05-13 13:57:09 -耗时 : 1
2019-05-13 13:57:09 -返回值 : elec/elecInto/elecInto
2019-05-13 13:57:12 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-13 13:57:12 -HTTP METHOD : GET
2019-05-13 13:57:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-13 13:57:12 -参数 : []
2019-05-13 13:57:12 -耗时 : 0
2019-05-13 13:57:12 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-13 13:57:14 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-13 13:57:14 -HTTP METHOD : GET
2019-05-13 13:57:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-13 13:57:14 -参数 : []
2019-05-13 13:57:14 -耗时 : 0
2019-05-13 13:57:14 -返回值 : elec/elecPrice/elecPrice
2019-05-13 13:57:14 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-13 13:57:14 -HTTP METHOD : GET
2019-05-13 13:57:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-13 13:57:14 -参数 : [{limit=10, offset=0}]
2019-05-13 13:57:14 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-13 13:57:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 13:57:15 -<==      Total: 2
2019-05-13 13:57:15 -==>  Preparing: select count(*) from elec_price 
2019-05-13 13:57:15 -==> Parameters: 
2019-05-13 13:57:15 -<==      Total: 1
2019-05-13 13:57:15 -耗时 : 113
2019-05-13 13:57:15 -返回值 : com.bootdo.common.utils.PageUtils@2532a23b
2019-05-13 13:57:16 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-13 13:57:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-13 13:57:43 -HTTP METHOD : GET
2019-05-13 13:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-13 13:57:43 -参数 : []
2019-05-13 13:57:43 -耗时 : 0
2019-05-13 13:57:43 -返回值 : /moneyLog/elecLog/elecLog
2019-05-13 13:57:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-13 13:57:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 13:57:43 -HTTP METHOD : GET
2019-05-13 13:57:43 -HTTP METHOD : GET
2019-05-13 13:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:57:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:57:43 -参数 : [elecType]
2019-05-13 13:57:43 -参数 : [userType]
2019-05-13 13:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:57:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:57:43 -==> Parameters: elecType(String)
2019-05-13 13:57:43 -==> Parameters: userType(String)
2019-05-13 13:57:43 -<==      Total: 4
2019-05-13 13:57:43 -<==      Total: 11
2019-05-13 13:57:43 -耗时 : 11
2019-05-13 13:57:43 -耗时 : 11
2019-05-13 13:57:43 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:57:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:57:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-13 13:57:43 -HTTP METHOD : GET
2019-05-13 13:57:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-13 13:57:43 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-13 13:57:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-13 13:57:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 13:57:43 -<==      Total: 10
2019-05-13 13:57:43 -==>  Preparing: select count(*) from elec_log 
2019-05-13 13:57:43 -==> Parameters: 
2019-05-13 13:57:43 -<==      Total: 1
2019-05-13 13:57:43 -耗时 : 59
2019-05-13 13:57:43 -返回值 : com.bootdo.common.utils.PageUtils@4a258203
2019-05-13 13:57:45 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-13 13:57:45 -HTTP METHOD : GET
2019-05-13 13:57:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-13 13:57:45 -参数 : []
2019-05-13 13:57:45 -耗时 : 1
2019-05-13 13:57:45 -返回值 : /moneyList/moneyList
2019-05-13 13:58:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 13:58:13 -HTTP METHOD : GET
2019-05-13 13:58:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 13:58:13 -参数 : []
2019-05-13 13:58:13 -耗时 : 0
2019-05-13 13:58:13 -返回值 : system/dept/deptTree
2019-05-13 13:58:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 13:58:13 -HTTP METHOD : GET
2019-05-13 13:58:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 13:58:13 -参数 : []
2019-05-13 13:58:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 13:58:13 -==> Parameters: 
2019-05-13 13:58:13 -<==      Total: 3
2019-05-13 13:58:13 -耗时 : 24
2019-05-13 13:58:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 13:58:16 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-13 13:58:16 -HTTP METHOD : POST
2019-05-13 13:58:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-13 13:58:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6d530e3c]
2019-05-13 13:58:16 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-13 13:58:16 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-13 13:58:17 -<==      Total: 3
2019-05-13 13:58:17 -耗时 : 73
2019-05-13 13:58:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7706f6dd, com.bootdo.moneyList.damain.MoneyListDO@5b669297, com.bootdo.moneyList.damain.MoneyListDO@60357287]
2019-05-13 13:59:11 -请求地址 : http://localhost:8081/heat/heat
2019-05-13 13:59:11 -HTTP METHOD : GET
2019-05-13 13:59:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-13 13:59:11 -参数 : []
2019-05-13 13:59:11 -耗时 : 0
2019-05-13 13:59:11 -返回值 : heat/heat/heat
2019-05-13 13:59:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 13:59:12 -HTTP METHOD : GET
2019-05-13 13:59:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:59:12 -参数 : [userType]
2019-05-13 13:59:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:59:12 -==> Parameters: userType(String)
2019-05-13 13:59:12 -<==      Total: 4
2019-05-13 13:59:12 -耗时 : 5
2019-05-13 13:59:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:59:12 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-13 13:59:12 -HTTP METHOD : GET
2019-05-13 13:59:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 13:59:12 -参数 : [heatType]
2019-05-13 13:59:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 13:59:12 -==> Parameters: heatType(String)
2019-05-13 13:59:12 -<==      Total: 4
2019-05-13 13:59:12 -耗时 : 5
2019-05-13 13:59:12 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 13:59:12 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-13 13:59:12 -HTTP METHOD : GET
2019-05-13 13:59:12 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-13 13:59:12 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-13 13:59:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-13 13:59:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 13:59:12 -<==      Total: 10
2019-05-13 13:59:12 -==>  Preparing: select count(*) from heat 
2019-05-13 13:59:12 -==> Parameters: 
2019-05-13 13:59:12 -<==      Total: 1
2019-05-13 13:59:12 -耗时 : 31
2019-05-13 13:59:12 -返回值 : com.bootdo.common.utils.PageUtils@47d53294
2019-05-13 13:59:12 -请求地址 : http://localhost:8081/heat/heatInto
2019-05-13 13:59:12 -HTTP METHOD : GET
2019-05-13 13:59:12 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-05-13 13:59:12 -参数 : []
2019-05-13 13:59:12 -耗时 : 0
2019-05-13 13:59:12 -返回值 : heat/heatInto/heatInto
2019-05-13 13:59:13 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-13 13:59:13 -HTTP METHOD : GET
2019-05-13 13:59:13 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-13 13:59:13 -参数 : []
2019-05-13 13:59:13 -耗时 : 0
2019-05-13 13:59:13 -返回值 : heat/heatPrice/heatPrice
2019-05-13 13:59:13 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-13 13:59:13 -HTTP METHOD : GET
2019-05-13 13:59:13 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-13 13:59:13 -参数 : [{limit=10, offset=0}]
2019-05-13 13:59:13 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-13 13:59:13 -==> Parameters: 0(Integer), 10(Integer)
2019-05-13 13:59:13 -<==      Total: 2
2019-05-13 13:59:13 -==>  Preparing: select count(*) from heat_price 
2019-05-13 13:59:13 -==> Parameters: 
2019-05-13 13:59:13 -<==      Total: 1
2019-05-13 13:59:13 -耗时 : 31
2019-05-13 13:59:13 -返回值 : com.bootdo.common.utils.PageUtils@30b6d290
2019-05-13 13:59:14 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-13 13:59:14 -HTTP METHOD : GET
2019-05-13 13:59:14 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-13 13:59:14 -参数 : []
2019-05-13 13:59:14 -耗时 : 1
2019-05-13 13:59:14 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-13 14:02:58 -请求地址 : http://localhost:8081/index
2019-05-13 14:02:58 -HTTP METHOD : GET
2019-05-13 14:02:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 14:02:58 -参数 : [{}]
2019-05-13 14:02:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 14:02:58 -==> Parameters: 1(Long)
2019-05-13 14:02:58 -<==      Total: 49
2019-05-13 14:02:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 14:02:58 -==> Parameters: 138(Long)
2019-05-13 14:02:58 -<==      Total: 1
2019-05-13 14:02:58 -耗时 : 31
2019-05-13 14:02:58 -返回值 : index_v1
2019-05-13 14:02:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:02:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 14:02:58.497(Timestamp)
2019-05-13 14:02:58 -请求地址 : http://localhost:8081/main
2019-05-13 14:02:58 -HTTP METHOD : GET
2019-05-13 14:02:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:02:58 -参数 : []
2019-05-13 14:02:58 -耗时 : 0
2019-05-13 14:02:58 -返回值 : main
2019-05-13 14:02:58 -<==    Updates: 1
2019-05-13 14:02:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 14:02:58 -HTTP METHOD : GET
2019-05-13 14:02:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 14:02:58 -参数 : []
2019-05-13 14:02:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 14:02:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 14:02:58 -<==      Total: 0
2019-05-13 14:02:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 14:02:58 -==> Parameters: 1(Long), 0(String)
2019-05-13 14:02:58 -<==      Total: 1
2019-05-13 14:02:58 -耗时 : 12
2019-05-13 14:02:58 -返回值 : com.bootdo.common.utils.PageUtils@503ff30
2019-05-13 14:02:58 -请求地址 : http://localhost:8081/main
2019-05-13 14:02:58 -HTTP METHOD : GET
2019-05-13 14:02:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:02:58 -参数 : []
2019-05-13 14:02:58 -耗时 : 1
2019-05-13 14:02:58 -返回值 : main
2019-05-13 14:03:01 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-13 14:03:01 -HTTP METHOD : GET
2019-05-13 14:03:01 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-13 14:03:01 -参数 : []
2019-05-13 14:03:01 -耗时 : 10
2019-05-13 14:03:01 -返回值 : charts/tableDD
2019-05-13 14:03:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:03:06 -HTTP METHOD : GET
2019-05-13 14:03:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:03:06 -参数 : []
2019-05-13 14:03:06 -耗时 : 0
2019-05-13 14:03:06 -返回值 : system/dept/deptTree
2019-05-13 14:03:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:03:06 -HTTP METHOD : GET
2019-05-13 14:03:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:03:06 -参数 : []
2019-05-13 14:03:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:03:06 -==> Parameters: 
2019-05-13 14:03:06 -<==      Total: 3
2019-05-13 14:03:06 -耗时 : 3
2019-05-13 14:03:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:03:08 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 14:03:08 -HTTP METHOD : POST
2019-05-13 14:03:08 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 14:03:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@74295212, com.bootdo.moneyLog.vo.WaterLogVo@1b5a566c, com.bootdo.moneyLog.vo.HeatLogVo@2ac9df8]
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:08 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:08 -<==      Total: 1
2019-05-13 14:03:08 -耗时 : 150
2019-05-13 14:03:08 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 14:03:14 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 14:03:14 -HTTP METHOD : POST
2019-05-13 14:03:14 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 14:03:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@49d6b4d2, com.bootdo.moneyLog.vo.WaterLogVo@388338aa, com.bootdo.moneyLog.vo.HeatLogVo@553a3179]
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:14 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:14 -<==      Total: 1
2019-05-13 14:03:14 -耗时 : 108
2019-05-13 14:03:14 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 14:03:15 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 14:03:15 -HTTP METHOD : POST
2019-05-13 14:03:15 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 14:03:15 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@ccf31b9, com.bootdo.moneyLog.vo.WaterLogVo@23a9c9c, com.bootdo.moneyLog.vo.HeatLogVo@659c4bc6]
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:15 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:15 -<==      Total: 1
2019-05-13 14:03:15 -耗时 : 157
2019-05-13 14:03:15 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 14:03:16 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 14:03:16 -HTTP METHOD : POST
2019-05-13 14:03:16 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 14:03:16 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7da08a47, com.bootdo.moneyLog.vo.WaterLogVo@59edac49, com.bootdo.moneyLog.vo.HeatLogVo@23b6170b]
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:16 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:16 -<==      Total: 1
2019-05-13 14:03:16 -耗时 : 80
2019-05-13 14:03:16 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 14:03:20 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-13 14:03:20 -HTTP METHOD : POST
2019-05-13 14:03:20 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-13 14:03:20 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@ab84229, com.bootdo.moneyLog.vo.WaterLogVo@68ef982b, com.bootdo.moneyLog.vo.HeatLogVo@15b8d612]
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:03:20 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:03:20 -<==      Total: 1
2019-05-13 14:03:20 -耗时 : 82
2019-05-13 14:03:20 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-13 14:03:39 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 14:06:22 -请求地址 : http://localhost:8081/charts/tableDD/exportDD
2019-05-13 14:06:22 -HTTP METHOD : GET
2019-05-13 14:06:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.exportDD
2019-05-13 14:06:22 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2e8ce95e, com.bootdo.moneyLog.vo.HeatLogVo@44b34f66, com.bootdo.moneyLog.vo.WaterLogVo@4369478a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c8dfe1]
2019-05-13 14:06:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-13 14:06:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:06:23 -<==      Total: 4
2019-05-13 14:06:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-13 14:06:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:06:23 -<==      Total: 1
2019-05-13 14:06:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-13 14:06:23 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-13 14:06:23 -<==      Total: 1
2019-05-13 14:06:23 -耗时 : 784
2019-05-13 14:06:23 -返回值 : null
2019-05-13 14:06:48 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 14:06:48 -HTTP METHOD : GET
2019-05-13 14:06:48 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 14:06:48 -参数 : []
2019-05-13 14:06:48 -耗时 : 8
2019-05-13 14:06:48 -返回值 : charts/countMM
2019-05-13 14:06:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 14:06:48 -HTTP METHOD : GET
2019-05-13 14:06:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 14:06:48 -参数 : [userType]
2019-05-13 14:06:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 14:06:48 -==> Parameters: userType(String)
2019-05-13 14:06:48 -<==      Total: 4
2019-05-13 14:06:48 -耗时 : 5
2019-05-13 14:06:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 14:07:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:07:00 -HTTP METHOD : GET
2019-05-13 14:07:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:07:00 -参数 : []
2019-05-13 14:07:00 -耗时 : 0
2019-05-13 14:07:00 -返回值 : system/dept/deptTree
2019-05-13 14:07:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:07:00 -HTTP METHOD : GET
2019-05-13 14:07:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:07:00 -参数 : []
2019-05-13 14:07:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:07:00 -==> Parameters: 
2019-05-13 14:07:00 -<==      Total: 3
2019-05-13 14:07:00 -耗时 : 4
2019-05-13 14:07:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:07:02 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 14:07:02 -HTTP METHOD : GET
2019-05-13 14:07:02 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 14:07:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@55d5459c, com.bootdo.moneyLog.vo.HeatLogVo@53270609, com.bootdo.moneyLog.vo.WaterLogVo@7be0b323, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31a8f5ca]
2019-05-13 14:07:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-13 14:07:02 -耗时 : 29
2019-05-13 14:07:02 -返回值 : null
2019-05-13 14:07:04 -请求地址 : http://localhost:8081/index
2019-05-13 14:07:04 -HTTP METHOD : GET
2019-05-13 14:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 14:07:04 -参数 : [{}]
2019-05-13 14:07:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 14:07:04 -==> Parameters: 1(Long)
2019-05-13 14:07:04 -<==      Total: 49
2019-05-13 14:07:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 14:07:04 -==> Parameters: 138(Long)
2019-05-13 14:07:04 -<==      Total: 1
2019-05-13 14:07:04 -耗时 : 18
2019-05-13 14:07:04 -返回值 : index_v1
2019-05-13 14:07:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:07:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 14:07:04.973(Timestamp)
2019-05-13 14:07:05 -请求地址 : http://localhost:8081/main
2019-05-13 14:07:05 -HTTP METHOD : GET
2019-05-13 14:07:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:07:05 -参数 : []
2019-05-13 14:07:05 -耗时 : 0
2019-05-13 14:07:05 -返回值 : main
2019-05-13 14:07:05 -<==    Updates: 1
2019-05-13 14:07:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 14:07:05 -HTTP METHOD : GET
2019-05-13 14:07:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 14:07:05 -参数 : []
2019-05-13 14:07:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 14:07:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 14:07:05 -<==      Total: 0
2019-05-13 14:07:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 14:07:05 -==> Parameters: 1(Long), 0(String)
2019-05-13 14:07:05 -<==      Total: 1
2019-05-13 14:07:05 -耗时 : 7
2019-05-13 14:07:05 -返回值 : com.bootdo.common.utils.PageUtils@3df2fbc6
2019-05-13 14:07:05 -请求地址 : http://localhost:8081/main
2019-05-13 14:07:05 -HTTP METHOD : GET
2019-05-13 14:07:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:07:05 -参数 : []
2019-05-13 14:07:05 -耗时 : 0
2019-05-13 14:07:05 -返回值 : main
2019-05-13 14:07:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 14:07:10 -==> Parameters: 1(Long)
2019-05-13 14:07:10 -<==      Total: 93
2019-05-13 14:07:10 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 14:07:10 -HTTP METHOD : GET
2019-05-13 14:07:10 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 14:07:10 -参数 : []
2019-05-13 14:07:10 -耗时 : 1
2019-05-13 14:07:10 -返回值 : charts/countMM
2019-05-13 14:07:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 14:07:10 -HTTP METHOD : GET
2019-05-13 14:07:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 14:07:10 -参数 : [userType]
2019-05-13 14:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 14:07:10 -==> Parameters: userType(String)
2019-05-13 14:07:10 -<==      Total: 4
2019-05-13 14:07:10 -耗时 : 5
2019-05-13 14:07:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 14:07:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:07:15 -HTTP METHOD : GET
2019-05-13 14:07:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:07:15 -参数 : []
2019-05-13 14:07:15 -耗时 : 0
2019-05-13 14:07:15 -返回值 : system/dept/deptTree
2019-05-13 14:07:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:07:15 -HTTP METHOD : GET
2019-05-13 14:07:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:07:15 -参数 : []
2019-05-13 14:07:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:07:15 -==> Parameters: 
2019-05-13 14:07:15 -<==      Total: 3
2019-05-13 14:07:15 -耗时 : 3
2019-05-13 14:07:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:07:17 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 14:07:17 -HTTP METHOD : POST
2019-05-13 14:07:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 14:07:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@2fed4b13, com.bootdo.moneyLog.vo.WaterLogVo@ed27076, com.bootdo.moneyLog.vo.HeatLogVo@6b96acd3]
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 14:07:17 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 14:07:17 -<==      Total: 1
2019-05-13 14:07:17 -耗时 : 124
2019-05-13 14:07:17 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, SumS2WaterLog=60, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=14, CountMMElecLog=0, SumSHeatLog=0, SumS3WaterLog=60, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, CountSElecLog=0, SumGSHeatLog=0, SumS1WaterLog=20, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=180, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, CountS3WaterLog=1, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountS1WaterLog=1, CountMWaterLog=1, CountS2WaterLog=1, CountMSElecLog=0, totalSum=841, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 14:07:41 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 14:07:41 -HTTP METHOD : GET
2019-05-13 14:07:41 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 14:07:41 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@cfccdc5, com.bootdo.moneyLog.vo.HeatLogVo@4f38ecc3, com.bootdo.moneyLog.vo.WaterLogVo@14bf0dc6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38cbf54b]
2019-05-13 14:07:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-13 14:07:41 -耗时 : 13
2019-05-13 14:07:41 -返回值 : null
2019-05-13 14:10:13 -Starting BootdoApplication on PC-201905091110 with PID 6976 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 14:10:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 14:10:13 -The following profiles are active: dev
2019-05-13 14:10:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Mon May 13 14:10:14 CST 2019]; root of context hierarchy
2019-05-13 14:10:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 14:10:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$73c65e4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$661f8cf4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 14:10:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 14:10:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:10:27 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 14:10:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 14:10:27 -Starting service [Tomcat]
2019-05-13 14:10:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 14:10:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 14:10:28 -Initializing Spring embedded WebApplicationContext
2019-05-13 14:10:28 -Root WebApplicationContext: initialization completed in 13901 ms
2019-05-13 14:10:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 14:10:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 14:10:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 14:10:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 14:10:29 -Filter xssFilter was not registered (disabled)
2019-05-13 14:10:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 14:10:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 14:10:29 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 14:10:29 -Servlet dispatcherServlet mapped to [/]
2019-05-13 14:10:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Mon May 13 14:10:14 CST 2019]; root of context hierarchy
2019-05-13 14:10:49 -Using default implementation for ThreadExecutor
2019-05-13 14:10:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 14:10:51 -Quartz Scheduler v.2.2.1 created.
2019-05-13 14:10:51 -RAMJobStore initialized.
2019-05-13 14:10:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 14:10:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 14:10:51 -Quartz scheduler version: 2.2.1
2019-05-13 14:10:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@582ea164
2019-05-13 14:10:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 14:10:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 14:10:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 14:10:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 14:10:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 14:10:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 14:10:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 14:10:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 14:10:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 14:10:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 14:10:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 14:10:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 14:10:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 14:10:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 14:10:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 14:10:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 14:10:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 14:10:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 14:10:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 14:10:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:10:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 14:10:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:10:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 14:10:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 14:10:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 14:10:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 14:10:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 14:10:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 14:10:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 14:10:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 14:10:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 14:10:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 14:10:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:10:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 14:10:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 14:10:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 14:10:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 14:10:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 14:10:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 14:10:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 14:10:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:10:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:10:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 14:10:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:10:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 14:10:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 14:10:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 14:10:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 14:10:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:10:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 14:10:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:10:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:10:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 14:10:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 14:10:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 14:10:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 14:10:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 14:10:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 14:10:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 14:10:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 14:10:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 14:10:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 14:10:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 14:10:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 14:10:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 14:10:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 14:10:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 14:10:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 14:10:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 14:10:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 14:10:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 14:10:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 14:10:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 14:10:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 14:10:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 14:10:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 14:10:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 14:10:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 14:10:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 14:10:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 14:10:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 14:10:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 14:10:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 14:10:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:10:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:10:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 14:10:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 14:10:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 14:10:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 14:10:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 14:10:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 14:10:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 14:10:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:10:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 14:10:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 14:10:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:10:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 14:10:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 14:10:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:10:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:10:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:10:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 14:10:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 14:10:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 14:10:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 14:10:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 14:10:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 14:10:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:10:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4ee37ca3: startup date [Mon May 13 14:10:14 CST 2019]; root of context hierarchy
2019-05-13 14:10:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:10:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:10:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:10:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 14:10:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 14:11:01 -Registering beans for JMX exposure on startup
2019-05-13 14:11:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 14:11:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 14:11:01 -Starting beans in phase 2147483647
2019-05-13 14:11:01 -Context refreshed
2019-05-13 14:11:01 -Found 1 custom documentation plugin(s)
2019-05-13 14:11:01 -Scanning for api listing references
2019-05-13 14:11:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 14:11:02 -Generating unique operation named: removeUsingPOST_1
2019-05-13 14:11:02 -Generating unique operation named: addUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: listUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_2
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_3
2019-05-13 14:11:03 -Generating unique operation named: saveUsingPOST_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPOST_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPUT_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 14:11:03 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 14:11:03 -Generating unique operation named: addUsingGET_2
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_2
2019-05-13 14:11:03 -Generating unique operation named: listUsingGET_2
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_4
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_5
2019-05-13 14:11:03 -Generating unique operation named: saveUsingPOST_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPOST_2
2019-05-13 14:11:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: addUsingGET_3
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_3
2019-05-13 14:11:03 -Generating unique operation named: listUsingGET_3
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_6
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_7
2019-05-13 14:11:03 -Generating unique operation named: saveUsingPOST_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingGET_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPOST_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPUT_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 14:11:03 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 14:11:03 -Generating unique operation named: addUsingGET_4
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_4
2019-05-13 14:11:03 -Generating unique operation named: listUsingGET_4
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_8
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_9
2019-05-13 14:11:03 -Generating unique operation named: saveUsingPOST_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingGET_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPOST_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPUT_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 14:11:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 14:11:03 -Generating unique operation named: ElecUsingGET_1
2019-05-13 14:11:03 -Generating unique operation named: addUsingGET_5
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_5
2019-05-13 14:11:03 -Generating unique operation named: listUsingGET_5
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_10
2019-05-13 14:11:03 -Generating unique operation named: removeUsingPOST_11
2019-05-13 14:11:03 -Generating unique operation named: saveUsingPOST_5
2019-05-13 14:11:03 -Generating unique operation named: updateUsingGET_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPOST_5
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPUT_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 14:11:03 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 14:11:03 -Generating unique operation named: editUsingGET_6
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPOST_6
2019-05-13 14:11:04 -Generating unique operation named: addUsingGET_6
2019-05-13 14:11:04 -Generating unique operation named: editUsingGET_7
2019-05-13 14:11:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_7
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_12
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_13
2019-05-13 14:11:04 -Generating unique operation named: saveUsingPOST_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingGET_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPOST_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPUT_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 14:11:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 14:11:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 14:11:04 -Generating unique operation named: addUsingGET_7
2019-05-13 14:11:04 -Generating unique operation named: editUsingGET_8
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_8
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_14
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_15
2019-05-13 14:11:04 -Generating unique operation named: saveUsingPOST_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingGET_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPOST_8
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPUT_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 14:11:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 14:11:04 -Generating unique operation named: addUsingGET_8
2019-05-13 14:11:04 -Generating unique operation named: editUsingGET_9
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_9
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_16
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_17
2019-05-13 14:11:04 -Generating unique operation named: saveUsingPOST_8
2019-05-13 14:11:04 -Generating unique operation named: updateUsingGET_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPOST_9
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPUT_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 14:11:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 14:11:04 -Generating unique operation named: addUsingGET_9
2019-05-13 14:11:04 -Generating unique operation named: editUsingGET_10
2019-05-13 14:11:04 -Generating unique operation named: infoUsingGET_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingPOST_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingPUT_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 14:11:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_10
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_18
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_19
2019-05-13 14:11:04 -Generating unique operation named: saveUsingPOST_9
2019-05-13 14:11:04 -Generating unique operation named: updateUsingPOST_10
2019-05-13 14:11:04 -Generating unique operation named: listUsingGET_11
2019-05-13 14:11:04 -Generating unique operation named: removeUsingPOST_20
2019-05-13 14:11:05 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 14:11:05 -Generating unique operation named: addUsingGET_10
2019-05-13 14:11:05 -Generating unique operation named: editUsingGET_11
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_12
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_21
2019-05-13 14:11:05 -Generating unique operation named: saveUsingPOST_10
2019-05-13 14:11:05 -Generating unique operation named: treeUsingGET_1
2019-05-13 14:11:05 -Generating unique operation named: treeUsingGET_2
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPOST_11
2019-05-13 14:11:05 -Generating unique operation named: addUsingGET_11
2019-05-13 14:11:05 -Generating unique operation named: editUsingGET_12
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_13
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_22
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_23
2019-05-13 14:11:05 -Generating unique operation named: saveUsingPOST_11
2019-05-13 14:11:05 -Generating unique operation named: updateUsingGET_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPOST_12
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPUT_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 14:11:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 14:11:05 -Generating unique operation named: addUsingGET_12
2019-05-13 14:11:05 -Generating unique operation named: editUsingGET_13
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_14
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_24
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_25
2019-05-13 14:11:05 -Generating unique operation named: saveUsingPOST_12
2019-05-13 14:11:05 -Generating unique operation named: updateUsingGET_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPOST_13
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPUT_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 14:11:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 14:11:05 -Generating unique operation named: addUsingGET_13
2019-05-13 14:11:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 14:11:05 -Generating unique operation named: editUsingGET_14
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_15
2019-05-13 14:11:05 -Generating unique operation named: saveUsingPOST_13
2019-05-13 14:11:05 -Generating unique operation named: saveUsingPOST_14
2019-05-13 14:11:05 -Generating unique operation named: updateUsingPOST_14
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_16
2019-05-13 14:11:05 -Generating unique operation named: listUsingHEAD_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingPOST_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingPUT_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingPATCH_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingDELETE_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 14:11:05 -Generating unique operation named: listUsingTRACE_1
2019-05-13 14:11:05 -Generating unique operation named: countDDUsingGET_1
2019-05-13 14:11:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 14:11:05 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 14:11:05 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 14:11:05 -Generating unique operation named: addUsingGET_14
2019-05-13 14:11:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 14:11:05 -Generating unique operation named: editUsingGET_15
2019-05-13 14:11:05 -Generating unique operation named: listUsingGET_17
2019-05-13 14:11:05 -Generating unique operation named: removeUsingPOST_26
2019-05-13 14:11:06 -Generating unique operation named: saveUsingPOST_15
2019-05-13 14:11:06 -Generating unique operation named: treeUsingGET_3
2019-05-13 14:11:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPOST_15
2019-05-13 14:11:06 -Generating unique operation named: addUsingGET_15
2019-05-13 14:11:06 -Generating unique operation named: editUsingGET_16
2019-05-13 14:11:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 14:11:06 -Generating unique operation named: listUsingGET_18
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_27
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_28
2019-05-13 14:11:06 -Generating unique operation named: saveUsingPOST_16
2019-05-13 14:11:06 -Generating unique operation named: updateUsingGET_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPOST_16
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPUT_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 14:11:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 14:11:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 14:11:06 -Generating unique operation named: addUsingGET_16
2019-05-13 14:11:06 -Generating unique operation named: editUsingGET_17
2019-05-13 14:11:06 -Generating unique operation named: listUsingGET_19
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_29
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_30
2019-05-13 14:11:06 -Generating unique operation named: saveUsingPOST_17
2019-05-13 14:11:06 -Generating unique operation named: updateUsingGET_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPOST_17
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPUT_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 14:11:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 14:11:06 -Generating unique operation named: addUsingGET_17
2019-05-13 14:11:06 -Generating unique operation named: editUsingGET_18
2019-05-13 14:11:06 -Generating unique operation named: listUsingGET_20
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_31
2019-05-13 14:11:06 -Generating unique operation named: removeUsingPOST_32
2019-05-13 14:11:06 -Generating unique operation named: saveUsingPOST_18
2019-05-13 14:11:06 -Generating unique operation named: updateUsingGET_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPOST_18
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPUT_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 14:11:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 14:11:06 -Starting Quartz Scheduler now
2019-05-13 14:11:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 14:11:06 -Starting...
2019-05-13 14:11:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 14:11:06 -Started.
2019-05-13 14:11:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 14:11:06 -Using a shared selector for servlet write/read
2019-05-13 14:11:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 14:11:06 -Started BootdoApplication in 55.837 seconds (JVM running for 58.859)
2019-05-13 14:11:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 14:11:07 -==> Parameters: 
2019-05-13 14:11:07 -<==      Total: 1
2019-05-13 14:11:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 14:12:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 14:12:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 14:12:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-05-13 14:12:05 -Enabling session validation scheduler...
2019-05-13 14:12:05 -请求地址 : http://localhost:8081/login;JSESSIONID=17a725d6-40db-41f6-ad5b-e8316eb66b9c
2019-05-13 14:12:05 -HTTP METHOD : GET
2019-05-13 14:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:12:05 -参数 : [{}]
2019-05-13 14:12:05 -耗时 : 4
2019-05-13 14:12:05 -返回值 : login
2019-05-13 14:12:06 -请求地址 : http://localhost:8081/getVerify
2019-05-13 14:12:06 -HTTP METHOD : GET
2019-05-13 14:12:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 14:12:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@436836aa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4dafd0b7]
2019-05-13 14:12:06 -2718
2019-05-13 14:12:06 -耗时 : 554
2019-05-13 14:12:06 -返回值 : null
2019-05-13 14:12:10 -请求地址 : http://localhost:8081/login
2019-05-13 14:12:10 -HTTP METHOD : POST
2019-05-13 14:12:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 14:12:10 -参数 : [admin, 111111, 2718, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ac7e196]
2019-05-13 14:12:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 14:12:11 -==> Parameters: admin(String)
2019-05-13 14:12:11 -<==      Total: 1
2019-05-13 14:12:11 -耗时 : 487
2019-05-13 14:12:11 -返回值 : {msg=操作成功, code=0}
2019-05-13 14:12:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 14:12:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:12:11 -==> Parameters: 1(Long), admin(String), 登录(String), 487(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 14:12:11.514(Timestamp)
2019-05-13 14:12:11 -请求地址 : http://localhost:8081/index
2019-05-13 14:12:11 -HTTP METHOD : GET
2019-05-13 14:12:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 14:12:11 -参数 : [{}]
2019-05-13 14:12:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 14:12:11 -==> Parameters: 1(Long)
2019-05-13 14:12:11 -<==      Total: 49
2019-05-13 14:12:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 14:12:11 -==> Parameters: 138(Long)
2019-05-13 14:12:11 -<==      Total: 1
2019-05-13 14:12:11 -耗时 : 183
2019-05-13 14:12:11 -返回值 : index_v1
2019-05-13 14:12:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:12:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 183(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 14:12:11.818(Timestamp)
2019-05-13 14:12:11 -请求地址 : http://localhost:8081/main
2019-05-13 14:12:11 -HTTP METHOD : GET
2019-05-13 14:12:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:12:11 -参数 : []
2019-05-13 14:12:11 -耗时 : 1
2019-05-13 14:12:11 -返回值 : main
2019-05-13 14:12:12 -<==    Updates: 1
2019-05-13 14:12:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 14:12:12 -HTTP METHOD : GET
2019-05-13 14:12:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 14:12:12 -参数 : []
2019-05-13 14:12:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 14:12:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 14:12:12 -<==    Updates: 1
2019-05-13 14:12:12 -请求地址 : http://localhost:8081/main
2019-05-13 14:12:12 -HTTP METHOD : GET
2019-05-13 14:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:12:12 -参数 : []
2019-05-13 14:12:12 -耗时 : 1
2019-05-13 14:12:12 -返回值 : main
2019-05-13 14:12:12 -<==      Total: 0
2019-05-13 14:12:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 14:12:12 -==> Parameters: 1(Long), 0(String)
2019-05-13 14:12:12 -<==      Total: 1
2019-05-13 14:12:12 -耗时 : 128
2019-05-13 14:12:12 -返回值 : com.bootdo.common.utils.PageUtils@7f328a44
2019-05-13 14:12:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 14:12:17 -==> Parameters: 1(Long)
2019-05-13 14:12:17 -<==      Total: 93
2019-05-13 14:12:17 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 14:12:17 -HTTP METHOD : GET
2019-05-13 14:12:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 14:12:17 -参数 : []
2019-05-13 14:12:17 -耗时 : 27
2019-05-13 14:12:17 -返回值 : charts/countMM
2019-05-13 14:12:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 14:12:17 -HTTP METHOD : GET
2019-05-13 14:12:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 14:12:17 -参数 : [userType]
2019-05-13 14:12:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 14:12:17 -==> Parameters: userType(String)
2019-05-13 14:12:17 -<==      Total: 4
2019-05-13 14:12:17 -耗时 : 40
2019-05-13 14:12:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 14:12:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:12:23 -HTTP METHOD : GET
2019-05-13 14:12:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:12:23 -参数 : []
2019-05-13 14:12:23 -耗时 : 0
2019-05-13 14:12:23 -返回值 : system/dept/deptTree
2019-05-13 14:12:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:12:23 -HTTP METHOD : GET
2019-05-13 14:12:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:12:23 -参数 : []
2019-05-13 14:12:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:12:23 -==> Parameters: 
2019-05-13 14:12:23 -<==      Total: 3
2019-05-13 14:12:23 -耗时 : 28
2019-05-13 14:12:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:12:26 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 14:12:26 -HTTP METHOD : GET
2019-05-13 14:12:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 14:12:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4c81da44, com.bootdo.moneyLog.vo.HeatLogVo@19e8d790, com.bootdo.moneyLog.vo.WaterLogVo@3de1e15d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50f16e2a]
2019-05-13 14:30:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '?%' and user_org = ? 
2019-05-13 14:31:13 -耗时 : 1127270
2019-05-13 14:31:15 -返回值 : null
2019-05-13 14:35:22 -请求地址 : http://localhost:8081/main
2019-05-13 14:35:22 -HTTP METHOD : GET
2019-05-13 14:35:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:35:22 -参数 : []
2019-05-13 14:35:22 -耗时 : 0
2019-05-13 14:35:22 -返回值 : main
2019-05-13 14:35:22 -请求地址 : http://localhost:8081/main
2019-05-13 14:35:22 -HTTP METHOD : GET
2019-05-13 14:35:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:35:22 -参数 : []
2019-05-13 14:35:22 -耗时 : 0
2019-05-13 14:35:22 -返回值 : main
2019-05-13 14:44:21 -Starting BootdoApplication on PC-201905091110 with PID 24340 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 14:44:21 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 14:44:21 -The following profiles are active: dev
2019-05-13 14:44:21 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:44:21 CST 2019]; root of context hierarchy
2019-05-13 14:44:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 14:44:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 14:44:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 14:44:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:44:31 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 14:44:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 14:44:31 -Starting service [Tomcat]
2019-05-13 14:44:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 14:44:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 14:44:32 -Initializing Spring embedded WebApplicationContext
2019-05-13 14:44:32 -Root WebApplicationContext: initialization completed in 10990 ms
2019-05-13 14:44:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 14:44:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 14:44:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 14:44:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 14:44:33 -Filter xssFilter was not registered (disabled)
2019-05-13 14:44:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 14:44:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 14:44:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 14:44:33 -Servlet dispatcherServlet mapped to [/]
2019-05-13 14:44:47 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:44:21 CST 2019]; root of context hierarchy
2019-05-13 14:44:47 -Using default implementation for ThreadExecutor
2019-05-13 14:44:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 14:44:47 -Quartz Scheduler v.2.2.1 created.
2019-05-13 14:44:48 -RAMJobStore initialized.
2019-05-13 14:44:48 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 14:44:48 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 14:44:48 -Quartz scheduler version: 2.2.1
2019-05-13 14:44:48 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-13 14:44:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 14:44:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 14:44:52 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 14:44:52 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 14:44:52 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 14:44:52 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 14:44:52 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 14:44:52 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 14:44:52 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 14:44:52 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 14:44:52 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 14:44:52 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 14:44:52 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 14:44:52 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 14:44:52 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 14:44:52 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 14:44:52 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:44:52 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 14:44:52 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:44:52 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 14:44:52 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 14:44:52 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 14:44:52 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 14:44:52 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 14:44:52 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 14:44:52 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 14:44:52 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 14:44:52 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 14:44:52 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 14:44:52 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 14:44:52 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 14:44:52 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 14:44:52 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 14:44:52 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:44:52 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:44:52 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 14:44:52 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 14:44:52 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 14:44:52 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:44:52 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:44:52 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 14:44:52 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 14:44:52 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 14:44:52 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 14:44:52 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 14:44:52 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 14:44:52 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 14:44:52 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 14:44:52 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 14:44:52 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 14:44:52 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 14:44:52 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 14:44:52 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 14:44:52 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 14:44:52 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 14:44:52 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 14:44:52 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 14:44:52 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 14:44:52 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 14:44:52 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 14:44:52 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 14:44:52 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 14:44:52 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 14:44:52 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 14:44:52 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 14:44:52 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 14:44:52 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 14:44:52 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 14:44:52 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 14:44:52 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 14:44:52 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:44:52 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 14:44:52 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:44:52 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 14:44:52 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 14:44:52 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 14:44:52 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 14:44:52 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:44:52 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 14:44:52 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:44:52 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 14:44:52 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 14:44:52 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:44:52 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:44:52 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 14:44:52 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 14:44:52 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 14:44:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 14:44:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 14:44:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 14:44:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:44:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:44:21 CST 2019]; root of context hierarchy
2019-05-13 14:44:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:44:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:44:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:44:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 14:44:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 14:44:56 -Registering beans for JMX exposure on startup
2019-05-13 14:44:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 14:44:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 14:44:56 -Starting beans in phase 2147483647
2019-05-13 14:44:56 -Context refreshed
2019-05-13 14:44:56 -Found 1 custom documentation plugin(s)
2019-05-13 14:44:56 -Scanning for api listing references
2019-05-13 14:44:57 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_1
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_2
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_3
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPUT_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 14:44:58 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_2
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_2
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_2
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_4
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_5
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_2
2019-05-13 14:44:58 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_3
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_3
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_3
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_6
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_7
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingGET_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPUT_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 14:44:58 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_4
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_4
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_4
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_8
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_9
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingGET_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPUT_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 14:44:58 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 14:44:58 -Generating unique operation named: ElecUsingGET_1
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_5
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_5
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_5
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_10
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_11
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingGET_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPUT_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 14:44:58 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_6
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_6
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_6
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_6
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_7
2019-05-13 14:44:58 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 14:44:58 -Generating unique operation named: listUsingGET_7
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_12
2019-05-13 14:44:58 -Generating unique operation named: removeUsingPOST_13
2019-05-13 14:44:58 -Generating unique operation named: saveUsingPOST_6
2019-05-13 14:44:58 -Generating unique operation named: updateUsingGET_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPOST_7
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPUT_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 14:44:58 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 14:44:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 14:44:58 -Generating unique operation named: addUsingGET_7
2019-05-13 14:44:58 -Generating unique operation named: editUsingGET_8
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_8
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_14
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_15
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 14:44:59 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_8
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_9
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_9
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_16
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_17
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 14:44:59 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_9
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_10
2019-05-13 14:44:59 -Generating unique operation named: infoUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingPOST_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingPUT_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 14:44:59 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_10
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_18
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_19
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_10
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_11
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_20
2019-05-13 14:44:59 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_10
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_11
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_12
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_21
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_10
2019-05-13 14:44:59 -Generating unique operation named: treeUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: treeUsingGET_2
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_11
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_11
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_12
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_13
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_22
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_23
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_11
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_12
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 14:44:59 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_12
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_13
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_14
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_24
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_25
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_12
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_13
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 14:44:59 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_13
2019-05-13 14:44:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_14
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_15
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_13
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_14
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_14
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_16
2019-05-13 14:44:59 -Generating unique operation named: listUsingHEAD_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingPOST_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingPUT_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingPATCH_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingDELETE_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 14:44:59 -Generating unique operation named: listUsingTRACE_1
2019-05-13 14:44:59 -Generating unique operation named: countDDUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 14:44:59 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_14
2019-05-13 14:44:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_15
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_17
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_26
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_15
2019-05-13 14:44:59 -Generating unique operation named: treeUsingGET_3
2019-05-13 14:44:59 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_15
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_15
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_16
2019-05-13 14:44:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_18
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_27
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_28
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_16
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_16
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 14:44:59 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 14:44:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 14:44:59 -Generating unique operation named: addUsingGET_16
2019-05-13 14:44:59 -Generating unique operation named: editUsingGET_17
2019-05-13 14:44:59 -Generating unique operation named: listUsingGET_19
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_29
2019-05-13 14:44:59 -Generating unique operation named: removeUsingPOST_30
2019-05-13 14:44:59 -Generating unique operation named: saveUsingPOST_17
2019-05-13 14:44:59 -Generating unique operation named: updateUsingGET_11
2019-05-13 14:44:59 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPOST_17
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPUT_11
2019-05-13 14:44:59 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 14:44:59 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 14:45:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 14:45:00 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 14:45:00 -Generating unique operation named: addUsingGET_17
2019-05-13 14:45:00 -Generating unique operation named: editUsingGET_18
2019-05-13 14:45:00 -Generating unique operation named: listUsingGET_20
2019-05-13 14:45:00 -Generating unique operation named: removeUsingPOST_31
2019-05-13 14:45:00 -Generating unique operation named: removeUsingPOST_32
2019-05-13 14:45:00 -Generating unique operation named: saveUsingPOST_18
2019-05-13 14:45:00 -Generating unique operation named: updateUsingGET_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingPOST_18
2019-05-13 14:45:00 -Generating unique operation named: updateUsingPUT_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 14:45:00 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 14:45:00 -Starting Quartz Scheduler now
2019-05-13 14:45:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 14:45:00 -Starting...
2019-05-13 14:45:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 14:45:00 -Started.
2019-05-13 14:45:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 14:45:01 -Using a shared selector for servlet write/read
2019-05-13 14:45:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 14:45:01 -Started BootdoApplication in 41.9 seconds (JVM running for 42.827)
2019-05-13 14:45:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 14:45:02 -==> Parameters: 
2019-05-13 14:45:03 -<==      Total: 1
2019-05-13 14:45:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 14:45:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 14:45:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-05-13 14:45:40 -Enabling session validation scheduler...
2019-05-13 14:45:40 -请求地址 : http://localhost:8081/login;JSESSIONID=021cee16-ec58-476a-b0e6-5e236e2bf0fb
2019-05-13 14:45:40 -HTTP METHOD : GET
2019-05-13 14:45:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:45:40 -参数 : [{}]
2019-05-13 14:45:40 -耗时 : 5
2019-05-13 14:45:40 -返回值 : login
2019-05-13 14:45:41 -请求地址 : http://localhost:8081/getVerify
2019-05-13 14:45:41 -HTTP METHOD : GET
2019-05-13 14:45:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 14:45:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f11c92f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@9b86401]
2019-05-13 14:45:44 -8576
2019-05-13 14:45:44 -耗时 : 3215
2019-05-13 14:45:44 -返回值 : null
2019-05-13 14:45:45 -请求地址 : http://localhost:8081/login
2019-05-13 14:45:45 -HTTP METHOD : GET
2019-05-13 14:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:45:45 -参数 : [{}]
2019-05-13 14:45:45 -耗时 : 1
2019-05-13 14:45:45 -返回值 : login
2019-05-13 14:45:50 -请求地址 : http://localhost:8081/login
2019-05-13 14:45:50 -HTTP METHOD : POST
2019-05-13 14:45:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 14:45:50 -参数 : [admin, 111111, 8576, org.apache.shiro.web.servlet.ShiroHttpServletRequest@53435dfa]
2019-05-13 14:45:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 14:45:50 -==> Parameters: admin(String)
2019-05-13 14:45:50 -<==      Total: 1
2019-05-13 14:45:50 -耗时 : 189
2019-05-13 14:45:50 -返回值 : {msg=操作成功, code=0}
2019-05-13 14:45:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 14:45:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:45:51 -==> Parameters: 1(Long), admin(String), 登录(String), 190(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 14:45:50.994(Timestamp)
2019-05-13 14:45:51 -<==    Updates: 1
2019-05-13 14:45:51 -请求地址 : http://localhost:8081/index
2019-05-13 14:45:51 -HTTP METHOD : GET
2019-05-13 14:45:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 14:45:51 -参数 : [{}]
2019-05-13 14:45:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 14:45:51 -==> Parameters: 1(Long)
2019-05-13 14:45:51 -<==      Total: 49
2019-05-13 14:45:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 14:45:51 -==> Parameters: 138(Long)
2019-05-13 14:45:51 -<==      Total: 1
2019-05-13 14:45:51 -耗时 : 226
2019-05-13 14:45:51 -返回值 : index_v1
2019-05-13 14:45:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:45:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 226(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 14:45:51.491(Timestamp)
2019-05-13 14:45:51 -<==    Updates: 1
2019-05-13 14:45:51 -请求地址 : http://localhost:8081/main
2019-05-13 14:45:51 -HTTP METHOD : GET
2019-05-13 14:45:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:45:51 -参数 : []
2019-05-13 14:45:51 -耗时 : 0
2019-05-13 14:45:51 -返回值 : main
2019-05-13 14:45:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 14:45:52 -HTTP METHOD : GET
2019-05-13 14:45:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 14:45:52 -参数 : []
2019-05-13 14:45:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 14:45:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 14:45:52 -<==      Total: 0
2019-05-13 14:45:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 14:45:52 -==> Parameters: 1(Long), 0(String)
2019-05-13 14:45:52 -<==      Total: 1
2019-05-13 14:45:52 -耗时 : 75
2019-05-13 14:45:52 -返回值 : com.bootdo.common.utils.PageUtils@4184f115
2019-05-13 14:45:52 -请求地址 : http://localhost:8081/main
2019-05-13 14:45:52 -HTTP METHOD : GET
2019-05-13 14:45:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:45:52 -参数 : []
2019-05-13 14:45:52 -耗时 : 1
2019-05-13 14:45:52 -返回值 : main
2019-05-13 14:45:53 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-05-13 14:46:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 14:46:14 -==> Parameters: 1(Long)
2019-05-13 14:46:14 -<==      Total: 93
2019-05-13 14:46:14 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 14:46:14 -HTTP METHOD : GET
2019-05-13 14:46:14 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 14:46:14 -参数 : []
2019-05-13 14:46:14 -耗时 : 8
2019-05-13 14:46:14 -返回值 : charts/countMM
2019-05-13 14:46:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 14:46:15 -HTTP METHOD : GET
2019-05-13 14:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 14:46:15 -参数 : [userType]
2019-05-13 14:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 14:46:15 -==> Parameters: userType(String)
2019-05-13 14:46:15 -<==      Total: 4
2019-05-13 14:46:15 -耗时 : 41
2019-05-13 14:46:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 14:46:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:46:21 -HTTP METHOD : GET
2019-05-13 14:46:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:46:21 -参数 : []
2019-05-13 14:46:21 -耗时 : 0
2019-05-13 14:46:21 -返回值 : system/dept/deptTree
2019-05-13 14:46:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:46:21 -HTTP METHOD : GET
2019-05-13 14:46:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:46:21 -参数 : []
2019-05-13 14:46:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:46:21 -==> Parameters: 
2019-05-13 14:46:21 -<==      Total: 3
2019-05-13 14:46:21 -耗时 : 15
2019-05-13 14:46:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:46:26 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 14:46:26 -HTTP METHOD : GET
2019-05-13 14:46:26 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 14:46:26 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4f7c99c8, com.bootdo.moneyLog.vo.HeatLogVo@2ead473, com.bootdo.moneyLog.vo.WaterLogVo@d2019b8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e02909f]
2019-05-13 14:46:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE '%?%' and user_org = ? 
2019-05-13 14:46:26 -耗时 : 443
2019-05-13 14:46:26 -返回值 : null
2019-05-13 14:48:24 -Starting BootdoApplication on PC-201905091110 with PID 19344 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 14:48:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 14:48:24 -The following profiles are active: dev
2019-05-13 14:48:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:48:24 CST 2019]; root of context hierarchy
2019-05-13 14:48:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 14:48:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9594011c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$87ed2fc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 14:48:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 14:48:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 14:48:32 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 14:48:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 14:48:32 -Starting service [Tomcat]
2019-05-13 14:48:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 14:48:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 14:48:33 -Initializing Spring embedded WebApplicationContext
2019-05-13 14:48:33 -Root WebApplicationContext: initialization completed in 8863 ms
2019-05-13 14:48:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 14:48:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 14:48:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 14:48:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 14:48:33 -Filter xssFilter was not registered (disabled)
2019-05-13 14:48:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 14:48:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 14:48:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 14:48:33 -Servlet dispatcherServlet mapped to [/]
2019-05-13 14:48:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:48:24 CST 2019]; root of context hierarchy
2019-05-13 14:48:42 -Using default implementation for ThreadExecutor
2019-05-13 14:48:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 14:48:42 -Quartz Scheduler v.2.2.1 created.
2019-05-13 14:48:42 -RAMJobStore initialized.
2019-05-13 14:48:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 14:48:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 14:48:42 -Quartz scheduler version: 2.2.1
2019-05-13 14:48:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54c11750
2019-05-13 14:48:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 14:48:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 14:48:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 14:48:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 14:48:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 14:48:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 14:48:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 14:48:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 14:48:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 14:48:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 14:48:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 14:48:46 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 14:48:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 14:48:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 14:48:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 14:48:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 14:48:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 14:48:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 14:48:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:48:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 14:48:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 14:48:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 14:48:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 14:48:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 14:48:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 14:48:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 14:48:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 14:48:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 14:48:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 14:48:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 14:48:46 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 14:48:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 14:48:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 14:48:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 14:48:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 14:48:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 14:48:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 14:48:46 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 14:48:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 14:48:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:48:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 14:48:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:48:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 14:48:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 14:48:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 14:48:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 14:48:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 14:48:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 14:48:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 14:48:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 14:48:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 14:48:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 14:48:46 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 14:48:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 14:48:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 14:48:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 14:48:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 14:48:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 14:48:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 14:48:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 14:48:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 14:48:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 14:48:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 14:48:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 14:48:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 14:48:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 14:48:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 14:48:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 14:48:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 14:48:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 14:48:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 14:48:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:48:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 14:48:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 14:48:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 14:48:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 14:48:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 14:48:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 14:48:46 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 14:48:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 14:48:46 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 14:48:46 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 14:48:46 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 14:48:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 14:48:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 14:48:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 14:48:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 14:48:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 14:48:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 14:48:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 14:48:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 14:48:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:48:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 14:48:24 CST 2019]; root of context hierarchy
2019-05-13 14:48:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:48:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:48:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 14:48:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 14:48:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 14:48:50 -Registering beans for JMX exposure on startup
2019-05-13 14:48:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 14:48:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 14:48:50 -Starting beans in phase 2147483647
2019-05-13 14:48:50 -Context refreshed
2019-05-13 14:48:50 -Found 1 custom documentation plugin(s)
2019-05-13 14:48:50 -Scanning for api listing references
2019-05-13 14:48:50 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_1
2019-05-13 14:48:51 -Generating unique operation named: addUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_2
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_3
2019-05-13 14:48:51 -Generating unique operation named: saveUsingPOST_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPOST_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPUT_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 14:48:51 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 14:48:51 -Generating unique operation named: addUsingGET_2
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_2
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_2
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_4
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_5
2019-05-13 14:48:51 -Generating unique operation named: saveUsingPOST_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPOST_2
2019-05-13 14:48:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: addUsingGET_3
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_3
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_3
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_6
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_7
2019-05-13 14:48:51 -Generating unique operation named: saveUsingPOST_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingGET_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPOST_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPUT_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 14:48:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 14:48:51 -Generating unique operation named: addUsingGET_4
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_4
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_4
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_8
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_9
2019-05-13 14:48:51 -Generating unique operation named: saveUsingPOST_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingGET_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPOST_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPUT_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 14:48:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 14:48:51 -Generating unique operation named: ElecUsingGET_1
2019-05-13 14:48:51 -Generating unique operation named: addUsingGET_5
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_5
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_5
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_10
2019-05-13 14:48:51 -Generating unique operation named: removeUsingPOST_11
2019-05-13 14:48:51 -Generating unique operation named: saveUsingPOST_5
2019-05-13 14:48:51 -Generating unique operation named: updateUsingGET_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPOST_5
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPUT_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 14:48:51 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 14:48:51 -Generating unique operation named: editUsingGET_6
2019-05-13 14:48:51 -Generating unique operation named: listUsingGET_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_6
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_6
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_7
2019-05-13 14:48:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_7
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_12
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_13
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingGET_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPUT_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 14:48:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 14:48:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_7
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_8
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_8
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_14
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_15
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingGET_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPUT_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 14:48:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_8
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_9
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_9
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_16
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_17
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingGET_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPUT_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 14:48:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_9
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_10
2019-05-13 14:48:52 -Generating unique operation named: infoUsingGET_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingPOST_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingPUT_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 14:48:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_10
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_18
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_19
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_10
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_11
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_20
2019-05-13 14:48:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_10
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_11
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_12
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_21
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_10
2019-05-13 14:48:52 -Generating unique operation named: treeUsingGET_1
2019-05-13 14:48:52 -Generating unique operation named: treeUsingGET_2
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_11
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_11
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_12
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_13
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_22
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_23
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_11
2019-05-13 14:48:52 -Generating unique operation named: updateUsingGET_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_12
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPUT_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 14:48:52 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_12
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_13
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_14
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_24
2019-05-13 14:48:52 -Generating unique operation named: removeUsingPOST_25
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_12
2019-05-13 14:48:52 -Generating unique operation named: updateUsingGET_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_13
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPUT_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 14:48:52 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 14:48:52 -Generating unique operation named: addUsingGET_13
2019-05-13 14:48:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 14:48:52 -Generating unique operation named: editUsingGET_14
2019-05-13 14:48:52 -Generating unique operation named: listUsingGET_15
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_13
2019-05-13 14:48:52 -Generating unique operation named: saveUsingPOST_14
2019-05-13 14:48:52 -Generating unique operation named: updateUsingPOST_14
2019-05-13 14:48:53 -Generating unique operation named: listUsingGET_16
2019-05-13 14:48:53 -Generating unique operation named: listUsingHEAD_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingPOST_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingPUT_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingPATCH_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingDELETE_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 14:48:53 -Generating unique operation named: listUsingTRACE_1
2019-05-13 14:48:53 -Generating unique operation named: countDDUsingGET_1
2019-05-13 14:48:53 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 14:48:53 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 14:48:53 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 14:48:53 -Generating unique operation named: addUsingGET_14
2019-05-13 14:48:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 14:48:53 -Generating unique operation named: editUsingGET_15
2019-05-13 14:48:53 -Generating unique operation named: listUsingGET_17
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_26
2019-05-13 14:48:53 -Generating unique operation named: saveUsingPOST_15
2019-05-13 14:48:53 -Generating unique operation named: treeUsingGET_3
2019-05-13 14:48:53 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPOST_15
2019-05-13 14:48:53 -Generating unique operation named: addUsingGET_15
2019-05-13 14:48:53 -Generating unique operation named: editUsingGET_16
2019-05-13 14:48:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 14:48:53 -Generating unique operation named: listUsingGET_18
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_27
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_28
2019-05-13 14:48:53 -Generating unique operation named: saveUsingPOST_16
2019-05-13 14:48:53 -Generating unique operation named: updateUsingGET_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPOST_16
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPUT_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 14:48:53 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 14:48:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 14:48:53 -Generating unique operation named: addUsingGET_16
2019-05-13 14:48:53 -Generating unique operation named: editUsingGET_17
2019-05-13 14:48:53 -Generating unique operation named: listUsingGET_19
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_29
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_30
2019-05-13 14:48:53 -Generating unique operation named: saveUsingPOST_17
2019-05-13 14:48:53 -Generating unique operation named: updateUsingGET_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPOST_17
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPUT_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 14:48:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 14:48:53 -Generating unique operation named: addUsingGET_17
2019-05-13 14:48:53 -Generating unique operation named: editUsingGET_18
2019-05-13 14:48:53 -Generating unique operation named: listUsingGET_20
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_31
2019-05-13 14:48:53 -Generating unique operation named: removeUsingPOST_32
2019-05-13 14:48:53 -Generating unique operation named: saveUsingPOST_18
2019-05-13 14:48:53 -Generating unique operation named: updateUsingGET_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPOST_18
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPUT_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 14:48:53 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 14:48:53 -Starting Quartz Scheduler now
2019-05-13 14:48:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 14:48:53 -Starting...
2019-05-13 14:48:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 14:48:53 -Started.
2019-05-13 14:48:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 14:48:53 -Using a shared selector for servlet write/read
2019-05-13 14:48:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 14:48:53 -Started BootdoApplication in 30.77 seconds (JVM running for 31.599)
2019-05-13 14:48:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 14:48:54 -==> Parameters: 
2019-05-13 14:48:54 -<==      Total: 1
2019-05-13 14:49:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 14:49:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 14:49:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 14:49:53 -FrameworkServlet 'dispatcherServlet': initialization completed in 119 ms
2019-05-13 14:49:53 -Enabling session validation scheduler...
2019-05-13 14:49:53 -请求地址 : http://localhost:8081/login;JSESSIONID=a7e7a240-5085-4853-af18-523baa1c4b5f
2019-05-13 14:49:53 -HTTP METHOD : GET
2019-05-13 14:49:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:49:53 -参数 : [{}]
2019-05-13 14:49:53 -耗时 : 9
2019-05-13 14:49:53 -返回值 : login
2019-05-13 14:49:54 -请求地址 : http://localhost:8081/login;JSESSIONID=a7e7a240-5085-4853-af18-523baa1c4b5f
2019-05-13 14:49:54 -HTTP METHOD : GET
2019-05-13 14:49:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:49:54 -参数 : [{}]
2019-05-13 14:49:54 -耗时 : 0
2019-05-13 14:49:54 -返回值 : login
2019-05-13 14:49:54 -请求地址 : http://localhost:8081/getVerify
2019-05-13 14:49:54 -HTTP METHOD : GET
2019-05-13 14:49:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 14:49:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4fcd4748, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14fb86bd]
2019-05-13 14:49:55 -请求地址 : http://localhost:8081/getVerify
2019-05-13 14:49:55 -HTTP METHOD : GET
2019-05-13 14:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 14:49:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73f12abf, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5723edc7]
2019-05-13 14:49:55 -4050
2019-05-13 14:49:55 -4966
2019-05-13 14:49:55 -耗时 : 787
2019-05-13 14:49:55 -返回值 : null
2019-05-13 14:49:55 -耗时 : 602
2019-05-13 14:49:55 -返回值 : null
2019-05-13 14:49:55 -请求地址 : http://localhost:8081/login
2019-05-13 14:49:55 -HTTP METHOD : GET
2019-05-13 14:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:49:55 -参数 : [{}]
2019-05-13 14:49:55 -耗时 : 0
2019-05-13 14:49:55 -返回值 : login
2019-05-13 14:50:02 -请求地址 : http://localhost:8081/login
2019-05-13 14:50:02 -HTTP METHOD : POST
2019-05-13 14:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 14:50:02 -参数 : [admin, 111111, 4050, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2aac73de]
2019-05-13 14:50:02 -耗时 : 10
2019-05-13 14:50:02 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-13 14:50:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 14:50:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:50:02 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 14:50:02.175(Timestamp)
2019-05-13 14:50:02 -<==    Updates: 1
2019-05-13 14:50:05 -请求地址 : http://localhost:8081/login;JSESSIONID=a7e7a240-5085-4853-af18-523baa1c4b5f
2019-05-13 14:50:05 -HTTP METHOD : GET
2019-05-13 14:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:50:05 -参数 : [{}]
2019-05-13 14:50:05 -耗时 : 0
2019-05-13 14:50:05 -返回值 : login
2019-05-13 14:50:05 -请求地址 : http://localhost:8081/getVerify
2019-05-13 14:50:05 -HTTP METHOD : GET
2019-05-13 14:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 14:50:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d3669d6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10791e86]
2019-05-13 14:50:05 -2277
2019-05-13 14:50:05 -耗时 : 27
2019-05-13 14:50:05 -返回值 : null
2019-05-13 14:50:05 -请求地址 : http://localhost:8081/login
2019-05-13 14:50:05 -HTTP METHOD : GET
2019-05-13 14:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 14:50:05 -参数 : [{}]
2019-05-13 14:50:05 -耗时 : 1
2019-05-13 14:50:05 -返回值 : login
2019-05-13 14:50:10 -请求地址 : http://localhost:8081/login
2019-05-13 14:50:10 -HTTP METHOD : POST
2019-05-13 14:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 14:50:10 -参数 : [admin, 111111, 2277, org.apache.shiro.web.servlet.ShiroHttpServletRequest@31935baa]
2019-05-13 14:50:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 14:50:10 -==> Parameters: admin(String)
2019-05-13 14:50:10 -<==      Total: 1
2019-05-13 14:50:10 -耗时 : 95
2019-05-13 14:50:10 -返回值 : {msg=操作成功, code=0}
2019-05-13 14:50:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:50:10 -==> Parameters: 1(Long), admin(String), 登录(String), 95(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 14:50:10.527(Timestamp)
2019-05-13 14:50:10 -请求地址 : http://localhost:8081/index
2019-05-13 14:50:10 -HTTP METHOD : GET
2019-05-13 14:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 14:50:10 -参数 : [{}]
2019-05-13 14:50:10 -<==    Updates: 1
2019-05-13 14:50:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 14:50:10 -==> Parameters: 1(Long)
2019-05-13 14:50:10 -<==      Total: 49
2019-05-13 14:50:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 14:50:10 -==> Parameters: 138(Long)
2019-05-13 14:50:10 -<==      Total: 1
2019-05-13 14:50:10 -耗时 : 137
2019-05-13 14:50:10 -返回值 : index_v1
2019-05-13 14:50:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 14:50:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 137(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 14:50:10.736(Timestamp)
2019-05-13 14:50:10 -<==    Updates: 1
2019-05-13 14:50:10 -请求地址 : http://localhost:8081/main
2019-05-13 14:50:10 -HTTP METHOD : GET
2019-05-13 14:50:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:50:10 -参数 : []
2019-05-13 14:50:10 -耗时 : 0
2019-05-13 14:50:10 -返回值 : main
2019-05-13 14:50:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 14:50:11 -HTTP METHOD : GET
2019-05-13 14:50:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 14:50:11 -参数 : []
2019-05-13 14:50:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 14:50:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 14:50:11 -<==      Total: 0
2019-05-13 14:50:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 14:50:11 -==> Parameters: 1(Long), 0(String)
2019-05-13 14:50:11 -<==      Total: 1
2019-05-13 14:50:11 -耗时 : 51
2019-05-13 14:50:11 -返回值 : com.bootdo.common.utils.PageUtils@19fb0741
2019-05-13 14:50:11 -请求地址 : http://localhost:8081/main
2019-05-13 14:50:11 -HTTP METHOD : GET
2019-05-13 14:50:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 14:50:11 -参数 : []
2019-05-13 14:50:11 -耗时 : 1
2019-05-13 14:50:11 -返回值 : main
2019-05-13 14:50:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 14:50:18 -==> Parameters: 1(Long)
2019-05-13 14:50:18 -<==      Total: 93
2019-05-13 14:50:18 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 14:50:18 -HTTP METHOD : GET
2019-05-13 14:50:18 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 14:50:18 -参数 : []
2019-05-13 14:50:18 -耗时 : 14
2019-05-13 14:50:18 -返回值 : charts/countMM
2019-05-13 14:50:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 14:50:19 -HTTP METHOD : GET
2019-05-13 14:50:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 14:50:19 -参数 : [userType]
2019-05-13 14:50:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 14:50:19 -==> Parameters: userType(String)
2019-05-13 14:50:19 -<==      Total: 4
2019-05-13 14:50:19 -耗时 : 24
2019-05-13 14:50:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 14:50:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 14:50:28 -HTTP METHOD : GET
2019-05-13 14:50:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 14:50:28 -参数 : []
2019-05-13 14:50:28 -耗时 : 1
2019-05-13 14:50:28 -返回值 : system/dept/deptTree
2019-05-13 14:50:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 14:50:29 -HTTP METHOD : GET
2019-05-13 14:50:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 14:50:29 -参数 : []
2019-05-13 14:50:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 14:50:29 -==> Parameters: 
2019-05-13 14:50:29 -<==      Total: 3
2019-05-13 14:50:29 -耗时 : 22
2019-05-13 14:50:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 14:50:32 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 14:50:32 -HTTP METHOD : GET
2019-05-13 14:50:32 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 14:50:32 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1a1fc40b, com.bootdo.moneyLog.vo.HeatLogVo@122bd353, com.bootdo.moneyLog.vo.WaterLogVo@71ee0f19, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5376ca5b]
2019-05-13 14:50:32 -耗时 : 219
2019-05-13 14:50:32 -返回值 : null
2019-05-13 15:00:20 -请求地址 : http://localhost:8081/index
2019-05-13 15:00:20 -HTTP METHOD : GET
2019-05-13 15:00:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:00:20 -参数 : [{}]
2019-05-13 15:00:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:00:20 -==> Parameters: 1(Long)
2019-05-13 15:00:20 -<==      Total: 49
2019-05-13 15:00:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:00:20 -==> Parameters: 138(Long)
2019-05-13 15:00:20 -<==      Total: 1
2019-05-13 15:00:20 -耗时 : 24
2019-05-13 15:00:20 -返回值 : index_v1
2019-05-13 15:00:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:00:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:00:20.412(Timestamp)
2019-05-13 15:00:20 -请求地址 : http://localhost:8081/main
2019-05-13 15:00:20 -HTTP METHOD : GET
2019-05-13 15:00:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:00:20 -参数 : []
2019-05-13 15:00:20 -耗时 : 0
2019-05-13 15:00:20 -返回值 : main
2019-05-13 15:00:20 -<==    Updates: 1
2019-05-13 15:00:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:00:20 -HTTP METHOD : GET
2019-05-13 15:00:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:00:20 -参数 : []
2019-05-13 15:00:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:00:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:00:20 -<==      Total: 0
2019-05-13 15:00:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:00:20 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:00:20 -<==      Total: 1
2019-05-13 15:00:20 -耗时 : 11
2019-05-13 15:00:20 -返回值 : com.bootdo.common.utils.PageUtils@291d1dbc
2019-05-13 15:00:20 -请求地址 : http://localhost:8081/main
2019-05-13 15:00:20 -HTTP METHOD : GET
2019-05-13 15:00:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:00:20 -参数 : []
2019-05-13 15:00:20 -耗时 : 0
2019-05-13 15:00:20 -返回值 : main
2019-05-13 15:01:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:01:56 -==> Parameters: 1(Long)
2019-05-13 15:01:56 -<==      Total: 93
2019-05-13 15:01:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-13 15:01:56 -HTTP METHOD : GET
2019-05-13 15:01:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-13 15:01:56 -参数 : []
2019-05-13 15:01:56 -耗时 : 9
2019-05-13 15:01:56 -返回值 : charts/tableElecMM
2019-05-13 15:01:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:01:56 -HTTP METHOD : GET
2019-05-13 15:01:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:01:56 -参数 : [userType]
2019-05-13 15:01:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:01:56 -==> Parameters: userType(String)
2019-05-13 15:01:56 -<==      Total: 4
2019-05-13 15:01:56 -耗时 : 6
2019-05-13 15:01:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:02:04 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 15:02:04 -HTTP METHOD : GET
2019-05-13 15:02:04 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 15:02:04 -参数 : []
2019-05-13 15:02:04 -耗时 : 0
2019-05-13 15:02:04 -返回值 : charts/countMM
2019-05-13 15:02:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:02:04 -HTTP METHOD : GET
2019-05-13 15:02:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:02:04 -参数 : [userType]
2019-05-13 15:02:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:02:04 -==> Parameters: userType(String)
2019-05-13 15:02:04 -<==      Total: 4
2019-05-13 15:02:04 -耗时 : 9
2019-05-13 15:02:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:02:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:02:09 -HTTP METHOD : GET
2019-05-13 15:02:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:02:09 -参数 : []
2019-05-13 15:02:09 -耗时 : 0
2019-05-13 15:02:09 -返回值 : system/dept/deptTree
2019-05-13 15:02:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:02:09 -HTTP METHOD : GET
2019-05-13 15:02:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:02:09 -参数 : []
2019-05-13 15:02:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:02:09 -==> Parameters: 
2019-05-13 15:02:09 -<==      Total: 3
2019-05-13 15:02:09 -耗时 : 6
2019-05-13 15:02:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:02:11 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 15:02:11 -HTTP METHOD : GET
2019-05-13 15:02:11 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 15:02:11 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@76ae16f2, com.bootdo.moneyLog.vo.HeatLogVo@765b7bc5, com.bootdo.moneyLog.vo.WaterLogVo@5ffa956e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@b9fe76d]
2019-05-13 15:02:11 -耗时 : 4
2019-05-13 15:02:11 -返回值 : null
2019-05-13 15:04:58 -Starting BootdoApplication on PC-201905091110 with PID 23152 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:04:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:04:58 -The following profiles are active: dev
2019-05-13 15:04:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:04:59 CST 2019]; root of context hierarchy
2019-05-13 15:05:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:05:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$225aa5a0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$14b3d447] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:05:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:05:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:05:08 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:05:08 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:05:08 -Starting service [Tomcat]
2019-05-13 15:05:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:05:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:05:08 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:05:08 -Root WebApplicationContext: initialization completed in 9344 ms
2019-05-13 15:05:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:05:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:05:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:05:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:05:09 -Filter xssFilter was not registered (disabled)
2019-05-13 15:05:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:05:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:05:09 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:05:09 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:05:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:04:59 CST 2019]; root of context hierarchy
2019-05-13 15:05:18 -Using default implementation for ThreadExecutor
2019-05-13 15:05:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:05:18 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:05:18 -RAMJobStore initialized.
2019-05-13 15:05:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:05:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:05:18 -Quartz scheduler version: 2.2.1
2019-05-13 15:05:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@d9f5fce
2019-05-13 15:05:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:05:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:05:22 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:05:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:05:22 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:05:22 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:05:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:05:22 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:05:22 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:05:22 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:05:22 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:05:22 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:05:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:05:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:05:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:05:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:05:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:05:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:05:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:05:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:05:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:05:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:05:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:05:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:05:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:05:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:05:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:05:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:05:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:05:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:05:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:05:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:05:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:05:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:05:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:05:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:05:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:05:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:05:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:05:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:05:22 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:05:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:05:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:05:22 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:05:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:05:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:05:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:05:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:05:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:05:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:05:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:05:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:05:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:05:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:05:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:05:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:05:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:05:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:05:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:05:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:05:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:05:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:05:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:05:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:05:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:05:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:05:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:05:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:05:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:05:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:05:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:05:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:05:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:05:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:05:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:05:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:05:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:05:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:05:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:05:22 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:05:22 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:05:22 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:05:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:05:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:05:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:05:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:05:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:05:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:05:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:05:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:05:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:05:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:04:59 CST 2019]; root of context hierarchy
2019-05-13 15:05:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:05:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:05:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:05:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:05:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:05:27 -Registering beans for JMX exposure on startup
2019-05-13 15:05:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:05:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:05:27 -Starting beans in phase 2147483647
2019-05-13 15:05:27 -Context refreshed
2019-05-13 15:05:27 -Found 1 custom documentation plugin(s)
2019-05-13 15:05:27 -Scanning for api listing references
2019-05-13 15:05:28 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:05:28 -Generating unique operation named: addUsingGET_1
2019-05-13 15:05:28 -Generating unique operation named: editUsingGET_1
2019-05-13 15:05:28 -Generating unique operation named: listUsingGET_1
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:05:28 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:05:28 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:05:28 -Generating unique operation named: addUsingGET_2
2019-05-13 15:05:28 -Generating unique operation named: editUsingGET_2
2019-05-13 15:05:28 -Generating unique operation named: listUsingGET_2
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:05:28 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:05:28 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:05:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:05:28 -Generating unique operation named: addUsingGET_3
2019-05-13 15:05:28 -Generating unique operation named: editUsingGET_3
2019-05-13 15:05:28 -Generating unique operation named: listUsingGET_3
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:05:28 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:05:28 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:05:28 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:05:28 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:05:28 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_4
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_4
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_4
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:05:29 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_5
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_5
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_5
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_6
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_6
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_7
2019-05-13 15:05:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_7
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:05:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_7
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_8
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_8
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_8
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_9
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_9
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:05:29 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:05:29 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_9
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_10
2019-05-13 15:05:29 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:05:29 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_10
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:05:29 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:05:29 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_11
2019-05-13 15:05:29 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:05:29 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:05:29 -Generating unique operation named: addUsingGET_10
2019-05-13 15:05:29 -Generating unique operation named: editUsingGET_11
2019-05-13 15:05:29 -Generating unique operation named: listUsingGET_12
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:05:30 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:05:30 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_11
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_12
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_13
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:05:30 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_12
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_13
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_14
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:05:30 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_13
2019-05-13 15:05:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_14
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_15
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_16
2019-05-13 15:05:30 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:05:30 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:05:30 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:05:30 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:05:30 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:05:30 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_14
2019-05-13 15:05:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_15
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_17
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:05:30 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:05:30 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_15
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_16
2019-05-13 15:05:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_18
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:05:30 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:05:30 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:05:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_16
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_17
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_19
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:05:30 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:05:30 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:05:30 -Generating unique operation named: addUsingGET_17
2019-05-13 15:05:30 -Generating unique operation named: editUsingGET_18
2019-05-13 15:05:30 -Generating unique operation named: listUsingGET_20
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:05:30 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:05:30 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:05:30 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:05:30 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:05:31 -Starting Quartz Scheduler now
2019-05-13 15:05:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:05:31 -Starting...
2019-05-13 15:05:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:05:31 -Started.
2019-05-13 15:05:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:05:31 -Using a shared selector for servlet write/read
2019-05-13 15:05:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:05:31 -Started BootdoApplication in 33.786 seconds (JVM running for 34.637)
2019-05-13 15:05:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:05:31 -==> Parameters: 
2019-05-13 15:05:31 -<==      Total: 1
2019-05-13 15:05:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:05:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:05:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-05-13 15:05:40 -Enabling session validation scheduler...
2019-05-13 15:05:40 -请求地址 : http://localhost:8081/login;JSESSIONID=b4a5c67a-ac73-49f1-a854-51cdbea7c71c
2019-05-13 15:05:40 -HTTP METHOD : GET
2019-05-13 15:05:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:05:40 -参数 : [{}]
2019-05-13 15:05:40 -耗时 : 8
2019-05-13 15:05:40 -返回值 : login
2019-05-13 15:05:41 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:05:41 -HTTP METHOD : GET
2019-05-13 15:05:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:05:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6856e77a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@435666c0]
2019-05-13 15:05:42 -4226
2019-05-13 15:05:42 -耗时 : 639
2019-05-13 15:05:42 -返回值 : null
2019-05-13 15:05:42 -请求地址 : http://localhost:8081/login
2019-05-13 15:05:42 -HTTP METHOD : GET
2019-05-13 15:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:05:42 -参数 : [{}]
2019-05-13 15:05:42 -耗时 : 0
2019-05-13 15:05:42 -返回值 : login
2019-05-13 15:05:47 -请求地址 : http://localhost:8081/login
2019-05-13 15:05:47 -HTTP METHOD : POST
2019-05-13 15:05:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:05:47 -参数 : [admin, 111111, 4226, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59305744]
2019-05-13 15:05:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:05:47 -==> Parameters: admin(String)
2019-05-13 15:05:47 -<==      Total: 1
2019-05-13 15:05:47 -耗时 : 196
2019-05-13 15:05:47 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:05:47 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:05:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:05:47 -==> Parameters: 1(Long), admin(String), 登录(String), 196(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:05:47.884(Timestamp)
2019-05-13 15:05:47 -请求地址 : http://localhost:8081/index
2019-05-13 15:05:47 -HTTP METHOD : GET
2019-05-13 15:05:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:05:47 -参数 : [{}]
2019-05-13 15:05:47 -<==    Updates: 1
2019-05-13 15:05:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:05:48 -==> Parameters: 1(Long)
2019-05-13 15:05:48 -<==      Total: 49
2019-05-13 15:05:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:05:48 -==> Parameters: 138(Long)
2019-05-13 15:05:48 -<==      Total: 1
2019-05-13 15:05:48 -耗时 : 163
2019-05-13 15:05:48 -返回值 : index_v1
2019-05-13 15:05:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:05:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 163(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:05:48.168(Timestamp)
2019-05-13 15:05:48 -<==    Updates: 1
2019-05-13 15:05:48 -请求地址 : http://localhost:8081/main
2019-05-13 15:05:48 -HTTP METHOD : GET
2019-05-13 15:05:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:05:48 -参数 : []
2019-05-13 15:05:48 -耗时 : 0
2019-05-13 15:05:48 -返回值 : main
2019-05-13 15:05:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:05:48 -HTTP METHOD : GET
2019-05-13 15:05:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:05:48 -参数 : []
2019-05-13 15:05:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:05:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:05:48 -请求地址 : http://localhost:8081/main
2019-05-13 15:05:48 -HTTP METHOD : GET
2019-05-13 15:05:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:05:48 -参数 : []
2019-05-13 15:05:48 -耗时 : 1
2019-05-13 15:05:48 -返回值 : main
2019-05-13 15:05:48 -<==      Total: 0
2019-05-13 15:05:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:05:48 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:05:48 -<==      Total: 1
2019-05-13 15:05:48 -耗时 : 140
2019-05-13 15:05:48 -返回值 : com.bootdo.common.utils.PageUtils@581b25e9
2019-05-13 15:06:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-13 15:06:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:06:25 -==> Parameters: 1(Long)
2019-05-13 15:06:25 -<==      Total: 93
2019-05-13 15:06:25 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-13 15:06:25 -HTTP METHOD : GET
2019-05-13 15:06:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-13 15:06:25 -参数 : []
2019-05-13 15:06:25 -耗时 : 12
2019-05-13 15:06:25 -返回值 : charts/tableElecMM
2019-05-13 15:06:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:06:26 -HTTP METHOD : GET
2019-05-13 15:06:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:06:26 -参数 : [userType]
2019-05-13 15:06:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:06:26 -==> Parameters: userType(String)
2019-05-13 15:06:27 -<==      Total: 4
2019-05-13 15:06:27 -耗时 : 82
2019-05-13 15:06:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:06:27 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 15:06:27 -HTTP METHOD : GET
2019-05-13 15:06:27 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 15:06:27 -参数 : []
2019-05-13 15:06:27 -耗时 : 11
2019-05-13 15:06:27 -返回值 : charts/countMM
2019-05-13 15:06:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:06:28 -HTTP METHOD : GET
2019-05-13 15:06:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:06:28 -参数 : [userType]
2019-05-13 15:06:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:06:28 -==> Parameters: userType(String)
2019-05-13 15:06:28 -<==      Total: 4
2019-05-13 15:06:28 -耗时 : 8
2019-05-13 15:06:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:06:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:06:33 -HTTP METHOD : GET
2019-05-13 15:06:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:06:33 -参数 : []
2019-05-13 15:06:33 -耗时 : 0
2019-05-13 15:06:33 -返回值 : system/dept/deptTree
2019-05-13 15:06:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:06:33 -HTTP METHOD : GET
2019-05-13 15:06:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:06:33 -参数 : []
2019-05-13 15:06:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:06:33 -==> Parameters: 
2019-05-13 15:06:33 -<==      Total: 3
2019-05-13 15:06:33 -耗时 : 21
2019-05-13 15:06:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:06:35 -请求地址 : http://localhost:8081/charts/countMM/getCountMM
2019-05-13 15:06:35 -HTTP METHOD : POST
2019-05-13 15:06:35 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.getCountMM
2019-05-13 15:06:35 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@69359403, com.bootdo.moneyLog.vo.WaterLogVo@4dc37e65, com.bootdo.moneyLog.vo.HeatLogVo@575fb229]
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:35 -<==      Total: 1
2019-05-13 15:06:35 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:35 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:36 -<==      Total: 1
2019-05-13 15:06:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:36 -<==      Total: 1
2019-05-13 15:06:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:36 -<==      Total: 1
2019-05-13 15:06:36 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:36 -<==      Total: 1
2019-05-13 15:06:36 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-13 15:06:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:36 -<==      Total: 1
2019-05-13 15:06:36 -耗时 : 290
2019-05-13 15:06:36 -返回值 : {CountSHeatLog=0, CountG2ElecLog=1, CountG3ElecLog=1, SumG1ElecLog=80, CountG1ElecLog=1, SumWSElecLog=80, SumS2WaterLog=60, totalSumElec=541, SumG2ElecLog=70, CountWSElecLog=1, SumWMElecLog=60, totalCount=14, CountMMElecLog=0, SumSHeatLog=0, SumS3WaterLog=60, CountWMElecLog=1, CountMElecLog=2, SumG3ElecLog=90, CountSElecLog=0, SumGSHeatLog=0, SumS1WaterLog=20, CountZElecLog=0, SumGMHeatLog=0, totalSumWater=180, CountMHeatLog=2, CountGSHeatLog=0, CountWGElecLog=1, SumSElecLog=0, CountS3WaterLog=1, SumMHeatLog=120, SumZElecLog=0, SumWGElecLog=10, CountGMHeatLog=0, CountS1WaterLog=1, CountMWaterLog=1, CountS2WaterLog=1, CountMSElecLog=0, totalSum=841, SumMElecLog=151, totalSumHeat=120, SumMMElecLog=0, SumMWaterLog=40, SumMSElecLog=0}
2019-05-13 15:06:52 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 15:06:52 -HTTP METHOD : GET
2019-05-13 15:06:52 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 15:06:52 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@61e4ad0e, com.bootdo.moneyLog.vo.HeatLogVo@66b5fda, com.bootdo.moneyLog.vo.WaterLogVo@3cabe61d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f99ef70]
2019-05-13 15:06:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:06:52 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:52 -<==      Total: 8
2019-05-13 15:06:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:06:52 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:52 -<==      Total: 4
2019-05-13 15:06:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:06:52 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:06:52 -<==      Total: 4
2019-05-13 15:06:52 -耗时 : 653
2019-05-13 15:06:52 -返回值 : null
2019-05-13 15:10:36 -请求地址 : http://localhost:8081/index
2019-05-13 15:10:36 -HTTP METHOD : GET
2019-05-13 15:10:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:10:36 -参数 : [{}]
2019-05-13 15:10:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:10:36 -==> Parameters: 1(Long)
2019-05-13 15:10:36 -<==      Total: 49
2019-05-13 15:10:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:10:36 -==> Parameters: 138(Long)
2019-05-13 15:10:36 -<==      Total: 1
2019-05-13 15:10:36 -耗时 : 24
2019-05-13 15:10:36 -返回值 : index_v1
2019-05-13 15:10:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:10:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:10:36.831(Timestamp)
2019-05-13 15:10:36 -<==    Updates: 1
2019-05-13 15:10:37 -请求地址 : http://localhost:8081/main
2019-05-13 15:10:37 -HTTP METHOD : GET
2019-05-13 15:10:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:10:37 -参数 : []
2019-05-13 15:10:37 -耗时 : 0
2019-05-13 15:10:37 -返回值 : main
2019-05-13 15:10:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:10:37 -HTTP METHOD : GET
2019-05-13 15:10:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:10:37 -参数 : []
2019-05-13 15:10:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:10:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:10:37 -<==      Total: 0
2019-05-13 15:10:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:10:37 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:10:37 -<==      Total: 1
2019-05-13 15:10:37 -耗时 : 12
2019-05-13 15:10:37 -返回值 : com.bootdo.common.utils.PageUtils@765d97b8
2019-05-13 15:10:37 -请求地址 : http://localhost:8081/main
2019-05-13 15:10:37 -HTTP METHOD : GET
2019-05-13 15:10:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:10:37 -参数 : []
2019-05-13 15:10:37 -耗时 : 0
2019-05-13 15:10:37 -返回值 : main
2019-05-13 15:10:41 -请求地址 : http://localhost:8081/charts/countMM
2019-05-13 15:10:41 -HTTP METHOD : GET
2019-05-13 15:10:41 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-13 15:10:41 -参数 : []
2019-05-13 15:10:41 -耗时 : 0
2019-05-13 15:10:41 -返回值 : charts/countMM
2019-05-13 15:10:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:10:41 -HTTP METHOD : GET
2019-05-13 15:10:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:10:41 -参数 : [userType]
2019-05-13 15:10:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:10:41 -==> Parameters: userType(String)
2019-05-13 15:10:41 -<==      Total: 4
2019-05-13 15:10:41 -耗时 : 51
2019-05-13 15:10:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:10:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:10:46 -HTTP METHOD : GET
2019-05-13 15:10:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:10:46 -参数 : []
2019-05-13 15:10:46 -耗时 : 0
2019-05-13 15:10:46 -返回值 : system/dept/deptTree
2019-05-13 15:10:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:10:46 -HTTP METHOD : GET
2019-05-13 15:10:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:10:46 -参数 : []
2019-05-13 15:10:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:10:46 -==> Parameters: 
2019-05-13 15:10:46 -<==      Total: 3
2019-05-13 15:10:46 -耗时 : 2
2019-05-13 15:10:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:10:50 -请求地址 : http://localhost:8081/charts/countMM/exportMM
2019-05-13 15:10:50 -HTTP METHOD : GET
2019-05-13 15:10:50 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.exportMM
2019-05-13 15:10:50 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6debc6f7, com.bootdo.moneyLog.vo.HeatLogVo@8782a56, com.bootdo.moneyLog.vo.WaterLogVo@e06943b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@52b7e774]
2019-05-13 15:10:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:10:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:10:50 -<==      Total: 8
2019-05-13 15:10:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:10:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:10:50 -<==      Total: 4
2019-05-13 15:10:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 15:10:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-13 15:10:50 -<==      Total: 4
2019-05-13 15:10:50 -耗时 : 53
2019-05-13 15:10:50 -返回值 : null
2019-05-13 15:23:11 -Starting BootdoApplication on PC-201905091110 with PID 33892 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:23:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:23:11 -The following profiles are active: dev
2019-05-13 15:23:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:23:11 CST 2019]; root of context hierarchy
2019-05-13 15:23:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:23:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:23:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:23:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:23:18 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:23:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:23:18 -Starting service [Tomcat]
2019-05-13 15:23:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:23:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:23:18 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:23:18 -Root WebApplicationContext: initialization completed in 7462 ms
2019-05-13 15:23:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:23:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:23:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:23:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:23:19 -Filter xssFilter was not registered (disabled)
2019-05-13 15:23:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:23:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:23:19 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:23:19 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:23:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:23:11 CST 2019]; root of context hierarchy
2019-05-13 15:23:27 -Using default implementation for ThreadExecutor
2019-05-13 15:23:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:23:27 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:23:27 -RAMJobStore initialized.
2019-05-13 15:23:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:23:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:23:27 -Quartz scheduler version: 2.2.1
2019-05-13 15:23:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-05-13 15:23:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:23:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:23:30 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:23:30 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:23:30 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:23:30 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:23:30 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:23:30 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:23:30 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:23:30 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:23:30 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:23:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:23:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:23:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:23:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:23:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:23:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:23:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:23:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:23:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:23:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:23:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:23:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:23:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:23:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:23:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:23:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:23:30 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:23:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:23:30 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:23:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:23:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:23:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:23:30 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:23:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:23:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:23:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:23:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:23:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:23:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:23:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:23:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:23:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:23:31 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:23:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:23:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:23:31 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:23:31 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:23:31 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:23:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:23:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:23:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:23:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:23:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:23:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:23:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:23:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:23:31 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:23:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:23:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:23:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:23:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:23:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:23:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:23:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:23:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:23:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:23:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:23:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:23:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:23:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:23:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:23:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:23:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:23:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:23:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:23:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:23:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:23:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:23:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:23:31 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:23:31 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:23:31 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:23:31 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:23:31 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:23:31 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:23:31 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:23:31 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:23:31 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:23:31 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:23:31 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:23:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:23:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:23:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:23:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:23:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:23:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:23:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:23:32 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:23:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:23:11 CST 2019]; root of context hierarchy
2019-05-13 15:23:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:23:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:23:32 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:23:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:23:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:23:34 -Registering beans for JMX exposure on startup
2019-05-13 15:23:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:23:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:23:34 -Starting beans in phase 2147483647
2019-05-13 15:23:34 -Context refreshed
2019-05-13 15:23:34 -Found 1 custom documentation plugin(s)
2019-05-13 15:23:34 -Scanning for api listing references
2019-05-13 15:23:35 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:23:35 -Generating unique operation named: addUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: editUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: listUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:23:35 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:23:35 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:23:35 -Generating unique operation named: addUsingGET_2
2019-05-13 15:23:35 -Generating unique operation named: editUsingGET_2
2019-05-13 15:23:35 -Generating unique operation named: listUsingGET_2
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:23:35 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:23:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: addUsingGET_3
2019-05-13 15:23:35 -Generating unique operation named: editUsingGET_3
2019-05-13 15:23:35 -Generating unique operation named: listUsingGET_3
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:23:35 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:23:35 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:23:35 -Generating unique operation named: addUsingGET_4
2019-05-13 15:23:35 -Generating unique operation named: editUsingGET_4
2019-05-13 15:23:35 -Generating unique operation named: listUsingGET_4
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:23:35 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:23:35 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:23:35 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:23:35 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:23:35 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:23:35 -Generating unique operation named: addUsingGET_5
2019-05-13 15:23:35 -Generating unique operation named: editUsingGET_5
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_5
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:23:36 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_6
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_6
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_7
2019-05-13 15:23:36 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_7
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:23:36 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:23:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_7
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_8
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_8
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:23:36 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_8
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_9
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_9
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:23:36 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:23:36 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_9
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_10
2019-05-13 15:23:36 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:23:36 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_10
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_11
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:23:36 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_10
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_11
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_12
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:23:36 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:23:36 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:23:36 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:23:36 -Generating unique operation named: addUsingGET_11
2019-05-13 15:23:36 -Generating unique operation named: editUsingGET_12
2019-05-13 15:23:36 -Generating unique operation named: listUsingGET_13
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:23:36 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:23:36 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:23:37 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_12
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_13
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_14
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:23:37 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_13
2019-05-13 15:23:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_14
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_15
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_16
2019-05-13 15:23:37 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:23:37 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:23:37 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:23:37 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:23:37 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:23:37 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_14
2019-05-13 15:23:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_15
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_17
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:23:37 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:23:37 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_15
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_16
2019-05-13 15:23:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_18
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:23:37 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:23:37 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:23:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_16
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_17
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_19
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:23:37 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:23:37 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:23:37 -Generating unique operation named: addUsingGET_17
2019-05-13 15:23:37 -Generating unique operation named: editUsingGET_18
2019-05-13 15:23:37 -Generating unique operation named: listUsingGET_20
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:23:37 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:23:37 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:23:37 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:23:37 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:23:37 -Starting Quartz Scheduler now
2019-05-13 15:23:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:23:37 -Starting...
2019-05-13 15:23:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:23:37 -Started.
2019-05-13 15:23:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:23:37 -Using a shared selector for servlet write/read
2019-05-13 15:23:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:23:37 -Started BootdoApplication in 27.854 seconds (JVM running for 28.601)
2019-05-13 15:23:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:23:38 -==> Parameters: 
2019-05-13 15:23:38 -<==      Total: 1
2019-05-13 15:23:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:23:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:23:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 152 ms
2019-05-13 15:23:57 -Enabling session validation scheduler...
2019-05-13 15:23:57 -请求地址 : http://localhost:8081/login;JSESSIONID=94a03482-158d-4a36-ab7f-f00f35a102c7
2019-05-13 15:23:57 -HTTP METHOD : GET
2019-05-13 15:23:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:23:57 -参数 : [{}]
2019-05-13 15:23:57 -耗时 : 7
2019-05-13 15:23:57 -返回值 : login
2019-05-13 15:23:59 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:23:59 -HTTP METHOD : GET
2019-05-13 15:23:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:23:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@46214b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4544af27]
2019-05-13 15:24:00 -4532
2019-05-13 15:24:00 -耗时 : 679
2019-05-13 15:24:00 -返回值 : null
2019-05-13 15:24:00 -请求地址 : http://localhost:8081/login
2019-05-13 15:24:00 -HTTP METHOD : GET
2019-05-13 15:24:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:24:00 -参数 : [{}]
2019-05-13 15:24:00 -耗时 : 0
2019-05-13 15:24:00 -返回值 : login
2019-05-13 15:24:04 -请求地址 : http://localhost:8081/login
2019-05-13 15:24:04 -HTTP METHOD : POST
2019-05-13 15:24:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:24:04 -参数 : [admin, 111111, 4532, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5baab81e]
2019-05-13 15:24:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:24:04 -==> Parameters: admin(String)
2019-05-13 15:24:05 -<==      Total: 1
2019-05-13 15:24:05 -耗时 : 255
2019-05-13 15:24:05 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:24:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:24:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:24:05 -==> Parameters: 1(Long), admin(String), 登录(String), 256(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:24:05.206(Timestamp)
2019-05-13 15:24:05 -<==    Updates: 1
2019-05-13 15:24:05 -请求地址 : http://localhost:8081/index
2019-05-13 15:24:05 -HTTP METHOD : GET
2019-05-13 15:24:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:24:05 -参数 : [{}]
2019-05-13 15:24:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:24:05 -==> Parameters: 1(Long)
2019-05-13 15:24:05 -<==      Total: 49
2019-05-13 15:24:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:24:05 -==> Parameters: 138(Long)
2019-05-13 15:24:05 -<==      Total: 1
2019-05-13 15:24:05 -耗时 : 267
2019-05-13 15:24:05 -返回值 : index_v1
2019-05-13 15:24:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:24:06 -请求地址 : http://localhost:8081/main
2019-05-13 15:24:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 267(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:24:05.777(Timestamp)
2019-05-13 15:24:06 -HTTP METHOD : GET
2019-05-13 15:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:24:06 -参数 : []
2019-05-13 15:24:06 -耗时 : 20
2019-05-13 15:24:06 -返回值 : main
2019-05-13 15:24:06 -<==    Updates: 1
2019-05-13 15:24:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:24:06 -HTTP METHOD : GET
2019-05-13 15:24:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:24:06 -参数 : []
2019-05-13 15:24:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:24:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:24:06 -<==      Total: 0
2019-05-13 15:24:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:24:06 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:24:06 -<==      Total: 1
2019-05-13 15:24:06 -耗时 : 68
2019-05-13 15:24:06 -返回值 : com.bootdo.common.utils.PageUtils@206799db
2019-05-13 15:24:06 -请求地址 : http://localhost:8081/main
2019-05-13 15:24:06 -HTTP METHOD : GET
2019-05-13 15:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:24:06 -参数 : []
2019-05-13 15:24:06 -耗时 : 0
2019-05-13 15:24:06 -返回值 : main
2019-05-13 15:24:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:24:18 -==> Parameters: 1(Long)
2019-05-13 15:24:18 -<==      Total: 93
2019-05-13 15:24:18 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 15:24:18 -HTTP METHOD : GET
2019-05-13 15:24:18 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 15:24:18 -参数 : []
2019-05-13 15:24:18 -耗时 : 1
2019-05-13 15:24:18 -返回值 : charts/countYY
2019-05-13 15:24:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:24:19 -HTTP METHOD : GET
2019-05-13 15:24:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:24:19 -参数 : [userType]
2019-05-13 15:24:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:24:19 -==> Parameters: userType(String)
2019-05-13 15:24:19 -<==      Total: 4
2019-05-13 15:24:19 -耗时 : 34
2019-05-13 15:24:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:24:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:24:26 -HTTP METHOD : GET
2019-05-13 15:24:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:24:26 -参数 : []
2019-05-13 15:24:26 -耗时 : 1
2019-05-13 15:24:26 -返回值 : system/dept/deptTree
2019-05-13 15:24:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:24:26 -HTTP METHOD : GET
2019-05-13 15:24:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:24:26 -参数 : []
2019-05-13 15:24:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:24:26 -==> Parameters: 
2019-05-13 15:24:26 -<==      Total: 3
2019-05-13 15:24:26 -耗时 : 22
2019-05-13 15:24:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:24:29 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-13 15:24:29 -HTTP METHOD : POST
2019-05-13 15:24:29 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-13 15:24:29 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@47946bf5, com.bootdo.moneyLog.vo.WaterLogVo@7cf2712f, com.bootdo.moneyLog.vo.HeatLogVo@4e4ae2ec]
2019-05-13 15:24:29 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-13 15:24:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:24:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countYY/getCountYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-13 15:24:29.761(Timestamp)
2019-05-13 15:24:29 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:245)
	at com.bootdo.charts.controller.countYYController.getCountYY(countYYController.java:57)
	at com.bootdo.charts.controller.countYYController$$FastClassBySpringCGLIB$$d906aaae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countYYController$$EnhancerBySpringCGLIB$$a7b21f97.getCountYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-13 15:24:29 -<==    Updates: 1
2019-05-13 15:24:31 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-13 15:24:31 -HTTP METHOD : POST
2019-05-13 15:24:31 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-13 15:24:31 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5eceebb0, com.bootdo.moneyLog.vo.WaterLogVo@10d8e59a, com.bootdo.moneyLog.vo.HeatLogVo@653834c]
2019-05-13 15:24:31 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-13 15:24:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:24:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countYY/getCountYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-13 15:24:31.625(Timestamp)
2019-05-13 15:24:31 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:245)
	at com.bootdo.charts.controller.countYYController.getCountYY(countYYController.java:57)
	at com.bootdo.charts.controller.countYYController$$FastClassBySpringCGLIB$$d906aaae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countYYController$$EnhancerBySpringCGLIB$$a7b21f97.getCountYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-13 15:24:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-13 15:24:31 -<==    Updates: 1
2019-05-13 15:24:33 -请求地址 : http://localhost:8081/charts/countYY/getCountYY
2019-05-13 15:24:33 -HTTP METHOD : POST
2019-05-13 15:24:33 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.getCountYY
2019-05-13 15:24:33 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@a263f5d, com.bootdo.moneyLog.vo.WaterLogVo@e19bac1, com.bootdo.moneyLog.vo.HeatLogVo@4b1b3566]
2019-05-13 15:24:33 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE `create_time` = CONCAT("?","-01") and user_org = ? 
2019-05-13 15:24:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:24:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/countYY/getCountYY(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).(String), null, 2019-05-13 15:24:33.345(Timestamp)
2019-05-13 15:24:33 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.Count1ElecLog(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.Count1ElecLog(ElecLogServiceImpl.java:245)
	at com.bootdo.charts.controller.countYYController.getCountYY(countYYController.java:57)
	at com.bootdo.charts.controller.countYYController$$FastClassBySpringCGLIB$$d906aaae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countYYController$$EnhancerBySpringCGLIB$$a7b21f97.getCountYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userOrg', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #2 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 116 common frames omitted
Caused by: java.sql.SQLException: Parameter index out of range (2 > number of parameters, which is 1).
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.PreparedStatement.checkBounds(PreparedStatement.java:3327)
	at com.mysql.jdbc.PreparedStatement.setInternal(PreparedStatement.java:3312)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:4027)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy173.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 117 common frames omitted
2019-05-13 15:24:33 -<==    Updates: 1
2019-05-13 15:29:24 -Starting BootdoApplication on PC-201905091110 with PID 37672 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:29:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:29:24 -The following profiles are active: dev
2019-05-13 15:29:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:29:24 CST 2019]; root of context hierarchy
2019-05-13 15:29:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:29:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:29:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:29:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:29:31 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:29:31 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:29:31 -Starting service [Tomcat]
2019-05-13 15:29:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:29:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:29:32 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:29:32 -Root WebApplicationContext: initialization completed in 7792 ms
2019-05-13 15:29:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:29:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:29:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:29:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:29:32 -Filter xssFilter was not registered (disabled)
2019-05-13 15:29:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:29:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:29:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:29:32 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:29:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:29:24 CST 2019]; root of context hierarchy
2019-05-13 15:29:42 -Using default implementation for ThreadExecutor
2019-05-13 15:29:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:29:42 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:29:42 -RAMJobStore initialized.
2019-05-13 15:29:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:29:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:29:42 -Quartz scheduler version: 2.2.1
2019-05-13 15:29:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e8e59
2019-05-13 15:29:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:29:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:29:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:29:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:29:45 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:29:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:29:45 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:29:45 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:29:45 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:29:45 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:29:45 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:29:45 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:29:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:29:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:29:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:29:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:29:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:29:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:29:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:29:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:29:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:29:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:29:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:29:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:29:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:29:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:29:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:29:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:29:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:29:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:29:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:29:45 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:29:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:29:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:29:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:29:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:29:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:29:45 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:29:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:29:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:29:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:29:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:29:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:29:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:29:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:29:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:29:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:29:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:29:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:29:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:29:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:29:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:29:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:29:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:29:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:29:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:29:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:29:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:29:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:29:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:29:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:29:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:29:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:29:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:29:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:29:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:29:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:29:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:29:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:29:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:29:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:29:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:29:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:29:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:29:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:29:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:29:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:29:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:29:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:29:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:29:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:29:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:29:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:29:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:29:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:29:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:29:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:29:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:29:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:29:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:29:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:29:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:29:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:29:24 CST 2019]; root of context hierarchy
2019-05-13 15:29:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:29:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:29:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:29:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:29:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:29:48 -Registering beans for JMX exposure on startup
2019-05-13 15:29:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:29:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:29:48 -Starting beans in phase 2147483647
2019-05-13 15:29:48 -Context refreshed
2019-05-13 15:29:48 -Found 1 custom documentation plugin(s)
2019-05-13 15:29:49 -Scanning for api listing references
2019-05-13 15:29:49 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:29:49 -Generating unique operation named: addUsingGET_1
2019-05-13 15:29:49 -Generating unique operation named: editUsingGET_1
2019-05-13 15:29:49 -Generating unique operation named: listUsingGET_1
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:29:49 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:29:49 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:29:49 -Generating unique operation named: addUsingGET_2
2019-05-13 15:29:49 -Generating unique operation named: editUsingGET_2
2019-05-13 15:29:49 -Generating unique operation named: listUsingGET_2
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:29:49 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:29:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:29:49 -Generating unique operation named: addUsingGET_3
2019-05-13 15:29:49 -Generating unique operation named: editUsingGET_3
2019-05-13 15:29:49 -Generating unique operation named: listUsingGET_3
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:29:49 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:29:49 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:29:49 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:29:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:29:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_4
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_4
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_4
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:29:50 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_5
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_5
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_5
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_6
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_6
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_7
2019-05-13 15:29:50 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_7
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:29:50 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_7
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_8
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_8
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_8
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_9
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_9
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:29:50 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:29:50 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_9
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_10
2019-05-13 15:29:50 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:29:50 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_10
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_11
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:29:50 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:29:50 -Generating unique operation named: addUsingGET_10
2019-05-13 15:29:50 -Generating unique operation named: editUsingGET_11
2019-05-13 15:29:50 -Generating unique operation named: listUsingGET_12
2019-05-13 15:29:50 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:29:50 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:29:50 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:29:50 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:29:50 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_11
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_12
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_13
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:29:51 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_12
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_13
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_14
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:29:51 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_13
2019-05-13 15:29:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_14
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_15
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_16
2019-05-13 15:29:51 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:29:51 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:29:51 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:29:51 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:29:51 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:29:51 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_14
2019-05-13 15:29:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_15
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_17
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:29:51 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:29:51 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_15
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_16
2019-05-13 15:29:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_18
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:29:51 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:29:51 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:29:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_16
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_17
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_19
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:29:51 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:29:51 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:29:51 -Generating unique operation named: addUsingGET_17
2019-05-13 15:29:51 -Generating unique operation named: editUsingGET_18
2019-05-13 15:29:51 -Generating unique operation named: listUsingGET_20
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:29:51 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:29:51 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:29:51 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:29:51 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:29:51 -Starting Quartz Scheduler now
2019-05-13 15:29:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:29:51 -Starting...
2019-05-13 15:29:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:29:51 -Started.
2019-05-13 15:29:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:29:51 -Using a shared selector for servlet write/read
2019-05-13 15:29:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:29:51 -Started BootdoApplication in 28.84 seconds (JVM running for 29.614)
2019-05-13 15:29:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:29:52 -==> Parameters: 
2019-05-13 15:29:52 -<==      Total: 1
2019-05-13 15:30:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:30:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:30:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2019-05-13 15:30:20 -Enabling session validation scheduler...
2019-05-13 15:30:20 -请求地址 : http://localhost:8081/login;JSESSIONID=9dcb3abf-aca0-438c-be11-a1d8fc58d539
2019-05-13 15:30:20 -HTTP METHOD : GET
2019-05-13 15:30:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:30:20 -参数 : [{}]
2019-05-13 15:30:20 -耗时 : 7
2019-05-13 15:30:20 -返回值 : login
2019-05-13 15:30:22 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:30:22 -HTTP METHOD : GET
2019-05-13 15:30:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:30:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5887229f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3ea6ba40]
2019-05-13 15:30:23 -0918
2019-05-13 15:30:23 -耗时 : 538
2019-05-13 15:30:23 -返回值 : null
2019-05-13 15:30:30 -请求地址 : http://localhost:8081/login
2019-05-13 15:30:30 -HTTP METHOD : POST
2019-05-13 15:30:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:30:30 -参数 : [admin, 111111, 0918, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62d170b6]
2019-05-13 15:30:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:30:30 -==> Parameters: admin(String)
2019-05-13 15:30:30 -<==      Total: 1
2019-05-13 15:30:30 -耗时 : 160
2019-05-13 15:30:30 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:30:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:30:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:30:31 -==> Parameters: 1(Long), admin(String), 登录(String), 160(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:30:30.954(Timestamp)
2019-05-13 15:30:31 -请求地址 : http://localhost:8081/index
2019-05-13 15:30:31 -HTTP METHOD : GET
2019-05-13 15:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:30:31 -参数 : [{}]
2019-05-13 15:30:31 -<==    Updates: 1
2019-05-13 15:30:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:30:31 -==> Parameters: 1(Long)
2019-05-13 15:30:31 -<==      Total: 49
2019-05-13 15:30:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:30:31 -==> Parameters: 138(Long)
2019-05-13 15:30:31 -<==      Total: 1
2019-05-13 15:30:31 -耗时 : 174
2019-05-13 15:30:31 -返回值 : index_v1
2019-05-13 15:30:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:30:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 175(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:30:31.438(Timestamp)
2019-05-13 15:30:31 -<==    Updates: 1
2019-05-13 15:30:31 -请求地址 : http://localhost:8081/main
2019-05-13 15:30:31 -HTTP METHOD : GET
2019-05-13 15:30:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:30:31 -参数 : []
2019-05-13 15:30:31 -耗时 : 0
2019-05-13 15:30:31 -返回值 : main
2019-05-13 15:30:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:30:32 -HTTP METHOD : GET
2019-05-13 15:30:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:30:32 -参数 : []
2019-05-13 15:30:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:30:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:30:32 -<==      Total: 0
2019-05-13 15:30:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:30:32 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:30:32 -<==      Total: 1
2019-05-13 15:30:32 -耗时 : 48
2019-05-13 15:30:32 -返回值 : com.bootdo.common.utils.PageUtils@234dcffb
2019-05-13 15:30:32 -请求地址 : http://localhost:8081/main
2019-05-13 15:30:32 -HTTP METHOD : GET
2019-05-13 15:30:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:30:32 -参数 : []
2019-05-13 15:30:32 -耗时 : 1
2019-05-13 15:30:32 -返回值 : main
2019-05-13 15:30:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:30:35 -==> Parameters: 1(Long)
2019-05-13 15:30:35 -<==      Total: 93
2019-05-13 15:30:35 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 15:30:35 -HTTP METHOD : GET
2019-05-13 15:30:35 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 15:30:35 -参数 : []
2019-05-13 15:30:35 -耗时 : 1
2019-05-13 15:30:35 -返回值 : charts/countYY
2019-05-13 15:30:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:30:36 -HTTP METHOD : GET
2019-05-13 15:30:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:30:36 -参数 : [userType]
2019-05-13 15:30:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:30:36 -==> Parameters: userType(String)
2019-05-13 15:30:36 -<==      Total: 4
2019-05-13 15:30:36 -耗时 : 25
2019-05-13 15:30:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:30:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:30:39 -HTTP METHOD : GET
2019-05-13 15:30:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:30:39 -参数 : []
2019-05-13 15:30:39 -耗时 : 1
2019-05-13 15:30:39 -返回值 : system/dept/deptTree
2019-05-13 15:30:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:30:39 -HTTP METHOD : GET
2019-05-13 15:30:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:30:39 -参数 : []
2019-05-13 15:30:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:30:39 -==> Parameters: 
2019-05-13 15:30:39 -<==      Total: 3
2019-05-13 15:30:39 -耗时 : 24
2019-05-13 15:30:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:30:42 -请求地址 : http://localhost:8081/charts/countYY/exportYY
2019-05-13 15:30:42 -HTTP METHOD : GET
2019-05-13 15:30:42 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.exportYY
2019-05-13 15:30:42 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7193402f, com.bootdo.moneyLog.vo.HeatLogVo@183e4789, com.bootdo.moneyLog.vo.WaterLogVo@6134a1a7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c7ba079]
2019-05-13 15:30:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE `%?%` and user_org = ? order by create_time asc 
2019-05-13 15:30:42 -耗时 : 217
2019-05-13 15:30:42 -返回值 : null
2019-05-13 15:30:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-13 15:34:02 -Starting BootdoApplication on PC-201905091110 with PID 16716 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:34:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:34:02 -The following profiles are active: dev
2019-05-13 15:34:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:34:03 CST 2019]; root of context hierarchy
2019-05-13 15:34:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:34:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:34:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:34:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:34:10 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:34:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:34:10 -Starting service [Tomcat]
2019-05-13 15:34:10 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:34:10 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:34:10 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:34:10 -Root WebApplicationContext: initialization completed in 7884 ms
2019-05-13 15:34:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:34:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:34:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:34:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:34:11 -Filter xssFilter was not registered (disabled)
2019-05-13 15:34:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:34:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:34:11 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:34:11 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:34:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:34:03 CST 2019]; root of context hierarchy
2019-05-13 15:34:20 -Using default implementation for ThreadExecutor
2019-05-13 15:34:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:34:20 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:34:20 -RAMJobStore initialized.
2019-05-13 15:34:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:34:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:34:20 -Quartz scheduler version: 2.2.1
2019-05-13 15:34:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-05-13 15:34:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:34:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:34:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:34:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:34:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:34:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:34:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:34:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:34:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:34:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:34:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:34:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:34:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:34:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:34:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:34:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:34:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:34:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:34:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:34:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:34:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:34:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:34:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:34:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:34:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:34:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:34:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:34:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:34:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:34:23 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:34:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:34:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:34:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:34:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:34:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:34:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:34:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:34:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:34:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:34:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:34:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:34:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:34:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:34:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:34:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:34:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:34:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:34:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:34:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:34:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:34:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:34:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:34:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:34:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:34:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:34:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:34:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:34:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:34:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:34:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:34:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:34:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:34:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:34:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:34:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:34:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:34:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:34:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:34:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:34:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:34:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:34:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:34:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:34:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:34:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:34:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:34:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:34:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:34:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:34:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:34:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:34:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:34:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:34:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:34:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:34:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:34:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:34:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:34:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:34:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:34:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:34:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:34:03 CST 2019]; root of context hierarchy
2019-05-13 15:34:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:34:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:34:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:34:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:34:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:34:27 -Registering beans for JMX exposure on startup
2019-05-13 15:34:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:34:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:34:27 -Starting beans in phase 2147483647
2019-05-13 15:34:27 -Context refreshed
2019-05-13 15:34:27 -Found 1 custom documentation plugin(s)
2019-05-13 15:34:27 -Scanning for api listing references
2019-05-13 15:34:28 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:34:28 -Generating unique operation named: addUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: editUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: listUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:34:28 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:34:28 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:34:28 -Generating unique operation named: addUsingGET_2
2019-05-13 15:34:28 -Generating unique operation named: editUsingGET_2
2019-05-13 15:34:28 -Generating unique operation named: listUsingGET_2
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:34:28 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:34:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: addUsingGET_3
2019-05-13 15:34:28 -Generating unique operation named: editUsingGET_3
2019-05-13 15:34:28 -Generating unique operation named: listUsingGET_3
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:34:28 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:34:28 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:34:28 -Generating unique operation named: addUsingGET_4
2019-05-13 15:34:28 -Generating unique operation named: editUsingGET_4
2019-05-13 15:34:28 -Generating unique operation named: listUsingGET_4
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:34:28 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:34:28 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:34:28 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:34:28 -Generating unique operation named: addUsingGET_5
2019-05-13 15:34:28 -Generating unique operation named: editUsingGET_5
2019-05-13 15:34:28 -Generating unique operation named: listUsingGET_5
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:34:28 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:34:28 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:34:28 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:34:28 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_6
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_6
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_7
2019-05-13 15:34:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_7
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:34:29 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:34:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_7
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_8
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_8
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:34:29 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_8
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_9
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_9
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:34:29 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_9
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_10
2019-05-13 15:34:29 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:34:29 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_10
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_11
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:34:29 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_10
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_11
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_12
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:34:29 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:34:29 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_11
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_12
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_13
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:34:29 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:34:29 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_12
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_13
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_14
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:34:29 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:34:29 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:34:29 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:34:29 -Generating unique operation named: addUsingGET_13
2019-05-13 15:34:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:34:29 -Generating unique operation named: editUsingGET_14
2019-05-13 15:34:29 -Generating unique operation named: listUsingGET_15
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:34:29 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:34:30 -Generating unique operation named: listUsingGET_16
2019-05-13 15:34:30 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:34:30 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:34:30 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:34:30 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:34:30 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:34:30 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:34:30 -Generating unique operation named: addUsingGET_14
2019-05-13 15:34:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:34:30 -Generating unique operation named: editUsingGET_15
2019-05-13 15:34:30 -Generating unique operation named: listUsingGET_17
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:34:30 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:34:30 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:34:30 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:34:30 -Generating unique operation named: addUsingGET_15
2019-05-13 15:34:30 -Generating unique operation named: editUsingGET_16
2019-05-13 15:34:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:34:30 -Generating unique operation named: listUsingGET_18
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:34:30 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:34:30 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:34:30 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:34:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:34:30 -Generating unique operation named: addUsingGET_16
2019-05-13 15:34:30 -Generating unique operation named: editUsingGET_17
2019-05-13 15:34:30 -Generating unique operation named: listUsingGET_19
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:34:30 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:34:30 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:34:30 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:34:30 -Generating unique operation named: addUsingGET_17
2019-05-13 15:34:30 -Generating unique operation named: editUsingGET_18
2019-05-13 15:34:30 -Generating unique operation named: listUsingGET_20
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:34:30 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:34:30 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:34:30 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:34:30 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:34:30 -Starting Quartz Scheduler now
2019-05-13 15:34:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:34:30 -Starting...
2019-05-13 15:34:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:34:30 -Started.
2019-05-13 15:34:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:34:30 -Using a shared selector for servlet write/read
2019-05-13 15:34:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:34:30 -Started BootdoApplication in 29.083 seconds (JVM running for 29.78)
2019-05-13 15:34:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:34:30 -==> Parameters: 
2019-05-13 15:34:30 -<==      Total: 1
2019-05-13 15:34:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:34:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:34:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-05-13 15:34:42 -Enabling session validation scheduler...
2019-05-13 15:34:42 -请求地址 : http://localhost:8081/login;JSESSIONID=30602d69-b089-4691-ad0b-9da42fa1e539
2019-05-13 15:34:42 -HTTP METHOD : GET
2019-05-13 15:34:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:34:42 -参数 : [{}]
2019-05-13 15:34:42 -耗时 : 6
2019-05-13 15:34:42 -返回值 : login
2019-05-13 15:34:44 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:34:44 -HTTP METHOD : GET
2019-05-13 15:34:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:34:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a1ab3d9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@380c4b73]
2019-05-13 15:34:45 -4142
2019-05-13 15:34:45 -耗时 : 601
2019-05-13 15:34:45 -返回值 : null
2019-05-13 15:34:45 -请求地址 : http://localhost:8081/login
2019-05-13 15:34:45 -HTTP METHOD : GET
2019-05-13 15:34:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:34:45 -参数 : [{}]
2019-05-13 15:34:45 -耗时 : 0
2019-05-13 15:34:45 -返回值 : login
2019-05-13 15:34:49 -请求地址 : http://localhost:8081/login
2019-05-13 15:34:49 -HTTP METHOD : POST
2019-05-13 15:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:34:49 -参数 : [admin, 111111, 4142, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6cd272a2]
2019-05-13 15:34:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:34:49 -==> Parameters: admin(String)
2019-05-13 15:34:49 -<==      Total: 1
2019-05-13 15:34:49 -耗时 : 125
2019-05-13 15:34:49 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:34:49 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:34:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:34:49 -==> Parameters: 1(Long), admin(String), 登录(String), 127(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:34:49.233(Timestamp)
2019-05-13 15:34:49 -请求地址 : http://localhost:8081/index
2019-05-13 15:34:49 -HTTP METHOD : GET
2019-05-13 15:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:34:49 -参数 : [{}]
2019-05-13 15:34:49 -<==    Updates: 1
2019-05-13 15:34:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:34:49 -==> Parameters: 1(Long)
2019-05-13 15:34:49 -<==      Total: 49
2019-05-13 15:34:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:34:49 -==> Parameters: 138(Long)
2019-05-13 15:34:49 -<==      Total: 1
2019-05-13 15:34:49 -耗时 : 155
2019-05-13 15:34:49 -返回值 : index_v1
2019-05-13 15:34:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:34:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 155(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:34:49.497(Timestamp)
2019-05-13 15:34:49 -<==    Updates: 1
2019-05-13 15:34:49 -请求地址 : http://localhost:8081/main
2019-05-13 15:34:49 -HTTP METHOD : GET
2019-05-13 15:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:34:49 -参数 : []
2019-05-13 15:34:49 -耗时 : 0
2019-05-13 15:34:49 -返回值 : main
2019-05-13 15:34:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:34:49 -HTTP METHOD : GET
2019-05-13 15:34:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:34:49 -参数 : []
2019-05-13 15:34:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:34:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:34:49 -<==      Total: 0
2019-05-13 15:34:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:34:49 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:34:49 -<==      Total: 1
2019-05-13 15:34:49 -耗时 : 41
2019-05-13 15:34:49 -返回值 : com.bootdo.common.utils.PageUtils@56d5021a
2019-05-13 15:34:50 -请求地址 : http://localhost:8081/main
2019-05-13 15:34:50 -HTTP METHOD : GET
2019-05-13 15:34:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:34:50 -参数 : []
2019-05-13 15:34:50 -耗时 : 0
2019-05-13 15:34:50 -返回值 : main
2019-05-13 15:34:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:34:55 -==> Parameters: 1(Long)
2019-05-13 15:34:55 -<==      Total: 93
2019-05-13 15:34:55 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 15:34:55 -HTTP METHOD : GET
2019-05-13 15:34:55 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 15:34:55 -参数 : []
2019-05-13 15:34:55 -耗时 : 2
2019-05-13 15:34:55 -返回值 : charts/countYY
2019-05-13 15:34:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:34:56 -HTTP METHOD : GET
2019-05-13 15:34:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:34:56 -参数 : [userType]
2019-05-13 15:34:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:34:56 -==> Parameters: userType(String)
2019-05-13 15:34:56 -<==      Total: 4
2019-05-13 15:34:56 -耗时 : 22
2019-05-13 15:34:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:35:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:35:01 -HTTP METHOD : GET
2019-05-13 15:35:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:35:01 -参数 : []
2019-05-13 15:35:01 -耗时 : 0
2019-05-13 15:35:01 -返回值 : system/dept/deptTree
2019-05-13 15:35:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:35:01 -HTTP METHOD : GET
2019-05-13 15:35:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:35:01 -参数 : []
2019-05-13 15:35:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:35:01 -==> Parameters: 
2019-05-13 15:35:01 -<==      Total: 3
2019-05-13 15:35:01 -耗时 : 18
2019-05-13 15:35:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:35:03 -请求地址 : http://localhost:8081/charts/countYY/exportYY
2019-05-13 15:35:03 -HTTP METHOD : GET
2019-05-13 15:35:03 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.exportYY
2019-05-13 15:35:03 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@585b3c8f, com.bootdo.moneyLog.vo.HeatLogVo@3b7ff0b0, com.bootdo.moneyLog.vo.WaterLogVo@3a90bc20, org.apache.shiro.web.servlet.ShiroHttpServletResponse@49bafa8e]
2019-05-13 15:35:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE `2019%` and user_org = ? order by create_time asc 
2019-05-13 15:35:04 -==> Parameters: 2(String)
2019-05-13 15:35:04 -{conn-10001, pstmt-20010} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log 
	 
	         WHERE  `create_time`   LIKE `2019%`
		  		
	  
	  
	   and user_org = ? 
	  
	
	          	  order by create_time asc
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column '2019%' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.exprotElecLogYY(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.exprotElecLogYY(ElecLogServiceImpl.java:41)
	at com.bootdo.charts.controller.countYYController.exportYY(countYYController.java:215)
	at com.bootdo.charts.controller.countYYController$$FastClassBySpringCGLIB$$d906aaae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countYYController$$EnhancerBySpringCGLIB$$26110f3a.exportYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 15:35:04 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-13 15:35:04 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-13 15:35:04 -耗时 : 485
2019-05-13 15:35:04 -返回值 : null
2019-05-13 15:35:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-13 15:37:01 -Starting BootdoApplication on PC-201905091110 with PID 40376 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:37:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:37:02 -The following profiles are active: dev
2019-05-13 15:37:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:37:02 CST 2019]; root of context hierarchy
2019-05-13 15:37:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:37:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:37:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:37:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:37:09 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:37:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:37:09 -Starting service [Tomcat]
2019-05-13 15:37:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:37:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:37:10 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:37:10 -Root WebApplicationContext: initialization completed in 7908 ms
2019-05-13 15:37:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:37:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:37:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:37:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:37:10 -Filter xssFilter was not registered (disabled)
2019-05-13 15:37:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:37:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:37:10 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:37:10 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:37:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:37:02 CST 2019]; root of context hierarchy
2019-05-13 15:37:20 -Using default implementation for ThreadExecutor
2019-05-13 15:37:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:37:20 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:37:20 -RAMJobStore initialized.
2019-05-13 15:37:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:37:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:37:20 -Quartz scheduler version: 2.2.1
2019-05-13 15:37:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4601047
2019-05-13 15:37:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:37:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:37:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:37:24 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:37:24 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:37:24 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:37:24 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:37:24 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:37:24 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:37:24 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:37:24 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:37:24 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:37:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:37:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:37:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:37:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:37:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:37:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:37:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:37:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:37:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:37:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:37:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:37:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:37:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:37:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:37:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:37:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:37:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:37:24 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:37:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:37:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:37:24 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:37:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:37:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:37:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:37:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:37:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:37:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:37:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:37:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:37:24 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:37:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:37:24 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:37:24 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:37:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:37:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:37:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:37:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:37:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:37:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:37:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:37:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:37:24 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:37:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:37:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:37:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:37:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:37:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:37:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:37:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:37:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:37:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:37:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:37:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:37:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:37:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:37:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:37:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:37:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:37:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:37:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:37:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:37:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:37:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:37:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:37:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:37:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:37:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:37:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:37:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:37:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:37:24 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:37:24 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:37:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:37:24 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:37:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:37:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:37:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:37:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:37:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:37:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:37:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:37:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:37:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Mon May 13 15:37:02 CST 2019]; root of context hierarchy
2019-05-13 15:37:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:37:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:37:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:37:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:37:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:37:28 -Registering beans for JMX exposure on startup
2019-05-13 15:37:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:37:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:37:28 -Starting beans in phase 2147483647
2019-05-13 15:37:28 -Context refreshed
2019-05-13 15:37:28 -Found 1 custom documentation plugin(s)
2019-05-13 15:37:28 -Scanning for api listing references
2019-05-13 15:37:28 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:37:28 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_2
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_2
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_2
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:37:29 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_3
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_3
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_3
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_4
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_4
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_4
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:37:29 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_5
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_5
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_5
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_6
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_6
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_7
2019-05-13 15:37:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_7
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:37:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_7
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_8
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_8
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:37:29 -Generating unique operation named: addUsingGET_8
2019-05-13 15:37:29 -Generating unique operation named: editUsingGET_9
2019-05-13 15:37:29 -Generating unique operation named: listUsingGET_9
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:37:29 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:37:29 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:37:29 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:37:29 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:37:30 -Generating unique operation named: addUsingGET_9
2019-05-13 15:37:30 -Generating unique operation named: editUsingGET_10
2019-05-13 15:37:30 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:37:30 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_10
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_11
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:37:30 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:37:30 -Generating unique operation named: addUsingGET_10
2019-05-13 15:37:30 -Generating unique operation named: editUsingGET_11
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_12
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:37:30 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:37:30 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:37:30 -Generating unique operation named: addUsingGET_11
2019-05-13 15:37:30 -Generating unique operation named: editUsingGET_12
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_13
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:37:30 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:37:30 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:37:30 -Generating unique operation named: addUsingGET_12
2019-05-13 15:37:30 -Generating unique operation named: editUsingGET_13
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_14
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:37:30 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:37:30 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:37:30 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:37:30 -Generating unique operation named: addUsingGET_13
2019-05-13 15:37:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:37:30 -Generating unique operation named: editUsingGET_14
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_15
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:37:30 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:37:30 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:37:30 -Generating unique operation named: listUsingGET_16
2019-05-13 15:37:31 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:37:31 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:37:31 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:37:31 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:37:31 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:37:31 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:37:31 -Generating unique operation named: addUsingGET_14
2019-05-13 15:37:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:37:31 -Generating unique operation named: editUsingGET_15
2019-05-13 15:37:31 -Generating unique operation named: listUsingGET_17
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:37:31 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:37:31 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:37:31 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:37:31 -Generating unique operation named: addUsingGET_15
2019-05-13 15:37:31 -Generating unique operation named: editUsingGET_16
2019-05-13 15:37:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:37:31 -Generating unique operation named: listUsingGET_18
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:37:31 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:37:31 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:37:31 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:37:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:37:31 -Generating unique operation named: addUsingGET_16
2019-05-13 15:37:31 -Generating unique operation named: editUsingGET_17
2019-05-13 15:37:31 -Generating unique operation named: listUsingGET_19
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:37:31 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:37:31 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:37:31 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:37:31 -Generating unique operation named: addUsingGET_17
2019-05-13 15:37:31 -Generating unique operation named: editUsingGET_18
2019-05-13 15:37:31 -Generating unique operation named: listUsingGET_20
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:37:31 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:37:31 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:37:31 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:37:31 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:37:31 -Starting Quartz Scheduler now
2019-05-13 15:37:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:37:31 -Starting...
2019-05-13 15:37:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:37:31 -Started.
2019-05-13 15:37:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:37:31 -Using a shared selector for servlet write/read
2019-05-13 15:37:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:37:31 -Started BootdoApplication in 30.924 seconds (JVM running for 31.674)
2019-05-13 15:37:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:37:32 -==> Parameters: 
2019-05-13 15:37:32 -<==      Total: 1
2019-05-13 15:38:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:38:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:38:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 121 ms
2019-05-13 15:38:02 -Enabling session validation scheduler...
2019-05-13 15:38:03 -请求地址 : http://localhost:8081/login;JSESSIONID=d0babfbe-13d9-483e-8340-0a0aee1ffc00
2019-05-13 15:38:03 -HTTP METHOD : GET
2019-05-13 15:38:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:38:03 -参数 : [{}]
2019-05-13 15:38:03 -耗时 : 6
2019-05-13 15:38:03 -返回值 : login
2019-05-13 15:38:04 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:38:04 -HTTP METHOD : GET
2019-05-13 15:38:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:38:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@29a46bab, org.apache.shiro.web.servlet.ShiroHttpServletResponse@276390ef]
2019-05-13 15:38:05 -0676
2019-05-13 15:38:05 -耗时 : 695
2019-05-13 15:38:05 -返回值 : null
2019-05-13 15:38:14 -请求地址 : http://localhost:8081/login
2019-05-13 15:38:14 -HTTP METHOD : POST
2019-05-13 15:38:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:38:14 -参数 : [admin, 111111, 0676, org.apache.shiro.web.servlet.ShiroHttpServletRequest@d522627]
2019-05-13 15:38:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:38:14 -==> Parameters: admin(String)
2019-05-13 15:38:14 -<==      Total: 1
2019-05-13 15:38:14 -耗时 : 104
2019-05-13 15:38:14 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:38:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:38:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:38:14 -==> Parameters: 1(Long), admin(String), 登录(String), 105(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:38:14.597(Timestamp)
2019-05-13 15:38:14 -请求地址 : http://localhost:8081/index
2019-05-13 15:38:14 -HTTP METHOD : GET
2019-05-13 15:38:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:38:14 -参数 : [{}]
2019-05-13 15:38:14 -<==    Updates: 1
2019-05-13 15:38:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:38:14 -==> Parameters: 1(Long)
2019-05-13 15:38:14 -<==      Total: 49
2019-05-13 15:38:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:38:14 -==> Parameters: 138(Long)
2019-05-13 15:38:14 -<==      Total: 1
2019-05-13 15:38:14 -耗时 : 152
2019-05-13 15:38:14 -返回值 : index_v1
2019-05-13 15:38:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:38:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 152(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:38:14.989(Timestamp)
2019-05-13 15:38:15 -请求地址 : http://localhost:8081/main
2019-05-13 15:38:15 -HTTP METHOD : GET
2019-05-13 15:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:38:15 -参数 : []
2019-05-13 15:38:15 -耗时 : 0
2019-05-13 15:38:15 -返回值 : main
2019-05-13 15:38:15 -<==    Updates: 1
2019-05-13 15:38:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:38:15 -HTTP METHOD : GET
2019-05-13 15:38:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:38:15 -参数 : []
2019-05-13 15:38:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:38:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:38:15 -<==      Total: 0
2019-05-13 15:38:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:38:15 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:38:15 -<==      Total: 1
2019-05-13 15:38:15 -耗时 : 40
2019-05-13 15:38:15 -返回值 : com.bootdo.common.utils.PageUtils@6dc151b6
2019-05-13 15:38:15 -请求地址 : http://localhost:8081/main
2019-05-13 15:38:15 -HTTP METHOD : GET
2019-05-13 15:38:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:38:16 -参数 : []
2019-05-13 15:38:16 -耗时 : 17
2019-05-13 15:38:16 -返回值 : main
2019-05-13 15:38:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 15:38:19 -==> Parameters: 1(Long)
2019-05-13 15:38:19 -<==      Total: 93
2019-05-13 15:38:19 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 15:38:19 -HTTP METHOD : GET
2019-05-13 15:38:19 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 15:38:19 -参数 : []
2019-05-13 15:38:19 -耗时 : 0
2019-05-13 15:38:19 -返回值 : charts/countYY
2019-05-13 15:38:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 15:38:20 -HTTP METHOD : GET
2019-05-13 15:38:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 15:38:20 -参数 : [userType]
2019-05-13 15:38:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 15:38:20 -==> Parameters: userType(String)
2019-05-13 15:38:20 -<==      Total: 4
2019-05-13 15:38:20 -耗时 : 20
2019-05-13 15:38:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 15:38:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-13 15:38:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 15:38:25 -HTTP METHOD : GET
2019-05-13 15:38:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 15:38:25 -参数 : []
2019-05-13 15:38:25 -耗时 : 0
2019-05-13 15:38:25 -返回值 : system/dept/deptTree
2019-05-13 15:38:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 15:38:25 -HTTP METHOD : GET
2019-05-13 15:38:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 15:38:25 -参数 : []
2019-05-13 15:38:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 15:38:25 -==> Parameters: 
2019-05-13 15:38:25 -<==      Total: 3
2019-05-13 15:38:25 -耗时 : 20
2019-05-13 15:38:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 15:38:27 -请求地址 : http://localhost:8081/charts/countYY/exportYY
2019-05-13 15:38:27 -HTTP METHOD : GET
2019-05-13 15:38:27 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.exportYY
2019-05-13 15:38:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@283e2553, com.bootdo.moneyLog.vo.HeatLogVo@1fe8169f, com.bootdo.moneyLog.vo.WaterLogVo@6ab2d69a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ba246ef]
2019-05-13 15:38:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE `%2019%` and user_org = ? order by create_time asc 
2019-05-13 15:38:28 -==> Parameters: 2(String)
2019-05-13 15:38:28 -{conn-10001, pstmt-20010} execute error. select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log 
	 
	         WHERE  `create_time`   LIKE `%2019%`
		  		
	  
	  
	   and user_org = ? 
	  
	
	          	  order by create_time asc
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column '%2019%' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy102.exprotElecLogYY(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.exprotElecLogYY(ElecLogServiceImpl.java:41)
	at com.bootdo.charts.controller.countYYController.exportYY(countYYController.java:215)
	at com.bootdo.charts.controller.countYYController$$FastClassBySpringCGLIB$$d906aaae.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.countYYController$$EnhancerBySpringCGLIB$$6a62146d.exportYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-13 15:38:28 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-13 15:38:28 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-13 15:38:28 -耗时 : 325
2019-05-13 15:38:28 -返回值 : null
2019-05-13 15:53:53 -Starting BootdoApplication on PC-201905091110 with PID 21420 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 15:53:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 15:53:53 -The following profiles are active: dev
2019-05-13 15:53:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:53:53 CST 2019]; root of context hierarchy
2019-05-13 15:53:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 15:53:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:53:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 15:54:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 15:54:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 15:54:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 15:54:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 15:54:01 -Starting service [Tomcat]
2019-05-13 15:54:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 15:54:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 15:54:02 -Initializing Spring embedded WebApplicationContext
2019-05-13 15:54:02 -Root WebApplicationContext: initialization completed in 8225 ms
2019-05-13 15:54:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 15:54:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 15:54:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 15:54:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 15:54:02 -Filter xssFilter was not registered (disabled)
2019-05-13 15:54:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 15:54:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 15:54:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 15:54:02 -Servlet dispatcherServlet mapped to [/]
2019-05-13 15:54:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:53:53 CST 2019]; root of context hierarchy
2019-05-13 15:54:12 -Using default implementation for ThreadExecutor
2019-05-13 15:54:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 15:54:12 -Quartz Scheduler v.2.2.1 created.
2019-05-13 15:54:12 -RAMJobStore initialized.
2019-05-13 15:54:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 15:54:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 15:54:12 -Quartz scheduler version: 2.2.1
2019-05-13 15:54:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e8e59
2019-05-13 15:54:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 15:54:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 15:54:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 15:54:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 15:54:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 15:54:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 15:54:15 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 15:54:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 15:54:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 15:54:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 15:54:15 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 15:54:15 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 15:54:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 15:54:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 15:54:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 15:54:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 15:54:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 15:54:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:54:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 15:54:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 15:54:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 15:54:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 15:54:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 15:54:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 15:54:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 15:54:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 15:54:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 15:54:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 15:54:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 15:54:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 15:54:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 15:54:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 15:54:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 15:54:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 15:54:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 15:54:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 15:54:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 15:54:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 15:54:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 15:54:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:54:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:54:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 15:54:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 15:54:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 15:54:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 15:54:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:54:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 15:54:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 15:54:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 15:54:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 15:54:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 15:54:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 15:54:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 15:54:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 15:54:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 15:54:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 15:54:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 15:54:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 15:54:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 15:54:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 15:54:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 15:54:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 15:54:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 15:54:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 15:54:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 15:54:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 15:54:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 15:54:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 15:54:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 15:54:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 15:54:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 15:54:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 15:54:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 15:54:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 15:54:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:54:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 15:54:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 15:54:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 15:54:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 15:54:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 15:54:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 15:54:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 15:54:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 15:54:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 15:54:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 15:54:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 15:54:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 15:54:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 15:54:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 15:54:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 15:54:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 15:54:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 15:54:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 15:54:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 15:54:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:54:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 15:53:53 CST 2019]; root of context hierarchy
2019-05-13 15:54:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:54:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:54:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 15:54:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 15:54:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 15:54:19 -Registering beans for JMX exposure on startup
2019-05-13 15:54:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 15:54:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 15:54:19 -Starting beans in phase 2147483647
2019-05-13 15:54:19 -Context refreshed
2019-05-13 15:54:19 -Found 1 custom documentation plugin(s)
2019-05-13 15:54:19 -Scanning for api listing references
2019-05-13 15:54:19 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 15:54:19 -Generating unique operation named: removeUsingPOST_1
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_2
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_3
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_2
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_2
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_2
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_4
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_5
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_2
2019-05-13 15:54:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_3
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_3
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_3
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_6
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_7
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_4
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_4
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_4
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_8
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_9
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 15:54:20 -Generating unique operation named: ElecUsingGET_1
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_5
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_5
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_5
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_10
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_11
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_6
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_6
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_6
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_7
2019-05-13 15:54:20 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_7
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_12
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_13
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_7
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 15:54:20 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 15:54:20 -Generating unique operation named: addUsingGET_7
2019-05-13 15:54:20 -Generating unique operation named: editUsingGET_8
2019-05-13 15:54:20 -Generating unique operation named: listUsingGET_8
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_14
2019-05-13 15:54:20 -Generating unique operation named: removeUsingPOST_15
2019-05-13 15:54:20 -Generating unique operation named: saveUsingPOST_7
2019-05-13 15:54:20 -Generating unique operation named: updateUsingGET_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPOST_8
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPUT_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 15:54:20 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_8
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_9
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_9
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_16
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_17
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingGET_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPUT_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 15:54:21 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_9
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_10
2019-05-13 15:54:21 -Generating unique operation named: infoUsingGET_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingPOST_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingPUT_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 15:54:21 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_10
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_18
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_19
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_10
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_11
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_20
2019-05-13 15:54:21 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_10
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_11
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_12
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_21
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_10
2019-05-13 15:54:21 -Generating unique operation named: treeUsingGET_1
2019-05-13 15:54:21 -Generating unique operation named: treeUsingGET_2
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_11
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_11
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_12
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_13
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_22
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_23
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_11
2019-05-13 15:54:21 -Generating unique operation named: updateUsingGET_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_12
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPUT_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 15:54:21 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_12
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_13
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_14
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_24
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_25
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_12
2019-05-13 15:54:21 -Generating unique operation named: updateUsingGET_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_13
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPUT_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 15:54:21 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_13
2019-05-13 15:54:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_14
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_15
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_13
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_14
2019-05-13 15:54:21 -Generating unique operation named: updateUsingPOST_14
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_16
2019-05-13 15:54:21 -Generating unique operation named: listUsingHEAD_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingPOST_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingPUT_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingPATCH_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingDELETE_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 15:54:21 -Generating unique operation named: listUsingTRACE_1
2019-05-13 15:54:21 -Generating unique operation named: countDDUsingGET_1
2019-05-13 15:54:21 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 15:54:21 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 15:54:21 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 15:54:21 -Generating unique operation named: addUsingGET_14
2019-05-13 15:54:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 15:54:21 -Generating unique operation named: editUsingGET_15
2019-05-13 15:54:21 -Generating unique operation named: listUsingGET_17
2019-05-13 15:54:21 -Generating unique operation named: removeUsingPOST_26
2019-05-13 15:54:21 -Generating unique operation named: saveUsingPOST_15
2019-05-13 15:54:21 -Generating unique operation named: treeUsingGET_3
2019-05-13 15:54:21 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPOST_15
2019-05-13 15:54:22 -Generating unique operation named: addUsingGET_15
2019-05-13 15:54:22 -Generating unique operation named: editUsingGET_16
2019-05-13 15:54:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 15:54:22 -Generating unique operation named: listUsingGET_18
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_27
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_28
2019-05-13 15:54:22 -Generating unique operation named: saveUsingPOST_16
2019-05-13 15:54:22 -Generating unique operation named: updateUsingGET_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPOST_16
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPUT_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 15:54:22 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 15:54:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 15:54:22 -Generating unique operation named: addUsingGET_16
2019-05-13 15:54:22 -Generating unique operation named: editUsingGET_17
2019-05-13 15:54:22 -Generating unique operation named: listUsingGET_19
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_29
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_30
2019-05-13 15:54:22 -Generating unique operation named: saveUsingPOST_17
2019-05-13 15:54:22 -Generating unique operation named: updateUsingGET_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPOST_17
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPUT_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 15:54:22 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 15:54:22 -Generating unique operation named: addUsingGET_17
2019-05-13 15:54:22 -Generating unique operation named: editUsingGET_18
2019-05-13 15:54:22 -Generating unique operation named: listUsingGET_20
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_31
2019-05-13 15:54:22 -Generating unique operation named: removeUsingPOST_32
2019-05-13 15:54:22 -Generating unique operation named: saveUsingPOST_18
2019-05-13 15:54:22 -Generating unique operation named: updateUsingGET_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPOST_18
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPUT_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 15:54:22 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 15:54:22 -Starting Quartz Scheduler now
2019-05-13 15:54:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 15:54:22 -Starting...
2019-05-13 15:54:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 15:54:22 -Started.
2019-05-13 15:54:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 15:54:22 -Using a shared selector for servlet write/read
2019-05-13 15:54:22 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 15:54:22 -Started BootdoApplication in 29.802 seconds (JVM running for 30.562)
2019-05-13 15:54:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 15:54:22 -==> Parameters: 
2019-05-13 15:54:22 -<==      Total: 1
2019-05-13 15:55:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 15:59:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 15:59:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 15:59:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 91 ms
2019-05-13 15:59:38 -Enabling session validation scheduler...
2019-05-13 15:59:38 -请求地址 : http://localhost:8081/login;JSESSIONID=ed4d6ee2-9016-4ff7-bc5e-1ed0195d0d2e
2019-05-13 15:59:38 -HTTP METHOD : GET
2019-05-13 15:59:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:59:38 -参数 : [{}]
2019-05-13 15:59:38 -耗时 : 4
2019-05-13 15:59:38 -返回值 : login
2019-05-13 15:59:40 -请求地址 : http://localhost:8081/getVerify
2019-05-13 15:59:40 -HTTP METHOD : GET
2019-05-13 15:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 15:59:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@202fdf4d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1be3de3a]
2019-05-13 15:59:40 -7265
2019-05-13 15:59:40 -耗时 : 703
2019-05-13 15:59:40 -返回值 : null
2019-05-13 15:59:40 -请求地址 : http://localhost:8081/login
2019-05-13 15:59:40 -HTTP METHOD : GET
2019-05-13 15:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 15:59:40 -参数 : [{}]
2019-05-13 15:59:40 -耗时 : 0
2019-05-13 15:59:40 -返回值 : login
2019-05-13 15:59:46 -请求地址 : http://localhost:8081/login
2019-05-13 15:59:46 -HTTP METHOD : POST
2019-05-13 15:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 15:59:46 -参数 : [admin, 111111, 7265, org.apache.shiro.web.servlet.ShiroHttpServletRequest@22229a47]
2019-05-13 15:59:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 15:59:46 -==> Parameters: admin(String)
2019-05-13 15:59:46 -<==      Total: 1
2019-05-13 15:59:46 -耗时 : 138
2019-05-13 15:59:46 -返回值 : {msg=操作成功, code=0}
2019-05-13 15:59:47 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 15:59:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:59:47 -==> Parameters: 1(Long), admin(String), 登录(String), 138(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 15:59:47.064(Timestamp)
2019-05-13 15:59:47 -请求地址 : http://localhost:8081/index
2019-05-13 15:59:47 -HTTP METHOD : GET
2019-05-13 15:59:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 15:59:47 -参数 : [{}]
2019-05-13 15:59:47 -<==    Updates: 1
2019-05-13 15:59:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 15:59:47 -==> Parameters: 1(Long)
2019-05-13 15:59:47 -<==      Total: 49
2019-05-13 15:59:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 15:59:47 -==> Parameters: 138(Long)
2019-05-13 15:59:47 -<==      Total: 1
2019-05-13 15:59:47 -耗时 : 393
2019-05-13 15:59:47 -返回值 : index_v1
2019-05-13 15:59:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 15:59:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 393(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 15:59:47.607(Timestamp)
2019-05-13 15:59:47 -请求地址 : http://localhost:8081/main
2019-05-13 15:59:47 -HTTP METHOD : GET
2019-05-13 15:59:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:59:47 -参数 : []
2019-05-13 15:59:47 -耗时 : 0
2019-05-13 15:59:47 -返回值 : main
2019-05-13 15:59:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 15:59:48 -HTTP METHOD : GET
2019-05-13 15:59:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 15:59:48 -参数 : []
2019-05-13 15:59:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 15:59:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 15:59:48 -请求地址 : http://localhost:8081/main
2019-05-13 15:59:48 -HTTP METHOD : GET
2019-05-13 15:59:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 15:59:48 -参数 : []
2019-05-13 15:59:48 -耗时 : 0
2019-05-13 15:59:48 -返回值 : main
2019-05-13 15:59:48 -<==    Updates: 1
2019-05-13 15:59:48 -<==      Total: 0
2019-05-13 15:59:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 15:59:48 -==> Parameters: 1(Long), 0(String)
2019-05-13 15:59:48 -<==      Total: 1
2019-05-13 15:59:48 -耗时 : 186
2019-05-13 15:59:48 -返回值 : com.bootdo.common.utils.PageUtils@7b391328
2019-05-13 16:00:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 16:00:10 -==> Parameters: 1(Long)
2019-05-13 16:00:10 -<==      Total: 93
2019-05-13 16:00:10 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 16:00:10 -HTTP METHOD : GET
2019-05-13 16:00:10 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 16:00:10 -参数 : []
2019-05-13 16:00:10 -耗时 : 9
2019-05-13 16:00:10 -返回值 : charts/tableElecYY
2019-05-13 16:00:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 16:00:11 -HTTP METHOD : GET
2019-05-13 16:00:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 16:00:11 -参数 : [userType]
2019-05-13 16:00:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 16:00:11 -==> Parameters: userType(String)
2019-05-13 16:00:11 -<==      Total: 4
2019-05-13 16:00:11 -耗时 : 24
2019-05-13 16:00:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 16:00:12 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 16:00:12 -HTTP METHOD : GET
2019-05-13 16:00:12 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 16:00:12 -参数 : []
2019-05-13 16:00:12 -耗时 : 0
2019-05-13 16:00:12 -返回值 : charts/countYY
2019-05-13 16:00:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 16:00:13 -HTTP METHOD : GET
2019-05-13 16:00:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 16:00:13 -参数 : [userType]
2019-05-13 16:00:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 16:00:13 -==> Parameters: userType(String)
2019-05-13 16:00:13 -<==      Total: 4
2019-05-13 16:00:13 -耗时 : 5
2019-05-13 16:00:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 16:00:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 16:00:17 -HTTP METHOD : GET
2019-05-13 16:00:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 16:00:17 -参数 : []
2019-05-13 16:00:17 -耗时 : 1
2019-05-13 16:00:17 -返回值 : system/dept/deptTree
2019-05-13 16:00:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 16:00:18 -HTTP METHOD : GET
2019-05-13 16:00:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 16:00:18 -参数 : []
2019-05-13 16:00:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 16:00:18 -==> Parameters: 
2019-05-13 16:00:18 -<==      Total: 3
2019-05-13 16:00:18 -耗时 : 21
2019-05-13 16:00:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 16:00:20 -请求地址 : http://localhost:8081/charts/countYY/exportYY
2019-05-13 16:00:20 -HTTP METHOD : GET
2019-05-13 16:00:20 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.exportYY
2019-05-13 16:00:20 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@3cea4a98, com.bootdo.moneyLog.vo.HeatLogVo@1b882d4d, com.bootdo.moneyLog.vo.WaterLogVo@a0bdd1d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@608dcd93]
2019-05-13 16:00:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 16:00:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 16:00:20 -<==      Total: 23
2019-05-13 16:00:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 16:00:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 16:00:20 -<==      Total: 5
2019-05-13 16:00:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 16:00:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 16:00:20 -<==      Total: 6
2019-05-13 16:00:21 -耗时 : 1082
2019-05-13 16:00:21 -返回值 : null
2019-05-13 16:25:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 368]
2019-05-13 16:55:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 801]
2019-05-13 16:59:38 -Validating all active sessions...
2019-05-13 16:59:38 -Finished session validation.  [1] sessions were stopped.
2019-05-13 17:13:12 -请求地址 : http://localhost:8081/login;JSESSIONID=4b7a6469-83ca-47b4-a6ec-04a69f213701
2019-05-13 17:13:12 -HTTP METHOD : GET
2019-05-13 17:13:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 17:13:12 -参数 : [{}]
2019-05-13 17:13:12 -耗时 : 1
2019-05-13 17:13:12 -返回值 : login
2019-05-13 17:13:13 -请求地址 : http://localhost:8081/getVerify
2019-05-13 17:13:13 -HTTP METHOD : GET
2019-05-13 17:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 17:13:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@49708a52, org.apache.shiro.web.servlet.ShiroHttpServletResponse@798cbca9]
2019-05-13 17:13:13 -7696
2019-05-13 17:13:13 -耗时 : 12
2019-05-13 17:13:13 -返回值 : null
2019-05-13 17:13:13 -请求地址 : http://localhost:8081/login
2019-05-13 17:13:13 -HTTP METHOD : GET
2019-05-13 17:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 17:13:13 -参数 : [{}]
2019-05-13 17:13:13 -耗时 : 1
2019-05-13 17:13:13 -返回值 : login
2019-05-13 17:13:20 -请求地址 : http://localhost:8081/login
2019-05-13 17:13:20 -HTTP METHOD : POST
2019-05-13 17:13:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 17:13:20 -参数 : [admin, 111111, 7696, org.apache.shiro.web.servlet.ShiroHttpServletRequest@51a911f5]
2019-05-13 17:13:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 17:13:20 -==> Parameters: admin(String)
2019-05-13 17:13:20 -<==      Total: 1
2019-05-13 17:13:20 -耗时 : 12
2019-05-13 17:13:20 -返回值 : {msg=操作成功, code=0}
2019-05-13 17:13:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 17:13:20 -==> Parameters: 1(Long), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 17:13:20.475(Timestamp)
2019-05-13 17:13:20 -请求地址 : http://localhost:8081/index
2019-05-13 17:13:20 -HTTP METHOD : GET
2019-05-13 17:13:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 17:13:20 -参数 : [{}]
2019-05-13 17:13:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 17:13:20 -==> Parameters: 1(Long)
2019-05-13 17:13:20 -<==      Total: 49
2019-05-13 17:13:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 17:13:20 -==> Parameters: 138(Long)
2019-05-13 17:13:20 -<==      Total: 1
2019-05-13 17:13:20 -耗时 : 30
2019-05-13 17:13:20 -返回值 : index_v1
2019-05-13 17:13:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 17:13:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 17:13:20.538(Timestamp)
2019-05-13 17:13:20 -请求地址 : http://localhost:8081/main
2019-05-13 17:13:20 -HTTP METHOD : GET
2019-05-13 17:13:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 17:13:20 -参数 : []
2019-05-13 17:13:20 -耗时 : 1
2019-05-13 17:13:20 -返回值 : main
2019-05-13 17:13:20 -<==    Updates: 1
2019-05-13 17:13:20 -<==    Updates: 1
2019-05-13 17:13:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 17:13:20 -HTTP METHOD : GET
2019-05-13 17:13:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 17:13:20 -参数 : []
2019-05-13 17:13:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 17:13:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 17:13:20 -<==      Total: 0
2019-05-13 17:13:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 17:13:20 -==> Parameters: 1(Long), 0(String)
2019-05-13 17:13:20 -<==      Total: 1
2019-05-13 17:13:20 -耗时 : 8
2019-05-13 17:13:20 -返回值 : com.bootdo.common.utils.PageUtils@37da2bc6
2019-05-13 17:13:20 -请求地址 : http://localhost:8081/main
2019-05-13 17:13:20 -HTTP METHOD : GET
2019-05-13 17:13:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 17:13:20 -参数 : []
2019-05-13 17:13:20 -耗时 : 1
2019-05-13 17:13:20 -返回值 : main
2019-05-13 17:13:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 17:13:26 -==> Parameters: 1(Long)
2019-05-13 17:13:26 -<==      Total: 93
2019-05-13 17:13:26 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 17:13:26 -HTTP METHOD : GET
2019-05-13 17:13:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 17:13:26 -参数 : []
2019-05-13 17:13:26 -耗时 : 0
2019-05-13 17:13:26 -返回值 : charts/tableElecYY
2019-05-13 17:13:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 17:13:27 -HTTP METHOD : GET
2019-05-13 17:13:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 17:13:27 -参数 : [userType]
2019-05-13 17:13:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 17:13:27 -==> Parameters: userType(String)
2019-05-13 17:13:27 -<==      Total: 4
2019-05-13 17:13:27 -耗时 : 6
2019-05-13 17:13:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 17:13:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 17:13:39 -HTTP METHOD : GET
2019-05-13 17:13:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 17:13:39 -参数 : []
2019-05-13 17:13:39 -耗时 : 12
2019-05-13 17:13:39 -返回值 : charts/tableWaterYY
2019-05-13 17:13:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 17:13:39 -HTTP METHOD : GET
2019-05-13 17:13:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 17:13:39 -参数 : [userType]
2019-05-13 17:13:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 17:13:39 -==> Parameters: userType(String)
2019-05-13 17:13:39 -<==      Total: 4
2019-05-13 17:13:39 -耗时 : 7
2019-05-13 17:13:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 17:14:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 17:14:09 -HTTP METHOD : GET
2019-05-13 17:14:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 17:14:09 -参数 : []
2019-05-13 17:14:09 -耗时 : 0
2019-05-13 17:14:09 -返回值 : system/dept/deptTree
2019-05-13 17:14:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 17:14:09 -HTTP METHOD : GET
2019-05-13 17:14:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 17:14:09 -参数 : []
2019-05-13 17:14:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 17:14:09 -==> Parameters: 
2019-05-13 17:14:09 -<==      Total: 3
2019-05-13 17:14:09 -耗时 : 5
2019-05-13 17:14:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 17:14:12 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-05-13 17:14:12 -HTTP METHOD : GET
2019-05-13 17:14:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-05-13 17:14:12 -参数 : [com.bootdo.water.vo.WaterVo@60ac2fba, com.bootdo.moneyLog.vo.WaterLogVo@5b6244c9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@38bde516]
2019-05-13 17:14:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE '?%' and user_org = ? order by create_time asc 
2019-05-13 17:14:12 -耗时 : 154
2019-05-13 17:14:12 -返回值 : null
2019-05-13 17:15:28 -Starting BootdoApplication on PC-201905091110 with PID 37880 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 17:15:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 17:15:28 -The following profiles are active: dev
2019-05-13 17:15:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 17:15:28 CST 2019]; root of context hierarchy
2019-05-13 17:15:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 17:15:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea1f1c60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$dc784b07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:36 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 17:15:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 17:15:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 17:15:38 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 17:15:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 17:15:38 -Starting service [Tomcat]
2019-05-13 17:15:38 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 17:15:38 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 17:15:39 -Initializing Spring embedded WebApplicationContext
2019-05-13 17:15:39 -Root WebApplicationContext: initialization completed in 10614 ms
2019-05-13 17:15:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 17:15:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 17:15:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 17:15:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 17:15:40 -Filter xssFilter was not registered (disabled)
2019-05-13 17:15:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 17:15:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 17:15:40 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 17:15:40 -Servlet dispatcherServlet mapped to [/]
2019-05-13 17:15:50 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 17:15:28 CST 2019]; root of context hierarchy
2019-05-13 17:15:51 -Using default implementation for ThreadExecutor
2019-05-13 17:15:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 17:15:51 -Quartz Scheduler v.2.2.1 created.
2019-05-13 17:15:51 -RAMJobStore initialized.
2019-05-13 17:15:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 17:15:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 17:15:51 -Quartz scheduler version: 2.2.1
2019-05-13 17:15:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@d108406
2019-05-13 17:15:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 17:15:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 17:15:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 17:15:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 17:15:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 17:15:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 17:15:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 17:15:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 17:15:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 17:15:55 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 17:15:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 17:15:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 17:15:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 17:15:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 17:15:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 17:15:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 17:15:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 17:15:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 17:15:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 17:15:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 17:15:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 17:15:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 17:15:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 17:15:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 17:15:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 17:15:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 17:15:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 17:15:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 17:15:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 17:15:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 17:15:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 17:15:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 17:15:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 17:15:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 17:15:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 17:15:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 17:15:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 17:15:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 17:15:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 17:15:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 17:15:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 17:15:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 17:15:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 17:15:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 17:15:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 17:15:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 17:15:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 17:15:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 17:15:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 17:15:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 17:15:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 17:15:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 17:15:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 17:15:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 17:15:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 17:15:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 17:15:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 17:15:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 17:15:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 17:15:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 17:15:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 17:15:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 17:15:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 17:15:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 17:15:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 17:15:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 17:15:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 17:15:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 17:15:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 17:15:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 17:15:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 17:15:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 17:15:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 17:15:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 17:15:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 17:15:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 17:15:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 17:15:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 17:15:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 17:15:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 17:15:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 17:15:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 17:15:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 17:15:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 17:15:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 17:15:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 17:15:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 17:15:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 17:15:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 17:15:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 17:15:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 17:15:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 17:15:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 17:15:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 17:15:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 17:15:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 17:15:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 17:15:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 17:15:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 17:15:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 17:15:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 17:15:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 17:15:28 CST 2019]; root of context hierarchy
2019-05-13 17:15:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 17:15:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 17:15:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 17:15:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 17:15:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 17:16:01 -Registering beans for JMX exposure on startup
2019-05-13 17:16:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 17:16:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 17:16:01 -Starting beans in phase 2147483647
2019-05-13 17:16:01 -Context refreshed
2019-05-13 17:16:01 -Found 1 custom documentation plugin(s)
2019-05-13 17:16:01 -Scanning for api listing references
2019-05-13 17:16:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_1
2019-05-13 17:16:02 -Generating unique operation named: addUsingGET_1
2019-05-13 17:16:02 -Generating unique operation named: editUsingGET_1
2019-05-13 17:16:02 -Generating unique operation named: listUsingGET_1
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_2
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_3
2019-05-13 17:16:02 -Generating unique operation named: saveUsingPOST_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingGET_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPOST_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPUT_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 17:16:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 17:16:02 -Generating unique operation named: addUsingGET_2
2019-05-13 17:16:02 -Generating unique operation named: editUsingGET_2
2019-05-13 17:16:02 -Generating unique operation named: listUsingGET_2
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_4
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_5
2019-05-13 17:16:02 -Generating unique operation named: saveUsingPOST_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPOST_2
2019-05-13 17:16:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 17:16:02 -Generating unique operation named: addUsingGET_3
2019-05-13 17:16:02 -Generating unique operation named: editUsingGET_3
2019-05-13 17:16:02 -Generating unique operation named: listUsingGET_3
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_6
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_7
2019-05-13 17:16:02 -Generating unique operation named: saveUsingPOST_3
2019-05-13 17:16:02 -Generating unique operation named: updateUsingGET_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPOST_3
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPUT_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 17:16:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 17:16:02 -Generating unique operation named: addUsingGET_4
2019-05-13 17:16:02 -Generating unique operation named: editUsingGET_4
2019-05-13 17:16:02 -Generating unique operation named: listUsingGET_4
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_8
2019-05-13 17:16:02 -Generating unique operation named: removeUsingPOST_9
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingGET_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPUT_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 17:16:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 17:16:03 -Generating unique operation named: ElecUsingGET_1
2019-05-13 17:16:03 -Generating unique operation named: addUsingGET_5
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_5
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_5
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_10
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_11
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingGET_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPUT_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 17:16:03 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_6
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_6
2019-05-13 17:16:03 -Generating unique operation named: addUsingGET_6
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_7
2019-05-13 17:16:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_7
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_12
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_13
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingGET_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPUT_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 17:16:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 17:16:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 17:16:03 -Generating unique operation named: addUsingGET_7
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_8
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_8
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_14
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_15
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingGET_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_8
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPUT_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 17:16:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 17:16:03 -Generating unique operation named: addUsingGET_8
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_9
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_9
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_16
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_17
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_8
2019-05-13 17:16:03 -Generating unique operation named: updateUsingGET_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_9
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPUT_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 17:16:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 17:16:03 -Generating unique operation named: addUsingGET_9
2019-05-13 17:16:03 -Generating unique operation named: editUsingGET_10
2019-05-13 17:16:03 -Generating unique operation named: infoUsingGET_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingPOST_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingPUT_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 17:16:03 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_10
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_18
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_19
2019-05-13 17:16:03 -Generating unique operation named: saveUsingPOST_9
2019-05-13 17:16:03 -Generating unique operation named: updateUsingPOST_10
2019-05-13 17:16:03 -Generating unique operation named: listUsingGET_11
2019-05-13 17:16:03 -Generating unique operation named: removeUsingPOST_20
2019-05-13 17:16:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_10
2019-05-13 17:16:04 -Generating unique operation named: editUsingGET_11
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_12
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_21
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_10
2019-05-13 17:16:04 -Generating unique operation named: treeUsingGET_1
2019-05-13 17:16:04 -Generating unique operation named: treeUsingGET_2
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPOST_11
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_11
2019-05-13 17:16:04 -Generating unique operation named: editUsingGET_12
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_13
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_22
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_23
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_11
2019-05-13 17:16:04 -Generating unique operation named: updateUsingGET_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPOST_12
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPUT_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 17:16:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_12
2019-05-13 17:16:04 -Generating unique operation named: editUsingGET_13
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_14
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_24
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_25
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_12
2019-05-13 17:16:04 -Generating unique operation named: updateUsingGET_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPOST_13
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPUT_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 17:16:04 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_13
2019-05-13 17:16:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 17:16:04 -Generating unique operation named: editUsingGET_14
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_15
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_13
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_14
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPOST_14
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_16
2019-05-13 17:16:04 -Generating unique operation named: listUsingHEAD_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingPOST_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingPUT_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingPATCH_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingDELETE_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 17:16:04 -Generating unique operation named: listUsingTRACE_1
2019-05-13 17:16:04 -Generating unique operation named: countDDUsingGET_1
2019-05-13 17:16:04 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 17:16:04 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 17:16:04 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_14
2019-05-13 17:16:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 17:16:04 -Generating unique operation named: editUsingGET_15
2019-05-13 17:16:04 -Generating unique operation named: listUsingGET_17
2019-05-13 17:16:04 -Generating unique operation named: removeUsingPOST_26
2019-05-13 17:16:04 -Generating unique operation named: saveUsingPOST_15
2019-05-13 17:16:04 -Generating unique operation named: treeUsingGET_3
2019-05-13 17:16:04 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 17:16:04 -Generating unique operation named: updateUsingPOST_15
2019-05-13 17:16:04 -Generating unique operation named: addUsingGET_15
2019-05-13 17:16:05 -Generating unique operation named: editUsingGET_16
2019-05-13 17:16:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 17:16:05 -Generating unique operation named: listUsingGET_18
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_27
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_28
2019-05-13 17:16:05 -Generating unique operation named: saveUsingPOST_16
2019-05-13 17:16:05 -Generating unique operation named: updateUsingGET_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPOST_16
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPUT_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 17:16:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 17:16:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 17:16:05 -Generating unique operation named: addUsingGET_16
2019-05-13 17:16:05 -Generating unique operation named: editUsingGET_17
2019-05-13 17:16:05 -Generating unique operation named: listUsingGET_19
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_29
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_30
2019-05-13 17:16:05 -Generating unique operation named: saveUsingPOST_17
2019-05-13 17:16:05 -Generating unique operation named: updateUsingGET_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPOST_17
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPUT_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 17:16:05 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 17:16:05 -Generating unique operation named: addUsingGET_17
2019-05-13 17:16:05 -Generating unique operation named: editUsingGET_18
2019-05-13 17:16:05 -Generating unique operation named: listUsingGET_20
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_31
2019-05-13 17:16:05 -Generating unique operation named: removeUsingPOST_32
2019-05-13 17:16:05 -Generating unique operation named: saveUsingPOST_18
2019-05-13 17:16:05 -Generating unique operation named: updateUsingGET_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPOST_18
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPUT_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 17:16:05 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 17:16:05 -Starting Quartz Scheduler now
2019-05-13 17:16:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 17:16:05 -Starting...
2019-05-13 17:16:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 17:16:05 -Started.
2019-05-13 17:16:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 17:16:05 -Using a shared selector for servlet write/read
2019-05-13 17:16:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 17:16:05 -Started BootdoApplication in 38.748 seconds (JVM running for 39.68)
2019-05-13 17:16:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 17:16:07 -==> Parameters: 
2019-05-13 17:16:07 -<==      Total: 1
2019-05-13 17:16:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 17:16:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 17:16:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 114 ms
2019-05-13 17:16:26 -Enabling session validation scheduler...
2019-05-13 17:16:26 -请求地址 : http://localhost:8081/login;JSESSIONID=ffd1293d-5e97-4431-b370-527405456a4c
2019-05-13 17:16:26 -HTTP METHOD : GET
2019-05-13 17:16:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 17:16:26 -参数 : [{}]
2019-05-13 17:16:26 -耗时 : 4
2019-05-13 17:16:26 -返回值 : login
2019-05-13 17:16:28 -请求地址 : http://localhost:8081/getVerify
2019-05-13 17:16:28 -HTTP METHOD : GET
2019-05-13 17:16:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 17:16:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@42498d6b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@467601fa]
2019-05-13 17:16:32 -0231
2019-05-13 17:16:33 -耗时 : 4461
2019-05-13 17:16:33 -返回值 : null
2019-05-13 17:16:56 -请求地址 : http://localhost:8081/login
2019-05-13 17:16:56 -HTTP METHOD : POST
2019-05-13 17:16:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 17:16:56 -参数 : [admin, 111111, 0231, org.apache.shiro.web.servlet.ShiroHttpServletRequest@262db000]
2019-05-13 17:16:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 17:16:56 -==> Parameters: admin(String)
2019-05-13 17:16:56 -<==      Total: 1
2019-05-13 17:16:56 -耗时 : 221
2019-05-13 17:16:56 -返回值 : {msg=操作成功, code=0}
2019-05-13 17:16:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 17:16:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 17:16:56 -==> Parameters: 1(Long), admin(String), 登录(String), 221(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 17:16:56.451(Timestamp)
2019-05-13 17:16:56 -<==    Updates: 1
2019-05-13 17:16:56 -请求地址 : http://localhost:8081/index
2019-05-13 17:16:56 -HTTP METHOD : GET
2019-05-13 17:16:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 17:16:56 -参数 : [{}]
2019-05-13 17:16:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 17:16:56 -==> Parameters: 1(Long)
2019-05-13 17:16:56 -<==      Total: 49
2019-05-13 17:16:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 17:16:56 -==> Parameters: 138(Long)
2019-05-13 17:16:56 -<==      Total: 1
2019-05-13 17:16:56 -耗时 : 183
2019-05-13 17:16:56 -返回值 : index_v1
2019-05-13 17:16:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 17:16:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 183(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 17:16:56.916(Timestamp)
2019-05-13 17:16:56 -<==    Updates: 1
2019-05-13 17:16:57 -请求地址 : http://localhost:8081/main
2019-05-13 17:16:57 -HTTP METHOD : GET
2019-05-13 17:16:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 17:16:57 -参数 : []
2019-05-13 17:16:57 -耗时 : 0
2019-05-13 17:16:57 -返回值 : main
2019-05-13 17:16:57 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 17:16:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 17:16:57 -HTTP METHOD : GET
2019-05-13 17:16:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 17:16:57 -参数 : []
2019-05-13 17:16:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 17:16:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 17:16:57 -<==      Total: 0
2019-05-13 17:16:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 17:16:57 -==> Parameters: 1(Long), 0(String)
2019-05-13 17:16:57 -<==      Total: 1
2019-05-13 17:16:57 -耗时 : 62
2019-05-13 17:16:57 -返回值 : com.bootdo.common.utils.PageUtils@5014ceb8
2019-05-13 17:16:57 -请求地址 : http://localhost:8081/main
2019-05-13 17:16:57 -HTTP METHOD : GET
2019-05-13 17:16:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 17:16:57 -参数 : []
2019-05-13 17:16:57 -耗时 : 0
2019-05-13 17:16:57 -返回值 : main
2019-05-13 17:17:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 17:17:22 -==> Parameters: 1(Long)
2019-05-13 17:17:22 -<==      Total: 93
2019-05-13 17:17:22 -请求地址 : http://localhost:8081/charts/countYY
2019-05-13 17:17:22 -HTTP METHOD : GET
2019-05-13 17:17:22 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-13 17:17:22 -参数 : []
2019-05-13 17:17:22 -耗时 : 0
2019-05-13 17:17:22 -返回值 : charts/countYY
2019-05-13 17:17:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 17:17:22 -HTTP METHOD : GET
2019-05-13 17:17:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 17:17:22 -参数 : [userType]
2019-05-13 17:17:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 17:17:22 -==> Parameters: userType(String)
2019-05-13 17:17:22 -<==      Total: 4
2019-05-13 17:17:22 -耗时 : 25
2019-05-13 17:17:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 17:17:22 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 17:17:22 -HTTP METHOD : GET
2019-05-13 17:17:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 17:17:22 -参数 : []
2019-05-13 17:17:22 -耗时 : 13
2019-05-13 17:17:22 -返回值 : charts/tableElecYY
2019-05-13 17:17:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 17:17:23 -HTTP METHOD : GET
2019-05-13 17:17:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 17:17:23 -参数 : [userType]
2019-05-13 17:17:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 17:17:23 -==> Parameters: userType(String)
2019-05-13 17:17:23 -<==      Total: 4
2019-05-13 17:17:23 -耗时 : 5
2019-05-13 17:17:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 17:17:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 17:17:24 -HTTP METHOD : GET
2019-05-13 17:17:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 17:17:24 -参数 : []
2019-05-13 17:17:24 -耗时 : 13
2019-05-13 17:17:24 -返回值 : charts/tableWaterYY
2019-05-13 17:17:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 17:17:24 -HTTP METHOD : GET
2019-05-13 17:17:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 17:17:24 -参数 : [userType]
2019-05-13 17:17:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 17:17:24 -==> Parameters: userType(String)
2019-05-13 17:17:24 -<==      Total: 4
2019-05-13 17:17:24 -耗时 : 9
2019-05-13 17:17:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 17:17:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 17:17:30 -HTTP METHOD : GET
2019-05-13 17:17:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 17:17:30 -参数 : []
2019-05-13 17:17:30 -耗时 : 1
2019-05-13 17:17:30 -返回值 : system/dept/deptTree
2019-05-13 17:17:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 17:17:31 -HTTP METHOD : GET
2019-05-13 17:17:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 17:17:31 -参数 : []
2019-05-13 17:17:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 17:17:31 -==> Parameters: 
2019-05-13 17:17:31 -<==      Total: 3
2019-05-13 17:17:31 -耗时 : 112
2019-05-13 17:17:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 17:17:34 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-05-13 17:17:34 -HTTP METHOD : GET
2019-05-13 17:17:34 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-05-13 17:17:34 -参数 : [com.bootdo.water.vo.WaterVo@3e7487a3, com.bootdo.moneyLog.vo.WaterLogVo@734d91be, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3adc320c]
2019-05-13 17:17:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 17:17:35 -==> Parameters: 2019(String), 2(String)
2019-05-13 17:17:35 -<==      Total: 3
2019-05-13 17:17:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 17:17:35 -==> Parameters: 2019(String), 2(String)
2019-05-13 17:17:35 -<==      Total: 1
2019-05-13 17:17:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 17:17:35 -==> Parameters: 2019(String), 2(String)
2019-05-13 17:17:35 -<==      Total: 6
2019-05-13 17:17:35 -耗时 : 801
2019-05-13 17:17:35 -返回值 : null
2019-05-13 17:46:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-05-13 21:05:06 -Starting BootdoApplication on PC-201905091110 with PID 15556 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 21:05:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 21:05:06 -The following profiles are active: dev
2019-05-13 21:05:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 21:05:07 CST 2019]; root of context hierarchy
2019-05-13 21:05:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 21:05:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:19 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 21:05:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 21:05:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:05:24 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 21:05:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 21:05:24 -Starting service [Tomcat]
2019-05-13 21:05:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 21:05:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 21:05:25 -Initializing Spring embedded WebApplicationContext
2019-05-13 21:05:25 -Root WebApplicationContext: initialization completed in 18153 ms
2019-05-13 21:05:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 21:05:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 21:05:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 21:05:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 21:05:26 -Filter xssFilter was not registered (disabled)
2019-05-13 21:05:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 21:05:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 21:05:26 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 21:05:26 -Servlet dispatcherServlet mapped to [/]
2019-05-13 21:05:39 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 21:05:07 CST 2019]; root of context hierarchy
2019-05-13 21:05:40 -Using default implementation for ThreadExecutor
2019-05-13 21:05:40 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 21:05:40 -Quartz Scheduler v.2.2.1 created.
2019-05-13 21:05:40 -RAMJobStore initialized.
2019-05-13 21:05:40 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 21:05:40 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 21:05:40 -Quartz scheduler version: 2.2.1
2019-05-13 21:05:40 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e8e59
2019-05-13 21:05:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 21:05:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 21:05:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 21:05:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 21:05:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 21:05:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 21:05:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 21:05:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 21:05:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 21:05:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 21:05:47 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 21:05:47 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 21:05:47 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 21:05:47 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 21:05:47 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 21:05:47 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 21:05:47 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 21:05:47 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 21:05:47 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 21:05:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 21:05:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 21:05:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 21:05:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 21:05:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 21:05:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 21:05:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 21:05:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 21:05:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 21:05:47 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 21:05:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 21:05:47 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 21:05:47 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 21:05:47 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 21:05:47 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 21:05:47 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 21:05:47 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 21:05:47 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 21:05:47 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 21:05:47 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 21:05:47 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 21:05:47 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 21:05:47 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:05:47 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:05:47 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 21:05:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 21:05:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 21:05:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 21:05:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 21:05:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 21:05:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 21:05:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 21:05:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 21:05:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 21:05:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 21:05:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 21:05:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 21:05:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 21:05:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 21:05:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 21:05:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 21:05:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 21:05:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 21:05:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 21:05:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 21:05:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 21:05:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 21:05:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 21:05:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 21:05:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 21:05:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 21:05:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 21:05:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 21:05:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 21:05:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 21:05:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 21:05:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 21:05:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 21:05:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 21:05:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 21:05:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 21:05:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:05:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 21:05:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 21:05:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 21:05:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:05:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:05:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 21:05:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 21:05:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 21:05:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 21:05:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 21:05:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 21:05:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:05:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Mon May 13 21:05:07 CST 2019]; root of context hierarchy
2019-05-13 21:05:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:05:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:05:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:05:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 21:05:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 21:05:52 -Registering beans for JMX exposure on startup
2019-05-13 21:05:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 21:05:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 21:05:52 -Starting beans in phase 2147483647
2019-05-13 21:05:52 -Context refreshed
2019-05-13 21:05:53 -Found 1 custom documentation plugin(s)
2019-05-13 21:05:53 -Scanning for api listing references
2019-05-13 21:05:54 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_1
2019-05-13 21:05:54 -Generating unique operation named: addUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: editUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: listUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_2
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_3
2019-05-13 21:05:54 -Generating unique operation named: saveUsingPOST_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPOST_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPUT_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 21:05:54 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 21:05:54 -Generating unique operation named: addUsingGET_2
2019-05-13 21:05:54 -Generating unique operation named: editUsingGET_2
2019-05-13 21:05:54 -Generating unique operation named: listUsingGET_2
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_4
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_5
2019-05-13 21:05:54 -Generating unique operation named: saveUsingPOST_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPOST_2
2019-05-13 21:05:54 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: addUsingGET_3
2019-05-13 21:05:54 -Generating unique operation named: editUsingGET_3
2019-05-13 21:05:54 -Generating unique operation named: listUsingGET_3
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_6
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_7
2019-05-13 21:05:54 -Generating unique operation named: saveUsingPOST_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingGET_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPOST_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPUT_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 21:05:54 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 21:05:54 -Generating unique operation named: addUsingGET_4
2019-05-13 21:05:54 -Generating unique operation named: editUsingGET_4
2019-05-13 21:05:54 -Generating unique operation named: listUsingGET_4
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_8
2019-05-13 21:05:54 -Generating unique operation named: removeUsingPOST_9
2019-05-13 21:05:54 -Generating unique operation named: saveUsingPOST_4
2019-05-13 21:05:54 -Generating unique operation named: updateUsingGET_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPOST_4
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPUT_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 21:05:54 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 21:05:54 -Generating unique operation named: ElecUsingGET_1
2019-05-13 21:05:54 -Generating unique operation named: addUsingGET_5
2019-05-13 21:05:54 -Generating unique operation named: editUsingGET_5
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_5
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_10
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_11
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingGET_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPUT_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 21:05:55 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_6
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_6
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_6
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_7
2019-05-13 21:05:55 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_7
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_12
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_13
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingGET_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPUT_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 21:05:55 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 21:05:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_7
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_8
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_8
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_14
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_15
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingGET_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_8
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPUT_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 21:05:55 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_8
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_9
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_9
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_16
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_17
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_8
2019-05-13 21:05:55 -Generating unique operation named: updateUsingGET_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_9
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPUT_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 21:05:55 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_9
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_10
2019-05-13 21:05:55 -Generating unique operation named: infoUsingGET_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingPOST_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingPUT_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 21:05:55 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_10
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_18
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_19
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_9
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_10
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_11
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_20
2019-05-13 21:05:55 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_10
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_11
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_12
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_21
2019-05-13 21:05:55 -Generating unique operation named: saveUsingPOST_10
2019-05-13 21:05:55 -Generating unique operation named: treeUsingGET_1
2019-05-13 21:05:55 -Generating unique operation named: treeUsingGET_2
2019-05-13 21:05:55 -Generating unique operation named: updateUsingPOST_11
2019-05-13 21:05:55 -Generating unique operation named: addUsingGET_11
2019-05-13 21:05:55 -Generating unique operation named: editUsingGET_12
2019-05-13 21:05:55 -Generating unique operation named: listUsingGET_13
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_22
2019-05-13 21:05:55 -Generating unique operation named: removeUsingPOST_23
2019-05-13 21:05:56 -Generating unique operation named: saveUsingPOST_11
2019-05-13 21:05:56 -Generating unique operation named: updateUsingGET_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPOST_12
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPUT_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 21:05:56 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 21:05:56 -Generating unique operation named: addUsingGET_12
2019-05-13 21:05:56 -Generating unique operation named: editUsingGET_13
2019-05-13 21:05:56 -Generating unique operation named: listUsingGET_14
2019-05-13 21:05:56 -Generating unique operation named: removeUsingPOST_24
2019-05-13 21:05:56 -Generating unique operation named: removeUsingPOST_25
2019-05-13 21:05:56 -Generating unique operation named: saveUsingPOST_12
2019-05-13 21:05:56 -Generating unique operation named: updateUsingGET_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPOST_13
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPUT_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 21:05:56 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 21:05:56 -Generating unique operation named: addUsingGET_13
2019-05-13 21:05:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 21:05:56 -Generating unique operation named: editUsingGET_14
2019-05-13 21:05:56 -Generating unique operation named: listUsingGET_15
2019-05-13 21:05:56 -Generating unique operation named: saveUsingPOST_13
2019-05-13 21:05:56 -Generating unique operation named: saveUsingPOST_14
2019-05-13 21:05:56 -Generating unique operation named: updateUsingPOST_14
2019-05-13 21:05:56 -Generating unique operation named: listUsingGET_16
2019-05-13 21:05:56 -Generating unique operation named: listUsingHEAD_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingPOST_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingPUT_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingPATCH_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingDELETE_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 21:05:56 -Generating unique operation named: listUsingTRACE_1
2019-05-13 21:05:56 -Generating unique operation named: countDDUsingGET_1
2019-05-13 21:05:56 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 21:05:56 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 21:05:56 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 21:05:56 -Generating unique operation named: addUsingGET_14
2019-05-13 21:05:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 21:05:56 -Generating unique operation named: editUsingGET_15
2019-05-13 21:05:56 -Generating unique operation named: listUsingGET_17
2019-05-13 21:05:56 -Generating unique operation named: removeUsingPOST_26
2019-05-13 21:05:56 -Generating unique operation named: saveUsingPOST_15
2019-05-13 21:05:56 -Generating unique operation named: treeUsingGET_3
2019-05-13 21:05:57 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPOST_15
2019-05-13 21:05:57 -Generating unique operation named: addUsingGET_15
2019-05-13 21:05:57 -Generating unique operation named: editUsingGET_16
2019-05-13 21:05:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 21:05:57 -Generating unique operation named: listUsingGET_18
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_27
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_28
2019-05-13 21:05:57 -Generating unique operation named: saveUsingPOST_16
2019-05-13 21:05:57 -Generating unique operation named: updateUsingGET_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPOST_16
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPUT_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 21:05:57 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 21:05:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 21:05:57 -Generating unique operation named: addUsingGET_16
2019-05-13 21:05:57 -Generating unique operation named: editUsingGET_17
2019-05-13 21:05:57 -Generating unique operation named: listUsingGET_19
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_29
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_30
2019-05-13 21:05:57 -Generating unique operation named: saveUsingPOST_17
2019-05-13 21:05:57 -Generating unique operation named: updateUsingGET_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPOST_17
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPUT_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 21:05:57 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 21:05:57 -Generating unique operation named: addUsingGET_17
2019-05-13 21:05:57 -Generating unique operation named: editUsingGET_18
2019-05-13 21:05:57 -Generating unique operation named: listUsingGET_20
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_31
2019-05-13 21:05:57 -Generating unique operation named: removeUsingPOST_32
2019-05-13 21:05:57 -Generating unique operation named: saveUsingPOST_18
2019-05-13 21:05:57 -Generating unique operation named: updateUsingGET_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPOST_18
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPUT_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 21:05:57 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 21:05:57 -Starting Quartz Scheduler now
2019-05-13 21:05:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 21:05:57 -Starting...
2019-05-13 21:05:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 21:05:57 -Started.
2019-05-13 21:05:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 21:05:57 -Using a shared selector for servlet write/read
2019-05-13 21:05:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 21:05:57 -Started BootdoApplication in 53.032 seconds (JVM running for 53.966)
2019-05-13 21:05:58 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 21:05:58 -==> Parameters: 
2019-05-13 21:05:58 -<==      Total: 1
2019-05-13 21:06:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 21:06:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 21:06:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-05-13 21:06:25 -Enabling session validation scheduler...
2019-05-13 21:06:25 -请求地址 : http://localhost:8081/login;JSESSIONID=57776d2c-3300-4e97-88d8-ce43f0d45550
2019-05-13 21:06:25 -HTTP METHOD : GET
2019-05-13 21:06:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 21:06:25 -参数 : [{}]
2019-05-13 21:06:25 -耗时 : 7
2019-05-13 21:06:25 -返回值 : login
2019-05-13 21:06:28 -请求地址 : http://localhost:8081/getVerify
2019-05-13 21:06:28 -HTTP METHOD : GET
2019-05-13 21:06:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 21:06:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3369bfa6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@37562d13]
2019-05-13 21:06:32 -2789
2019-05-13 21:06:33 -耗时 : 4512
2019-05-13 21:06:33 -返回值 : null
2019-05-13 21:06:48 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 21:07:19 -请求地址 : http://localhost:8081/login
2019-05-13 21:07:19 -HTTP METHOD : POST
2019-05-13 21:07:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 21:07:19 -参数 : [admin, 111111, 2789, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2998eea]
2019-05-13 21:07:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 21:07:19 -==> Parameters: admin(String)
2019-05-13 21:07:19 -<==      Total: 1
2019-05-13 21:07:19 -耗时 : 148
2019-05-13 21:07:19 -返回值 : {msg=操作成功, code=0}
2019-05-13 21:07:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 21:07:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:07:19 -==> Parameters: 1(Long), admin(String), 登录(String), 148(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 21:07:19.574(Timestamp)
2019-05-13 21:07:19 -<==    Updates: 1
2019-05-13 21:07:19 -请求地址 : http://localhost:8081/index
2019-05-13 21:07:19 -HTTP METHOD : GET
2019-05-13 21:07:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 21:07:19 -参数 : [{}]
2019-05-13 21:07:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 21:07:19 -==> Parameters: 1(Long)
2019-05-13 21:07:19 -<==      Total: 49
2019-05-13 21:07:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 21:07:19 -==> Parameters: 138(Long)
2019-05-13 21:07:19 -<==      Total: 1
2019-05-13 21:07:19 -耗时 : 169
2019-05-13 21:07:19 -返回值 : index_v1
2019-05-13 21:07:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:07:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 169(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 21:07:20.078(Timestamp)
2019-05-13 21:07:20 -<==    Updates: 1
2019-05-13 21:07:20 -请求地址 : http://localhost:8081/main
2019-05-13 21:07:20 -HTTP METHOD : GET
2019-05-13 21:07:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:07:20 -参数 : []
2019-05-13 21:07:20 -耗时 : 1
2019-05-13 21:07:20 -返回值 : main
2019-05-13 21:07:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 21:07:22 -HTTP METHOD : GET
2019-05-13 21:07:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 21:07:22 -参数 : []
2019-05-13 21:07:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 21:07:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 21:07:22 -请求地址 : http://localhost:8081/main
2019-05-13 21:07:22 -HTTP METHOD : GET
2019-05-13 21:07:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:07:22 -参数 : []
2019-05-13 21:07:22 -耗时 : 1
2019-05-13 21:07:22 -返回值 : main
2019-05-13 21:07:22 -<==      Total: 0
2019-05-13 21:07:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 21:07:22 -==> Parameters: 1(Long), 0(String)
2019-05-13 21:07:22 -<==      Total: 1
2019-05-13 21:07:22 -耗时 : 286
2019-05-13 21:07:22 -返回值 : com.bootdo.common.utils.PageUtils@7ecba325
2019-05-13 21:09:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 21:09:07 -==> Parameters: 1(Long)
2019-05-13 21:09:07 -<==      Total: 93
2019-05-13 21:09:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:09:07 -HTTP METHOD : GET
2019-05-13 21:09:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:09:07 -参数 : []
2019-05-13 21:09:07 -耗时 : 11
2019-05-13 21:09:07 -返回值 : charts/tableElecYY
2019-05-13 21:09:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:09:08 -HTTP METHOD : GET
2019-05-13 21:09:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:09:08 -参数 : [userType]
2019-05-13 21:09:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:09:08 -==> Parameters: userType(String)
2019-05-13 21:09:08 -<==      Total: 4
2019-05-13 21:09:08 -耗时 : 64
2019-05-13 21:09:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:09:10 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 21:09:10 -HTTP METHOD : GET
2019-05-13 21:09:10 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 21:09:10 -参数 : []
2019-05-13 21:09:10 -耗时 : 11
2019-05-13 21:09:10 -返回值 : charts/tableWaterYY
2019-05-13 21:09:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:09:10 -HTTP METHOD : GET
2019-05-13 21:09:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:09:10 -参数 : [userType]
2019-05-13 21:09:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:09:10 -==> Parameters: userType(String)
2019-05-13 21:09:10 -<==      Total: 4
2019-05-13 21:09:10 -耗时 : 5
2019-05-13 21:09:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:10:51 -HTTP METHOD : GET
2019-05-13 21:10:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:10:51 -参数 : []
2019-05-13 21:10:51 -耗时 : 12
2019-05-13 21:10:51 -返回值 : charts/tableHeatYY
2019-05-13 21:10:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:51 -HTTP METHOD : GET
2019-05-13 21:10:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:51 -参数 : [userType]
2019-05-13 21:10:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:51 -==> Parameters: userType(String)
2019-05-13 21:10:51 -<==      Total: 4
2019-05-13 21:10:51 -耗时 : 7
2019-05-13 21:10:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:10:52 -HTTP METHOD : GET
2019-05-13 21:10:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:10:52 -参数 : []
2019-05-13 21:10:52 -耗时 : 0
2019-05-13 21:10:52 -返回值 : charts/tableElecYY
2019-05-13 21:10:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:53 -HTTP METHOD : GET
2019-05-13 21:10:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:53 -参数 : [userType]
2019-05-13 21:10:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:53 -==> Parameters: userType(String)
2019-05-13 21:10:53 -<==      Total: 4
2019-05-13 21:10:53 -耗时 : 11
2019-05-13 21:10:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:10:53 -HTTP METHOD : GET
2019-05-13 21:10:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:10:53 -参数 : []
2019-05-13 21:10:53 -耗时 : 1
2019-05-13 21:10:53 -返回值 : charts/tableHeatYY
2019-05-13 21:10:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:53 -HTTP METHOD : GET
2019-05-13 21:10:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:53 -参数 : [userType]
2019-05-13 21:10:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:53 -==> Parameters: userType(String)
2019-05-13 21:10:53 -<==      Total: 4
2019-05-13 21:10:53 -耗时 : 5
2019-05-13 21:10:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:54 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 21:10:54 -HTTP METHOD : GET
2019-05-13 21:10:54 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 21:10:54 -参数 : []
2019-05-13 21:10:54 -耗时 : 1
2019-05-13 21:10:54 -返回值 : charts/tableWaterYY
2019-05-13 21:10:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:54 -HTTP METHOD : GET
2019-05-13 21:10:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:54 -参数 : [userType]
2019-05-13 21:10:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:54 -==> Parameters: userType(String)
2019-05-13 21:10:54 -<==      Total: 4
2019-05-13 21:10:54 -耗时 : 4
2019-05-13 21:10:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:10:55 -HTTP METHOD : GET
2019-05-13 21:10:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:10:55 -参数 : []
2019-05-13 21:10:55 -耗时 : 0
2019-05-13 21:10:55 -返回值 : charts/tableHeatYY
2019-05-13 21:10:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:55 -HTTP METHOD : GET
2019-05-13 21:10:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:55 -参数 : [userType]
2019-05-13 21:10:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:55 -==> Parameters: userType(String)
2019-05-13 21:10:55 -<==      Total: 4
2019-05-13 21:10:55 -耗时 : 10
2019-05-13 21:10:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:10:55 -HTTP METHOD : GET
2019-05-13 21:10:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:10:55 -参数 : []
2019-05-13 21:10:55 -耗时 : 0
2019-05-13 21:10:55 -返回值 : charts/tableElecYY
2019-05-13 21:10:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:55 -HTTP METHOD : GET
2019-05-13 21:10:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:55 -参数 : [userType]
2019-05-13 21:10:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:55 -==> Parameters: userType(String)
2019-05-13 21:10:55 -<==      Total: 4
2019-05-13 21:10:55 -耗时 : 4
2019-05-13 21:10:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:56 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:10:56 -HTTP METHOD : GET
2019-05-13 21:10:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:10:56 -参数 : []
2019-05-13 21:10:56 -耗时 : 0
2019-05-13 21:10:56 -返回值 : charts/tableHeatYY
2019-05-13 21:10:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:56 -HTTP METHOD : GET
2019-05-13 21:10:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:56 -参数 : [userType]
2019-05-13 21:10:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:56 -==> Parameters: userType(String)
2019-05-13 21:10:56 -<==      Total: 4
2019-05-13 21:10:56 -耗时 : 5
2019-05-13 21:10:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:56 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 21:10:56 -HTTP METHOD : GET
2019-05-13 21:10:56 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 21:10:56 -参数 : []
2019-05-13 21:10:56 -耗时 : 0
2019-05-13 21:10:56 -返回值 : charts/tableWaterYY
2019-05-13 21:10:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:56 -HTTP METHOD : GET
2019-05-13 21:10:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:56 -参数 : [userType]
2019-05-13 21:10:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:56 -==> Parameters: userType(String)
2019-05-13 21:10:56 -<==      Total: 4
2019-05-13 21:10:56 -耗时 : 5
2019-05-13 21:10:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:10:57 -HTTP METHOD : GET
2019-05-13 21:10:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:10:57 -参数 : []
2019-05-13 21:10:57 -耗时 : 1
2019-05-13 21:10:57 -返回值 : charts/tableHeatYY
2019-05-13 21:10:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:57 -HTTP METHOD : GET
2019-05-13 21:10:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:57 -参数 : [userType]
2019-05-13 21:10:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:57 -==> Parameters: userType(String)
2019-05-13 21:10:57 -<==      Total: 4
2019-05-13 21:10:57 -耗时 : 5
2019-05-13 21:10:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:10:57 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:10:57 -HTTP METHOD : GET
2019-05-13 21:10:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:10:57 -参数 : []
2019-05-13 21:10:57 -耗时 : 0
2019-05-13 21:10:57 -返回值 : charts/tableElecYY
2019-05-13 21:10:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:10:57 -HTTP METHOD : GET
2019-05-13 21:10:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:10:57 -参数 : [userType]
2019-05-13 21:10:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:10:57 -==> Parameters: userType(String)
2019-05-13 21:10:57 -<==      Total: 4
2019-05-13 21:10:57 -耗时 : 5
2019-05-13 21:10:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:11:00 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-13 21:11:00 -HTTP METHOD : GET
2019-05-13 21:11:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-13 21:11:00 -参数 : []
2019-05-13 21:11:00 -耗时 : 0
2019-05-13 21:11:00 -返回值 : charts/tableWaterYY
2019-05-13 21:11:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:11:00 -HTTP METHOD : GET
2019-05-13 21:11:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:11:00 -参数 : [userType]
2019-05-13 21:11:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:11:00 -==> Parameters: userType(String)
2019-05-13 21:11:00 -<==      Total: 4
2019-05-13 21:11:00 -耗时 : 4
2019-05-13 21:11:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:11:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:11:05 -HTTP METHOD : GET
2019-05-13 21:11:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:11:05 -参数 : []
2019-05-13 21:11:05 -耗时 : 1
2019-05-13 21:11:05 -返回值 : system/dept/deptTree
2019-05-13 21:11:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:11:05 -HTTP METHOD : GET
2019-05-13 21:11:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:11:05 -参数 : []
2019-05-13 21:11:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:11:05 -==> Parameters: 
2019-05-13 21:11:05 -<==      Total: 3
2019-05-13 21:11:05 -耗时 : 53
2019-05-13 21:11:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:11:08 -请求地址 : http://localhost:8081/charts/tableWaterYY/exportWaterYY
2019-05-13 21:11:08 -HTTP METHOD : GET
2019-05-13 21:11:08 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.exportWaterYY
2019-05-13 21:11:08 -参数 : [com.bootdo.water.vo.WaterVo@74fb2da4, com.bootdo.moneyLog.vo.WaterLogVo@726fff2f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@73632051]
2019-05-13 21:11:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:11:09 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:11:09 -<==      Total: 3
2019-05-13 21:11:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:11:09 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:11:09 -<==      Total: 1
2019-05-13 21:11:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:11:09 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:11:09 -<==      Total: 6
2019-05-13 21:11:09 -耗时 : 1220
2019-05-13 21:11:09 -返回值 : null
2019-05-13 21:12:22 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:12:22 -HTTP METHOD : GET
2019-05-13 21:12:22 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:12:22 -参数 : []
2019-05-13 21:12:22 -耗时 : 0
2019-05-13 21:12:22 -返回值 : charts/tableHeatYY
2019-05-13 21:12:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:12:22 -HTTP METHOD : GET
2019-05-13 21:12:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:12:22 -参数 : [userType]
2019-05-13 21:12:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:12:22 -==> Parameters: userType(String)
2019-05-13 21:12:22 -<==      Total: 4
2019-05-13 21:12:22 -耗时 : 4
2019-05-13 21:12:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:12:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:12:29 -HTTP METHOD : GET
2019-05-13 21:12:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:12:29 -参数 : []
2019-05-13 21:12:29 -耗时 : 0
2019-05-13 21:12:29 -返回值 : system/dept/deptTree
2019-05-13 21:12:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:12:29 -HTTP METHOD : GET
2019-05-13 21:12:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:12:29 -参数 : []
2019-05-13 21:12:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:12:29 -==> Parameters: 
2019-05-13 21:12:29 -<==      Total: 3
2019-05-13 21:12:29 -耗时 : 3
2019-05-13 21:12:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:12:31 -请求地址 : http://localhost:8081/charts/tableHeatYY/exportHeatYY
2019-05-13 21:12:31 -HTTP METHOD : GET
2019-05-13 21:12:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.exportHeatYY
2019-05-13 21:12:31 -参数 : [com.bootdo.heat.vo.HeatVo@4851e930, com.bootdo.moneyLog.vo.HeatLogVo@6056ac83, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6e77b267]
2019-05-13 21:12:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:12:31 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:12:31 -<==      Total: 0
2019-05-13 21:12:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:12:31 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:12:31 -<==      Total: 0
2019-05-13 21:12:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 21:12:31 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:12:31 -<==      Total: 0
2019-05-13 21:12:31 -耗时 : 121
2019-05-13 21:12:31 -返回值 : null
2019-05-13 21:17:41 -请求地址 : http://localhost:8081/charts/tableHeatYY/exportHeatYY
2019-05-13 21:17:41 -HTTP METHOD : GET
2019-05-13 21:17:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.exportHeatYY
2019-05-13 21:17:41 -参数 : [com.bootdo.heat.vo.HeatVo@7548833f, com.bootdo.moneyLog.vo.HeatLogVo@7177094e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34758904]
2019-05-13 21:17:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:17:41 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:17:41 -<==      Total: 0
2019-05-13 21:17:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:17:41 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:17:41 -<==      Total: 0
2019-05-13 21:17:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 21:17:41 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:17:41 -<==      Total: 0
2019-05-13 21:17:41 -耗时 : 21
2019-05-13 21:17:41 -返回值 : null
2019-05-13 21:19:08 -请求地址 : http://localhost:8081/charts/tableHeatYY/exportHeatYY
2019-05-13 21:19:08 -HTTP METHOD : GET
2019-05-13 21:19:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.exportHeatYY
2019-05-13 21:19:08 -参数 : [com.bootdo.heat.vo.HeatVo@23676143, com.bootdo.moneyLog.vo.HeatLogVo@445f0d00, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4739258f]
2019-05-13 21:19:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:19:08 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:19:08 -<==      Total: 0
2019-05-13 21:19:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:19:08 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:19:08 -<==      Total: 0
2019-05-13 21:19:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 21:19:08 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:19:08 -<==      Total: 0
2019-05-13 21:19:08 -耗时 : 18
2019-05-13 21:19:08 -返回值 : null
2019-05-13 21:32:28 -请求地址 : http://localhost:8081/index
2019-05-13 21:32:28 -HTTP METHOD : GET
2019-05-13 21:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 21:32:28 -参数 : [{}]
2019-05-13 21:32:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 21:32:28 -==> Parameters: 1(Long)
2019-05-13 21:32:28 -<==      Total: 49
2019-05-13 21:32:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 21:32:28 -==> Parameters: 138(Long)
2019-05-13 21:32:28 -<==      Total: 1
2019-05-13 21:32:28 -耗时 : 21
2019-05-13 21:32:28 -返回值 : index_v1
2019-05-13 21:32:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:32:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 21:32:28.812(Timestamp)
2019-05-13 21:32:28 -请求地址 : http://localhost:8081/main
2019-05-13 21:32:28 -HTTP METHOD : GET
2019-05-13 21:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:32:28 -参数 : []
2019-05-13 21:32:28 -耗时 : 1
2019-05-13 21:32:28 -返回值 : main
2019-05-13 21:32:28 -<==    Updates: 1
2019-05-13 21:32:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 21:32:29 -HTTP METHOD : GET
2019-05-13 21:32:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 21:32:29 -参数 : []
2019-05-13 21:32:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 21:32:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 21:32:29 -<==      Total: 0
2019-05-13 21:32:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 21:32:29 -==> Parameters: 1(Long), 0(String)
2019-05-13 21:32:29 -<==      Total: 1
2019-05-13 21:32:29 -耗时 : 8
2019-05-13 21:32:29 -返回值 : com.bootdo.common.utils.PageUtils@5014ceb8
2019-05-13 21:32:29 -请求地址 : http://localhost:8081/main
2019-05-13 21:32:29 -HTTP METHOD : GET
2019-05-13 21:32:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:32:29 -参数 : []
2019-05-13 21:32:29 -耗时 : 1
2019-05-13 21:32:29 -返回值 : main
2019-05-13 21:32:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 21:32:31 -==> Parameters: 1(Long)
2019-05-13 21:32:31 -<==      Total: 93
2019-05-13 21:32:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:32:31 -HTTP METHOD : GET
2019-05-13 21:32:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:32:31 -参数 : []
2019-05-13 21:32:31 -耗时 : 0
2019-05-13 21:32:31 -返回值 : charts/tableElecYY
2019-05-13 21:32:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:32:32 -HTTP METHOD : GET
2019-05-13 21:32:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:32:32 -参数 : [userType]
2019-05-13 21:32:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:32:32 -==> Parameters: userType(String)
2019-05-13 21:32:32 -<==      Total: 4
2019-05-13 21:32:32 -耗时 : 6
2019-05-13 21:32:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:32:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:32:53 -HTTP METHOD : GET
2019-05-13 21:32:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:32:53 -参数 : []
2019-05-13 21:32:53 -耗时 : 0
2019-05-13 21:32:53 -返回值 : system/dept/deptTree
2019-05-13 21:32:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:32:53 -HTTP METHOD : GET
2019-05-13 21:32:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:32:53 -参数 : []
2019-05-13 21:32:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:32:53 -==> Parameters: 
2019-05-13 21:32:53 -<==      Total: 3
2019-05-13 21:32:53 -耗时 : 3
2019-05-13 21:32:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:32:55 -请求地址 : http://localhost:8081/charts/tableElecYY/exportElecYY
2019-05-13 21:32:55 -HTTP METHOD : GET
2019-05-13 21:32:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.exportElecYY
2019-05-13 21:32:55 -参数 : [com.bootdo.elec.vo.ElecVo@2092ccd0, com.bootdo.moneyLog.vo.ElecLogVo@18b1418e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63834865]
2019-05-13 21:32:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:32:55 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:32:55 -<==      Total: 10
2019-05-13 21:32:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:32:55 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:32:55 -<==      Total: 0
2019-05-13 21:32:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:32:55 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:32:55 -<==      Total: 23
2019-05-13 21:32:55 -耗时 : 131
2019-05-13 21:32:55 -返回值 : null
2019-05-13 21:34:11 -请求地址 : http://localhost:8081/index
2019-05-13 21:34:11 -HTTP METHOD : GET
2019-05-13 21:34:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 21:34:11 -参数 : [{}]
2019-05-13 21:34:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 21:34:11 -==> Parameters: 1(Long)
2019-05-13 21:34:11 -<==      Total: 49
2019-05-13 21:34:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 21:34:11 -==> Parameters: 138(Long)
2019-05-13 21:34:11 -<==      Total: 1
2019-05-13 21:34:11 -耗时 : 26
2019-05-13 21:34:11 -返回值 : index_v1
2019-05-13 21:34:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:34:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 21:34:11.752(Timestamp)
2019-05-13 21:34:11 -请求地址 : http://localhost:8081/main
2019-05-13 21:34:11 -HTTP METHOD : GET
2019-05-13 21:34:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:34:11 -参数 : []
2019-05-13 21:34:11 -耗时 : 1
2019-05-13 21:34:11 -返回值 : main
2019-05-13 21:34:11 -<==    Updates: 1
2019-05-13 21:34:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 21:34:11 -HTTP METHOD : GET
2019-05-13 21:34:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 21:34:11 -参数 : []
2019-05-13 21:34:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 21:34:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 21:34:11 -<==      Total: 0
2019-05-13 21:34:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 21:34:11 -==> Parameters: 1(Long), 0(String)
2019-05-13 21:34:11 -<==      Total: 1
2019-05-13 21:34:11 -耗时 : 6
2019-05-13 21:34:11 -返回值 : com.bootdo.common.utils.PageUtils@6641119a
2019-05-13 21:34:12 -请求地址 : http://localhost:8081/main
2019-05-13 21:34:12 -HTTP METHOD : GET
2019-05-13 21:34:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:34:12 -参数 : []
2019-05-13 21:34:12 -耗时 : 0
2019-05-13 21:34:12 -返回值 : main
2019-05-13 21:34:14 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:34:14 -HTTP METHOD : GET
2019-05-13 21:34:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:34:14 -参数 : []
2019-05-13 21:34:14 -耗时 : 0
2019-05-13 21:34:14 -返回值 : charts/tableElecYY
2019-05-13 21:34:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:34:15 -HTTP METHOD : GET
2019-05-13 21:34:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:34:15 -参数 : [userType]
2019-05-13 21:34:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:34:15 -==> Parameters: userType(String)
2019-05-13 21:34:15 -<==      Total: 4
2019-05-13 21:34:15 -耗时 : 5
2019-05-13 21:34:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:34:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:34:17 -HTTP METHOD : GET
2019-05-13 21:34:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:34:17 -参数 : []
2019-05-13 21:34:17 -耗时 : 0
2019-05-13 21:34:17 -返回值 : system/dept/deptTree
2019-05-13 21:34:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:34:18 -HTTP METHOD : GET
2019-05-13 21:34:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:34:18 -参数 : []
2019-05-13 21:34:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:34:18 -==> Parameters: 
2019-05-13 21:34:18 -<==      Total: 3
2019-05-13 21:34:18 -耗时 : 4
2019-05-13 21:34:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:34:20 -请求地址 : http://localhost:8081/charts/tableElecYY/exportElecYY
2019-05-13 21:34:20 -HTTP METHOD : GET
2019-05-13 21:34:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.exportElecYY
2019-05-13 21:34:20 -参数 : [com.bootdo.elec.vo.ElecVo@6eb5da3b, com.bootdo.moneyLog.vo.ElecLogVo@6b52be0b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@12c60c00]
2019-05-13 21:34:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:34:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:20 -<==      Total: 8
2019-05-13 21:34:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:34:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:20 -<==      Total: 2
2019-05-13 21:34:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` LIKE CONCAT('%',?,'%') and user_org = ? order by create_time asc 
2019-05-13 21:34:20 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:20 -<==      Total: 23
2019-05-13 21:34:20 -耗时 : 58
2019-05-13 21:34:20 -返回值 : null
2019-05-13 21:34:43 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:34:43 -HTTP METHOD : GET
2019-05-13 21:34:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:34:43 -参数 : []
2019-05-13 21:34:43 -耗时 : 0
2019-05-13 21:34:43 -返回值 : charts/tableHeatYY
2019-05-13 21:34:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:34:43 -HTTP METHOD : GET
2019-05-13 21:34:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:34:43 -参数 : [userType]
2019-05-13 21:34:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:34:43 -==> Parameters: userType(String)
2019-05-13 21:34:43 -<==      Total: 4
2019-05-13 21:34:43 -耗时 : 4
2019-05-13 21:34:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:34:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:34:49 -HTTP METHOD : GET
2019-05-13 21:34:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:34:49 -参数 : []
2019-05-13 21:34:49 -耗时 : 1
2019-05-13 21:34:49 -返回值 : system/dept/deptTree
2019-05-13 21:34:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:34:49 -HTTP METHOD : GET
2019-05-13 21:34:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:34:49 -参数 : []
2019-05-13 21:34:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:34:49 -==> Parameters: 
2019-05-13 21:34:49 -<==      Total: 3
2019-05-13 21:34:49 -耗时 : 3
2019-05-13 21:34:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:34:51 -请求地址 : http://localhost:8081/charts/tableHeatYY/exportHeatYY
2019-05-13 21:34:51 -HTTP METHOD : GET
2019-05-13 21:34:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.exportHeatYY
2019-05-13 21:34:51 -参数 : [com.bootdo.heat.vo.HeatVo@209436b, com.bootdo.moneyLog.vo.HeatLogVo@58c9b11a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3718455f]
2019-05-13 21:34:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:34:51 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:51 -<==      Total: 0
2019-05-13 21:34:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:34:51 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:51 -<==      Total: 0
2019-05-13 21:34:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 21:34:51 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:34:51 -<==      Total: 0
2019-05-13 21:34:51 -耗时 : 17
2019-05-13 21:34:51 -返回值 : null
2019-05-13 21:36:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 425]
2019-05-13 21:40:13 -Starting BootdoApplication on PC-201905091110 with PID 16636 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-13 21:40:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-13 21:40:13 -The following profiles are active: dev
2019-05-13 21:40:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5dd91bca: startup date [Mon May 13 21:40:13 CST 2019]; root of context hierarchy
2019-05-13 21:40:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-13 21:40:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5e3e43f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:22 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c83d12e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-13 21:40:23 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-13 21:40:23 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:23 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:24 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-13 21:40:26 -Tomcat initialized with port(s): 8081 (http)
2019-05-13 21:40:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-13 21:40:26 -Starting service [Tomcat]
2019-05-13 21:40:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-13 21:40:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-13 21:40:26 -Initializing Spring embedded WebApplicationContext
2019-05-13 21:40:26 -Root WebApplicationContext: initialization completed in 13395 ms
2019-05-13 21:40:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-13 21:40:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-13 21:40:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-13 21:40:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-13 21:40:27 -Filter xssFilter was not registered (disabled)
2019-05-13 21:40:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-13 21:40:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-13 21:40:27 -Servlet statViewServlet mapped to [/druid/*]
2019-05-13 21:40:27 -Servlet dispatcherServlet mapped to [/]
2019-05-13 21:40:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5dd91bca: startup date [Mon May 13 21:40:13 CST 2019]; root of context hierarchy
2019-05-13 21:40:50 -Using default implementation for ThreadExecutor
2019-05-13 21:40:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-13 21:40:50 -Quartz Scheduler v.2.2.1 created.
2019-05-13 21:40:50 -RAMJobStore initialized.
2019-05-13 21:40:50 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-13 21:40:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-13 21:40:50 -Quartz scheduler version: 2.2.1
2019-05-13 21:40:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5e1a7d3
2019-05-13 21:40:51 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-13 21:40:51 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-13 21:40:54 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-13 21:40:54 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-13 21:40:54 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-13 21:40:54 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-13 21:40:54 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-13 21:40:54 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-13 21:40:54 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-13 21:40:54 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-13 21:40:54 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-13 21:40:54 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-13 21:40:54 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-13 21:40:54 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-13 21:40:54 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-13 21:40:54 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-13 21:40:54 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-13 21:40:54 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-13 21:40:54 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:54 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-13 21:40:54 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 21:40:54 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-13 21:40:54 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-13 21:40:54 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-13 21:40:54 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-13 21:40:54 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-13 21:40:54 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-13 21:40:54 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-13 21:40:54 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-13 21:40:54 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-13 21:40:54 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-13 21:40:54 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-13 21:40:54 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-13 21:40:54 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:40:54 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-13 21:40:54 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-13 21:40:54 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-13 21:40:54 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-13 21:40:54 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-13 21:40:54 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-13 21:40:54 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:40:54 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:54 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-13 21:40:54 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:54 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-13 21:40:54 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-13 21:40:54 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 21:40:54 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:40:54 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:40:54 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-13 21:40:54 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-13 21:40:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-13 21:40:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-13 21:40:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-13 21:40:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-13 21:40:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-13 21:40:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-13 21:40:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-13 21:40:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-13 21:40:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-13 21:40:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-13 21:40:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-13 21:40:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-13 21:40:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-13 21:40:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-13 21:40:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-13 21:40:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-13 21:40:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-13 21:40:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-13 21:40:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-13 21:40:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-13 21:40:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-13 21:40:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-13 21:40:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-13 21:40:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-13 21:40:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-13 21:40:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-13 21:40:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-13 21:40:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-13 21:40:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 21:40:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-13 21:40:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-13 21:40:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-13 21:40:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-13 21:40:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-13 21:40:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-13 21:40:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-13 21:40:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-13 21:40:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-13 21:40:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-13 21:40:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-13 21:40:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-13 21:40:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-13 21:40:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-13 21:40:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-13 21:40:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-13 21:40:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-13 21:40:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-13 21:40:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-13 21:40:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-13 21:40:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:40:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5dd91bca: startup date [Mon May 13 21:40:13 CST 2019]; root of context hierarchy
2019-05-13 21:40:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:40:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:40:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-13 21:40:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-13 21:40:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-13 21:41:01 -Registering beans for JMX exposure on startup
2019-05-13 21:41:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-13 21:41:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-13 21:41:01 -Starting beans in phase 2147483647
2019-05-13 21:41:01 -Context refreshed
2019-05-13 21:41:01 -Found 1 custom documentation plugin(s)
2019-05-13 21:41:01 -Scanning for api listing references
2019-05-13 21:41:01 -Generating unique operation named: getCountDUsingPOST_1
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_1
2019-05-13 21:41:02 -Generating unique operation named: addUsingGET_1
2019-05-13 21:41:02 -Generating unique operation named: editUsingGET_1
2019-05-13 21:41:02 -Generating unique operation named: listUsingGET_1
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_2
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_3
2019-05-13 21:41:02 -Generating unique operation named: saveUsingPOST_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingGET_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPOST_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPUT_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-13 21:41:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-13 21:41:02 -Generating unique operation named: addUsingGET_2
2019-05-13 21:41:02 -Generating unique operation named: editUsingGET_2
2019-05-13 21:41:02 -Generating unique operation named: listUsingGET_2
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_4
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_5
2019-05-13 21:41:02 -Generating unique operation named: saveUsingPOST_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPOST_2
2019-05-13 21:41:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-13 21:41:02 -Generating unique operation named: addUsingGET_3
2019-05-13 21:41:02 -Generating unique operation named: editUsingGET_3
2019-05-13 21:41:02 -Generating unique operation named: listUsingGET_3
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_6
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_7
2019-05-13 21:41:02 -Generating unique operation named: saveUsingPOST_3
2019-05-13 21:41:02 -Generating unique operation named: updateUsingGET_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPOST_3
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPUT_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-13 21:41:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-13 21:41:02 -Generating unique operation named: addUsingGET_4
2019-05-13 21:41:02 -Generating unique operation named: editUsingGET_4
2019-05-13 21:41:02 -Generating unique operation named: listUsingGET_4
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_8
2019-05-13 21:41:02 -Generating unique operation named: removeUsingPOST_9
2019-05-13 21:41:03 -Generating unique operation named: saveUsingPOST_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingGET_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPUT_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-13 21:41:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-13 21:41:03 -Generating unique operation named: ElecUsingGET_1
2019-05-13 21:41:03 -Generating unique operation named: addUsingGET_5
2019-05-13 21:41:03 -Generating unique operation named: editUsingGET_5
2019-05-13 21:41:03 -Generating unique operation named: listUsingGET_5
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_10
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_11
2019-05-13 21:41:03 -Generating unique operation named: saveUsingPOST_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingGET_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPUT_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-13 21:41:03 -Generating unique operation named: updateUsingTRACE_4
2019-05-13 21:41:03 -Generating unique operation named: editUsingGET_6
2019-05-13 21:41:03 -Generating unique operation named: listUsingGET_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_6
2019-05-13 21:41:03 -Generating unique operation named: addUsingGET_6
2019-05-13 21:41:03 -Generating unique operation named: editUsingGET_7
2019-05-13 21:41:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-13 21:41:03 -Generating unique operation named: listUsingGET_7
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_12
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_13
2019-05-13 21:41:03 -Generating unique operation named: saveUsingPOST_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingGET_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingHEAD_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPUT_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPATCH_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingDELETE_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-13 21:41:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-13 21:41:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-13 21:41:03 -Generating unique operation named: addUsingGET_7
2019-05-13 21:41:03 -Generating unique operation named: editUsingGET_8
2019-05-13 21:41:03 -Generating unique operation named: listUsingGET_8
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_14
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_15
2019-05-13 21:41:03 -Generating unique operation named: saveUsingPOST_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingGET_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_8
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPUT_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-13 21:41:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-13 21:41:03 -Generating unique operation named: addUsingGET_8
2019-05-13 21:41:03 -Generating unique operation named: editUsingGET_9
2019-05-13 21:41:03 -Generating unique operation named: listUsingGET_9
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_16
2019-05-13 21:41:03 -Generating unique operation named: removeUsingPOST_17
2019-05-13 21:41:03 -Generating unique operation named: saveUsingPOST_8
2019-05-13 21:41:03 -Generating unique operation named: updateUsingGET_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPOST_9
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPUT_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-13 21:41:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-13 21:41:04 -Generating unique operation named: addUsingGET_9
2019-05-13 21:41:04 -Generating unique operation named: editUsingGET_10
2019-05-13 21:41:04 -Generating unique operation named: infoUsingGET_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingPOST_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingPUT_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-13 21:41:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-13 21:41:04 -Generating unique operation named: listUsingGET_10
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_18
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_19
2019-05-13 21:41:04 -Generating unique operation named: saveUsingPOST_9
2019-05-13 21:41:04 -Generating unique operation named: updateUsingPOST_10
2019-05-13 21:41:04 -Generating unique operation named: listUsingGET_11
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_20
2019-05-13 21:41:04 -Generating unique operation named: welcomeUsingGET_1
2019-05-13 21:41:04 -Generating unique operation named: addUsingGET_10
2019-05-13 21:41:04 -Generating unique operation named: editUsingGET_11
2019-05-13 21:41:04 -Generating unique operation named: listUsingGET_12
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_21
2019-05-13 21:41:04 -Generating unique operation named: saveUsingPOST_10
2019-05-13 21:41:04 -Generating unique operation named: treeUsingGET_1
2019-05-13 21:41:04 -Generating unique operation named: treeUsingGET_2
2019-05-13 21:41:04 -Generating unique operation named: updateUsingPOST_11
2019-05-13 21:41:04 -Generating unique operation named: addUsingGET_11
2019-05-13 21:41:04 -Generating unique operation named: editUsingGET_12
2019-05-13 21:41:04 -Generating unique operation named: listUsingGET_13
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_22
2019-05-13 21:41:04 -Generating unique operation named: removeUsingPOST_23
2019-05-13 21:41:04 -Generating unique operation named: saveUsingPOST_11
2019-05-13 21:41:04 -Generating unique operation named: updateUsingGET_8
2019-05-13 21:41:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-13 21:41:04 -Generating unique operation named: updateUsingPOST_12
2019-05-13 21:41:04 -Generating unique operation named: updateUsingPUT_8
2019-05-13 21:41:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-13 21:41:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-13 21:41:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-13 21:41:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-13 21:41:05 -Generating unique operation named: addUsingGET_12
2019-05-13 21:41:05 -Generating unique operation named: editUsingGET_13
2019-05-13 21:41:05 -Generating unique operation named: listUsingGET_14
2019-05-13 21:41:05 -Generating unique operation named: removeUsingPOST_24
2019-05-13 21:41:05 -Generating unique operation named: removeUsingPOST_25
2019-05-13 21:41:05 -Generating unique operation named: saveUsingPOST_12
2019-05-13 21:41:05 -Generating unique operation named: updateUsingGET_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingPOST_13
2019-05-13 21:41:05 -Generating unique operation named: updateUsingPUT_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-13 21:41:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-13 21:41:06 -Generating unique operation named: addUsingGET_13
2019-05-13 21:41:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-13 21:41:06 -Generating unique operation named: editUsingGET_14
2019-05-13 21:41:06 -Generating unique operation named: listUsingGET_15
2019-05-13 21:41:06 -Generating unique operation named: saveUsingPOST_13
2019-05-13 21:41:06 -Generating unique operation named: saveUsingPOST_14
2019-05-13 21:41:06 -Generating unique operation named: updateUsingPOST_14
2019-05-13 21:41:06 -Generating unique operation named: listUsingGET_16
2019-05-13 21:41:06 -Generating unique operation named: listUsingHEAD_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingPOST_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingPUT_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingPATCH_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingDELETE_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingOPTIONS_1
2019-05-13 21:41:06 -Generating unique operation named: listUsingTRACE_1
2019-05-13 21:41:06 -Generating unique operation named: countDDUsingGET_1
2019-05-13 21:41:06 -Generating unique operation named: exportDDUsingGET_1
2019-05-13 21:41:06 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-13 21:41:06 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-13 21:41:06 -Generating unique operation named: addUsingGET_14
2019-05-13 21:41:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-13 21:41:06 -Generating unique operation named: editUsingGET_15
2019-05-13 21:41:06 -Generating unique operation named: listUsingGET_17
2019-05-13 21:41:06 -Generating unique operation named: removeUsingPOST_26
2019-05-13 21:41:06 -Generating unique operation named: saveUsingPOST_15
2019-05-13 21:41:06 -Generating unique operation named: treeUsingGET_3
2019-05-13 21:41:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-13 21:41:06 -Generating unique operation named: updateUsingPOST_15
2019-05-13 21:41:06 -Generating unique operation named: addUsingGET_15
2019-05-13 21:41:06 -Generating unique operation named: editUsingGET_16
2019-05-13 21:41:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-13 21:41:07 -Generating unique operation named: listUsingGET_18
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_27
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_28
2019-05-13 21:41:07 -Generating unique operation named: saveUsingPOST_16
2019-05-13 21:41:07 -Generating unique operation named: updateUsingGET_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPOST_16
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPUT_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-13 21:41:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-13 21:41:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-13 21:41:07 -Generating unique operation named: addUsingGET_16
2019-05-13 21:41:07 -Generating unique operation named: editUsingGET_17
2019-05-13 21:41:07 -Generating unique operation named: listUsingGET_19
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_29
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_30
2019-05-13 21:41:07 -Generating unique operation named: saveUsingPOST_17
2019-05-13 21:41:07 -Generating unique operation named: updateUsingGET_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPOST_17
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPUT_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-13 21:41:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-13 21:41:07 -Generating unique operation named: addUsingGET_17
2019-05-13 21:41:07 -Generating unique operation named: editUsingGET_18
2019-05-13 21:41:07 -Generating unique operation named: listUsingGET_20
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_31
2019-05-13 21:41:07 -Generating unique operation named: removeUsingPOST_32
2019-05-13 21:41:07 -Generating unique operation named: saveUsingPOST_18
2019-05-13 21:41:07 -Generating unique operation named: updateUsingGET_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPOST_18
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPUT_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-13 21:41:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-13 21:41:07 -Starting Quartz Scheduler now
2019-05-13 21:41:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-13 21:41:07 -Starting...
2019-05-13 21:41:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-13 21:41:07 -Started.
2019-05-13 21:41:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-13 21:41:07 -Using a shared selector for servlet write/read
2019-05-13 21:41:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-13 21:41:07 -Started BootdoApplication in 57.089 seconds (JVM running for 59.927)
2019-05-13 21:41:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-13 21:41:08 -==> Parameters: 
2019-05-13 21:41:08 -<==      Total: 1
2019-05-13 21:41:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-13 21:42:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-13 21:42:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-13 21:42:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-05-13 21:42:13 -Enabling session validation scheduler...
2019-05-13 21:42:13 -请求地址 : http://localhost:8081/login;JSESSIONID=25c56b44-d461-4718-8497-6f2207b7220f
2019-05-13 21:42:13 -HTTP METHOD : GET
2019-05-13 21:42:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-13 21:42:13 -参数 : [{}]
2019-05-13 21:42:13 -耗时 : 7
2019-05-13 21:42:13 -返回值 : login
2019-05-13 21:42:15 -请求地址 : http://localhost:8081/getVerify
2019-05-13 21:42:15 -HTTP METHOD : GET
2019-05-13 21:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-13 21:42:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28d99d57, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ce61c94]
2019-05-13 21:42:22 -2612
2019-05-13 21:42:22 -耗时 : 6545
2019-05-13 21:42:22 -返回值 : null
2019-05-13 21:42:27 -请求地址 : http://localhost:8081/login
2019-05-13 21:42:27 -HTTP METHOD : POST
2019-05-13 21:42:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-13 21:42:27 -参数 : [admin, 111111, 2612, org.apache.shiro.web.servlet.ShiroHttpServletRequest@24226de7]
2019-05-13 21:42:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-13 21:42:27 -==> Parameters: admin(String)
2019-05-13 21:42:27 -<==      Total: 1
2019-05-13 21:42:27 -耗时 : 157
2019-05-13 21:42:27 -返回值 : {msg=操作成功, code=0}
2019-05-13 21:42:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-13 21:42:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:42:27 -==> Parameters: 1(Long), admin(String), 登录(String), 158(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-13 21:42:27.773(Timestamp)
2019-05-13 21:42:27 -<==    Updates: 1
2019-05-13 21:42:27 -请求地址 : http://localhost:8081/index
2019-05-13 21:42:27 -HTTP METHOD : GET
2019-05-13 21:42:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-13 21:42:27 -参数 : [{}]
2019-05-13 21:42:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-13 21:42:27 -==> Parameters: 1(Long)
2019-05-13 21:42:27 -<==      Total: 49
2019-05-13 21:42:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-13 21:42:28 -==> Parameters: 138(Long)
2019-05-13 21:42:28 -<==      Total: 1
2019-05-13 21:42:28 -耗时 : 160
2019-05-13 21:42:28 -返回值 : index_v1
2019-05-13 21:42:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-13 21:42:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 160(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-13 21:42:28.105(Timestamp)
2019-05-13 21:42:28 -<==    Updates: 1
2019-05-13 21:42:28 -请求地址 : http://localhost:8081/main
2019-05-13 21:42:28 -HTTP METHOD : GET
2019-05-13 21:42:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:42:28 -参数 : []
2019-05-13 21:42:28 -耗时 : 1
2019-05-13 21:42:28 -返回值 : main
2019-05-13 21:42:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-13 21:42:28 -HTTP METHOD : GET
2019-05-13 21:42:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-13 21:42:28 -参数 : []
2019-05-13 21:42:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-13 21:42:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-13 21:42:28 -<==      Total: 0
2019-05-13 21:42:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-13 21:42:28 -==> Parameters: 1(Long), 0(String)
2019-05-13 21:42:28 -<==      Total: 1
2019-05-13 21:42:28 -耗时 : 84
2019-05-13 21:42:28 -返回值 : com.bootdo.common.utils.PageUtils@7f588ec8
2019-05-13 21:42:28 -请求地址 : http://localhost:8081/main
2019-05-13 21:42:28 -HTTP METHOD : GET
2019-05-13 21:42:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-13 21:42:28 -参数 : []
2019-05-13 21:42:28 -耗时 : 0
2019-05-13 21:42:28 -返回值 : main
2019-05-13 21:42:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-13 21:42:50 -==> Parameters: 1(Long)
2019-05-13 21:42:50 -<==      Total: 93
2019-05-13 21:42:50 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-13 21:42:50 -HTTP METHOD : GET
2019-05-13 21:42:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-13 21:42:50 -参数 : []
2019-05-13 21:42:50 -耗时 : 17
2019-05-13 21:42:50 -返回值 : charts/tableElecYY
2019-05-13 21:42:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:42:50 -HTTP METHOD : GET
2019-05-13 21:42:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:42:50 -参数 : [userType]
2019-05-13 21:42:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:42:51 -==> Parameters: userType(String)
2019-05-13 21:42:51 -<==      Total: 4
2019-05-13 21:42:51 -耗时 : 29
2019-05-13 21:42:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:42:52 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-13 21:42:52 -HTTP METHOD : GET
2019-05-13 21:42:52 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-13 21:42:52 -参数 : []
2019-05-13 21:42:52 -耗时 : 31
2019-05-13 21:42:52 -返回值 : charts/tableHeatYY
2019-05-13 21:42:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-13 21:42:52 -HTTP METHOD : GET
2019-05-13 21:42:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-13 21:42:52 -参数 : [userType]
2019-05-13 21:42:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-13 21:42:52 -==> Parameters: userType(String)
2019-05-13 21:42:52 -<==      Total: 4
2019-05-13 21:42:52 -耗时 : 8
2019-05-13 21:42:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-13 21:42:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-13 21:42:59 -HTTP METHOD : GET
2019-05-13 21:42:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-13 21:42:59 -参数 : []
2019-05-13 21:42:59 -耗时 : 1
2019-05-13 21:42:59 -返回值 : system/dept/deptTree
2019-05-13 21:42:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-13 21:42:59 -HTTP METHOD : GET
2019-05-13 21:42:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-13 21:42:59 -参数 : []
2019-05-13 21:43:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-13 21:43:00 -==> Parameters: 
2019-05-13 21:43:00 -<==      Total: 3
2019-05-13 21:43:00 -耗时 : 25
2019-05-13 21:43:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-13 21:43:01 -请求地址 : http://localhost:8081/charts/tableHeatYY/exportHeatYY
2019-05-13 21:43:01 -HTTP METHOD : GET
2019-05-13 21:43:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.exportHeatYY
2019-05-13 21:43:01 -参数 : [com.bootdo.heat.vo.HeatVo@2c36cbc5, com.bootdo.moneyLog.vo.HeatLogVo@200304a7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50bd6520]
2019-05-13 21:43:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:43:37 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:43:37 -<==      Total: 0
2019-05-13 21:43:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-13 21:43:43 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:43:43 -<==      Total: 0
2019-05-13 21:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-13 21:43:45 -==> Parameters: 2019(String), 2(String)
2019-05-13 21:43:45 -<==      Total: 0
2019-05-13 21:44:27 -耗时 : 85325
2019-05-13 21:44:27 -返回值 : null

2019-07-31 10:42:47 -Starting BootdoApplication on PC-201905091110 with PID 102616 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 10:42:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 10:42:47 -The following profiles are active: dev
2019-07-31 10:42:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33e01298: startup date [Wed Jul 31 10:42:48 CST 2019]; root of context hierarchy
2019-07-31 10:42:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 10:43:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9b9cf1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cc12fdc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 10:43:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 10:43:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 10:43:08 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 10:43:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 10:43:09 -Starting service [Tomcat]
2019-07-31 10:43:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 10:43:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 10:43:09 -Initializing Spring embedded WebApplicationContext
2019-07-31 10:43:09 -Root WebApplicationContext: initialization completed in 21846 ms
2019-07-31 10:43:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 10:43:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 10:43:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 10:43:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 10:43:12 -Filter xssFilter was not registered (disabled)
2019-07-31 10:43:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 10:43:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 10:43:12 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 10:43:12 -Servlet dispatcherServlet mapped to [/]
2019-07-31 10:43:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33e01298: startup date [Wed Jul 31 10:42:48 CST 2019]; root of context hierarchy
2019-07-31 10:43:23 -Using default implementation for ThreadExecutor
2019-07-31 10:43:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 10:43:23 -Quartz Scheduler v.2.3.0 created.
2019-07-31 10:43:23 -RAMJobStore initialized.
2019-07-31 10:43:23 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 10:43:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 10:43:23 -Quartz scheduler version: 2.3.0
2019-07-31 10:43:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@77f7352a
2019-07-31 10:43:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 10:43:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 10:43:28 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 10:43:28 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 10:43:28 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 10:43:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 10:43:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 10:43:28 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:28 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 10:43:28 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:28 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:28 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:28 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 10:43:29 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 10:43:29 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 10:43:29 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 10:43:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 10:43:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 10:43:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 10:43:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 10:43:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 10:43:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 10:43:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 10:43:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 10:43:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 10:43:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 10:43:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 10:43:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 10:43:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 10:43:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 10:43:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 10:43:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 10:43:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 10:43:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 10:43:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 10:43:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 10:43:29 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 10:43:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 10:43:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 10:43:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 10:43:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 10:43:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 10:43:29 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 10:43:29 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 10:43:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 10:43:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 10:43:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 10:43:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 10:43:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 10:43:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 10:43:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 10:43:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 10:43:29 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 10:43:29 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 10:43:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 10:43:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 10:43:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 10:43:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 10:43:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 10:43:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 10:43:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 10:43:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 10:43:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 10:43:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 10:43:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 10:43:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 10:43:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 10:43:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 10:43:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 10:43:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 10:43:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 10:43:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 10:43:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 10:43:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 10:43:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 10:43:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 10:43:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 10:43:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 10:43:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 10:43:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 10:43:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 10:43:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 10:43:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 10:43:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 10:43:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 10:43:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 10:43:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 10:43:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 10:43:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 10:43:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 10:43:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 10:43:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 10:43:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 10:43:32 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33e01298: startup date [Wed Jul 31 10:42:48 CST 2019]; root of context hierarchy
2019-07-31 10:43:32 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 10:43:32 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 10:43:32 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 10:43:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 10:43:36 -Registering beans for JMX exposure on startup
2019-07-31 10:43:36 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 10:43:36 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 10:43:36 -Starting beans in phase 2147483647
2019-07-31 10:43:36 -Context refreshed
2019-07-31 10:43:37 -Found 1 custom documentation plugin(s)
2019-07-31 10:43:37 -Scanning for api listing references
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_1
2019-07-31 10:43:38 -Generating unique operation named: addUsingGET_1
2019-07-31 10:43:38 -Generating unique operation named: editUsingGET_1
2019-07-31 10:43:38 -Generating unique operation named: listUsingGET_1
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_2
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_3
2019-07-31 10:43:38 -Generating unique operation named: saveUsingPOST_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingGET_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPOST_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPUT_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 10:43:38 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 10:43:38 -Generating unique operation named: addUsingGET_2
2019-07-31 10:43:38 -Generating unique operation named: editUsingGET_2
2019-07-31 10:43:38 -Generating unique operation named: listUsingGET_2
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_4
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_5
2019-07-31 10:43:38 -Generating unique operation named: saveUsingPOST_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPOST_2
2019-07-31 10:43:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 10:43:38 -Generating unique operation named: addUsingGET_3
2019-07-31 10:43:38 -Generating unique operation named: editUsingGET_3
2019-07-31 10:43:38 -Generating unique operation named: listUsingGET_3
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_6
2019-07-31 10:43:38 -Generating unique operation named: removeUsingPOST_7
2019-07-31 10:43:38 -Generating unique operation named: saveUsingPOST_3
2019-07-31 10:43:38 -Generating unique operation named: updateUsingGET_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPOST_3
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPUT_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 10:43:38 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 10:43:38 -Generating unique operation named: addUsingGET_4
2019-07-31 10:43:38 -Generating unique operation named: editUsingGET_4
2019-07-31 10:43:38 -Generating unique operation named: listUsingGET_4
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_8
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_9
2019-07-31 10:43:39 -Generating unique operation named: saveUsingPOST_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingGET_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPUT_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 10:43:39 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 10:43:39 -Generating unique operation named: ElecUsingGET_1
2019-07-31 10:43:39 -Generating unique operation named: addUsingGET_5
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_5
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_5
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_10
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_11
2019-07-31 10:43:39 -Generating unique operation named: saveUsingPOST_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingGET_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPUT_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 10:43:39 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_6
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_6
2019-07-31 10:43:39 -Generating unique operation named: addUsingGET_6
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_7
2019-07-31 10:43:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_7
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_12
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_13
2019-07-31 10:43:39 -Generating unique operation named: saveUsingPOST_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingGET_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPUT_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 10:43:39 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 10:43:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 10:43:39 -Generating unique operation named: addUsingGET_7
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_8
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_8
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_14
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_15
2019-07-31 10:43:39 -Generating unique operation named: saveUsingPOST_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingGET_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_8
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPUT_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 10:43:39 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 10:43:39 -Generating unique operation named: addUsingGET_8
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_9
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_9
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_16
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_17
2019-07-31 10:43:39 -Generating unique operation named: saveUsingPOST_8
2019-07-31 10:43:39 -Generating unique operation named: updateUsingGET_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPOST_9
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPUT_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 10:43:39 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 10:43:39 -Generating unique operation named: addUsingGET_9
2019-07-31 10:43:39 -Generating unique operation named: editUsingGET_10
2019-07-31 10:43:39 -Generating unique operation named: infoUsingGET_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingPOST_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingPUT_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 10:43:39 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 10:43:39 -Generating unique operation named: listUsingGET_10
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_18
2019-07-31 10:43:39 -Generating unique operation named: removeUsingPOST_19
2019-07-31 10:43:40 -Generating unique operation named: saveUsingPOST_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPOST_10
2019-07-31 10:43:40 -Generating unique operation named: listUsingGET_11
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_20
2019-07-31 10:43:40 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 10:43:40 -Generating unique operation named: addUsingGET_10
2019-07-31 10:43:40 -Generating unique operation named: editUsingGET_11
2019-07-31 10:43:40 -Generating unique operation named: listUsingGET_12
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_21
2019-07-31 10:43:40 -Generating unique operation named: saveUsingPOST_10
2019-07-31 10:43:40 -Generating unique operation named: treeUsingGET_1
2019-07-31 10:43:40 -Generating unique operation named: treeUsingGET_2
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPOST_11
2019-07-31 10:43:40 -Generating unique operation named: addUsingGET_11
2019-07-31 10:43:40 -Generating unique operation named: editUsingGET_12
2019-07-31 10:43:40 -Generating unique operation named: listUsingGET_13
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_22
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_23
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPOST_12
2019-07-31 10:43:40 -Generating unique operation named: addUsingGET_12
2019-07-31 10:43:40 -Generating unique operation named: editUsingGET_13
2019-07-31 10:43:40 -Generating unique operation named: listUsingGET_14
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_24
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_25
2019-07-31 10:43:40 -Generating unique operation named: saveUsingPOST_11
2019-07-31 10:43:40 -Generating unique operation named: updateUsingGET_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPOST_13
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPUT_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 10:43:40 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 10:43:40 -Generating unique operation named: addUsingGET_13
2019-07-31 10:43:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 10:43:40 -Generating unique operation named: editUsingGET_14
2019-07-31 10:43:40 -Generating unique operation named: listUsingGET_15
2019-07-31 10:43:40 -Generating unique operation named: printEditUsingGET_1
2019-07-31 10:43:40 -Generating unique operation named: removeUsingPOST_26
2019-07-31 10:43:40 -Generating unique operation named: saveUsingPOST_12
2019-07-31 10:43:40 -Generating unique operation named: updateUsingGET_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPOST_14
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPUT_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 10:43:40 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 10:43:40 -Generating unique operation named: addUsingGET_14
2019-07-31 10:43:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 10:43:40 -Generating unique operation named: editUsingGET_15
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_16
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_13
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_14
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPOST_15
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_17
2019-07-31 10:43:41 -Generating unique operation named: listUsingHEAD_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingPOST_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingPUT_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingPATCH_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingDELETE_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 10:43:41 -Generating unique operation named: listUsingTRACE_1
2019-07-31 10:43:41 -Generating unique operation named: countDDUsingGET_1
2019-07-31 10:43:41 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 10:43:41 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 10:43:41 -Generating unique operation named: addUsingGET_15
2019-07-31 10:43:41 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 10:43:41 -Generating unique operation named: editUsingGET_16
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_18
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_27
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_15
2019-07-31 10:43:41 -Generating unique operation named: treeUsingGET_3
2019-07-31 10:43:41 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPOST_16
2019-07-31 10:43:41 -Generating unique operation named: addUsingGET_16
2019-07-31 10:43:41 -Generating unique operation named: editUsingGET_17
2019-07-31 10:43:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_19
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_28
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_29
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_16
2019-07-31 10:43:41 -Generating unique operation named: updateUsingGET_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPOST_17
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPUT_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 10:43:41 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 10:43:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 10:43:41 -Generating unique operation named: addUsingGET_17
2019-07-31 10:43:41 -Generating unique operation named: editUsingGET_18
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_20
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_30
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_31
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_17
2019-07-31 10:43:41 -Generating unique operation named: updateUsingGET_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPOST_18
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPUT_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 10:43:41 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 10:43:41 -Generating unique operation named: addUsingGET_18
2019-07-31 10:43:41 -Generating unique operation named: editUsingGET_19
2019-07-31 10:43:41 -Generating unique operation named: listUsingGET_21
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_32
2019-07-31 10:43:41 -Generating unique operation named: removeUsingPOST_33
2019-07-31 10:43:41 -Generating unique operation named: saveUsingPOST_18
2019-07-31 10:43:41 -Generating unique operation named: updateUsingGET_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPOST_19
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPUT_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 10:43:41 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 10:43:41 -Starting Quartz Scheduler now
2019-07-31 10:43:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 10:43:41 -Starting...
2019-07-31 10:43:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 10:43:41 -Started.
2019-07-31 10:43:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 10:43:42 -Using a shared selector for servlet write/read
2019-07-31 10:43:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 10:43:42 -Started BootdoApplication in 61.128 seconds (JVM running for 70.347)
2019-07-31 10:43:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 10:43:42 -==> Parameters: 
2019-07-31 10:43:43 -<==      Total: 1
2019-07-31 10:44:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 10:46:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 10:46:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 10:46:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 112 ms
2019-07-31 10:46:32 -Enabling session validation scheduler...
2019-07-31 10:46:32 -请求地址 : http://localhost:8081/
2019-07-31 10:46:32 -HTTP METHOD : GET
2019-07-31 10:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-31 10:46:32 -参数 : [{}]
2019-07-31 10:46:32 -耗时 : 7
2019-07-31 10:46:32 -返回值 : redirect:/index
2019-07-31 10:46:32 -请求地址 : http://localhost:8081/login;JSESSIONID=bc5d9b94-83b2-478d-8bb6-85832fbdd8a5
2019-07-31 10:46:32 -HTTP METHOD : GET
2019-07-31 10:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 10:46:32 -参数 : [{}]
2019-07-31 10:46:32 -耗时 : 1
2019-07-31 10:46:32 -返回值 : login
2019-07-31 10:46:36 -请求地址 : http://localhost:8081/getVerify
2019-07-31 10:46:36 -HTTP METHOD : GET
2019-07-31 10:46:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 10:46:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28f0ca88, org.apache.shiro.web.servlet.ShiroHttpServletResponse@407a06f2]
2019-07-31 10:46:41 -3106
2019-07-31 10:46:41 -耗时 : 5591
2019-07-31 10:46:41 -返回值 : null
2019-07-31 10:46:46 -请求地址 : http://localhost:8081/login
2019-07-31 10:46:46 -HTTP METHOD : POST
2019-07-31 10:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 10:46:46 -参数 : [admin, 111111, 3106, org.apache.shiro.web.servlet.ShiroHttpServletRequest@32168e]
2019-07-31 10:46:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 10:46:47 -==> Parameters: admin(String)
2019-07-31 10:46:47 -<==      Total: 1
2019-07-31 10:46:47 -耗时 : 1051
2019-07-31 10:46:47 -返回值 : {msg=操作成功, code=0}
2019-07-31 10:46:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 10:46:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 10:46:48 -==> Parameters: 1(Long), admin(String), 登录(String), 1051(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 10:46:48.224(Timestamp)
2019-07-31 10:46:48 -请求地址 : http://localhost:8081/index
2019-07-31 10:46:48 -HTTP METHOD : GET
2019-07-31 10:46:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 10:46:48 -参数 : [{}]
2019-07-31 10:46:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 10:46:49 -<==    Updates: 1
2019-07-31 10:46:49 -==> Parameters: 1(Long)
2019-07-31 10:46:50 -<==      Total: 51
2019-07-31 10:46:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 10:46:50 -==> Parameters: 138(Long)
2019-07-31 10:46:50 -<==      Total: 1
2019-07-31 10:46:50 -耗时 : 1924
2019-07-31 10:46:50 -返回值 : index_v1
2019-07-31 10:46:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 10:46:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1924(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 10:46:50.516(Timestamp)
2019-07-31 10:46:50 -请求地址 : http://localhost:8081/main
2019-07-31 10:46:50 -HTTP METHOD : GET
2019-07-31 10:46:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 10:46:50 -参数 : []
2019-07-31 10:46:50 -耗时 : 0
2019-07-31 10:46:50 -返回值 : main
2019-07-31 10:46:51 -<==    Updates: 1
2019-07-31 10:46:54 -请求地址 : http://localhost:8081/main
2019-07-31 10:46:54 -HTTP METHOD : GET
2019-07-31 10:46:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 10:46:54 -参数 : []
2019-07-31 10:46:54 -耗时 : 1
2019-07-31 10:46:54 -返回值 : main
2019-07-31 10:46:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 10:46:54 -HTTP METHOD : GET
2019-07-31 10:46:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 10:46:54 -参数 : []
2019-07-31 10:46:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 10:46:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 10:46:55 -<==      Total: 0
2019-07-31 10:46:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 10:46:55 -==> Parameters: 1(Long), 0(String)
2019-07-31 10:46:55 -<==      Total: 1
2019-07-31 10:46:55 -耗时 : 1587
2019-07-31 10:46:55 -返回值 : com.bootdo.common.utils.PageUtils@595fbfa7
2019-07-31 10:46:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 10:46:58 -==> Parameters: 1(Long)
2019-07-31 10:46:58 -<==      Total: 95
2019-07-31 10:46:58 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 10:46:58 -HTTP METHOD : GET
2019-07-31 10:46:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 10:46:58 -参数 : []
2019-07-31 10:46:58 -耗时 : 1
2019-07-31 10:46:58 -返回值 : elec/elec/elec
2019-07-31 10:47:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 10:47:01 -HTTP METHOD : GET
2019-07-31 10:47:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 10:47:01 -参数 : [userType]
2019-07-31 10:47:01 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 10:47:01 -HTTP METHOD : GET
2019-07-31 10:47:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 10:47:01 -参数 : [elecType]
2019-07-31 10:47:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 10:47:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 10:47:01 -==> Parameters: elecType(String)
2019-07-31 10:47:01 -==> Parameters: userType(String)
2019-07-31 10:47:01 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 10:47:01 -HTTP METHOD : GET
2019-07-31 10:47:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 10:47:01 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2e51f76]
2019-07-31 10:47:02 -<==      Total: 11
2019-07-31 10:47:02 -耗时 : 545
2019-07-31 10:47:02 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 10:47:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 10:47:02 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 10:47:02 -<==      Total: 4
2019-07-31 10:47:02 -耗时 : 610
2019-07-31 10:47:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 10:47:03 -<==      Total: 10
2019-07-31 10:47:03 -==>  Preparing: select count(*) from elec 
2019-07-31 10:47:03 -==> Parameters: 
2019-07-31 10:47:03 -<==      Total: 1
2019-07-31 10:47:03 -耗时 : 2113
2019-07-31 10:47:03 -返回值 : com.bootdo.common.utils.PageUtils@6d172f26
2019-07-31 10:47:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 10:47:06 -HTTP METHOD : GET
2019-07-31 10:47:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 10:47:06 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 10:47:06 -耗时 : 1
2019-07-31 10:47:06 -返回值 : system/dept/deptTree
2019-07-31 10:47:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 10:47:06 -HTTP METHOD : GET
2019-07-31 10:47:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 10:47:06 -参数 : []
2019-07-31 10:47:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 10:47:06 -==> Parameters: 
2019-07-31 10:47:06 -<==      Total: 3
2019-07-31 10:47:06 -耗时 : 27
2019-07-31 10:47:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 10:47:09 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 10:47:09 -HTTP METHOD : GET
2019-07-31 10:47:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 10:47:09 -参数 : []
2019-07-31 10:47:09 -耗时 : 1
2019-07-31 10:47:09 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 10:47:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 10:47:14 -HTTP METHOD : GET
2019-07-31 10:47:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 10:47:14 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 10:47:14 -耗时 : 1
2019-07-31 10:47:14 -返回值 : system/dept/deptTree
2019-07-31 10:47:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 10:47:14 -HTTP METHOD : GET
2019-07-31 10:47:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 10:47:14 -参数 : []
2019-07-31 10:47:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 10:47:14 -==> Parameters: 
2019-07-31 10:47:14 -<==      Total: 3
2019-07-31 10:47:14 -耗时 : 4
2019-07-31 10:47:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 10:47:23 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 10:47:23 -HTTP METHOD : POST
2019-07-31 10:47:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 10:47:23 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5eb9537c, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4c2c2d0e]
2019-07-31 10:47:32 -耗时 : 9364
2019-07-31 10:47:32 -返回值 : {result=notExcel}
2019-07-31 10:49:19 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 10:49:19 -HTTP METHOD : POST
2019-07-31 10:49:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 10:49:19 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@12a55ac1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@68964c9d]
2019-07-31 10:53:57 -请求地址 : http://localhost:8081/index
2019-07-31 10:53:58 -HTTP METHOD : GET
2019-07-31 10:53:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 10:53:58 -参数 : [{}]
2019-07-31 10:53:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 10:53:58 -==> Parameters: 1(Long)
2019-07-31 10:53:58 -<==      Total: 51
2019-07-31 10:53:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 10:53:58 -==> Parameters: 138(Long)
2019-07-31 10:53:58 -<==      Total: 1
2019-07-31 10:53:58 -耗时 : 951
2019-07-31 10:53:58 -返回值 : index_v1
2019-07-31 10:53:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 10:53:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 953(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 10:53:58.9(Timestamp)
2019-07-31 10:53:59 -<==    Updates: 1
2019-07-31 10:53:59 -请求地址 : http://localhost:8081/main
2019-07-31 10:53:59 -HTTP METHOD : GET
2019-07-31 10:53:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 10:53:59 -参数 : []
2019-07-31 10:53:59 -耗时 : 0
2019-07-31 10:53:59 -返回值 : main
2019-07-31 10:53:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 10:53:59 -HTTP METHOD : GET
2019-07-31 10:53:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 10:53:59 -参数 : []
2019-07-31 10:53:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 10:53:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 10:54:00 -请求地址 : http://localhost:8081/main
2019-07-31 10:54:00 -HTTP METHOD : GET
2019-07-31 10:54:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 10:54:00 -参数 : []
2019-07-31 10:54:00 -耗时 : 0
2019-07-31 10:54:00 -返回值 : main
2019-07-31 10:54:00 -<==      Total: 0
2019-07-31 10:54:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 10:54:00 -==> Parameters: 1(Long), 0(String)
2019-07-31 10:54:00 -<==      Total: 1
2019-07-31 10:54:00 -耗时 : 279
2019-07-31 10:54:00 -返回值 : com.bootdo.common.utils.PageUtils@545ce39
2019-07-31 10:54:17 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 10:54:17 -HTTP METHOD : GET
2019-07-31 10:54:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 10:54:17 -参数 : []
2019-07-31 10:54:17 -耗时 : 0
2019-07-31 10:54:17 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 10:54:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 10:54:29 -HTTP METHOD : GET
2019-07-31 10:54:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 10:54:29 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 10:54:29 -耗时 : 11
2019-07-31 10:54:29 -返回值 : system/dept/deptTree
2019-07-31 10:54:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 10:54:30 -HTTP METHOD : GET
2019-07-31 10:54:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 10:54:30 -参数 : []
2019-07-31 10:54:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 10:54:30 -==> Parameters: 
2019-07-31 10:54:30 -<==      Total: 3
2019-07-31 10:54:30 -耗时 : 21
2019-07-31 10:54:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 10:54:32 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 10:54:32 -HTTP METHOD : POST
2019-07-31 10:54:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 10:54:32 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3d24cfe1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@454062d2]
2019-07-31 10:54:35 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-31 10:54:38 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-07-31 10:54:38 -==> Parameters: 用户编号(String)
2019-07-31 10:54:38 -<==      Total: 0
2019-07-31 10:54:38 -耗时 : 6420
2019-07-31 10:54:38 -返回值 : {result=1}
2019-07-31 10:59:03 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 10:59:03 -HTTP METHOD : POST
2019-07-31 10:59:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 10:59:03 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4ce32e68, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5b0d167f]
2019-07-31 10:59:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-07-31 10:59:06 -==> Parameters: 1-0001(String)
2019-07-31 10:59:06 -<==      Total: 2
2019-07-31 10:59:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 10:59:06 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-07-31 10:59:06.236(Timestamp)
2019-07-31 10:59:06 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$8b4aac5a.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-07-31 10:59:06 -<==    Updates: 1
2019-07-31 11:03:52 -请求地址 : http://localhost:8081/
2019-07-31 11:03:52 -HTTP METHOD : GET
2019-07-31 11:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-31 11:03:52 -参数 : [{}]
2019-07-31 11:03:52 -耗时 : 1
2019-07-31 11:03:52 -返回值 : redirect:/index
2019-07-31 11:03:52 -请求地址 : http://localhost:8081/index
2019-07-31 11:03:52 -HTTP METHOD : GET
2019-07-31 11:03:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 11:03:52 -参数 : [{}]
2019-07-31 11:03:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 11:03:52 -==> Parameters: 1(Long)
2019-07-31 11:03:53 -<==      Total: 51
2019-07-31 11:03:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 11:03:53 -==> Parameters: 138(Long)
2019-07-31 11:03:53 -<==      Total: 1
2019-07-31 11:03:53 -耗时 : 153
2019-07-31 11:03:53 -返回值 : index_v1
2019-07-31 11:03:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:03:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 153(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 11:03:53.092(Timestamp)
2019-07-31 11:03:53 -<==    Updates: 1
2019-07-31 11:03:53 -请求地址 : http://localhost:8081/main
2019-07-31 11:03:53 -HTTP METHOD : GET
2019-07-31 11:03:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:03:53 -参数 : []
2019-07-31 11:03:53 -耗时 : 0
2019-07-31 11:03:53 -返回值 : main
2019-07-31 11:03:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 11:03:54 -HTTP METHOD : GET
2019-07-31 11:03:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 11:03:54 -参数 : []
2019-07-31 11:03:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 11:03:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 11:03:54 -<==      Total: 0
2019-07-31 11:03:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 11:03:54 -==> Parameters: 1(Long), 0(String)
2019-07-31 11:03:54 -<==      Total: 1
2019-07-31 11:03:54 -请求地址 : http://localhost:8081/main
2019-07-31 11:03:54 -耗时 : 72
2019-07-31 11:03:54 -HTTP METHOD : GET
2019-07-31 11:03:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:03:54 -参数 : []
2019-07-31 11:03:54 -返回值 : com.bootdo.common.utils.PageUtils@4974d8aa
2019-07-31 11:03:54 -耗时 : 0
2019-07-31 11:03:54 -返回值 : main
2019-07-31 11:03:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 11:03:57 -==> Parameters: 1(Long)
2019-07-31 11:03:57 -<==      Total: 95
2019-07-31 11:03:57 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 11:03:57 -HTTP METHOD : GET
2019-07-31 11:03:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 11:03:57 -参数 : []
2019-07-31 11:03:57 -耗时 : 0
2019-07-31 11:03:57 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 11:04:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 11:04:05 -HTTP METHOD : GET
2019-07-31 11:04:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 11:04:05 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 11:04:05 -耗时 : 0
2019-07-31 11:04:05 -返回值 : system/dept/deptTree
2019-07-31 11:04:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 11:04:05 -HTTP METHOD : GET
2019-07-31 11:04:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 11:04:05 -参数 : []
2019-07-31 11:04:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 11:04:05 -==> Parameters: 
2019-07-31 11:04:05 -<==      Total: 3
2019-07-31 11:04:05 -耗时 : 24
2019-07-31 11:04:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 11:04:12 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 11:04:12 -HTTP METHOD : POST
2019-07-31 11:04:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 11:04:12 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@1a426118, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@5bbb66b7]
2019-07-31 11:04:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-07-31 11:04:14 -==> Parameters: 1-0001(String)
2019-07-31 11:04:14 -<==      Total: 2
2019-07-31 11:04:15 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$8b4aac5a.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-07-31 11:04:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:04:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-07-31 11:04:15.511(Timestamp)
2019-07-31 11:04:16 -<==    Updates: 1
2019-07-31 11:05:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 11:05:03 -HTTP METHOD : GET
2019-07-31 11:05:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 11:05:03 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 11:05:03 -耗时 : 1
2019-07-31 11:05:03 -返回值 : system/dept/deptTree
2019-07-31 11:05:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 11:05:03 -HTTP METHOD : GET
2019-07-31 11:05:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 11:05:03 -参数 : []
2019-07-31 11:05:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 11:05:03 -==> Parameters: 
2019-07-31 11:05:03 -<==      Total: 3
2019-07-31 11:05:03 -耗时 : 5
2019-07-31 11:05:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 11:05:07 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 11:05:07 -HTTP METHOD : GET
2019-07-31 11:05:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 11:05:07 -参数 : []
2019-07-31 11:05:07 -耗时 : 1
2019-07-31 11:05:07 -返回值 : elec/elec/elec
2019-07-31 11:05:09 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 11:05:09 -HTTP METHOD : GET
2019-07-31 11:05:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 11:05:09 -参数 : [elecType]
2019-07-31 11:05:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 11:05:09 -HTTP METHOD : GET
2019-07-31 11:05:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 11:05:09 -参数 : [userType]
2019-07-31 11:05:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 11:05:09 -==> Parameters: userType(String)
2019-07-31 11:05:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 11:05:09 -==> Parameters: elecType(String)
2019-07-31 11:05:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 11:05:09 -HTTP METHOD : GET
2019-07-31 11:05:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 11:05:09 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@33bf9484]
2019-07-31 11:05:09 -<==      Total: 4
2019-07-31 11:05:09 -<==      Total: 11
2019-07-31 11:05:09 -耗时 : 201
2019-07-31 11:05:09 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 11:05:09 -耗时 : 201
2019-07-31 11:05:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 11:05:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 11:05:09 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 11:05:09 -<==      Total: 10
2019-07-31 11:05:09 -==>  Preparing: select count(*) from elec 
2019-07-31 11:05:09 -==> Parameters: 
2019-07-31 11:05:09 -<==      Total: 1
2019-07-31 11:05:09 -耗时 : 200
2019-07-31 11:05:09 -返回值 : com.bootdo.common.utils.PageUtils@71d67ca7
2019-07-31 11:05:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 11:05:14 -HTTP METHOD : GET
2019-07-31 11:05:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 11:05:14 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 11:05:14 -耗时 : 1
2019-07-31 11:05:14 -返回值 : system/dept/deptTree
2019-07-31 11:05:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 11:05:14 -HTTP METHOD : GET
2019-07-31 11:05:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 11:05:14 -参数 : []
2019-07-31 11:05:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 11:05:14 -==> Parameters: 
2019-07-31 11:05:14 -<==      Total: 3
2019-07-31 11:05:14 -耗时 : 7
2019-07-31 11:05:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 11:05:24 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 11:05:24 -HTTP METHOD : GET
2019-07-31 11:05:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 11:05:24 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=1-0001, createTime=2019-06, queryType=1}, com.bootdo.elec.domain.ElecDO@7e9ea59a]
2019-07-31 11:05:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-07-31 11:05:24 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 0(Integer), 10(Integer)
2019-07-31 11:05:24 -<==      Total: 1
2019-07-31 11:05:24 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 11:05:24 -==> Parameters: 2019-06(String), 2(String), 1-0001(String)
2019-07-31 11:05:24 -<==      Total: 1
2019-07-31 11:05:24 -耗时 : 132
2019-07-31 11:05:24 -返回值 : com.bootdo.common.utils.PageUtils@5e7f2540
2019-07-31 11:08:38 -请求地址 : http://localhost:8081/
2019-07-31 11:08:38 -HTTP METHOD : GET
2019-07-31 11:08:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-31 11:08:38 -参数 : [{}]
2019-07-31 11:08:38 -耗时 : 1
2019-07-31 11:08:38 -返回值 : redirect:/index
2019-07-31 11:08:38 -请求地址 : http://localhost:8081/index
2019-07-31 11:08:38 -HTTP METHOD : GET
2019-07-31 11:08:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 11:08:38 -参数 : [{}]
2019-07-31 11:08:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 11:08:38 -==> Parameters: 1(Long)
2019-07-31 11:08:39 -<==      Total: 51
2019-07-31 11:08:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 11:08:39 -==> Parameters: 138(Long)
2019-07-31 11:08:39 -<==      Total: 1
2019-07-31 11:08:39 -耗时 : 308
2019-07-31 11:08:39 -返回值 : index_v1
2019-07-31 11:08:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:08:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 309(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 11:08:39.036(Timestamp)
2019-07-31 11:08:39 -<==    Updates: 1
2019-07-31 11:08:42 -请求地址 : http://localhost:8081/main
2019-07-31 11:08:42 -HTTP METHOD : GET
2019-07-31 11:08:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:08:42 -参数 : []
2019-07-31 11:08:42 -耗时 : 116
2019-07-31 11:08:42 -返回值 : main
2019-07-31 11:08:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 11:08:43 -HTTP METHOD : GET
2019-07-31 11:08:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 11:08:43 -参数 : []
2019-07-31 11:08:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 11:08:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 11:08:43 -<==      Total: 0
2019-07-31 11:08:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 11:08:43 -==> Parameters: 1(Long), 0(String)
2019-07-31 11:08:43 -<==      Total: 1
2019-07-31 11:08:43 -耗时 : 12
2019-07-31 11:08:43 -返回值 : com.bootdo.common.utils.PageUtils@3dad2a7a
2019-07-31 11:08:43 -请求地址 : http://localhost:8081/main
2019-07-31 11:08:43 -HTTP METHOD : GET
2019-07-31 11:08:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:08:43 -参数 : []
2019-07-31 11:08:43 -耗时 : 1
2019-07-31 11:08:43 -返回值 : main
2019-07-31 11:14:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 4 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 51], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 383]
2019-07-31 11:22:01 -Starting BootdoApplication on PC-201905091110 with PID 26920 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 11:22:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 11:22:01 -The following profiles are active: dev
2019-07-31 11:22:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4baf352a: startup date [Wed Jul 31 11:22:02 CST 2019]; root of context hierarchy
2019-07-31 11:22:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 11:22:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc95679e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$aeee9645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 11:22:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 11:22:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:22:23 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 11:22:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 11:22:23 -Starting service [Tomcat]
2019-07-31 11:22:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 11:22:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 11:22:24 -Initializing Spring embedded WebApplicationContext
2019-07-31 11:22:24 -Root WebApplicationContext: initialization completed in 22079 ms
2019-07-31 11:22:25 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 11:22:25 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 11:22:25 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 11:22:25 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 11:22:25 -Filter xssFilter was not registered (disabled)
2019-07-31 11:22:25 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 11:22:25 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 11:22:25 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 11:22:25 -Servlet dispatcherServlet mapped to [/]
2019-07-31 11:22:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4baf352a: startup date [Wed Jul 31 11:22:02 CST 2019]; root of context hierarchy
2019-07-31 11:22:33 -Using default implementation for ThreadExecutor
2019-07-31 11:22:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 11:22:33 -Quartz Scheduler v.2.3.0 created.
2019-07-31 11:22:33 -RAMJobStore initialized.
2019-07-31 11:22:33 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 11:22:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 11:22:33 -Quartz scheduler version: 2.3.0
2019-07-31 11:22:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@361fa478
2019-07-31 11:22:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 11:22:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 11:22:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 11:22:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 11:22:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 11:22:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 11:22:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 11:22:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 11:22:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 11:22:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 11:22:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 11:22:44 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:22:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 11:22:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 11:22:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 11:22:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 11:22:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 11:22:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 11:22:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:22:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 11:22:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:22:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 11:22:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 11:22:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 11:22:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 11:22:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 11:22:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 11:22:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 11:22:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 11:22:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 11:22:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 11:22:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 11:22:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 11:22:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 11:22:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 11:22:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 11:22:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:22:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:22:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 11:22:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 11:22:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 11:22:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 11:22:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 11:22:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 11:22:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 11:22:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 11:22:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 11:22:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 11:22:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 11:22:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 11:22:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 11:22:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 11:22:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 11:22:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 11:22:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 11:22:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 11:22:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 11:22:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 11:22:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 11:22:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 11:22:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 11:22:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 11:22:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 11:22:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 11:22:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 11:22:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 11:22:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 11:22:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 11:22:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 11:22:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:22:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:22:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 11:22:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 11:22:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 11:22:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 11:22:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 11:22:44 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 11:22:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:22:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:22:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:22:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 11:22:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 11:22:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:22:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 11:22:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 11:22:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 11:22:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 11:22:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 11:22:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 11:22:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:22:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4baf352a: startup date [Wed Jul 31 11:22:02 CST 2019]; root of context hierarchy
2019-07-31 11:22:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:22:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:22:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 11:22:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 11:22:53 -Registering beans for JMX exposure on startup
2019-07-31 11:22:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 11:22:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 11:22:53 -Starting beans in phase 2147483647
2019-07-31 11:22:53 -Context refreshed
2019-07-31 11:22:54 -Found 1 custom documentation plugin(s)
2019-07-31 11:22:54 -Scanning for api listing references
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_1
2019-07-31 11:22:55 -Generating unique operation named: addUsingGET_1
2019-07-31 11:22:55 -Generating unique operation named: editUsingGET_1
2019-07-31 11:22:55 -Generating unique operation named: listUsingGET_1
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_2
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_3
2019-07-31 11:22:55 -Generating unique operation named: saveUsingPOST_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingGET_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPOST_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPUT_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 11:22:55 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 11:22:55 -Generating unique operation named: addUsingGET_2
2019-07-31 11:22:55 -Generating unique operation named: editUsingGET_2
2019-07-31 11:22:55 -Generating unique operation named: listUsingGET_2
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_4
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_5
2019-07-31 11:22:55 -Generating unique operation named: saveUsingPOST_2
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPOST_2
2019-07-31 11:22:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 11:22:55 -Generating unique operation named: addUsingGET_3
2019-07-31 11:22:55 -Generating unique operation named: editUsingGET_3
2019-07-31 11:22:55 -Generating unique operation named: listUsingGET_3
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_6
2019-07-31 11:22:55 -Generating unique operation named: removeUsingPOST_7
2019-07-31 11:22:55 -Generating unique operation named: saveUsingPOST_3
2019-07-31 11:22:55 -Generating unique operation named: updateUsingGET_2
2019-07-31 11:22:55 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPOST_3
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPUT_2
2019-07-31 11:22:55 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 11:22:56 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 11:22:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 11:22:56 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 11:22:56 -Generating unique operation named: addUsingGET_4
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_4
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_4
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_8
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_9
2019-07-31 11:22:56 -Generating unique operation named: saveUsingPOST_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingGET_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPUT_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 11:22:56 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 11:22:56 -Generating unique operation named: ElecUsingGET_1
2019-07-31 11:22:56 -Generating unique operation named: addUsingGET_5
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_5
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_5
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_10
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_11
2019-07-31 11:22:56 -Generating unique operation named: saveUsingPOST_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingGET_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPUT_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 11:22:56 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_6
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_6
2019-07-31 11:22:56 -Generating unique operation named: addUsingGET_6
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_7
2019-07-31 11:22:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_7
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_12
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_13
2019-07-31 11:22:56 -Generating unique operation named: saveUsingPOST_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingGET_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_7
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPUT_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 11:22:56 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 11:22:56 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 11:22:56 -Generating unique operation named: addUsingGET_7
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_8
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_8
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_14
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_15
2019-07-31 11:22:56 -Generating unique operation named: saveUsingPOST_7
2019-07-31 11:22:56 -Generating unique operation named: updateUsingGET_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_8
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPUT_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 11:22:56 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 11:22:56 -Generating unique operation named: addUsingGET_8
2019-07-31 11:22:56 -Generating unique operation named: editUsingGET_9
2019-07-31 11:22:56 -Generating unique operation named: listUsingGET_9
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_16
2019-07-31 11:22:56 -Generating unique operation named: removeUsingPOST_17
2019-07-31 11:22:56 -Generating unique operation named: saveUsingPOST_8
2019-07-31 11:22:56 -Generating unique operation named: updateUsingGET_7
2019-07-31 11:22:56 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPOST_9
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPUT_7
2019-07-31 11:22:56 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 11:22:57 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 11:22:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 11:22:57 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_9
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_10
2019-07-31 11:22:57 -Generating unique operation named: infoUsingGET_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingPOST_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingPUT_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 11:22:57 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_10
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_18
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_19
2019-07-31 11:22:57 -Generating unique operation named: saveUsingPOST_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPOST_10
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_11
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_20
2019-07-31 11:22:57 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_10
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_11
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_12
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_21
2019-07-31 11:22:57 -Generating unique operation named: saveUsingPOST_10
2019-07-31 11:22:57 -Generating unique operation named: treeUsingGET_1
2019-07-31 11:22:57 -Generating unique operation named: treeUsingGET_2
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPOST_11
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_11
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_12
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_13
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_22
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_23
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPOST_12
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_12
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_13
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_14
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_24
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_25
2019-07-31 11:22:57 -Generating unique operation named: saveUsingPOST_11
2019-07-31 11:22:57 -Generating unique operation named: updateUsingGET_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPOST_13
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPUT_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 11:22:57 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_13
2019-07-31 11:22:57 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_14
2019-07-31 11:22:57 -Generating unique operation named: listUsingGET_15
2019-07-31 11:22:57 -Generating unique operation named: printEditUsingGET_1
2019-07-31 11:22:57 -Generating unique operation named: removeUsingPOST_26
2019-07-31 11:22:57 -Generating unique operation named: saveUsingPOST_12
2019-07-31 11:22:57 -Generating unique operation named: updateUsingGET_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPOST_14
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPUT_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 11:22:57 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 11:22:57 -Generating unique operation named: addUsingGET_14
2019-07-31 11:22:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 11:22:57 -Generating unique operation named: editUsingGET_15
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_16
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_13
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_14
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPOST_15
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_17
2019-07-31 11:22:58 -Generating unique operation named: listUsingHEAD_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingPOST_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingPUT_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingPATCH_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingDELETE_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 11:22:58 -Generating unique operation named: listUsingTRACE_1
2019-07-31 11:22:58 -Generating unique operation named: countDDUsingGET_1
2019-07-31 11:22:58 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 11:22:58 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 11:22:58 -Generating unique operation named: addUsingGET_15
2019-07-31 11:22:58 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 11:22:58 -Generating unique operation named: editUsingGET_16
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_18
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_27
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_15
2019-07-31 11:22:58 -Generating unique operation named: treeUsingGET_3
2019-07-31 11:22:58 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPOST_16
2019-07-31 11:22:58 -Generating unique operation named: addUsingGET_16
2019-07-31 11:22:58 -Generating unique operation named: editUsingGET_17
2019-07-31 11:22:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_19
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_28
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_29
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_16
2019-07-31 11:22:58 -Generating unique operation named: updateUsingGET_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPOST_17
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPUT_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 11:22:58 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 11:22:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 11:22:58 -Generating unique operation named: addUsingGET_17
2019-07-31 11:22:58 -Generating unique operation named: editUsingGET_18
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_20
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_30
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_31
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_17
2019-07-31 11:22:58 -Generating unique operation named: updateUsingGET_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPOST_18
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPUT_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 11:22:58 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 11:22:58 -Generating unique operation named: addUsingGET_18
2019-07-31 11:22:58 -Generating unique operation named: editUsingGET_19
2019-07-31 11:22:58 -Generating unique operation named: listUsingGET_21
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_32
2019-07-31 11:22:58 -Generating unique operation named: removeUsingPOST_33
2019-07-31 11:22:58 -Generating unique operation named: saveUsingPOST_18
2019-07-31 11:22:58 -Generating unique operation named: updateUsingGET_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPOST_19
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPUT_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 11:22:58 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 11:22:58 -Starting Quartz Scheduler now
2019-07-31 11:22:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 11:22:58 -Starting...
2019-07-31 11:22:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 11:22:58 -Started.
2019-07-31 11:22:58 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 11:22:59 -Using a shared selector for servlet write/read
2019-07-31 11:22:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 11:22:59 -Started BootdoApplication in 62.91 seconds (JVM running for 66.061)
2019-07-31 11:22:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 11:22:59 -==> Parameters: 
2019-07-31 11:22:59 -<==      Total: 1
2019-07-31 11:23:46 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 11:24:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 11:24:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 11:24:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 485 ms
2019-07-31 11:24:59 -Enabling session validation scheduler...
2019-07-31 11:25:00 -请求地址 : http://localhost:8081/
2019-07-31 11:25:00 -HTTP METHOD : GET
2019-07-31 11:25:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-31 11:25:00 -参数 : [{}]
2019-07-31 11:25:00 -耗时 : 6
2019-07-31 11:25:00 -返回值 : redirect:/index
2019-07-31 11:25:01 -请求地址 : http://localhost:8081/login;JSESSIONID=8c46aae8-b3e4-4f78-bdca-156e3c46dc04
2019-07-31 11:25:01 -HTTP METHOD : GET
2019-07-31 11:25:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 11:25:01 -参数 : [{}]
2019-07-31 11:25:01 -耗时 : 0
2019-07-31 11:25:01 -返回值 : login
2019-07-31 11:25:13 -请求地址 : http://localhost:8081/getVerify
2019-07-31 11:25:13 -HTTP METHOD : GET
2019-07-31 11:25:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 11:25:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@578a11b1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@594de530]
2019-07-31 11:25:45 -9666
2019-07-31 11:25:55 -耗时 : 42349
2019-07-31 11:25:55 -返回值 : null
2019-07-31 11:26:03 -请求地址 : http://localhost:8081/login
2019-07-31 11:26:03 -HTTP METHOD : POST
2019-07-31 11:26:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 11:26:03 -参数 : [admin, 111111, 9666, org.apache.shiro.web.servlet.ShiroHttpServletRequest@aea3b95]
2019-07-31 11:26:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 11:26:04 -==> Parameters: admin(String)
2019-07-31 11:26:05 -<==      Total: 1
2019-07-31 11:26:05 -耗时 : 1893
2019-07-31 11:26:05 -返回值 : {msg=操作成功, code=0}
2019-07-31 11:26:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 11:26:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:26:07 -==> Parameters: 1(Long), admin(String), 登录(String), 1893(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 11:26:06.806(Timestamp)
2019-07-31 11:26:07 -<==    Updates: 1
2019-07-31 11:26:09 -请求地址 : http://localhost:8081/index
2019-07-31 11:26:09 -HTTP METHOD : GET
2019-07-31 11:26:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 11:26:09 -参数 : [{}]
2019-07-31 11:26:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 11:26:10 -==> Parameters: 1(Long)
2019-07-31 11:26:11 -<==      Total: 51
2019-07-31 11:26:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 11:26:11 -==> Parameters: 138(Long)
2019-07-31 11:26:11 -<==      Total: 1
2019-07-31 11:26:11 -耗时 : 2136
2019-07-31 11:26:11 -返回值 : index_v1
2019-07-31 11:26:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:26:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2137(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 11:26:11.704(Timestamp)
2019-07-31 11:26:12 -<==    Updates: 1
2019-07-31 11:26:13 -请求地址 : http://localhost:8081/main
2019-07-31 11:26:13 -HTTP METHOD : GET
2019-07-31 11:26:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:26:13 -参数 : []
2019-07-31 11:26:13 -耗时 : 1
2019-07-31 11:26:13 -返回值 : main
2019-07-31 11:26:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 11:26:21 -HTTP METHOD : GET
2019-07-31 11:26:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 11:26:21 -参数 : []
2019-07-31 11:26:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 11:26:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 11:26:22 -<==      Total: 0
2019-07-31 11:26:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 11:26:22 -==> Parameters: 1(Long), 0(String)
2019-07-31 11:26:22 -<==      Total: 1
2019-07-31 11:26:22 -耗时 : 303
2019-07-31 11:26:22 -返回值 : com.bootdo.common.utils.PageUtils@6a695ea5
2019-07-31 11:26:23 -请求地址 : http://localhost:8081/main
2019-07-31 11:26:23 -HTTP METHOD : GET
2019-07-31 11:26:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:26:23 -参数 : []
2019-07-31 11:26:23 -耗时 : 1
2019-07-31 11:26:23 -返回值 : main
2019-07-31 11:26:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 11:26:56 -==> Parameters: 1(Long)
2019-07-31 11:26:56 -<==      Total: 95
2019-07-31 11:26:56 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 11:26:56 -HTTP METHOD : GET
2019-07-31 11:26:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 11:26:56 -参数 : []
2019-07-31 11:26:56 -耗时 : 0
2019-07-31 11:26:56 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 11:27:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 11:27:09 -HTTP METHOD : GET
2019-07-31 11:27:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 11:27:09 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 11:27:09 -耗时 : 0
2019-07-31 11:27:09 -返回值 : system/dept/deptTree
2019-07-31 11:27:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 11:27:10 -HTTP METHOD : GET
2019-07-31 11:27:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 11:27:10 -参数 : []
2019-07-31 11:27:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 11:27:10 -==> Parameters: 
2019-07-31 11:27:10 -<==      Total: 3
2019-07-31 11:27:10 -耗时 : 123
2019-07-31 11:27:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 11:27:12 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 11:27:12 -HTTP METHOD : POST
2019-07-31 11:27:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 11:27:12 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5edd7036, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@b41e08d]
2019-07-31 11:28:53 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELE WHERE user_id = ? 
2019-07-31 11:28:53 -==> Parameters: 1-0001(String)
2019-07-31 11:28:56 -{conn-10001, pstmt-20009} execute error. SELECT
		  
	
			`id`, 
			`user_id`,  
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`user_tell`, 
			`user_state`, 
			`wages_id`, 
			`elec_type`, 
			`elec_price`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
	 
		 FROM ELE
	    WHERE  user_id = ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$8e92629b.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-31 11:29:03 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-07-31 11:29:04 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-07-31 11:29:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:29:05 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecUpLoadMapper.xml]
### The error may involve com.bootdo.elec.dao.ElecUpLoadDao.getElecByUserId-Inline
### The error occurred while setting parameters
### SQL: SELECT           `id`,     `user_id`,      `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       FROM ELE      WHERE  user_id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecUpLoadMapper.xml]
### The error may involve com.bootdo.elec.dao.ElecUpLoadDao.getElecByUserId-Inline
### The error occurred while setting parameters
### SQL: SELECT           `id`,     `user_id`,      `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       FROM ELE      WHERE  user_id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$8e92629b.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy172.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-31 11:29:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\elec\ElecUpLoadMapper.xml]
### The error may involve com.bootdo.elec.dao.ElecUpLoadDao.getElecByUserId-Inline
### The error occurred while setting parameters
### SQL: SELECT           `id`,     `user_id`,      `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`       FROM ELE      WHERE  user_id = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'bootdo.ele' doesn't exist(String), null, 2019-07-31 11:29:05.097(Timestamp)
2019-07-31 11:29:05 -<==    Updates: 1
2019-07-31 11:33:46 -Starting BootdoApplication on PC-201905091110 with PID 89524 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 11:33:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 11:33:46 -The following profiles are active: dev
2019-07-31 11:33:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@686449f9: startup date [Wed Jul 31 11:33:46 CST 2019]; root of context hierarchy
2019-07-31 11:33:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 11:33:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff9a62a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f1f3914e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 11:34:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 11:34:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:34:12 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 11:34:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 11:34:12 -Starting service [Tomcat]
2019-07-31 11:34:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 11:34:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 11:34:13 -Initializing Spring embedded WebApplicationContext
2019-07-31 11:34:13 -Root WebApplicationContext: initialization completed in 26917 ms
2019-07-31 11:34:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 11:34:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 11:34:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 11:34:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 11:34:15 -Filter xssFilter was not registered (disabled)
2019-07-31 11:34:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 11:34:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 11:34:15 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 11:34:15 -Servlet dispatcherServlet mapped to [/]
2019-07-31 11:34:21 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@686449f9: startup date [Wed Jul 31 11:33:46 CST 2019]; root of context hierarchy
2019-07-31 11:34:21 -Using default implementation for ThreadExecutor
2019-07-31 11:34:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 11:34:22 -Quartz Scheduler v.2.3.0 created.
2019-07-31 11:34:22 -RAMJobStore initialized.
2019-07-31 11:34:22 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 11:34:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 11:34:22 -Quartz scheduler version: 2.3.0
2019-07-31 11:34:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@57ed02e6
2019-07-31 11:34:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 11:34:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 11:34:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 11:34:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 11:34:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 11:34:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 11:34:26 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 11:34:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 11:34:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 11:34:26 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 11:34:26 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 11:34:26 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 11:34:26 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:34:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 11:34:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 11:34:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 11:34:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 11:34:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 11:34:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 11:34:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 11:34:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 11:34:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:34:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:34:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 11:34:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 11:34:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 11:34:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 11:34:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 11:34:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 11:34:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 11:34:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 11:34:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 11:34:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 11:34:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 11:34:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 11:34:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 11:34:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 11:34:26 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 11:34:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 11:34:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 11:34:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 11:34:26 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 11:34:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:34:26 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 11:34:26 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 11:34:26 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:26 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 11:34:26 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 11:34:27 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 11:34:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 11:34:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:34:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:34:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 11:34:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 11:34:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 11:34:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 11:34:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 11:34:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 11:34:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 11:34:27 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 11:34:27 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:27 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 11:34:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 11:34:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 11:34:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 11:34:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 11:34:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 11:34:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 11:34:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 11:34:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 11:34:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 11:34:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 11:34:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 11:34:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 11:34:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 11:34:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 11:34:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 11:34:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 11:34:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:34:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:34:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 11:34:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 11:34:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 11:34:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 11:34:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 11:34:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 11:34:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 11:34:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 11:34:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:27 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:34:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 11:34:27 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:34:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 11:34:27 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 11:34:27 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:34:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:34:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 11:34:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 11:34:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 11:34:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 11:34:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 11:34:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 11:34:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:34:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@686449f9: startup date [Wed Jul 31 11:33:46 CST 2019]; root of context hierarchy
2019-07-31 11:34:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:34:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:34:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 11:34:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 11:34:33 -Registering beans for JMX exposure on startup
2019-07-31 11:34:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 11:34:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 11:34:33 -Starting beans in phase 2147483647
2019-07-31 11:34:33 -Context refreshed
2019-07-31 11:34:33 -Found 1 custom documentation plugin(s)
2019-07-31 11:34:33 -Scanning for api listing references
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_1
2019-07-31 11:34:34 -Generating unique operation named: addUsingGET_1
2019-07-31 11:34:34 -Generating unique operation named: editUsingGET_1
2019-07-31 11:34:34 -Generating unique operation named: listUsingGET_1
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_2
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_3
2019-07-31 11:34:34 -Generating unique operation named: saveUsingPOST_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingGET_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPOST_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPUT_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 11:34:34 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 11:34:34 -Generating unique operation named: addUsingGET_2
2019-07-31 11:34:34 -Generating unique operation named: editUsingGET_2
2019-07-31 11:34:34 -Generating unique operation named: listUsingGET_2
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_4
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_5
2019-07-31 11:34:34 -Generating unique operation named: saveUsingPOST_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPOST_2
2019-07-31 11:34:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 11:34:34 -Generating unique operation named: addUsingGET_3
2019-07-31 11:34:34 -Generating unique operation named: editUsingGET_3
2019-07-31 11:34:34 -Generating unique operation named: listUsingGET_3
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_6
2019-07-31 11:34:34 -Generating unique operation named: removeUsingPOST_7
2019-07-31 11:34:34 -Generating unique operation named: saveUsingPOST_3
2019-07-31 11:34:34 -Generating unique operation named: updateUsingGET_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPOST_3
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPUT_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 11:34:34 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 11:34:34 -Generating unique operation named: addUsingGET_4
2019-07-31 11:34:34 -Generating unique operation named: editUsingGET_4
2019-07-31 11:34:34 -Generating unique operation named: listUsingGET_4
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_8
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_9
2019-07-31 11:34:35 -Generating unique operation named: saveUsingPOST_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingGET_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPOST_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPUT_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 11:34:35 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 11:34:35 -Generating unique operation named: ElecUsingGET_1
2019-07-31 11:34:35 -Generating unique operation named: addUsingGET_5
2019-07-31 11:34:35 -Generating unique operation named: editUsingGET_5
2019-07-31 11:34:35 -Generating unique operation named: listUsingGET_5
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_10
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_11
2019-07-31 11:34:35 -Generating unique operation named: saveUsingPOST_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingGET_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPOST_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPUT_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 11:34:35 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 11:34:35 -Generating unique operation named: editUsingGET_6
2019-07-31 11:34:35 -Generating unique operation named: listUsingGET_6
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPOST_6
2019-07-31 11:34:35 -Generating unique operation named: addUsingGET_6
2019-07-31 11:34:35 -Generating unique operation named: editUsingGET_7
2019-07-31 11:34:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 11:34:35 -Generating unique operation named: listUsingGET_7
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_12
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_13
2019-07-31 11:34:35 -Generating unique operation named: saveUsingPOST_6
2019-07-31 11:34:35 -Generating unique operation named: updateUsingGET_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPOST_7
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPUT_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 11:34:35 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 11:34:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 11:34:35 -Generating unique operation named: addUsingGET_7
2019-07-31 11:34:35 -Generating unique operation named: editUsingGET_8
2019-07-31 11:34:35 -Generating unique operation named: listUsingGET_8
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_14
2019-07-31 11:34:35 -Generating unique operation named: removeUsingPOST_15
2019-07-31 11:34:35 -Generating unique operation named: saveUsingPOST_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingGET_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPOST_8
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPUT_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 11:34:36 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 11:34:36 -Generating unique operation named: addUsingGET_8
2019-07-31 11:34:36 -Generating unique operation named: editUsingGET_9
2019-07-31 11:34:36 -Generating unique operation named: listUsingGET_9
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_16
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_17
2019-07-31 11:34:36 -Generating unique operation named: saveUsingPOST_8
2019-07-31 11:34:36 -Generating unique operation named: updateUsingGET_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPOST_9
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPUT_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 11:34:36 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 11:34:36 -Generating unique operation named: addUsingGET_9
2019-07-31 11:34:36 -Generating unique operation named: editUsingGET_10
2019-07-31 11:34:36 -Generating unique operation named: infoUsingGET_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingPOST_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingPUT_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 11:34:36 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 11:34:36 -Generating unique operation named: listUsingGET_10
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_18
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_19
2019-07-31 11:34:36 -Generating unique operation named: saveUsingPOST_9
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPOST_10
2019-07-31 11:34:36 -Generating unique operation named: listUsingGET_11
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_20
2019-07-31 11:34:36 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 11:34:36 -Generating unique operation named: addUsingGET_10
2019-07-31 11:34:36 -Generating unique operation named: editUsingGET_11
2019-07-31 11:34:36 -Generating unique operation named: listUsingGET_12
2019-07-31 11:34:36 -Generating unique operation named: removeUsingPOST_21
2019-07-31 11:34:36 -Generating unique operation named: saveUsingPOST_10
2019-07-31 11:34:36 -Generating unique operation named: treeUsingGET_1
2019-07-31 11:34:36 -Generating unique operation named: treeUsingGET_2
2019-07-31 11:34:36 -Generating unique operation named: updateUsingPOST_11
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_11
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_12
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_13
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_22
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_23
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_12
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_12
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_13
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_14
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_24
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_25
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_11
2019-07-31 11:34:37 -Generating unique operation named: updateUsingGET_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_13
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPUT_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 11:34:37 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_13
2019-07-31 11:34:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_14
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_15
2019-07-31 11:34:37 -Generating unique operation named: printEditUsingGET_1
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_26
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_12
2019-07-31 11:34:37 -Generating unique operation named: updateUsingGET_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_14
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPUT_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 11:34:37 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_14
2019-07-31 11:34:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_15
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_16
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_13
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_14
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_15
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_17
2019-07-31 11:34:37 -Generating unique operation named: listUsingHEAD_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingPOST_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingPUT_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingPATCH_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingDELETE_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 11:34:37 -Generating unique operation named: listUsingTRACE_1
2019-07-31 11:34:37 -Generating unique operation named: countDDUsingGET_1
2019-07-31 11:34:37 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 11:34:37 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_15
2019-07-31 11:34:37 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_16
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_18
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_27
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_15
2019-07-31 11:34:37 -Generating unique operation named: treeUsingGET_3
2019-07-31 11:34:37 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_16
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_16
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_17
2019-07-31 11:34:37 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 11:34:37 -Generating unique operation named: listUsingGET_19
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_28
2019-07-31 11:34:37 -Generating unique operation named: removeUsingPOST_29
2019-07-31 11:34:37 -Generating unique operation named: saveUsingPOST_16
2019-07-31 11:34:37 -Generating unique operation named: updateUsingGET_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPOST_17
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPUT_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 11:34:37 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 11:34:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 11:34:37 -Generating unique operation named: addUsingGET_17
2019-07-31 11:34:37 -Generating unique operation named: editUsingGET_18
2019-07-31 11:34:38 -Generating unique operation named: listUsingGET_20
2019-07-31 11:34:38 -Generating unique operation named: removeUsingPOST_30
2019-07-31 11:34:38 -Generating unique operation named: removeUsingPOST_31
2019-07-31 11:34:38 -Generating unique operation named: saveUsingPOST_17
2019-07-31 11:34:38 -Generating unique operation named: updateUsingGET_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPOST_18
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPUT_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 11:34:38 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 11:34:38 -Generating unique operation named: addUsingGET_18
2019-07-31 11:34:38 -Generating unique operation named: editUsingGET_19
2019-07-31 11:34:38 -Generating unique operation named: listUsingGET_21
2019-07-31 11:34:38 -Generating unique operation named: removeUsingPOST_32
2019-07-31 11:34:38 -Generating unique operation named: removeUsingPOST_33
2019-07-31 11:34:38 -Generating unique operation named: saveUsingPOST_18
2019-07-31 11:34:38 -Generating unique operation named: updateUsingGET_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPOST_19
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPUT_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 11:34:38 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 11:34:38 -Starting Quartz Scheduler now
2019-07-31 11:34:38 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 11:34:38 -Starting...
2019-07-31 11:34:38 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 11:34:38 -Started.
2019-07-31 11:34:38 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 11:34:38 -Using a shared selector for servlet write/read
2019-07-31 11:34:38 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 11:34:38 -Started BootdoApplication in 55.746 seconds (JVM running for 57.501)
2019-07-31 11:34:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 11:34:39 -==> Parameters: 
2019-07-31 11:34:39 -<==      Total: 1
2019-07-31 11:35:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 11:35:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 11:35:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 11:35:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2019-07-31 11:35:51 -Enabling session validation scheduler...
2019-07-31 11:35:51 -请求地址 : http://localhost:8081/login;JSESSIONID=e51f5788-d47d-4afb-9a92-857024dc0cec
2019-07-31 11:35:51 -HTTP METHOD : GET
2019-07-31 11:35:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 11:35:51 -参数 : [{}]
2019-07-31 11:35:51 -耗时 : 4
2019-07-31 11:35:51 -返回值 : login
2019-07-31 11:35:54 -请求地址 : http://localhost:8081/getVerify
2019-07-31 11:35:54 -HTTP METHOD : GET
2019-07-31 11:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 11:35:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d638f5f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@73a47e83]
2019-07-31 11:36:02 -0454
2019-07-31 11:36:02 -耗时 : 8076
2019-07-31 11:36:02 -返回值 : null
2019-07-31 11:36:13 -请求地址 : http://localhost:8081/login
2019-07-31 11:36:13 -HTTP METHOD : POST
2019-07-31 11:36:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 11:36:13 -参数 : [admin, 111111, 0454, org.apache.shiro.web.servlet.ShiroHttpServletRequest@212b92ed]
2019-07-31 11:36:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 11:36:14 -==> Parameters: admin(String)
2019-07-31 11:36:14 -<==      Total: 1
2019-07-31 11:36:14 -耗时 : 236
2019-07-31 11:36:14 -返回值 : {msg=操作成功, code=0}
2019-07-31 11:36:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 11:36:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:36:14 -==> Parameters: 1(Long), admin(String), 登录(String), 236(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 11:36:14.362(Timestamp)
2019-07-31 11:36:14 -<==    Updates: 1
2019-07-31 11:36:14 -请求地址 : http://localhost:8081/index
2019-07-31 11:36:14 -HTTP METHOD : GET
2019-07-31 11:36:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 11:36:14 -参数 : [{}]
2019-07-31 11:36:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 11:36:15 -==> Parameters: 1(Long)
2019-07-31 11:36:15 -<==      Total: 51
2019-07-31 11:36:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 11:36:15 -==> Parameters: 138(Long)
2019-07-31 11:36:15 -<==      Total: 1
2019-07-31 11:36:15 -耗时 : 787
2019-07-31 11:36:15 -返回值 : index_v1
2019-07-31 11:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:36:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 788(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 11:36:15.688(Timestamp)
2019-07-31 11:36:15 -<==    Updates: 1
2019-07-31 11:36:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 11:36:16 -HTTP METHOD : GET
2019-07-31 11:36:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 11:36:16 -参数 : []
2019-07-31 11:36:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 11:36:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 11:36:16 -<==      Total: 0
2019-07-31 11:36:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 11:36:16 -==> Parameters: 1(Long), 0(String)
2019-07-31 11:36:16 -<==      Total: 1
2019-07-31 11:36:16 -耗时 : 335
2019-07-31 11:36:16 -返回值 : com.bootdo.common.utils.PageUtils@75fbdfcc
2019-07-31 11:36:17 -请求地址 : http://localhost:8081/main
2019-07-31 11:36:17 -HTTP METHOD : GET
2019-07-31 11:36:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 11:36:17 -参数 : []
2019-07-31 11:36:17 -耗时 : 0
2019-07-31 11:36:17 -返回值 : main
2019-07-31 11:36:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 11:36:41 -==> Parameters: 1(Long)
2019-07-31 11:36:41 -<==      Total: 95
2019-07-31 11:36:41 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 11:36:41 -HTTP METHOD : GET
2019-07-31 11:36:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 11:36:41 -参数 : []
2019-07-31 11:36:41 -耗时 : 0
2019-07-31 11:36:41 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 11:37:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 11:37:54 -HTTP METHOD : GET
2019-07-31 11:37:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 11:37:54 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 11:37:54 -耗时 : 0
2019-07-31 11:37:54 -返回值 : system/dept/deptTree
2019-07-31 11:37:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 11:37:55 -HTTP METHOD : GET
2019-07-31 11:37:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 11:37:55 -参数 : []
2019-07-31 11:37:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 11:37:55 -==> Parameters: 
2019-07-31 11:37:55 -<==      Total: 3
2019-07-31 11:37:55 -耗时 : 75
2019-07-31 11:37:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 11:37:57 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 11:37:57 -HTTP METHOD : POST
2019-07-31 11:37:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 11:37:57 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2f11d604, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@567fd78d]
2019-07-31 11:38:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE user_id = ? 
2019-07-31 11:38:02 -==> Parameters: 1-0001(String)
2019-07-31 11:38:02 -<==      Total: 2
2019-07-31 11:38:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 11:38:02 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$ce7f7bc9.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-31 11:38:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-07-31 11:38:02.828(Timestamp)
2019-07-31 11:38:02 -<==    Updates: 1
2019-07-31 11:39:42 -Starting BootdoApplication on PC-201905091110 with PID 45608 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 11:39:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 11:39:43 -The following profiles are active: dev
2019-07-31 11:39:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Wed Jul 31 11:39:43 CST 2019]; root of context hierarchy
2019-07-31 11:39:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 11:39:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48edd774] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:39:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3b47061b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 11:40:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 11:40:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 11:40:04 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 11:40:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 11:40:05 -Starting service [Tomcat]
2019-07-31 11:40:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 11:40:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 11:40:05 -Initializing Spring embedded WebApplicationContext
2019-07-31 11:40:05 -Root WebApplicationContext: initialization completed in 22636 ms
2019-07-31 11:40:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 11:40:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 11:40:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 11:40:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 11:40:07 -Filter xssFilter was not registered (disabled)
2019-07-31 11:40:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 11:40:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 11:40:07 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 11:40:07 -Servlet dispatcherServlet mapped to [/]
2019-07-31 11:40:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Wed Jul 31 11:39:43 CST 2019]; root of context hierarchy
2019-07-31 11:40:14 -Using default implementation for ThreadExecutor
2019-07-31 11:40:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 11:40:14 -Quartz Scheduler v.2.3.0 created.
2019-07-31 11:40:14 -RAMJobStore initialized.
2019-07-31 11:40:14 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 11:40:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 11:40:14 -Quartz scheduler version: 2.3.0
2019-07-31 11:40:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@378c48c1
2019-07-31 11:40:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 11:40:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 11:40:21 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 11:40:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 11:40:21 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 11:40:21 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 11:40:21 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 11:40:21 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 11:40:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 11:40:21 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 11:40:21 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 11:40:21 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 11:40:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 11:40:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 11:40:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 11:40:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 11:40:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:40:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 11:40:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 11:40:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 11:40:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 11:40:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 11:40:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 11:40:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 11:40:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 11:40:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 11:40:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 11:40:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 11:40:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 11:40:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 11:40:21 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 11:40:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 11:40:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 11:40:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:40:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 11:40:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 11:40:21 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 11:40:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 11:40:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 11:40:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 11:40:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 11:40:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 11:40:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 11:40:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 11:40:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 11:40:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 11:40:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 11:40:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 11:40:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 11:40:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 11:40:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 11:40:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 11:40:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 11:40:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 11:40:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 11:40:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 11:40:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 11:40:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 11:40:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 11:40:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 11:40:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 11:40:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 11:40:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 11:40:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 11:40:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:40:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 11:40:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 11:40:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 11:40:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 11:40:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 11:40:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 11:40:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 11:40:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 11:40:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 11:40:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 11:40:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 11:40:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 11:40:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 11:40:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 11:40:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 11:40:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 11:40:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 11:40:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 11:40:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 11:40:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 11:40:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:40:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Wed Jul 31 11:39:43 CST 2019]; root of context hierarchy
2019-07-31 11:40:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:40:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 11:40:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 11:40:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 11:40:30 -Registering beans for JMX exposure on startup
2019-07-31 11:40:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 11:40:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 11:40:30 -Starting beans in phase 2147483647
2019-07-31 11:40:30 -Context refreshed
2019-07-31 11:40:30 -Found 1 custom documentation plugin(s)
2019-07-31 11:40:30 -Scanning for api listing references
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_1
2019-07-31 11:40:32 -Generating unique operation named: addUsingGET_1
2019-07-31 11:40:32 -Generating unique operation named: editUsingGET_1
2019-07-31 11:40:32 -Generating unique operation named: listUsingGET_1
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_2
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_3
2019-07-31 11:40:32 -Generating unique operation named: saveUsingPOST_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingGET_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPOST_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPUT_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 11:40:32 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 11:40:32 -Generating unique operation named: addUsingGET_2
2019-07-31 11:40:32 -Generating unique operation named: editUsingGET_2
2019-07-31 11:40:32 -Generating unique operation named: listUsingGET_2
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_4
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_5
2019-07-31 11:40:32 -Generating unique operation named: saveUsingPOST_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPOST_2
2019-07-31 11:40:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 11:40:32 -Generating unique operation named: addUsingGET_3
2019-07-31 11:40:32 -Generating unique operation named: editUsingGET_3
2019-07-31 11:40:32 -Generating unique operation named: listUsingGET_3
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_6
2019-07-31 11:40:32 -Generating unique operation named: removeUsingPOST_7
2019-07-31 11:40:32 -Generating unique operation named: saveUsingPOST_3
2019-07-31 11:40:32 -Generating unique operation named: updateUsingGET_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPOST_3
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPUT_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 11:40:32 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 11:40:32 -Generating unique operation named: addUsingGET_4
2019-07-31 11:40:32 -Generating unique operation named: editUsingGET_4
2019-07-31 11:40:32 -Generating unique operation named: listUsingGET_4
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_8
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_9
2019-07-31 11:40:33 -Generating unique operation named: saveUsingPOST_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingGET_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPOST_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPUT_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 11:40:33 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 11:40:33 -Generating unique operation named: ElecUsingGET_1
2019-07-31 11:40:33 -Generating unique operation named: addUsingGET_5
2019-07-31 11:40:33 -Generating unique operation named: editUsingGET_5
2019-07-31 11:40:33 -Generating unique operation named: listUsingGET_5
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_10
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_11
2019-07-31 11:40:33 -Generating unique operation named: saveUsingPOST_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingGET_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPOST_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPUT_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 11:40:33 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 11:40:33 -Generating unique operation named: editUsingGET_6
2019-07-31 11:40:33 -Generating unique operation named: listUsingGET_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPOST_6
2019-07-31 11:40:33 -Generating unique operation named: addUsingGET_6
2019-07-31 11:40:33 -Generating unique operation named: editUsingGET_7
2019-07-31 11:40:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 11:40:33 -Generating unique operation named: listUsingGET_7
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_12
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_13
2019-07-31 11:40:33 -Generating unique operation named: saveUsingPOST_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingGET_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPOST_7
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPUT_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 11:40:33 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 11:40:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 11:40:33 -Generating unique operation named: addUsingGET_7
2019-07-31 11:40:33 -Generating unique operation named: editUsingGET_8
2019-07-31 11:40:33 -Generating unique operation named: listUsingGET_8
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_14
2019-07-31 11:40:33 -Generating unique operation named: removeUsingPOST_15
2019-07-31 11:40:33 -Generating unique operation named: saveUsingPOST_7
2019-07-31 11:40:33 -Generating unique operation named: updateUsingGET_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPOST_8
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPUT_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 11:40:33 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 11:40:33 -Generating unique operation named: addUsingGET_8
2019-07-31 11:40:33 -Generating unique operation named: editUsingGET_9
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_9
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_16
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_17
2019-07-31 11:40:34 -Generating unique operation named: saveUsingPOST_8
2019-07-31 11:40:34 -Generating unique operation named: updateUsingGET_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPOST_9
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPUT_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 11:40:34 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 11:40:34 -Generating unique operation named: addUsingGET_9
2019-07-31 11:40:34 -Generating unique operation named: editUsingGET_10
2019-07-31 11:40:34 -Generating unique operation named: infoUsingGET_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingPOST_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingPUT_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 11:40:34 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_10
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_18
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_19
2019-07-31 11:40:34 -Generating unique operation named: saveUsingPOST_9
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPOST_10
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_11
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_20
2019-07-31 11:40:34 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 11:40:34 -Generating unique operation named: addUsingGET_10
2019-07-31 11:40:34 -Generating unique operation named: editUsingGET_11
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_12
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_21
2019-07-31 11:40:34 -Generating unique operation named: saveUsingPOST_10
2019-07-31 11:40:34 -Generating unique operation named: treeUsingGET_1
2019-07-31 11:40:34 -Generating unique operation named: treeUsingGET_2
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPOST_11
2019-07-31 11:40:34 -Generating unique operation named: addUsingGET_11
2019-07-31 11:40:34 -Generating unique operation named: editUsingGET_12
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_13
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_22
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_23
2019-07-31 11:40:34 -Generating unique operation named: updateUsingPOST_12
2019-07-31 11:40:34 -Generating unique operation named: addUsingGET_12
2019-07-31 11:40:34 -Generating unique operation named: editUsingGET_13
2019-07-31 11:40:34 -Generating unique operation named: listUsingGET_14
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_24
2019-07-31 11:40:34 -Generating unique operation named: removeUsingPOST_25
2019-07-31 11:40:34 -Generating unique operation named: saveUsingPOST_11
2019-07-31 11:40:35 -Generating unique operation named: updateUsingGET_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPOST_13
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPUT_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 11:40:35 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 11:40:35 -Generating unique operation named: addUsingGET_13
2019-07-31 11:40:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 11:40:35 -Generating unique operation named: editUsingGET_14
2019-07-31 11:40:35 -Generating unique operation named: listUsingGET_15
2019-07-31 11:40:35 -Generating unique operation named: printEditUsingGET_1
2019-07-31 11:40:35 -Generating unique operation named: removeUsingPOST_26
2019-07-31 11:40:35 -Generating unique operation named: saveUsingPOST_12
2019-07-31 11:40:35 -Generating unique operation named: updateUsingGET_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPOST_14
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPUT_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 11:40:35 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 11:40:35 -Generating unique operation named: addUsingGET_14
2019-07-31 11:40:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 11:40:35 -Generating unique operation named: editUsingGET_15
2019-07-31 11:40:35 -Generating unique operation named: listUsingGET_16
2019-07-31 11:40:35 -Generating unique operation named: saveUsingPOST_13
2019-07-31 11:40:35 -Generating unique operation named: saveUsingPOST_14
2019-07-31 11:40:35 -Generating unique operation named: updateUsingPOST_15
2019-07-31 11:40:35 -Generating unique operation named: listUsingGET_17
2019-07-31 11:40:35 -Generating unique operation named: listUsingHEAD_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingPOST_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingPUT_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingPATCH_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingDELETE_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 11:40:35 -Generating unique operation named: listUsingTRACE_1
2019-07-31 11:40:35 -Generating unique operation named: countDDUsingGET_1
2019-07-31 11:40:35 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 11:40:35 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 11:40:35 -Generating unique operation named: addUsingGET_15
2019-07-31 11:40:35 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 11:40:35 -Generating unique operation named: editUsingGET_16
2019-07-31 11:40:35 -Generating unique operation named: listUsingGET_18
2019-07-31 11:40:35 -Generating unique operation named: removeUsingPOST_27
2019-07-31 11:40:36 -Generating unique operation named: saveUsingPOST_15
2019-07-31 11:40:36 -Generating unique operation named: treeUsingGET_3
2019-07-31 11:40:36 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPOST_16
2019-07-31 11:40:36 -Generating unique operation named: addUsingGET_16
2019-07-31 11:40:36 -Generating unique operation named: editUsingGET_17
2019-07-31 11:40:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 11:40:36 -Generating unique operation named: listUsingGET_19
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_28
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_29
2019-07-31 11:40:36 -Generating unique operation named: saveUsingPOST_16
2019-07-31 11:40:36 -Generating unique operation named: updateUsingGET_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPOST_17
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPUT_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 11:40:36 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 11:40:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 11:40:36 -Generating unique operation named: addUsingGET_17
2019-07-31 11:40:36 -Generating unique operation named: editUsingGET_18
2019-07-31 11:40:36 -Generating unique operation named: listUsingGET_20
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_30
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_31
2019-07-31 11:40:36 -Generating unique operation named: saveUsingPOST_17
2019-07-31 11:40:36 -Generating unique operation named: updateUsingGET_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPOST_18
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPUT_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 11:40:36 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 11:40:36 -Generating unique operation named: addUsingGET_18
2019-07-31 11:40:36 -Generating unique operation named: editUsingGET_19
2019-07-31 11:40:36 -Generating unique operation named: listUsingGET_21
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_32
2019-07-31 11:40:36 -Generating unique operation named: removeUsingPOST_33
2019-07-31 11:40:36 -Generating unique operation named: saveUsingPOST_18
2019-07-31 11:40:36 -Generating unique operation named: updateUsingGET_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPOST_19
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPUT_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 11:40:36 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 11:40:36 -Starting Quartz Scheduler now
2019-07-31 11:40:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 11:40:36 -Starting...
2019-07-31 11:40:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 11:40:36 -Started.
2019-07-31 11:40:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 11:40:37 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-07-31 11:40:37 -Pausing ProtocolHandler ["http-nio-8081"]
2019-07-31 11:40:37 -Stopping service [Tomcat]
2019-07-31 11:40:37 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-07-31 11:40:37 -Stopping ProtocolHandler ["http-nio-8081"]
2019-07-31 11:40:37 -Destroying ProtocolHandler ["http-nio-8081"]
2019-07-31 11:40:37 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-31 11:40:37 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-07-31 11:40:37 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Wed Jul 31 11:39:43 CST 2019]; root of context hierarchy
2019-07-31 11:40:37 -Stopping beans in phase 2147483647
2019-07-31 11:40:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-31 11:40:37 -Stopping...
2019-07-31 11:40:37 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 11:40:37 -Stopped.
2019-07-31 11:40:37 -Unregistering JMX-exposed beans on shutdown
2019-07-31 11:40:37 -Unregistering JMX-exposed beans
2019-07-31 11:40:37 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-07-31 11:40:37 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-07-31 11:40:37 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-07-31 11:40:37 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-07-31 11:40:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-07-31 11:40:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-31 11:40:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-07-31 11:40:37 -Shutting down Quartz Scheduler
2019-07-31 12:20:55 -Starting BootdoApplication on PC-201905091110 with PID 68972 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 12:20:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 12:20:55 -The following profiles are active: dev
2019-07-31 12:20:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b04476e: startup date [Wed Jul 31 12:20:56 CST 2019]; root of context hierarchy
2019-07-31 12:21:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 12:21:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c3e81d5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b6414c06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 12:21:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 12:21:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:21:17 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 12:21:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 12:21:17 -Starting service [Tomcat]
2019-07-31 12:21:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 12:21:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 12:21:17 -Initializing Spring embedded WebApplicationContext
2019-07-31 12:21:17 -Root WebApplicationContext: initialization completed in 21638 ms
2019-07-31 12:21:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 12:21:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 12:21:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 12:21:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 12:21:19 -Filter xssFilter was not registered (disabled)
2019-07-31 12:21:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 12:21:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 12:21:19 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 12:21:19 -Servlet dispatcherServlet mapped to [/]
2019-07-31 12:21:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b04476e: startup date [Wed Jul 31 12:20:56 CST 2019]; root of context hierarchy
2019-07-31 12:21:27 -Using default implementation for ThreadExecutor
2019-07-31 12:21:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 12:21:27 -Quartz Scheduler v.2.3.0 created.
2019-07-31 12:21:27 -RAMJobStore initialized.
2019-07-31 12:21:27 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 12:21:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 12:21:27 -Quartz scheduler version: 2.3.0
2019-07-31 12:21:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@76d828ff
2019-07-31 12:21:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 12:21:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 12:21:37 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 12:21:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 12:21:37 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 12:21:37 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 12:21:37 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 12:21:37 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 12:21:37 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 12:21:37 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 12:21:37 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 12:21:37 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 12:21:37 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 12:21:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 12:21:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 12:21:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 12:21:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 12:21:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 12:21:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 12:21:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 12:21:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 12:21:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 12:21:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:21:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:21:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 12:21:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 12:21:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 12:21:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 12:21:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 12:21:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 12:21:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 12:21:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 12:21:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 12:21:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 12:21:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 12:21:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 12:21:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 12:21:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 12:21:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 12:21:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 12:21:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 12:21:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 12:21:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 12:21:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 12:21:38 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 12:21:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 12:21:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 12:21:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:21:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:21:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 12:21:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 12:21:38 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 12:21:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 12:21:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 12:21:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 12:21:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 12:21:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 12:21:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 12:21:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 12:21:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 12:21:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 12:21:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 12:21:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 12:21:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 12:21:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 12:21:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 12:21:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 12:21:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 12:21:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 12:21:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 12:21:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 12:21:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 12:21:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 12:21:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 12:21:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 12:21:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 12:21:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 12:21:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 12:21:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 12:21:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 12:21:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:21:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 12:21:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:21:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 12:21:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 12:21:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 12:21:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 12:21:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 12:21:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:21:38 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:21:38 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 12:21:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 12:21:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:21:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:21:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 12:21:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 12:21:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 12:21:44 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 12:21:44 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 12:21:44 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 12:21:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:21:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b04476e: startup date [Wed Jul 31 12:20:56 CST 2019]; root of context hierarchy
2019-07-31 12:21:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:21:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:21:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 12:21:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 12:21:53 -Registering beans for JMX exposure on startup
2019-07-31 12:21:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 12:21:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 12:21:53 -Starting beans in phase 2147483647
2019-07-31 12:21:53 -Context refreshed
2019-07-31 12:21:53 -Found 1 custom documentation plugin(s)
2019-07-31 12:21:54 -Scanning for api listing references
2019-07-31 12:21:54 -Generating unique operation named: removeUsingPOST_1
2019-07-31 12:21:55 -Generating unique operation named: addUsingGET_1
2019-07-31 12:21:55 -Generating unique operation named: editUsingGET_1
2019-07-31 12:21:55 -Generating unique operation named: listUsingGET_1
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_2
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_3
2019-07-31 12:21:55 -Generating unique operation named: saveUsingPOST_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingGET_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPOST_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPUT_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 12:21:55 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 12:21:55 -Generating unique operation named: addUsingGET_2
2019-07-31 12:21:55 -Generating unique operation named: editUsingGET_2
2019-07-31 12:21:55 -Generating unique operation named: listUsingGET_2
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_4
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_5
2019-07-31 12:21:55 -Generating unique operation named: saveUsingPOST_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPOST_2
2019-07-31 12:21:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 12:21:55 -Generating unique operation named: addUsingGET_3
2019-07-31 12:21:55 -Generating unique operation named: editUsingGET_3
2019-07-31 12:21:55 -Generating unique operation named: listUsingGET_3
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_6
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_7
2019-07-31 12:21:55 -Generating unique operation named: saveUsingPOST_3
2019-07-31 12:21:55 -Generating unique operation named: updateUsingGET_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPOST_3
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPUT_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 12:21:55 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 12:21:55 -Generating unique operation named: addUsingGET_4
2019-07-31 12:21:55 -Generating unique operation named: editUsingGET_4
2019-07-31 12:21:55 -Generating unique operation named: listUsingGET_4
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_8
2019-07-31 12:21:55 -Generating unique operation named: removeUsingPOST_9
2019-07-31 12:21:56 -Generating unique operation named: saveUsingPOST_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingGET_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPOST_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPUT_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 12:21:56 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 12:21:56 -Generating unique operation named: ElecUsingGET_1
2019-07-31 12:21:56 -Generating unique operation named: addUsingGET_5
2019-07-31 12:21:56 -Generating unique operation named: editUsingGET_5
2019-07-31 12:21:56 -Generating unique operation named: listUsingGET_5
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_10
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_11
2019-07-31 12:21:56 -Generating unique operation named: saveUsingPOST_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingGET_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPOST_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPUT_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 12:21:56 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 12:21:56 -Generating unique operation named: editUsingGET_6
2019-07-31 12:21:56 -Generating unique operation named: listUsingGET_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPOST_6
2019-07-31 12:21:56 -Generating unique operation named: addUsingGET_6
2019-07-31 12:21:56 -Generating unique operation named: editUsingGET_7
2019-07-31 12:21:56 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 12:21:56 -Generating unique operation named: listUsingGET_7
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_12
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_13
2019-07-31 12:21:56 -Generating unique operation named: saveUsingPOST_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingGET_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPOST_7
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPUT_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 12:21:56 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 12:21:56 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 12:21:56 -Generating unique operation named: addUsingGET_7
2019-07-31 12:21:56 -Generating unique operation named: editUsingGET_8
2019-07-31 12:21:56 -Generating unique operation named: listUsingGET_8
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_14
2019-07-31 12:21:56 -Generating unique operation named: removeUsingPOST_15
2019-07-31 12:21:56 -Generating unique operation named: saveUsingPOST_7
2019-07-31 12:21:56 -Generating unique operation named: updateUsingGET_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPOST_8
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPUT_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 12:21:56 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 12:21:57 -Generating unique operation named: addUsingGET_8
2019-07-31 12:21:57 -Generating unique operation named: editUsingGET_9
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_9
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_16
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_17
2019-07-31 12:21:57 -Generating unique operation named: saveUsingPOST_8
2019-07-31 12:21:57 -Generating unique operation named: updateUsingGET_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPOST_9
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPUT_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 12:21:57 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 12:21:57 -Generating unique operation named: addUsingGET_9
2019-07-31 12:21:57 -Generating unique operation named: editUsingGET_10
2019-07-31 12:21:57 -Generating unique operation named: infoUsingGET_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingPOST_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingPUT_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 12:21:57 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_10
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_18
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_19
2019-07-31 12:21:57 -Generating unique operation named: saveUsingPOST_9
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPOST_10
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_11
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_20
2019-07-31 12:21:57 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 12:21:57 -Generating unique operation named: addUsingGET_10
2019-07-31 12:21:57 -Generating unique operation named: editUsingGET_11
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_12
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_21
2019-07-31 12:21:57 -Generating unique operation named: saveUsingPOST_10
2019-07-31 12:21:57 -Generating unique operation named: treeUsingGET_1
2019-07-31 12:21:57 -Generating unique operation named: treeUsingGET_2
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPOST_11
2019-07-31 12:21:57 -Generating unique operation named: addUsingGET_11
2019-07-31 12:21:57 -Generating unique operation named: editUsingGET_12
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_13
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_22
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_23
2019-07-31 12:21:57 -Generating unique operation named: updateUsingPOST_12
2019-07-31 12:21:57 -Generating unique operation named: addUsingGET_12
2019-07-31 12:21:57 -Generating unique operation named: editUsingGET_13
2019-07-31 12:21:57 -Generating unique operation named: listUsingGET_14
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_24
2019-07-31 12:21:57 -Generating unique operation named: removeUsingPOST_25
2019-07-31 12:21:57 -Generating unique operation named: saveUsingPOST_11
2019-07-31 12:21:57 -Generating unique operation named: updateUsingGET_8
2019-07-31 12:21:57 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPOST_13
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPUT_8
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 12:21:58 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 12:21:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 12:21:58 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 12:21:58 -Generating unique operation named: addUsingGET_13
2019-07-31 12:21:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 12:21:58 -Generating unique operation named: editUsingGET_14
2019-07-31 12:21:58 -Generating unique operation named: listUsingGET_15
2019-07-31 12:21:58 -Generating unique operation named: printEditUsingGET_1
2019-07-31 12:21:58 -Generating unique operation named: removeUsingPOST_26
2019-07-31 12:21:58 -Generating unique operation named: saveUsingPOST_12
2019-07-31 12:21:58 -Generating unique operation named: updateUsingGET_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPOST_14
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPUT_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 12:21:58 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 12:21:58 -Generating unique operation named: addUsingGET_14
2019-07-31 12:21:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 12:21:58 -Generating unique operation named: editUsingGET_15
2019-07-31 12:21:58 -Generating unique operation named: listUsingGET_16
2019-07-31 12:21:58 -Generating unique operation named: saveUsingPOST_13
2019-07-31 12:21:58 -Generating unique operation named: saveUsingPOST_14
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPOST_15
2019-07-31 12:21:58 -Generating unique operation named: listUsingGET_17
2019-07-31 12:21:58 -Generating unique operation named: listUsingHEAD_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingPOST_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingPUT_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingPATCH_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingDELETE_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 12:21:58 -Generating unique operation named: listUsingTRACE_1
2019-07-31 12:21:58 -Generating unique operation named: countDDUsingGET_1
2019-07-31 12:21:58 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 12:21:58 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 12:21:58 -Generating unique operation named: addUsingGET_15
2019-07-31 12:21:58 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 12:21:58 -Generating unique operation named: editUsingGET_16
2019-07-31 12:21:58 -Generating unique operation named: listUsingGET_18
2019-07-31 12:21:58 -Generating unique operation named: removeUsingPOST_27
2019-07-31 12:21:58 -Generating unique operation named: saveUsingPOST_15
2019-07-31 12:21:58 -Generating unique operation named: treeUsingGET_3
2019-07-31 12:21:58 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPOST_16
2019-07-31 12:21:58 -Generating unique operation named: addUsingGET_16
2019-07-31 12:21:58 -Generating unique operation named: editUsingGET_17
2019-07-31 12:21:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 12:21:58 -Generating unique operation named: listUsingGET_19
2019-07-31 12:21:58 -Generating unique operation named: removeUsingPOST_28
2019-07-31 12:21:58 -Generating unique operation named: removeUsingPOST_29
2019-07-31 12:21:58 -Generating unique operation named: saveUsingPOST_16
2019-07-31 12:21:58 -Generating unique operation named: updateUsingGET_10
2019-07-31 12:21:58 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 12:21:58 -Generating unique operation named: updateUsingPOST_17
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPUT_10
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 12:21:59 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 12:21:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 12:21:59 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 12:21:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 12:21:59 -Generating unique operation named: addUsingGET_17
2019-07-31 12:21:59 -Generating unique operation named: editUsingGET_18
2019-07-31 12:21:59 -Generating unique operation named: listUsingGET_20
2019-07-31 12:21:59 -Generating unique operation named: removeUsingPOST_30
2019-07-31 12:21:59 -Generating unique operation named: removeUsingPOST_31
2019-07-31 12:21:59 -Generating unique operation named: saveUsingPOST_17
2019-07-31 12:21:59 -Generating unique operation named: updateUsingGET_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPOST_18
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPUT_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 12:21:59 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 12:21:59 -Generating unique operation named: addUsingGET_18
2019-07-31 12:21:59 -Generating unique operation named: editUsingGET_19
2019-07-31 12:21:59 -Generating unique operation named: listUsingGET_21
2019-07-31 12:21:59 -Generating unique operation named: removeUsingPOST_32
2019-07-31 12:21:59 -Generating unique operation named: removeUsingPOST_33
2019-07-31 12:21:59 -Generating unique operation named: saveUsingPOST_18
2019-07-31 12:21:59 -Generating unique operation named: updateUsingGET_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPOST_19
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPUT_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 12:21:59 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 12:21:59 -Starting Quartz Scheduler now
2019-07-31 12:21:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 12:21:59 -Starting...
2019-07-31 12:21:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 12:21:59 -Started.
2019-07-31 12:21:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 12:21:59 -Using a shared selector for servlet write/read
2019-07-31 12:21:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 12:21:59 -Started BootdoApplication in 70.637 seconds (JVM running for 73.394)
2019-07-31 12:21:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 12:22:00 -==> Parameters: 
2019-07-31 12:22:00 -<==      Total: 1
2019-07-31 12:22:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 12:22:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 12:22:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-07-31 12:22:41 -Enabling session validation scheduler...
2019-07-31 12:22:41 -请求地址 : http://localhost:8081/login;JSESSIONID=5308245c-7973-42ed-9d59-6bd4da38c0e7
2019-07-31 12:22:41 -HTTP METHOD : GET
2019-07-31 12:22:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 12:22:41 -参数 : [{}]
2019-07-31 12:22:41 -耗时 : 5
2019-07-31 12:22:41 -返回值 : login
2019-07-31 12:22:44 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 12:22:47 -请求地址 : http://localhost:8081/getVerify
2019-07-31 12:22:47 -HTTP METHOD : GET
2019-07-31 12:22:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 12:22:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dd49bb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@81aa710]
2019-07-31 12:22:52 -3257
2019-07-31 12:22:53 -耗时 : 5131
2019-07-31 12:22:53 -返回值 : null
2019-07-31 12:23:44 -请求地址 : http://localhost:8081/login
2019-07-31 12:23:44 -HTTP METHOD : POST
2019-07-31 12:23:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 12:23:44 -参数 : [admin, 111111, 3257, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59f3ba6e]
2019-07-31 12:23:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 12:23:44 -==> Parameters: admin(String)
2019-07-31 12:23:44 -<==      Total: 1
2019-07-31 12:23:44 -耗时 : 271
2019-07-31 12:23:44 -返回值 : {msg=操作成功, code=0}
2019-07-31 12:23:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 12:23:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:23:45 -==> Parameters: 1(Long), admin(String), 登录(String), 272(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 12:23:44.998(Timestamp)
2019-07-31 12:23:45 -<==    Updates: 1
2019-07-31 12:23:45 -请求地址 : http://localhost:8081/index
2019-07-31 12:23:45 -HTTP METHOD : GET
2019-07-31 12:23:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 12:23:45 -参数 : [{}]
2019-07-31 12:23:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 12:23:45 -==> Parameters: 1(Long)
2019-07-31 12:23:45 -<==      Total: 51
2019-07-31 12:23:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 12:23:45 -==> Parameters: 138(Long)
2019-07-31 12:23:45 -<==      Total: 1
2019-07-31 12:23:45 -耗时 : 410
2019-07-31 12:23:45 -返回值 : index_v1
2019-07-31 12:23:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:23:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 410(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 12:23:46.018(Timestamp)
2019-07-31 12:23:46 -<==    Updates: 1
2019-07-31 12:23:46 -请求地址 : http://localhost:8081/main
2019-07-31 12:23:46 -HTTP METHOD : GET
2019-07-31 12:23:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:23:46 -参数 : []
2019-07-31 12:23:46 -耗时 : 1
2019-07-31 12:23:46 -返回值 : main
2019-07-31 12:23:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 12:23:50 -HTTP METHOD : GET
2019-07-31 12:23:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 12:23:50 -参数 : []
2019-07-31 12:23:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 12:23:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 12:23:50 -<==      Total: 0
2019-07-31 12:23:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 12:23:50 -==> Parameters: 1(Long), 0(String)
2019-07-31 12:23:50 -<==      Total: 1
2019-07-31 12:23:50 -耗时 : 74
2019-07-31 12:23:50 -返回值 : com.bootdo.common.utils.PageUtils@49c7dfb0
2019-07-31 12:23:50 -请求地址 : http://localhost:8081/main
2019-07-31 12:23:50 -HTTP METHOD : GET
2019-07-31 12:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:23:50 -参数 : []
2019-07-31 12:23:50 -耗时 : 0
2019-07-31 12:23:50 -返回值 : main
2019-07-31 12:24:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 12:24:04 -==> Parameters: 1(Long)
2019-07-31 12:24:04 -<==      Total: 95
2019-07-31 12:24:04 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 12:24:04 -HTTP METHOD : GET
2019-07-31 12:24:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 12:24:04 -参数 : []
2019-07-31 12:24:04 -耗时 : 1
2019-07-31 12:24:04 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 12:24:15 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 12:24:15 -HTTP METHOD : POST
2019-07-31 12:24:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 12:24:15 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@f4f68ae, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@266618ea]
2019-07-31 12:24:15 -耗时 : 50
2019-07-31 12:24:15 -返回值 : {result=notExcel}
2019-07-31 12:24:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 12:24:17 -HTTP METHOD : GET
2019-07-31 12:24:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 12:24:17 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 12:24:17 -耗时 : 1
2019-07-31 12:24:17 -返回值 : system/dept/deptTree
2019-07-31 12:24:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 12:24:17 -HTTP METHOD : GET
2019-07-31 12:24:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 12:24:17 -参数 : []
2019-07-31 12:24:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 12:24:17 -==> Parameters: 
2019-07-31 12:24:17 -<==      Total: 3
2019-07-31 12:24:17 -耗时 : 61
2019-07-31 12:24:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 12:24:30 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 12:24:30 -HTTP METHOD : POST
2019-07-31 12:24:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 12:24:30 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3710e2e2, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@613d6d66]
2019-07-31 12:24:35 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE user_id = ? 
2019-07-31 12:24:35 -==> Parameters: 1-0001(String)
2019-07-31 12:24:35 -<==      Total: 2
2019-07-31 12:24:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:24:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-07-31 12:24:35.978(Timestamp)
2019-07-31 12:24:35 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:94)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$546e88db.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-07-31 12:24:36 -<==    Updates: 1
2019-07-31 12:26:03 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 12:26:03 -HTTP METHOD : GET
2019-07-31 12:26:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 12:26:03 -参数 : []
2019-07-31 12:26:03 -耗时 : 0
2019-07-31 12:26:03 -返回值 : elec/elec/elec
2019-07-31 12:26:03 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 12:26:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 12:26:03 -HTTP METHOD : GET
2019-07-31 12:26:03 -HTTP METHOD : GET
2019-07-31 12:26:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 12:26:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 12:26:03 -参数 : [elecType]
2019-07-31 12:26:03 -参数 : [userType]
2019-07-31 12:26:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 12:26:03 -==> Parameters: elecType(String)
2019-07-31 12:26:04 -<==      Total: 11
2019-07-31 12:26:04 -耗时 : 200
2019-07-31 12:26:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 12:26:04 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 12:26:04 -==> Parameters: userType(String)
2019-07-31 12:26:04 -<==      Total: 4
2019-07-31 12:26:04 -耗时 : 205
2019-07-31 12:26:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 12:26:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:26:04 -HTTP METHOD : GET
2019-07-31 12:26:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:26:04 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@c79a26c]
2019-07-31 12:26:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 12:26:04 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 12:26:04 -<==      Total: 10
2019-07-31 12:26:04 -==>  Preparing: select count(*) from elec 
2019-07-31 12:26:04 -==> Parameters: 
2019-07-31 12:26:04 -<==      Total: 1
2019-07-31 12:26:04 -耗时 : 325
2019-07-31 12:26:04 -返回值 : com.bootdo.common.utils.PageUtils@66668e0d
2019-07-31 12:26:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 12:26:07 -HTTP METHOD : GET
2019-07-31 12:26:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 12:26:07 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 12:26:07 -耗时 : 0
2019-07-31 12:26:07 -返回值 : system/dept/deptTree
2019-07-31 12:26:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 12:26:08 -HTTP METHOD : GET
2019-07-31 12:26:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 12:26:08 -参数 : []
2019-07-31 12:26:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 12:26:08 -==> Parameters: 
2019-07-31 12:26:08 -<==      Total: 3
2019-07-31 12:26:08 -耗时 : 4
2019-07-31 12:26:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 12:26:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:26:11 -HTTP METHOD : GET
2019-07-31 12:26:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:26:11 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=1-0001, createTime=2019-07, queryType=1}, com.bootdo.elec.domain.ElecDO@445566fd]
2019-07-31 12:26:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-07-31 12:26:11 -==> Parameters: 2019-07(String), 2(String), 1-0001(String), 0(Integer), 10(Integer)
2019-07-31 12:26:11 -<==      Total: 0
2019-07-31 12:26:11 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:26:11 -==> Parameters: 2019-07(String), 2(String), 1-0001(String)
2019-07-31 12:26:11 -<==      Total: 1
2019-07-31 12:26:11 -耗时 : 53
2019-07-31 12:26:11 -返回值 : com.bootdo.common.utils.PageUtils@270614cf
2019-07-31 12:26:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:26:17 -HTTP METHOD : GET
2019-07-31 12:26:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:26:17 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=1-0001, createTime=2019-06, queryType=1}, com.bootdo.elec.domain.ElecDO@2a8df428]
2019-07-31 12:26:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-07-31 12:26:17 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 0(Integer), 10(Integer)
2019-07-31 12:26:17 -<==      Total: 1
2019-07-31 12:26:17 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:26:17 -==> Parameters: 2019-06(String), 2(String), 1-0001(String)
2019-07-31 12:26:17 -<==      Total: 1
2019-07-31 12:26:17 -耗时 : 43
2019-07-31 12:26:17 -返回值 : com.bootdo.common.utils.PageUtils@3cd4dfe7
2019-07-31 12:26:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:26:40 -HTTP METHOD : GET
2019-07-31 12:26:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:26:40 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=1-0001, createTime=2019-05, queryType=1}, com.bootdo.elec.domain.ElecDO@35e319d0]
2019-07-31 12:26:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-07-31 12:26:40 -==> Parameters: 2019-05(String), 2(String), 1-0001(String), 0(Integer), 10(Integer)
2019-07-31 12:26:40 -<==      Total: 1
2019-07-31 12:26:40 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:26:40 -==> Parameters: 2019-05(String), 2(String), 1-0001(String)
2019-07-31 12:26:40 -<==      Total: 1
2019-07-31 12:26:40 -耗时 : 39
2019-07-31 12:26:40 -返回值 : com.bootdo.common.utils.PageUtils@474d7f94
2019-07-31 12:26:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:26:49 -HTTP METHOD : GET
2019-07-31 12:26:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:26:49 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=1-0001, createTime=2019-06, queryType=1}, com.bootdo.elec.domain.ElecDO@dbc2dd5]
2019-07-31 12:26:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `create_time` = ? and user_org = ? and user_id = ? order by id asc limit ?, ? 
2019-07-31 12:26:49 -==> Parameters: 2019-06(String), 2(String), 1-0001(String), 0(Integer), 10(Integer)
2019-07-31 12:26:50 -<==      Total: 1
2019-07-31 12:26:50 -==>  Preparing: select count(*) from elec WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:26:50 -==> Parameters: 2019-06(String), 2(String), 1-0001(String)
2019-07-31 12:26:50 -<==      Total: 1
2019-07-31 12:26:50 -耗时 : 38
2019-07-31 12:26:50 -返回值 : com.bootdo.common.utils.PageUtils@6d9a9f8e
2019-07-31 12:34:53 -Starting BootdoApplication on PC-201905091110 with PID 103344 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 12:34:53 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 12:34:53 -The following profiles are active: dev
2019-07-31 12:34:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51bb7: startup date [Wed Jul 31 12:34:54 CST 2019]; root of context hierarchy
2019-07-31 12:35:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 12:35:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a820b035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9a79dedc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 12:35:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 12:35:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:35:23 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 12:35:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 12:35:23 -Starting service [Tomcat]
2019-07-31 12:35:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 12:35:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 12:35:24 -Initializing Spring embedded WebApplicationContext
2019-07-31 12:35:24 -Root WebApplicationContext: initialization completed in 30008 ms
2019-07-31 12:35:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 12:35:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 12:35:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 12:35:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 12:35:26 -Filter xssFilter was not registered (disabled)
2019-07-31 12:35:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 12:35:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 12:35:26 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 12:35:26 -Servlet dispatcherServlet mapped to [/]
2019-07-31 12:35:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51bb7: startup date [Wed Jul 31 12:34:54 CST 2019]; root of context hierarchy
2019-07-31 12:35:38 -Using default implementation for ThreadExecutor
2019-07-31 12:35:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 12:35:38 -Quartz Scheduler v.2.3.0 created.
2019-07-31 12:35:38 -RAMJobStore initialized.
2019-07-31 12:35:38 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 12:35:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 12:35:38 -Quartz scheduler version: 2.3.0
2019-07-31 12:35:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@fe13916
2019-07-31 12:35:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 12:35:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 12:35:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 12:35:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 12:35:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 12:35:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 12:35:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 12:35:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 12:35:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 12:35:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 12:35:44 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 12:35:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 12:35:44 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:35:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 12:35:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 12:35:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 12:35:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 12:35:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 12:35:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:35:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:35:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 12:35:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 12:35:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 12:35:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 12:35:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 12:35:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 12:35:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 12:35:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 12:35:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 12:35:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 12:35:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 12:35:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 12:35:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 12:35:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 12:35:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 12:35:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:35:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:35:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 12:35:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 12:35:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 12:35:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:44 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 12:35:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 12:35:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 12:35:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 12:35:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 12:35:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 12:35:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 12:35:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 12:35:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 12:35:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 12:35:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 12:35:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 12:35:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 12:35:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 12:35:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 12:35:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 12:35:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 12:35:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 12:35:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 12:35:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 12:35:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 12:35:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 12:35:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 12:35:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 12:35:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 12:35:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 12:35:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 12:35:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 12:35:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 12:35:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:35:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:35:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:35:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 12:35:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 12:35:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 12:35:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 12:35:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 12:35:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 12:35:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 12:35:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 12:35:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 12:35:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:45 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 12:35:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:35:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:35:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:35:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 12:35:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 12:35:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:35:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 12:35:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 12:35:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 12:35:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 12:35:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 12:35:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 12:35:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:35:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51bb7: startup date [Wed Jul 31 12:34:54 CST 2019]; root of context hierarchy
2019-07-31 12:35:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:35:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:35:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 12:35:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 12:35:58 -Registering beans for JMX exposure on startup
2019-07-31 12:35:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 12:35:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 12:35:59 -Starting beans in phase 2147483647
2019-07-31 12:35:59 -Context refreshed
2019-07-31 12:36:03 -Found 1 custom documentation plugin(s)
2019-07-31 12:36:03 -Scanning for api listing references
2019-07-31 12:36:06 -Generating unique operation named: removeUsingPOST_1
2019-07-31 12:36:06 -Generating unique operation named: addUsingGET_1
2019-07-31 12:36:06 -Generating unique operation named: editUsingGET_1
2019-07-31 12:36:06 -Generating unique operation named: listUsingGET_1
2019-07-31 12:36:06 -Generating unique operation named: removeUsingPOST_2
2019-07-31 12:36:06 -Generating unique operation named: removeUsingPOST_3
2019-07-31 12:36:06 -Generating unique operation named: saveUsingPOST_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingGET_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingPOST_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingPUT_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 12:36:06 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 12:36:06 -Generating unique operation named: addUsingGET_2
2019-07-31 12:36:06 -Generating unique operation named: editUsingGET_2
2019-07-31 12:36:06 -Generating unique operation named: listUsingGET_2
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_4
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_5
2019-07-31 12:36:07 -Generating unique operation named: saveUsingPOST_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingPOST_2
2019-07-31 12:36:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 12:36:07 -Generating unique operation named: addUsingGET_3
2019-07-31 12:36:07 -Generating unique operation named: editUsingGET_3
2019-07-31 12:36:07 -Generating unique operation named: listUsingGET_3
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_6
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_7
2019-07-31 12:36:07 -Generating unique operation named: saveUsingPOST_3
2019-07-31 12:36:07 -Generating unique operation named: updateUsingGET_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingPOST_3
2019-07-31 12:36:07 -Generating unique operation named: updateUsingPUT_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 12:36:07 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 12:36:07 -Generating unique operation named: addUsingGET_4
2019-07-31 12:36:07 -Generating unique operation named: editUsingGET_4
2019-07-31 12:36:07 -Generating unique operation named: listUsingGET_4
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_8
2019-07-31 12:36:07 -Generating unique operation named: removeUsingPOST_9
2019-07-31 12:36:07 -Generating unique operation named: saveUsingPOST_4
2019-07-31 12:36:07 -Generating unique operation named: updateUsingGET_3
2019-07-31 12:36:07 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPOST_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPUT_3
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 12:36:08 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 12:36:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 12:36:08 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 12:36:08 -Generating unique operation named: ElecUsingGET_1
2019-07-31 12:36:08 -Generating unique operation named: addUsingGET_5
2019-07-31 12:36:08 -Generating unique operation named: editUsingGET_5
2019-07-31 12:36:08 -Generating unique operation named: listUsingGET_5
2019-07-31 12:36:08 -Generating unique operation named: removeUsingPOST_10
2019-07-31 12:36:08 -Generating unique operation named: removeUsingPOST_11
2019-07-31 12:36:08 -Generating unique operation named: saveUsingPOST_5
2019-07-31 12:36:08 -Generating unique operation named: updateUsingGET_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPOST_5
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPUT_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 12:36:08 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 12:36:08 -Generating unique operation named: editUsingGET_6
2019-07-31 12:36:08 -Generating unique operation named: listUsingGET_6
2019-07-31 12:36:08 -Generating unique operation named: updateUsingPOST_6
2019-07-31 12:36:08 -Generating unique operation named: addUsingGET_6
2019-07-31 12:36:08 -Generating unique operation named: editUsingGET_7
2019-07-31 12:36:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 12:36:08 -Generating unique operation named: listUsingGET_7
2019-07-31 12:36:08 -Generating unique operation named: removeUsingPOST_12
2019-07-31 12:36:08 -Generating unique operation named: removeUsingPOST_13
2019-07-31 12:36:08 -Generating unique operation named: saveUsingPOST_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingGET_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPOST_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPUT_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 12:36:09 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 12:36:09 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 12:36:09 -Generating unique operation named: addUsingGET_7
2019-07-31 12:36:09 -Generating unique operation named: editUsingGET_8
2019-07-31 12:36:09 -Generating unique operation named: listUsingGET_8
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_14
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_15
2019-07-31 12:36:09 -Generating unique operation named: saveUsingPOST_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingGET_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPOST_8
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPUT_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 12:36:09 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 12:36:09 -Generating unique operation named: addUsingGET_8
2019-07-31 12:36:09 -Generating unique operation named: editUsingGET_9
2019-07-31 12:36:09 -Generating unique operation named: listUsingGET_9
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_16
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_17
2019-07-31 12:36:09 -Generating unique operation named: saveUsingPOST_8
2019-07-31 12:36:09 -Generating unique operation named: updateUsingGET_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPOST_9
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPUT_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 12:36:09 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 12:36:09 -Generating unique operation named: addUsingGET_9
2019-07-31 12:36:09 -Generating unique operation named: editUsingGET_10
2019-07-31 12:36:09 -Generating unique operation named: infoUsingGET_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingPOST_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingPUT_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 12:36:09 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 12:36:09 -Generating unique operation named: listUsingGET_10
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_18
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_19
2019-07-31 12:36:09 -Generating unique operation named: saveUsingPOST_9
2019-07-31 12:36:09 -Generating unique operation named: updateUsingPOST_10
2019-07-31 12:36:09 -Generating unique operation named: listUsingGET_11
2019-07-31 12:36:09 -Generating unique operation named: removeUsingPOST_20
2019-07-31 12:36:09 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 12:36:09 -Generating unique operation named: addUsingGET_10
2019-07-31 12:36:09 -Generating unique operation named: editUsingGET_11
2019-07-31 12:36:09 -Generating unique operation named: listUsingGET_12
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_21
2019-07-31 12:36:10 -Generating unique operation named: saveUsingPOST_10
2019-07-31 12:36:10 -Generating unique operation named: treeUsingGET_1
2019-07-31 12:36:10 -Generating unique operation named: treeUsingGET_2
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPOST_11
2019-07-31 12:36:10 -Generating unique operation named: addUsingGET_11
2019-07-31 12:36:10 -Generating unique operation named: editUsingGET_12
2019-07-31 12:36:10 -Generating unique operation named: listUsingGET_13
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_22
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_23
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPOST_12
2019-07-31 12:36:10 -Generating unique operation named: addUsingGET_12
2019-07-31 12:36:10 -Generating unique operation named: editUsingGET_13
2019-07-31 12:36:10 -Generating unique operation named: listUsingGET_14
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_24
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_25
2019-07-31 12:36:10 -Generating unique operation named: saveUsingPOST_11
2019-07-31 12:36:10 -Generating unique operation named: updateUsingGET_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPOST_13
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPUT_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 12:36:10 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 12:36:10 -Generating unique operation named: addUsingGET_13
2019-07-31 12:36:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 12:36:10 -Generating unique operation named: editUsingGET_14
2019-07-31 12:36:10 -Generating unique operation named: listUsingGET_15
2019-07-31 12:36:10 -Generating unique operation named: printEditUsingGET_1
2019-07-31 12:36:10 -Generating unique operation named: removeUsingPOST_26
2019-07-31 12:36:10 -Generating unique operation named: saveUsingPOST_12
2019-07-31 12:36:10 -Generating unique operation named: updateUsingGET_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPOST_14
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPUT_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 12:36:10 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 12:36:10 -Generating unique operation named: addUsingGET_14
2019-07-31 12:36:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 12:36:10 -Generating unique operation named: editUsingGET_15
2019-07-31 12:36:10 -Generating unique operation named: listUsingGET_16
2019-07-31 12:36:10 -Generating unique operation named: saveUsingPOST_13
2019-07-31 12:36:10 -Generating unique operation named: saveUsingPOST_14
2019-07-31 12:36:10 -Generating unique operation named: updateUsingPOST_15
2019-07-31 12:36:10 -Generating unique operation named: listUsingGET_17
2019-07-31 12:36:10 -Generating unique operation named: listUsingHEAD_1
2019-07-31 12:36:10 -Generating unique operation named: listUsingPOST_1
2019-07-31 12:36:10 -Generating unique operation named: listUsingPUT_1
2019-07-31 12:36:11 -Generating unique operation named: listUsingPATCH_1
2019-07-31 12:36:11 -Generating unique operation named: listUsingDELETE_1
2019-07-31 12:36:11 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 12:36:11 -Generating unique operation named: listUsingTRACE_1
2019-07-31 12:36:11 -Generating unique operation named: countDDUsingGET_1
2019-07-31 12:36:11 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 12:36:11 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 12:36:11 -Generating unique operation named: addUsingGET_15
2019-07-31 12:36:11 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 12:36:11 -Generating unique operation named: editUsingGET_16
2019-07-31 12:36:11 -Generating unique operation named: listUsingGET_18
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_27
2019-07-31 12:36:11 -Generating unique operation named: saveUsingPOST_15
2019-07-31 12:36:11 -Generating unique operation named: treeUsingGET_3
2019-07-31 12:36:11 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPOST_16
2019-07-31 12:36:11 -Generating unique operation named: addUsingGET_16
2019-07-31 12:36:11 -Generating unique operation named: editUsingGET_17
2019-07-31 12:36:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 12:36:11 -Generating unique operation named: listUsingGET_19
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_28
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_29
2019-07-31 12:36:11 -Generating unique operation named: saveUsingPOST_16
2019-07-31 12:36:11 -Generating unique operation named: updateUsingGET_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPOST_17
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPUT_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 12:36:11 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 12:36:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 12:36:11 -Generating unique operation named: addUsingGET_17
2019-07-31 12:36:11 -Generating unique operation named: editUsingGET_18
2019-07-31 12:36:11 -Generating unique operation named: listUsingGET_20
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_30
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_31
2019-07-31 12:36:11 -Generating unique operation named: saveUsingPOST_17
2019-07-31 12:36:11 -Generating unique operation named: updateUsingGET_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPOST_18
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPUT_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 12:36:11 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 12:36:11 -Generating unique operation named: addUsingGET_18
2019-07-31 12:36:11 -Generating unique operation named: editUsingGET_19
2019-07-31 12:36:11 -Generating unique operation named: listUsingGET_21
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_32
2019-07-31 12:36:11 -Generating unique operation named: removeUsingPOST_33
2019-07-31 12:36:11 -Generating unique operation named: saveUsingPOST_18
2019-07-31 12:36:11 -Generating unique operation named: updateUsingGET_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPOST_19
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPUT_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 12:36:11 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 12:36:12 -Starting Quartz Scheduler now
2019-07-31 12:36:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 12:36:12 -Starting...
2019-07-31 12:36:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 12:36:12 -Started.
2019-07-31 12:36:12 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 12:36:12 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-07-31 12:36:12 -Pausing ProtocolHandler ["http-nio-8081"]
2019-07-31 12:36:12 -Stopping service [Tomcat]
2019-07-31 12:36:12 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-07-31 12:36:12 -Stopping ProtocolHandler ["http-nio-8081"]
2019-07-31 12:36:12 -Destroying ProtocolHandler ["http-nio-8081"]
2019-07-31 12:36:12 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-07-31 12:36:12 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-07-31 12:36:12 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51bb7: startup date [Wed Jul 31 12:34:54 CST 2019]; root of context hierarchy
2019-07-31 12:36:12 -Stopping beans in phase 2147483647
2019-07-31 12:36:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-31 12:36:12 -Stopping...
2019-07-31 12:36:12 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 12:36:12 -Stopped.
2019-07-31 12:36:12 -Unregistering JMX-exposed beans on shutdown
2019-07-31 12:36:12 -Unregistering JMX-exposed beans
2019-07-31 12:36:12 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-07-31 12:36:12 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-07-31 12:36:12 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-07-31 12:36:12 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-07-31 12:36:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-07-31 12:36:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-07-31 12:36:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-07-31 12:36:12 -Shutting down Quartz Scheduler
2019-07-31 12:40:26 -Starting BootdoApplication on PC-201905091110 with PID 65872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 12:40:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 12:40:26 -The following profiles are active: dev
2019-07-31 12:40:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5974109: startup date [Wed Jul 31 12:40:27 CST 2019]; root of context hierarchy
2019-07-31 12:40:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 12:40:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$75700ef3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:38 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$67c93d9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 12:40:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 12:40:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 12:40:42 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 12:40:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 12:40:43 -Starting service [Tomcat]
2019-07-31 12:40:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 12:40:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 12:40:43 -Initializing Spring embedded WebApplicationContext
2019-07-31 12:40:43 -Root WebApplicationContext: initialization completed in 16515 ms
2019-07-31 12:40:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 12:40:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 12:40:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 12:40:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 12:40:44 -Filter xssFilter was not registered (disabled)
2019-07-31 12:40:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 12:40:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 12:40:44 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 12:40:45 -Servlet dispatcherServlet mapped to [/]
2019-07-31 12:40:50 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5974109: startup date [Wed Jul 31 12:40:27 CST 2019]; root of context hierarchy
2019-07-31 12:40:51 -Using default implementation for ThreadExecutor
2019-07-31 12:40:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 12:40:51 -Quartz Scheduler v.2.3.0 created.
2019-07-31 12:40:51 -RAMJobStore initialized.
2019-07-31 12:40:51 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 12:40:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 12:40:51 -Quartz scheduler version: 2.3.0
2019-07-31 12:40:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@180cc0df
2019-07-31 12:40:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 12:40:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 12:40:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 12:40:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 12:40:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 12:40:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 12:40:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 12:40:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 12:40:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 12:40:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 12:40:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 12:40:58 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 12:40:58 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 12:40:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 12:40:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 12:40:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 12:40:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 12:40:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 12:40:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 12:40:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:40:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 12:40:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 12:40:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 12:40:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 12:40:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 12:40:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 12:40:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 12:40:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 12:40:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 12:40:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 12:40:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 12:40:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 12:40:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 12:40:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 12:40:58 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 12:40:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 12:40:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 12:40:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 12:40:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 12:40:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:58 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 12:40:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 12:40:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 12:40:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 12:40:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 12:40:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 12:40:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 12:40:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 12:40:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 12:40:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 12:40:59 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 12:40:59 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 12:40:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 12:40:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 12:40:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 12:40:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 12:40:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 12:40:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 12:40:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 12:40:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 12:40:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 12:40:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 12:40:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 12:40:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 12:40:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 12:40:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 12:40:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 12:40:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 12:40:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 12:40:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:40:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 12:40:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 12:40:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 12:40:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 12:40:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 12:40:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 12:40:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 12:40:59 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 12:40:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 12:40:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 12:40:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 12:40:59 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 12:40:59 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 12:40:59 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 12:40:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 12:40:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 12:40:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 12:40:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 12:41:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 12:41:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 12:41:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 12:41:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:41:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5974109: startup date [Wed Jul 31 12:40:27 CST 2019]; root of context hierarchy
2019-07-31 12:41:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:41:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 12:41:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 12:41:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 12:41:13 -Registering beans for JMX exposure on startup
2019-07-31 12:41:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 12:41:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 12:41:13 -Starting beans in phase 2147483647
2019-07-31 12:41:13 -Context refreshed
2019-07-31 12:41:13 -Found 1 custom documentation plugin(s)
2019-07-31 12:41:13 -Scanning for api listing references
2019-07-31 12:41:14 -Generating unique operation named: removeUsingPOST_1
2019-07-31 12:41:14 -Generating unique operation named: addUsingGET_1
2019-07-31 12:41:14 -Generating unique operation named: editUsingGET_1
2019-07-31 12:41:14 -Generating unique operation named: listUsingGET_1
2019-07-31 12:41:14 -Generating unique operation named: removeUsingPOST_2
2019-07-31 12:41:14 -Generating unique operation named: removeUsingPOST_3
2019-07-31 12:41:14 -Generating unique operation named: saveUsingPOST_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingGET_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingPOST_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingPUT_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 12:41:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 12:41:15 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 12:41:15 -Generating unique operation named: addUsingGET_2
2019-07-31 12:41:15 -Generating unique operation named: editUsingGET_2
2019-07-31 12:41:15 -Generating unique operation named: listUsingGET_2
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_4
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_5
2019-07-31 12:41:15 -Generating unique operation named: saveUsingPOST_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPOST_2
2019-07-31 12:41:15 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 12:41:15 -Generating unique operation named: addUsingGET_3
2019-07-31 12:41:15 -Generating unique operation named: editUsingGET_3
2019-07-31 12:41:15 -Generating unique operation named: listUsingGET_3
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_6
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_7
2019-07-31 12:41:15 -Generating unique operation named: saveUsingPOST_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingGET_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPOST_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPUT_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 12:41:15 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 12:41:15 -Generating unique operation named: addUsingGET_4
2019-07-31 12:41:15 -Generating unique operation named: editUsingGET_4
2019-07-31 12:41:15 -Generating unique operation named: listUsingGET_4
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_8
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_9
2019-07-31 12:41:15 -Generating unique operation named: saveUsingPOST_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingGET_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPOST_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPUT_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 12:41:15 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 12:41:15 -Generating unique operation named: ElecUsingGET_1
2019-07-31 12:41:15 -Generating unique operation named: addUsingGET_5
2019-07-31 12:41:15 -Generating unique operation named: editUsingGET_5
2019-07-31 12:41:15 -Generating unique operation named: listUsingGET_5
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_10
2019-07-31 12:41:15 -Generating unique operation named: removeUsingPOST_11
2019-07-31 12:41:15 -Generating unique operation named: saveUsingPOST_5
2019-07-31 12:41:15 -Generating unique operation named: updateUsingGET_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPOST_5
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPUT_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 12:41:15 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 12:41:16 -Generating unique operation named: editUsingGET_6
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPOST_6
2019-07-31 12:41:16 -Generating unique operation named: addUsingGET_6
2019-07-31 12:41:16 -Generating unique operation named: editUsingGET_7
2019-07-31 12:41:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_7
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_12
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_13
2019-07-31 12:41:16 -Generating unique operation named: saveUsingPOST_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingGET_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPOST_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPUT_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 12:41:16 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 12:41:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 12:41:16 -Generating unique operation named: addUsingGET_7
2019-07-31 12:41:16 -Generating unique operation named: editUsingGET_8
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_8
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_14
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_15
2019-07-31 12:41:16 -Generating unique operation named: saveUsingPOST_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingGET_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPOST_8
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPUT_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 12:41:16 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 12:41:16 -Generating unique operation named: addUsingGET_8
2019-07-31 12:41:16 -Generating unique operation named: editUsingGET_9
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_9
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_16
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_17
2019-07-31 12:41:16 -Generating unique operation named: saveUsingPOST_8
2019-07-31 12:41:16 -Generating unique operation named: updateUsingGET_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPOST_9
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPUT_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 12:41:16 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 12:41:16 -Generating unique operation named: addUsingGET_9
2019-07-31 12:41:16 -Generating unique operation named: editUsingGET_10
2019-07-31 12:41:16 -Generating unique operation named: infoUsingGET_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingPOST_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingPUT_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 12:41:16 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_10
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_18
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_19
2019-07-31 12:41:16 -Generating unique operation named: saveUsingPOST_9
2019-07-31 12:41:16 -Generating unique operation named: updateUsingPOST_10
2019-07-31 12:41:16 -Generating unique operation named: listUsingGET_11
2019-07-31 12:41:16 -Generating unique operation named: removeUsingPOST_20
2019-07-31 12:41:16 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 12:41:17 -Generating unique operation named: addUsingGET_10
2019-07-31 12:41:17 -Generating unique operation named: editUsingGET_11
2019-07-31 12:41:17 -Generating unique operation named: listUsingGET_12
2019-07-31 12:41:17 -Generating unique operation named: removeUsingPOST_21
2019-07-31 12:41:17 -Generating unique operation named: saveUsingPOST_10
2019-07-31 12:41:17 -Generating unique operation named: treeUsingGET_1
2019-07-31 12:41:17 -Generating unique operation named: treeUsingGET_2
2019-07-31 12:41:17 -Generating unique operation named: updateUsingPOST_11
2019-07-31 12:41:17 -Generating unique operation named: addUsingGET_11
2019-07-31 12:41:17 -Generating unique operation named: editUsingGET_12
2019-07-31 12:41:17 -Generating unique operation named: listUsingGET_13
2019-07-31 12:41:17 -Generating unique operation named: removeUsingPOST_22
2019-07-31 12:41:17 -Generating unique operation named: removeUsingPOST_23
2019-07-31 12:41:17 -Generating unique operation named: updateUsingPOST_12
2019-07-31 12:41:17 -Generating unique operation named: addUsingGET_12
2019-07-31 12:41:17 -Generating unique operation named: editUsingGET_13
2019-07-31 12:41:17 -Generating unique operation named: listUsingGET_14
2019-07-31 12:41:17 -Generating unique operation named: removeUsingPOST_24
2019-07-31 12:41:17 -Generating unique operation named: removeUsingPOST_25
2019-07-31 12:41:17 -Generating unique operation named: saveUsingPOST_11
2019-07-31 12:41:17 -Generating unique operation named: updateUsingGET_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingPOST_13
2019-07-31 12:41:17 -Generating unique operation named: updateUsingPUT_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 12:41:17 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 12:41:17 -Generating unique operation named: addUsingGET_13
2019-07-31 12:41:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 12:41:17 -Generating unique operation named: editUsingGET_14
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_15
2019-07-31 12:41:18 -Generating unique operation named: printEditUsingGET_1
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_26
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingGET_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_14
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPUT_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 12:41:18 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 12:41:18 -Generating unique operation named: addUsingGET_14
2019-07-31 12:41:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 12:41:18 -Generating unique operation named: editUsingGET_15
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_16
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_13
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_14
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_15
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_17
2019-07-31 12:41:18 -Generating unique operation named: listUsingHEAD_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingPOST_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingPUT_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingPATCH_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingDELETE_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 12:41:18 -Generating unique operation named: listUsingTRACE_1
2019-07-31 12:41:18 -Generating unique operation named: countDDUsingGET_1
2019-07-31 12:41:18 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 12:41:18 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 12:41:18 -Generating unique operation named: addUsingGET_15
2019-07-31 12:41:18 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 12:41:18 -Generating unique operation named: editUsingGET_16
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_18
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_27
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_15
2019-07-31 12:41:18 -Generating unique operation named: treeUsingGET_3
2019-07-31 12:41:18 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_16
2019-07-31 12:41:18 -Generating unique operation named: addUsingGET_16
2019-07-31 12:41:18 -Generating unique operation named: editUsingGET_17
2019-07-31 12:41:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_19
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_28
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_29
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_16
2019-07-31 12:41:18 -Generating unique operation named: updateUsingGET_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_17
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPUT_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 12:41:18 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 12:41:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 12:41:18 -Generating unique operation named: addUsingGET_17
2019-07-31 12:41:18 -Generating unique operation named: editUsingGET_18
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_20
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_30
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_31
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_17
2019-07-31 12:41:18 -Generating unique operation named: updateUsingGET_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_18
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPUT_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 12:41:18 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 12:41:18 -Generating unique operation named: addUsingGET_18
2019-07-31 12:41:18 -Generating unique operation named: editUsingGET_19
2019-07-31 12:41:18 -Generating unique operation named: listUsingGET_21
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_32
2019-07-31 12:41:18 -Generating unique operation named: removeUsingPOST_33
2019-07-31 12:41:18 -Generating unique operation named: saveUsingPOST_18
2019-07-31 12:41:18 -Generating unique operation named: updateUsingGET_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPOST_19
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPUT_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 12:41:18 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 12:41:19 -Starting Quartz Scheduler now
2019-07-31 12:41:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 12:41:19 -Starting...
2019-07-31 12:41:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 12:41:19 -Started.
2019-07-31 12:41:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 12:41:19 -Using a shared selector for servlet write/read
2019-07-31 12:41:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 12:41:19 -Started BootdoApplication in 55.107 seconds (JVM running for 57.211)
2019-07-31 12:41:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 12:41:19 -==> Parameters: 
2019-07-31 12:41:20 -<==      Total: 1
2019-07-31 12:42:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 12:42:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 12:42:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 12:42:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 118 ms
2019-07-31 12:42:48 -Enabling session validation scheduler...
2019-07-31 12:42:48 -请求地址 : http://localhost:8081/login;JSESSIONID=d430b8a3-a0f0-4ad3-819c-be7d0b4e7711
2019-07-31 12:42:48 -HTTP METHOD : GET
2019-07-31 12:42:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 12:42:48 -参数 : [{}]
2019-07-31 12:42:48 -耗时 : 5
2019-07-31 12:42:48 -返回值 : login
2019-07-31 12:42:53 -请求地址 : http://localhost:8081/getVerify
2019-07-31 12:42:53 -HTTP METHOD : GET
2019-07-31 12:42:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 12:42:53 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30ac5d1d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a4c9ed8]
2019-07-31 12:42:57 -2190
2019-07-31 12:42:58 -耗时 : 5458
2019-07-31 12:42:58 -返回值 : null
2019-07-31 12:43:07 -请求地址 : http://localhost:8081/login
2019-07-31 12:43:07 -HTTP METHOD : POST
2019-07-31 12:43:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 12:43:07 -参数 : [admin, 111111, 2190, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2699c9fc]
2019-07-31 12:43:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 12:43:07 -==> Parameters: admin(String)
2019-07-31 12:43:07 -<==      Total: 1
2019-07-31 12:43:07 -耗时 : 397
2019-07-31 12:43:07 -返回值 : {msg=操作成功, code=0}
2019-07-31 12:43:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 12:43:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:43:07 -==> Parameters: 1(Long), admin(String), 登录(String), 397(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 12:43:07.896(Timestamp)
2019-07-31 12:43:08 -<==    Updates: 1
2019-07-31 12:43:08 -请求地址 : http://localhost:8081/index
2019-07-31 12:43:08 -HTTP METHOD : GET
2019-07-31 12:43:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 12:43:08 -参数 : [{}]
2019-07-31 12:43:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 12:43:08 -==> Parameters: 1(Long)
2019-07-31 12:43:09 -<==      Total: 51
2019-07-31 12:43:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 12:43:09 -==> Parameters: 138(Long)
2019-07-31 12:43:10 -<==      Total: 1
2019-07-31 12:43:10 -耗时 : 1731
2019-07-31 12:43:10 -返回值 : index_v1
2019-07-31 12:43:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:43:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1731(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 12:43:10.197(Timestamp)
2019-07-31 12:43:10 -<==    Updates: 1
2019-07-31 12:43:10 -请求地址 : http://localhost:8081/main
2019-07-31 12:43:10 -HTTP METHOD : GET
2019-07-31 12:43:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:43:10 -参数 : []
2019-07-31 12:43:10 -耗时 : 0
2019-07-31 12:43:10 -返回值 : main
2019-07-31 12:43:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 12:43:11 -HTTP METHOD : GET
2019-07-31 12:43:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 12:43:11 -参数 : []
2019-07-31 12:43:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 12:43:11 -请求地址 : http://localhost:8081/main
2019-07-31 12:43:11 -HTTP METHOD : GET
2019-07-31 12:43:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:43:11 -参数 : []
2019-07-31 12:43:11 -耗时 : 1
2019-07-31 12:43:11 -返回值 : main
2019-07-31 12:43:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 12:43:13 -<==      Total: 0
2019-07-31 12:43:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 12:43:14 -==> Parameters: 1(Long), 0(String)
2019-07-31 12:43:14 -<==      Total: 1
2019-07-31 12:43:14 -耗时 : 2603
2019-07-31 12:43:14 -返回值 : com.bootdo.common.utils.PageUtils@3b4ca3f
2019-07-31 12:43:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 12:43:26 -==> Parameters: 1(Long)
2019-07-31 12:43:26 -<==      Total: 95
2019-07-31 12:43:26 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 12:43:26 -HTTP METHOD : GET
2019-07-31 12:43:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 12:43:26 -参数 : []
2019-07-31 12:43:26 -耗时 : 1
2019-07-31 12:43:26 -返回值 : elec/elec/elec
2019-07-31 12:43:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 12:43:28 -HTTP METHOD : GET
2019-07-31 12:43:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 12:43:28 -参数 : [userType]
2019-07-31 12:43:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 12:43:28 -==> Parameters: userType(String)
2019-07-31 12:43:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 12:43:28 -HTTP METHOD : GET
2019-07-31 12:43:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 12:43:28 -参数 : [elecType]
2019-07-31 12:43:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 12:43:28 -HTTP METHOD : GET
2019-07-31 12:43:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 12:43:28 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1d6a7de2]
2019-07-31 12:43:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 12:43:28 -==> Parameters: elecType(String)
2019-07-31 12:43:28 -<==      Total: 11
2019-07-31 12:43:28 -耗时 : 264
2019-07-31 12:43:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 12:43:28 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 12:43:28 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 12:43:28 -<==      Total: 4
2019-07-31 12:43:28 -耗时 : 403
2019-07-31 12:43:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 12:43:28 -<==      Total: 10
2019-07-31 12:43:28 -==>  Preparing: select count(*) from elec 
2019-07-31 12:43:28 -==> Parameters: 
2019-07-31 12:43:29 -<==      Total: 1
2019-07-31 12:43:29 -耗时 : 666
2019-07-31 12:43:29 -返回值 : com.bootdo.common.utils.PageUtils@286b3354
2019-07-31 12:43:30 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-07-31 12:43:30 -HTTP METHOD : GET
2019-07-31 12:43:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-07-31 12:43:30 -参数 : []
2019-07-31 12:43:30 -耗时 : 0
2019-07-31 12:43:30 -返回值 : elec/elecUpLoad/elecUpLoad
2019-07-31 12:43:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 12:43:32 -HTTP METHOD : GET
2019-07-31 12:43:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 12:43:32 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 12:43:32 -耗时 : 1
2019-07-31 12:43:32 -返回值 : system/dept/deptTree
2019-07-31 12:43:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 12:43:33 -HTTP METHOD : GET
2019-07-31 12:43:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 12:43:33 -参数 : []
2019-07-31 12:43:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 12:43:33 -==> Parameters: 
2019-07-31 12:43:33 -<==      Total: 3
2019-07-31 12:43:33 -耗时 : 27
2019-07-31 12:43:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 12:43:50 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-07-31 12:43:50 -HTTP METHOD : POST
2019-07-31 12:43:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-07-31 12:43:50 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5cd03b2f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@2854fdbd]
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0001(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0001(String), 李文英(String), C(String), 2(String), 13847098285(String), 1(String), 500039(String), 1(String), 0.465(BigDecimal), 10485(BigDecimal), 10566(BigDecimal), 81(BigDecimal), 1(Integer), 37.665(BigDecimal), 83.845(BigDecimal), 2019-07(String), 刘桂艳(String), 2019-06-13 10:53:10.0(Timestamp), 刘桂艳(String), (String)
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0002(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0002(String), 何永祥(String), A(String), 2(String), 15647022317(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6345(BigDecimal), 6476(BigDecimal), 131(BigDecimal), 1(Integer), 60.915(BigDecimal), -12.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0003(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0003(String), 范连武(String), A(String), 2(String), 15894822846(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6979(BigDecimal), 7073(BigDecimal), 94(BigDecimal), 1(Integer), 43.710(BigDecimal), 69.370(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0004(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0004(String), 张喜成1(String), B(String), 2(String), 18347063647(String), 1(String), 0500423(String), 1(String), 0.465(BigDecimal), 1832(BigDecimal), 1929(BigDecimal), 97(BigDecimal), 1(Integer), 45.105(BigDecimal), -45.095(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:00:39.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0005(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0005(String), 李生(String), B(String), 2(String), 15548051939(String), 1(String), 0506031(String), 1(String), 0.465(BigDecimal), 7850(BigDecimal), 7972(BigDecimal), 122(BigDecimal), 1(Integer), 56.730(BigDecimal), -56.720(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 10:51:51.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0006(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0006(String), 付文广(String), A(String), 2(String), 15847004487(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6331(BigDecimal), 6502(BigDecimal), 171(BigDecimal), 1(Integer), 79.515(BigDecimal), -46.425(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:57 -<==    Updates: 1
2019-07-31 12:43:57 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:57 -==> Parameters: 2019-06(String), 2(String), 1-0007(String)
2019-07-31 12:43:57 -<==      Total: 1
2019-07-31 12:43:57 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:57 -==> Parameters: 1-0007(String), 刘祥(String), A(String), 2(String), 13191343427(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6799(BigDecimal), 6799(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 18.500(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0008(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0008(String), 王明刚(String), B(String), 2(String), (String), 1(String), 0506284(String), 1(String), 0.465(BigDecimal), 2288(BigDecimal), 2390(BigDecimal), 102(BigDecimal), 1(Integer), 47.430(BigDecimal), -47.430(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2285930(String)
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0009(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0009(String), 候维福(String), B(String), 2(String), 18748360035(String), 1(String), 0502568(String), 1(String), 0.465(BigDecimal), 3513(BigDecimal), 3651(BigDecimal), 138(BigDecimal), 1(Integer), 64.170(BigDecimal), -64.170(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0010(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0010(String), 朱友良1(String), B(String), 2(String), 15947756761(String), 1(String), 0502878(String), 1(String), 0.465(BigDecimal), 3030(BigDecimal), 3096(BigDecimal), 66(BigDecimal), 1(Integer), 30.690(BigDecimal), -30.680(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0011(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0011(String), 张喜宝(String), A(String), 2(String), 13848098945(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8658(BigDecimal), 8688(BigDecimal), 30(BigDecimal), 1(Integer), 13.950(BigDecimal), 18.870(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0012(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0012(String), 王洪林1(String), A(String), 2(String), 15047001029(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10498(BigDecimal), 10706(BigDecimal), 208(BigDecimal), 1(Integer), 96.720(BigDecimal), -9.230(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0013(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0013(String), 李志国(String), B(String), 2(String), (String), 1(String), 0502240(String), 1(String), 0.465(BigDecimal), 10286(BigDecimal), 10369(BigDecimal), 83(BigDecimal), 1(Integer), 38.595(BigDecimal), -38.585(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7933114(String)
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0014(String)
2019-07-31 12:43:58 -<==      Total: 1
2019-07-31 12:43:58 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:58 -==> Parameters: 1-0014(String), 纪春光(String), B(String), 2(String), 13848035900(String), 1(String), 0500601(String), 1(String), 0.465(BigDecimal), 6242(BigDecimal), 6353(BigDecimal), 111(BigDecimal), 1(Integer), 51.615(BigDecimal), -51.605(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:58 -<==    Updates: 1
2019-07-31 12:43:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:58 -==> Parameters: 2019-06(String), 2(String), 1-0015(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0015(String), 刘泽兰(String), A(String), 2(String), 13754033797(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2427(BigDecimal), 2530(BigDecimal), 103(BigDecimal), 1(Integer), 47.895(BigDecimal), 33.825(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0016(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0016(String), 何树华(String), B(String), 2(String), 15604703151(String), 1(String), 0500086(String), 1(String), 0.465(BigDecimal), 8853(BigDecimal), 8871(BigDecimal), 18(BigDecimal), 1(Integer), 8.370(BigDecimal), -8.370(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0017(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0017(String), 张德利(String), B(String), 2(String), 13789605078(String), 1(String), 0500989(String), 1(String), 0.465(BigDecimal), 6861(BigDecimal), 6894(BigDecimal), 33(BigDecimal), 1(Integer), 15.345(BigDecimal), -15.335(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0018(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0018(String), 崔亚臣(String), A(String), 2(String), 13604701274(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4572(BigDecimal), 4633(BigDecimal), 61(BigDecimal), 1(Integer), 28.365(BigDecimal), 8.495(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0019(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0019(String), 贾亮表(String), A(String), 2(String), 13947033272(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10227(BigDecimal), 10246(BigDecimal), 19(BigDecimal), 1(Integer), 8.835(BigDecimal), 20.485(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0020(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0020(String), 张文革1(String), A(String), 2(String), 15849062283(String), 1(String), (String), 1(String), 0.465(BigDecimal), 21356(BigDecimal), 21551(BigDecimal), 195(BigDecimal), 1(Integer), 90.675(BigDecimal), -69.615(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0021(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0021(String), 李忠涛(String), B(String), 2(String), 15104979096(String), 1(String), 0500172(String), 1(String), 0.465(BigDecimal), 8284(BigDecimal), 8332(BigDecimal), 48(BigDecimal), 1(Integer), 22.320(BigDecimal), -22.310(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0022(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0022(String), 王洪礼(String), A(String), 2(String), 15149277286(String), 1(String), (String), 1(String), 0.465(BigDecimal), 13000(BigDecimal), 13285(BigDecimal), 285(BigDecimal), 1(Integer), 132.525(BigDecimal), -131.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0023(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0023(String), 杨淑兰1(String), B(String), 2(String), 15049017007(String), 1(String), 0504202(String), 1(String), 0.465(BigDecimal), 6370(BigDecimal), 6513(BigDecimal), 143(BigDecimal), 1(Integer), 66.495(BigDecimal), -66.485(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0024(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0024(String), 王世铁(String), C(String), 2(String), 15048072804(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7271(BigDecimal), 7271(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 31.660(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0025(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0025(String), 刘秀辉(String), B(String), 2(String), 15504805059(String), 1(String), 0500702(String), 1(String), 0.465(BigDecimal), 12354(BigDecimal), 12626(BigDecimal), 272(BigDecimal), 1(Integer), 126.480(BigDecimal), -126.470(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0026(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0026(String), 何海勇(String), A(String), 2(String), 13514704431(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7670(BigDecimal), 7864(BigDecimal), 194(BigDecimal), 1(Integer), 90.210(BigDecimal), -89.980(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:43:59 -<==    Updates: 1
2019-07-31 12:43:59 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:43:59 -==> Parameters: 2019-06(String), 2(String), 1-0027(String)
2019-07-31 12:43:59 -<==      Total: 1
2019-07-31 12:43:59 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:43:59 -==> Parameters: 1-0027(String), 兰岩(String), A(String), 2(String), 15148484407(String), 1(String), (String), 1(String), 0.465(BigDecimal), 1169(BigDecimal), 1169(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.220(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0028(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0028(String), 魏振华(String), A(String), 2(String), 13191314011(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7519(BigDecimal), 7556(BigDecimal), 37(BigDecimal), 1(Integer), 17.205(BigDecimal), 74.245(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0029(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0029(String), 包全(String), A(String), 2(String), 15247051210(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2398(BigDecimal), 2471(BigDecimal), 73(BigDecimal), 1(Integer), 33.945(BigDecimal), 15.705(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0030(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0030(String), 兰军(String), B(String), 2(String), 13948804524(String), 1(String), 0502586(String), 1(String), 0.465(BigDecimal), 11030(BigDecimal), 11199(BigDecimal), 169(BigDecimal), 1(Integer), 78.585(BigDecimal), -78.575(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0031(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0031(String), 李志嘉(String), B(String), 2(String), 15048060429(String), 1(String), 0502242(String), 1(String), 0.465(BigDecimal), 22474(BigDecimal), 22557(BigDecimal), 83(BigDecimal), 1(Integer), 38.595(BigDecimal), -38.585(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0032(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0032(String), 李奎荣(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 8589(BigDecimal), 8705(BigDecimal), 116(BigDecimal), 1(Integer), 53.940(BigDecimal), 126.300(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7933641(String)
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0033(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0033(String), 李振海(String), A(String), 2(String), 13191333260(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3518(BigDecimal), 3658(BigDecimal), 140(BigDecimal), 1(Integer), 65.100(BigDecimal), -15.240(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0034(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0034(String), 李天跃(String), C(String), 2(String), 13948608972(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7273(BigDecimal), 7394(BigDecimal), 121(BigDecimal), 1(Integer), 56.265(BigDecimal), -36.995(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0035(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0035(String), 田喜龙(String), B(String), 2(String), 13947064796(String), 1(String), 0506235(String), 1(String), 0.465(BigDecimal), 10711(BigDecimal), 10905(BigDecimal), 194(BigDecimal), 1(Integer), 90.210(BigDecimal), -90.200(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0036(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0036(String), 陈海生(String), A(String), 2(String), (String), 1(String), 0504309(String), 1(String), 0.465(BigDecimal), 10969(BigDecimal), 11095(BigDecimal), 126(BigDecimal), 1(Integer), 58.590(BigDecimal), -104.630(BigDecimal), 2019-07(String), 刘宇(String), 2019-07-11 11:31:45.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0037(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0037(String), 兰强(String), B(String), 2(String), 15048105391(String), 1(String), 0502587(String), 1(String), 0.465(BigDecimal), 6950(BigDecimal), 7042(BigDecimal), 92(BigDecimal), 1(Integer), 42.780(BigDecimal), -42.780(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0038(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0038(String), 翟兰虎(String), B(String), 2(String), 15849096310(String), 1(String), 0507003(String), 1(String), 0.465(BigDecimal), 4909(BigDecimal), 5028(BigDecimal), 119(BigDecimal), 1(Integer), 55.335(BigDecimal), -55.335(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0039(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0039(String), 朱瑞金1(String), A(String), 2(String), 13015118076(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10845(BigDecimal), 10976(BigDecimal), 131(BigDecimal), 1(Integer), 60.915(BigDecimal), 14.885(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:00 -<==    Updates: 1
2019-07-31 12:44:00 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:00 -==> Parameters: 2019-06(String), 2(String), 1-0040(String)
2019-07-31 12:44:00 -<==      Total: 1
2019-07-31 12:44:00 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:00 -==> Parameters: 1-0040(String), 李少福(String), B(String), 2(String), 15947767343(String), 1(String), 0502222(String), 1(String), 0.465(BigDecimal), 4004(BigDecimal), 4131(BigDecimal), 127(BigDecimal), 1(Integer), 59.055(BigDecimal), -59.055(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0041(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0041(String), 韩美芳(String), B(String), 2(String), 13015118685(String), 1(String), 0500962(String), 1(String), 0.465(BigDecimal), 8550(BigDecimal), 8668(BigDecimal), 118(BigDecimal), 1(Integer), 54.870(BigDecimal), -54.870(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0042(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0042(String), 樊克彬1(String), A(String), 2(String), 13948079202(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3769(BigDecimal), 3900(BigDecimal), 131(BigDecimal), 1(Integer), 60.915(BigDecimal), -34.525(BigDecimal), 2019-07(String), 刘桂艳(String), 2019-07-04 10:03:48.0(Timestamp), 刘桂艳(String), (String)
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0043(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0043(String), 王汉奎1(String), B(String), 2(String), 13604744219(String), 1(String), 0502354(String), 1(String), 0.465(BigDecimal), 2759(BigDecimal), 2839(BigDecimal), 80(BigDecimal), 1(Integer), 37.200(BigDecimal), -37.190(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0044(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0044(String), 李俊山(String), B(String), 2(String), 13171164989(String), 1(String), 0502216(String), 1(String), 0.465(BigDecimal), 5581(BigDecimal), 5811(BigDecimal), 230(BigDecimal), 1(Integer), 106.950(BigDecimal), -106.940(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0045(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0045(String), 刘喜臣1(String), B(String), 2(String), 13084700458(String), 1(String), 0506085(String), 1(String), 0.465(BigDecimal), 4213(BigDecimal), 4213(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 353.360(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:12:11.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0046(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0046(String), 张喜良(String), B(String), 2(String), 15048113137(String), 1(String), 0502873(String), 1(String), 0.465(BigDecimal), 267(BigDecimal), 384(BigDecimal), 117(BigDecimal), 1(Integer), 54.405(BigDecimal), -54.395(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0047(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0047(String), 贾维祥(String), A(String), 2(String), 15547078756(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7992(BigDecimal), 7992(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 42.260(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0048(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0048(String), 刘再兴(String), B(String), 2(String), 15049075250(String), 1(String), 0506101(String), 1(String), 0.465(BigDecimal), 23165(BigDecimal), 23492(BigDecimal), 327(BigDecimal), 1(Integer), 152.055(BigDecimal), -152.045(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0049(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0049(String), 孙青(String), A(String), 2(String), 13948608282(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7468(BigDecimal), 7510(BigDecimal), 42(BigDecimal), 1(Integer), 19.530(BigDecimal), 1.490(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0050(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0050(String), 何树山1(String), B(String), 2(String), (String), 1(String), 0500580(String), 1(String), 0.465(BigDecimal), 10476(BigDecimal), 10850(BigDecimal), 374(BigDecimal), 1(Integer), 173.910(BigDecimal), -173.910(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2312128(String)
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0051(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0051(String), 赵德全(String), A(String), 2(String), 15947102433(String), 1(String), (String), 1(String), 0.465(BigDecimal), 19390(BigDecimal), 19520(BigDecimal), 130(BigDecimal), 1(Integer), 60.450(BigDecimal), -2.280(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0052(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0052(String), 王鑫1(String), B(String), 2(String), 15049075370(String), 1(String), 0500309(String), 1(String), 0.465(BigDecimal), 2579(BigDecimal), 2579(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.010(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:13:11.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0053(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0053(String), 李兴田(String), A(String), 2(String), 13848809082(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7380(BigDecimal), 7386(BigDecimal), 6(BigDecimal), 1(Integer), 2.790(BigDecimal), 11.010(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0054(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0054(String), 韦德立(String), B(String), 2(String), 13947058548(String), 1(String), 0506312(String), 1(String), 0.465(BigDecimal), 9812(BigDecimal), 9999(BigDecimal), 187(BigDecimal), 1(Integer), 86.955(BigDecimal), -86.945(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0055(String)
2019-07-31 12:44:01 -<==      Total: 1
2019-07-31 12:44:01 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:01 -==> Parameters: 1-0055(String), 刘兴军(String), A(String), 2(String), 13847061059(String), 1(String), (String), 1(String), 0.465(BigDecimal), 27285(BigDecimal), 27369(BigDecimal), 84(BigDecimal), 1(Integer), 39.060(BigDecimal), 31.030(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:01 -<==    Updates: 1
2019-07-31 12:44:01 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:01 -==> Parameters: 2019-06(String), 2(String), 1-0056(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0056(String), 赵贵德(String), A(String), 2(String), 15049548020(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2999(BigDecimal), 3214(BigDecimal), 215(BigDecimal), 1(Integer), 99.975(BigDecimal), 9.945(BigDecimal), 2019-07(String), 刘桂艳(String), 2019-07-11 14:48:45.0(Timestamp), 刘桂艳(String), (String)
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0057(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0057(String), 王英祥(String), A(String), 2(String), 13134979229(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10100(BigDecimal), 10241(BigDecimal), 141(BigDecimal), 1(Integer), 65.565(BigDecimal), 23.145(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0058(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0058(String), 刘静(String), A(String), 2(String), 13084700387(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3409(BigDecimal), 3483(BigDecimal), 74(BigDecimal), 1(Integer), 34.410(BigDecimal), 32.970(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0059(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0059(String), 包玉山(String), B(String), 2(String), 13171184337(String), 1(String), 0504764(String), 1(String), 0.465(BigDecimal), 5557(BigDecimal), 5582(BigDecimal), 25(BigDecimal), 1(Integer), 11.625(BigDecimal), -11.625(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0060(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0060(String), 吴丽君(String), A(String), 2(String), 15049009774(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4502(BigDecimal), 4630(BigDecimal), 128(BigDecimal), 1(Integer), 59.520(BigDecimal), 63.230(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0061(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0061(String), 贾桐启(String), B(String), 2(String), 13947018365(String), 1(String), 0504395(String), 1(String), 0.465(BigDecimal), 9135(BigDecimal), 9390(BigDecimal), 255(BigDecimal), 1(Integer), 118.575(BigDecimal), -118.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0062(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0062(String), 周爱福(String), B(String), 2(String), 13694707058(String), 1(String), 0501123(String), 1(String), 0.465(BigDecimal), 7926(BigDecimal), 8124(BigDecimal), 198(BigDecimal), 1(Integer), 92.070(BigDecimal), -92.070(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0063(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0063(String), 刘桂先(String), B(String), 2(String), (String), 1(String), 0502234(String), 1(String), 0.465(BigDecimal), 3569(BigDecimal), 3591(BigDecimal), 22(BigDecimal), 1(Integer), 10.230(BigDecimal), -10.220(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:13:41.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0064(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0064(String), 田树启(String), B(String), 2(String), 18622859897(String), 1(String), 0504561(String), 1(String), 0.465(BigDecimal), 9495(BigDecimal), 9541(BigDecimal), 46(BigDecimal), 1(Integer), 21.390(BigDecimal), -21.390(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0065(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0065(String), 于奎柱(String), B(String), 2(String), 13947018344(String), 1(String), 0500968(String), 1(String), 0.465(BigDecimal), 8788(BigDecimal), 8961(BigDecimal), 173(BigDecimal), 1(Integer), 80.445(BigDecimal), -80.435(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0066(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0066(String), 李振华(String), A(String), 2(String), 13347018316(String), 1(String), (String), 1(String), 0.465(BigDecimal), 12022(BigDecimal), 12339(BigDecimal), 317(BigDecimal), 1(Integer), 147.405(BigDecimal), -88.735(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0067(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0067(String), 张文革2(String), A(String), 2(String), 13134979205(String), 1(String), (String), 1(String), 0.465(BigDecimal), 427(BigDecimal), 447(BigDecimal), 20(BigDecimal), 1(Integer), 9.300(BigDecimal), 24.350(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0068(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0068(String), 刘海龙1(String), B(String), 2(String), 18604708159(String), 1(String), 0506063(String), 1(String), 0.465(BigDecimal), 861(BigDecimal), 861(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.000(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:29:45.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:02 -<==    Updates: 1
2019-07-31 12:44:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:02 -==> Parameters: 2019-06(String), 2(String), 1-0069(String)
2019-07-31 12:44:02 -<==      Total: 1
2019-07-31 12:44:02 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:02 -==> Parameters: 1-0069(String), 邢秋山(String), B(String), 2(String), 15104904770(String), 1(String), 0500903(String), 1(String), 0.465(BigDecimal), 10793(BigDecimal), 10908(BigDecimal), 115(BigDecimal), 1(Integer), 53.475(BigDecimal), -53.465(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0070(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0070(String), 王贵金(String), A(String), 2(String), 13947018309(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10141(BigDecimal), 10171(BigDecimal), 30(BigDecimal), 1(Integer), 13.950(BigDecimal), 30.810(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0071(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0071(String), 张瑛倩(String), B(String), 2(String), 13847059900(String), 1(String), 0504726(String), 1(String), 0.465(BigDecimal), 2901(BigDecimal), 2901(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.010(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:30:26.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0072(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0072(String), 李希然(String), A(String), 2(String), 13604746361(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10054(BigDecimal), 10236(BigDecimal), 182(BigDecimal), 1(Integer), 84.630(BigDecimal), 282.590(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0073(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0073(String), 陈建军1(String), A(String), 2(String), 13191332633(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9878(BigDecimal), 9979(BigDecimal), 101(BigDecimal), 1(Integer), 46.965(BigDecimal), -26.335(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0074(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0074(String), 张德俊（陈志强）(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 1824(BigDecimal), 2030(BigDecimal), 206(BigDecimal), 1(Integer), 95.790(BigDecimal), -7.590(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0075(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0075(String), 马子龙(String), A(String), 2(String), 15947006131(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5656(BigDecimal), 5714(BigDecimal), 58(BigDecimal), 1(Integer), 26.970(BigDecimal), -18.490(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0076(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0076(String), 张艳琴1(String), A(String), 2(String), 13015115468(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10644(BigDecimal), 10669(BigDecimal), 25(BigDecimal), 1(Integer), 11.625(BigDecimal), 9.205(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0077(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0077(String), 田中瑞(String), A(String), 2(String), 15148475398(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6237(BigDecimal), 6298(BigDecimal), 61(BigDecimal), 1(Integer), 28.365(BigDecimal), 90.695(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0078(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0078(String), 徐相军(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 5573(BigDecimal), 5575(BigDecimal), 2(BigDecimal), 1(Integer), 0.930(BigDecimal), 4.580(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0079(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0079(String), 蔡玉迁(String), A(String), 2(String), 15048092750(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9579(BigDecimal), 9654(BigDecimal), 75(BigDecimal), 1(Integer), 34.875(BigDecimal), 42.135(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0080(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0080(String), 高学德(String), C(String), 2(String), 13848600170(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7841(BigDecimal), 7949(BigDecimal), 108(BigDecimal), 1(Integer), 50.220(BigDecimal), -29.910(BigDecimal), 2019-07(String), 刘桂艳(String), 2019-06-27 11:05:04.0(Timestamp), 刘桂艳(String), (String)
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0081(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0081(String), 任凤萍(String), A(String), 2(String), 13134974396(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2510(BigDecimal), 2590(BigDecimal), 80(BigDecimal), 1(Integer), 37.200(BigDecimal), 5.330(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0082(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0082(String), 黄柏安(String), B(String), 2(String), 15104953757(String), 1(String), 0504936(String), 1(String), 0.465(BigDecimal), 2405(BigDecimal), 2575(BigDecimal), 170(BigDecimal), 1(Integer), 79.050(BigDecimal), -79.050(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0083(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0083(String), 刘占田(String), A(String), 2(String), 15104967357(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4521(BigDecimal), 4656(BigDecimal), 135(BigDecimal), 1(Integer), 62.775(BigDecimal), -53.845(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:03 -<==    Updates: 1
2019-07-31 12:44:03 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:03 -==> Parameters: 2019-06(String), 2(String), 1-0084(String)
2019-07-31 12:44:03 -<==      Total: 1
2019-07-31 12:44:03 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:03 -==> Parameters: 1-0084(String), 宫跃富(String), A(String), 2(String), 15548009108(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6814(BigDecimal), 6975(BigDecimal), 161(BigDecimal), 1(Integer), 74.865(BigDecimal), -66.455(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0085(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0085(String), 袁绍力(String), A(String), 2(String), 13789407672(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9(BigDecimal), 11(BigDecimal), 2(BigDecimal), 1(Integer), 0.930(BigDecimal), 42.320(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -请求地址 : http://localhost:8081/index
2019-07-31 12:44:04 -HTTP METHOD : GET
2019-07-31 12:44:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 12:44:04 -参数 : [{}]
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0086(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0086(String), 刘昕双(String), A(String), 2(String), 13015118581(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4905(BigDecimal), 5161(BigDecimal), 256(BigDecimal), 1(Integer), 119.040(BigDecimal), -100.190(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 12:44:04 -==> Parameters: 1(Long)
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0087(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0087(String), 李龙兴(String), A(String), 2(String), 13848096173(String), 1(String), (String), 1(String), 0.465(BigDecimal), 1012(BigDecimal), 1052(BigDecimal), 40(BigDecimal), 1(Integer), 18.600(BigDecimal), 16.580(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0088(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0088(String), 孙凤权(String), A(String), 2(String), 13614702075(String), 1(String), (String), 1(String), 0.465(BigDecimal), 11106(BigDecimal), 11196(BigDecimal), 90(BigDecimal), 1(Integer), 41.850(BigDecimal), 124.210(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0089(String)
2019-07-31 12:44:04 -<==      Total: 51
2019-07-31 12:44:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 12:44:04 -==> Parameters: 138(Long)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -耗时 : 334
2019-07-31 12:44:04 -返回值 : index_v1
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0089(String), 郭鑫(String), B(String), 2(String), 13948096589(String), 1(String), 0502559(String), 1(String), 0.465(BigDecimal), 7763(BigDecimal), 7872(BigDecimal), 109(BigDecimal), 1(Integer), 50.685(BigDecimal), -50.675(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 12:44:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 334(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 12:44:04.431(Timestamp)
2019-07-31 12:44:04 -请求地址 : http://localhost:8081/main
2019-07-31 12:44:04 -HTTP METHOD : GET
2019-07-31 12:44:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:44:04 -参数 : []
2019-07-31 12:44:04 -耗时 : 0
2019-07-31 12:44:04 -返回值 : main
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0090(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0090(String), 刘喜臣2(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 11318(BigDecimal), 11440(BigDecimal), 122(BigDecimal), 1(Integer), 56.730(BigDecimal), 37.410(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932636(String)
2019-07-31 12:44:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 12:44:04 -HTTP METHOD : GET
2019-07-31 12:44:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 12:44:04 -参数 : []
2019-07-31 12:44:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 12:44:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -<==      Total: 0
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0091(String)
2019-07-31 12:44:04 -==> Parameters: 1(Long), 0(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0091(String), 金长海(String), A(String), 2(String), 18347028367(String), 1(String), (String), 1(String), 0.465(BigDecimal), 258(BigDecimal), 352(BigDecimal), 94(BigDecimal), 1(Integer), 43.710(BigDecimal), -70.880(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:04 -<==    Updates: 1
2019-07-31 12:44:04 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:04 -==> Parameters: 2019-06(String), 2(String), 1-0092(String)
2019-07-31 12:44:04 -<==      Total: 1
2019-07-31 12:44:04 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:04 -==> Parameters: 1-0092(String), 殷磊(String), B(String), 2(String), 13191343178(String), 1(String), 0500953(String), 1(String), 0.465(BigDecimal), 8197(BigDecimal), 8268(BigDecimal), 71(BigDecimal), 1(Integer), 33.015(BigDecimal), -33.015(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -请求地址 : http://localhost:8081/main
2019-07-31 12:44:05 -HTTP METHOD : GET
2019-07-31 12:44:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 12:44:05 -参数 : []
2019-07-31 12:44:05 -耗时 : 0
2019-07-31 12:44:05 -返回值 : main
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0093(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0093(String), 高俊岭(String), B(String), 2(String), 13948801796(String), 1(String), 0502372(String), 1(String), 0.465(BigDecimal), 6240(BigDecimal), 6319(BigDecimal), 79(BigDecimal), 1(Integer), 36.735(BigDecimal), -36.725(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -耗时 : 314
2019-07-31 12:44:05 -返回值 : com.bootdo.common.utils.PageUtils@18b34200
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0094(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0094(String), 陈建国1(String), B(String), 2(String), 15048054426(String), 1(String), 0502101(String), 1(String), 0.465(BigDecimal), 1210(BigDecimal), 1299(BigDecimal), 89(BigDecimal), 1(Integer), 41.385(BigDecimal), -41.385(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0095(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0095(String), 冯亚娟(String), B(String), 2(String), 15148475979(String), 1(String), 0500193(String), 1(String), 0.465(BigDecimal), 5743(BigDecimal), 5862(BigDecimal), 119(BigDecimal), 1(Integer), 55.335(BigDecimal), -55.325(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0096(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0096(String), 李桂芬(String), A(String), 2(String), 15148592761(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5319(BigDecimal), 5422(BigDecimal), 103(BigDecimal), 1(Integer), 47.895(BigDecimal), 1.405(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0097(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0097(String), 袁绍学(String), B(String), 2(String), 13789407672(String), 1(String), 0500382(String), 1(String), 0.465(BigDecimal), 8445(BigDecimal), 8568(BigDecimal), 123(BigDecimal), 1(Integer), 57.195(BigDecimal), -57.195(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0098(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0098(String), 张丽敏(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 5313(BigDecimal), 5313(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), -138.940(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0099(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0099(String), 刘新蒙(String), A(String), 2(String), 13191313981(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4373(BigDecimal), 4431(BigDecimal), 58(BigDecimal), 1(Integer), 26.970(BigDecimal), 71.270(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:05 -<==    Updates: 1
2019-07-31 12:44:05 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:05 -==> Parameters: 2019-06(String), 2(String), 1-0100(String)
2019-07-31 12:44:05 -<==      Total: 1
2019-07-31 12:44:05 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:05 -==> Parameters: 1-0100(String), 邵玉田(String), B(String), 2(String), 15104953758(String), 1(String), 0502880(String), 1(String), 0.465(BigDecimal), 7953(BigDecimal), 8024(BigDecimal), 71(BigDecimal), 1(Integer), 33.015(BigDecimal), -33.005(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0101(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0101(String), 张桂林1(String), A(String), 2(String), 15947101721(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4381(BigDecimal), 4381(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.260(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0102(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0102(String), 李有恒(String), B(String), 2(String), 13848709152(String), 1(String), 0500648(String), 1(String), 0.465(BigDecimal), 21715(BigDecimal), 21889(BigDecimal), 174(BigDecimal), 1(Integer), 80.910(BigDecimal), -80.900(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0103(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0103(String), 魏庆元(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 7800(BigDecimal), 7800(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), -125.970(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2285377(String)
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0104(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0104(String), 卫国庆(String), A(String), 2(String), 13947014641(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10358(BigDecimal), 10541(BigDecimal), 183(BigDecimal), 1(Integer), 85.095(BigDecimal), -85.075(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0105(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0105(String), 张文武(String), B(String), 2(String), 13134965961(String), 1(String), 0502030(String), 1(String), 0.465(BigDecimal), 6492(BigDecimal), 6785(BigDecimal), 293(BigDecimal), 1(Integer), 136.245(BigDecimal), -136.245(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0106(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0106(String), 孟凡维(String), A(String), 2(String), 15647075108(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8443(BigDecimal), 8628(BigDecimal), 185(BigDecimal), 1(Integer), 86.025(BigDecimal), -53.145(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0107(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0107(String), 李忠良1(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 357(BigDecimal), 363(BigDecimal), 6(BigDecimal), 1(Integer), 2.790(BigDecimal), 1.530(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:06 -<==    Updates: 1
2019-07-31 12:44:06 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:06 -==> Parameters: 2019-06(String), 2(String), 1-0108(String)
2019-07-31 12:44:06 -<==      Total: 1
2019-07-31 12:44:06 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:06 -==> Parameters: 1-0108(String), 王双喜(String), A(String), 2(String), 15048065598(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6293(BigDecimal), 6408(BigDecimal), 115(BigDecimal), 1(Integer), 53.475(BigDecimal), -34.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0109(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0109(String), 包付东1(String), B(String), 2(String), 13947088450(String), 1(String), 0504295(String), 1(String), 0.465(BigDecimal), 8158(BigDecimal), 8253(BigDecimal), 95(BigDecimal), 1(Integer), 44.175(BigDecimal), -44.165(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0110(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0110(String), 韩学敏(String), A(String), 2(String), 13015118801(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8658(BigDecimal), 8728(BigDecimal), 70(BigDecimal), 1(Integer), 32.550(BigDecimal), 53.710(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0111(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0111(String), 刘银(String), A(String), 2(String), 13754008033(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6150(BigDecimal), 6164(BigDecimal), 14(BigDecimal), 1(Integer), 6.510(BigDecimal), 47.360(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0112(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0112(String), 吴晓龙(String), A(String), 2(String), 15547078749(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2671(BigDecimal), 2671(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.000(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0113(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0113(String), 李德臣(String), B(String), 2(String), 13088529080(String), 1(String), 0500131(String), 1(String), 0.465(BigDecimal), 3563(BigDecimal), 3579(BigDecimal), 16(BigDecimal), 1(Integer), 7.440(BigDecimal), -7.430(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:31:48.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0114(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0114(String), 孙生财(String), A(String), 2(String), 13947011192(String), 1(String), (String), 1(String), 0.465(BigDecimal), 15251(BigDecimal), 15423(BigDecimal), 172(BigDecimal), 1(Integer), 79.980(BigDecimal), -13.660(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0115(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0115(String), 张胜文(String), A(String), 2(String), 13614702148(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10209(BigDecimal), 10351(BigDecimal), 142(BigDecimal), 1(Integer), 66.030(BigDecimal), -36.800(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0116(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0116(String), 魏建华(String), B(String), 2(String), 13848039395(String), 1(String), 0506313(String), 1(String), 0.465(BigDecimal), 9250(BigDecimal), 9272(BigDecimal), 22(BigDecimal), 1(Integer), 10.230(BigDecimal), -10.220(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0117(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0117(String), 袁振军(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 4707(BigDecimal), 4812(BigDecimal), 105(BigDecimal), 1(Integer), 48.825(BigDecimal), -36.725(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7933703(String)
2019-07-31 12:44:07 -<==    Updates: 1
2019-07-31 12:44:07 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:07 -==> Parameters: 2019-06(String), 2(String), 1-0118(String)
2019-07-31 12:44:07 -<==      Total: 1
2019-07-31 12:44:07 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:07 -==> Parameters: 1-0118(String), 王立华1(String), A(String), 2(String), 15547088547(String), 1(String), (String), 1(String), 0.465(BigDecimal), 11096(BigDecimal), 11277(BigDecimal), 181(BigDecimal), 1(Integer), 84.165(BigDecimal), 38.465(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0119(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0119(String), 孙长宝(String), A(String), 2(String), 13948608269(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7530(BigDecimal), 7554(BigDecimal), 24(BigDecimal), 1(Integer), 11.160(BigDecimal), 12.700(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0120(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0120(String), 齐桂珍(String), A(String), 2(String), 15204920029(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4355(BigDecimal), 4359(BigDecimal), 4(BigDecimal), 1(Integer), 1.860(BigDecimal), 69.070(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0121(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0121(String), 李少光(String), B(String), 2(String), 15547074958(String), 1(String), 0500148(String), 1(String), 0.465(BigDecimal), 5750(BigDecimal), 5929(BigDecimal), 179(BigDecimal), 1(Integer), 83.235(BigDecimal), -83.235(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0122(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0122(String), 于世民1(String), A(String), 2(String), 13947064799(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9313(BigDecimal), 9542(BigDecimal), 229(BigDecimal), 1(Integer), 106.485(BigDecimal), 12.195(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0123(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0123(String), 李云平(String), B(String), 2(String), (String), 1(String), 0500666(String), 1(String), 0.465(BigDecimal), 5332(BigDecimal), 5466(BigDecimal), 134(BigDecimal), 1(Integer), 62.310(BigDecimal), -62.300(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7933685(String)
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0124(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0124(String), 李兴忠(String), B(String), 2(String), 13948603074(String), 1(String), 0500654(String), 1(String), 0.465(BigDecimal), 9122(BigDecimal), 9223(BigDecimal), 101(BigDecimal), 1(Integer), 46.965(BigDecimal), -46.965(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0125(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0125(String), 王汉伟(String), B(String), 2(String), 13848039368(String), 1(String), 0504139(String), 1(String), 0.465(BigDecimal), 9218(BigDecimal), 9324(BigDecimal), 106(BigDecimal), 1(Integer), 49.290(BigDecimal), -49.290(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0126(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0126(String), 刘洪太(String), A(String), 2(String), 15248790963(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10350(BigDecimal), 10471(BigDecimal), 121(BigDecimal), 1(Integer), 56.265(BigDecimal), 41.635(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0127(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0127(String), 兰继道(String), B(String), 2(String), 13134979335(String), 1(String), 0500125(String), 1(String), 0.465(BigDecimal), 8854(BigDecimal), 8934(BigDecimal), 80(BigDecimal), 1(Integer), 37.200(BigDecimal), -37.190(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0128(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0128(String), 马海友(String), B(String), 2(String), 13754037013(String), 1(String), 0506886(String), 1(String), 0.465(BigDecimal), 9275(BigDecimal), 9306(BigDecimal), 31(BigDecimal), 1(Integer), 14.415(BigDecimal), -14.415(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0129(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0129(String), 陈海军(String), A(String), 2(String), 13739967033(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4189(BigDecimal), 4278(BigDecimal), 89(BigDecimal), 1(Integer), 41.385(BigDecimal), -13.335(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0130(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0130(String), 宋跃农(String), B(String), 2(String), 18904705908(String), 1(String), 0504531(String), 1(String), 0.465(BigDecimal), 6967(BigDecimal), 7016(BigDecimal), 49(BigDecimal), 1(Integer), 22.785(BigDecimal), -22.775(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0131(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0131(String), 刘丽萍(String), A(String), 2(String), 15048052870(String), 1(String), (String), 1(String), 0.465(BigDecimal), 473(BigDecimal), 473(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 67.000(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0132(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0132(String), 韩益华(String), A(String), 2(String), 15947756761(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2722(BigDecimal), 2724(BigDecimal), 2(BigDecimal), 1(Integer), 0.930(BigDecimal), 33.640(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0133(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0133(String), 韩长启(String), A(String), 2(String), 13804704993(String), 1(String), (String), 1(String), 0.465(BigDecimal), 12870(BigDecimal), 13058(BigDecimal), 188(BigDecimal), 1(Integer), 87.420(BigDecimal), -232.900(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0134(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0134(String), 罗新(String), A(String), 2(String), 13171187855(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6152(BigDecimal), 6152(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.810(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0135(String)
2019-07-31 12:44:08 -<==      Total: 1
2019-07-31 12:44:08 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:08 -==> Parameters: 1-0135(String), 韩志(String), B(String), 2(String), (String), 1(String), 0504382(String), 1(String), 0.465(BigDecimal), 5091(BigDecimal), 5113(BigDecimal), 22(BigDecimal), 1(Integer), 10.230(BigDecimal), -10.220(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:08 -<==    Updates: 1
2019-07-31 12:44:08 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:08 -==> Parameters: 2019-06(String), 2(String), 1-0136(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0136(String), 苏雪峰(String), B(String), 2(String), 13848809090(String), 1(String), 0506199(String), 1(String), 0.465(BigDecimal), 9731(BigDecimal), 9904(BigDecimal), 173(BigDecimal), 1(Integer), 80.445(BigDecimal), -80.435(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0137(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0137(String), 卫学海(String), A(String), 2(String), 15247077640(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8789(BigDecimal), 8949(BigDecimal), 160(BigDecimal), 1(Integer), 74.400(BigDecimal), -73.850(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0138(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0138(String), 王英石(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 2974(BigDecimal), 3112(BigDecimal), 138(BigDecimal), 1(Integer), 64.170(BigDecimal), 14.180(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2312153(String)
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0139(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0139(String), 高玉海(String), B(String), 2(String), 15334910060(String), 1(String), 0502905(String), 1(String), 0.465(BigDecimal), 3791(BigDecimal), 3860(BigDecimal), 69(BigDecimal), 1(Integer), 32.085(BigDecimal), -32.075(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0140(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0140(String), 王建伟(String), B(String), 2(String), 13134979198(String), 1(String), 0502746(String), 1(String), 0.465(BigDecimal), 1194(BigDecimal), 1271(BigDecimal), 77(BigDecimal), 1(Integer), 35.805(BigDecimal), -35.805(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0141(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0141(String), 吕书印(String), B(String), 2(String), 13754009813(String), 1(String), 0502286(String), 1(String), 0.465(BigDecimal), 36250(BigDecimal), 36414(BigDecimal), 164(BigDecimal), 1(Integer), 76.260(BigDecimal), -76.250(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0142(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0142(String), 詹俊杰(String), A(String), 2(String), 13848602411(String), 1(String), (String), 1(String), 0.465(BigDecimal), 1852(BigDecimal), 1938(BigDecimal), 86(BigDecimal), 1(Integer), 39.990(BigDecimal), 26.580(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0143(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0143(String), 高荣胜(String), A(String), 2(String), 15104979056(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4033(BigDecimal), 4251(BigDecimal), 218(BigDecimal), 1(Integer), 101.370(BigDecimal), -53.600(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0144(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0144(String), 李羽明(String), A(String), 2(String), 13948807885(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6786(BigDecimal), 6786(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 43.260(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0145(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0145(String), 张丽君(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 3971(BigDecimal), 4057(BigDecimal), 86(BigDecimal), 1(Integer), 39.990(BigDecimal), 106.420(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0146(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0146(String), 孙武(String), A(String), 2(String), 13948608280(String), 1(String), (String), 1(String), 0.465(BigDecimal), 1445(BigDecimal), 1445(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 4.520(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0147(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0147(String), 陈国峰(String), B(String), 2(String), 15249418385(String), 1(String), 0502100(String), 1(String), 0.465(BigDecimal), 4078(BigDecimal), 4221(BigDecimal), 143(BigDecimal), 1(Integer), 66.495(BigDecimal), -66.495(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0148(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0148(String), 张勇1(String), B(String), 2(String), 13191308352(String), 1(String), 0504727(String), 1(String), 0.465(BigDecimal), 1994(BigDecimal), 1996(BigDecimal), 2(BigDecimal), 1(Integer), 0.930(BigDecimal), -0.920(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0149(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0149(String), 李德海(String), A(String), 2(String), 13947064789(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7760(BigDecimal), 7812(BigDecimal), 52(BigDecimal), 1(Integer), 24.180(BigDecimal), 8.330(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0150(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0150(String), 武风仁(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 2231(BigDecimal), 2280(BigDecimal), 49(BigDecimal), 1(Integer), 22.785(BigDecimal), 20.575(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2285234(String)
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0151(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0151(String), 李嘉顺(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 363(BigDecimal), 363(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 363.590(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:09 -<==    Updates: 1
2019-07-31 12:44:09 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:09 -==> Parameters: 2019-06(String), 2(String), 1-0152(String)
2019-07-31 12:44:09 -<==      Total: 1
2019-07-31 12:44:09 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:09 -==> Parameters: 1-0152(String), 刘金忠1(String), B(String), 2(String), 13134977570(String), 1(String), 0504465(String), 1(String), 0.465(BigDecimal), 6502(BigDecimal), 6623(BigDecimal), 121(BigDecimal), 1(Integer), 56.265(BigDecimal), -56.265(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0153(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0153(String), 孙宝富(String), B(String), 2(String), 15247012943(String), 1(String), 0502323(String), 1(String), 0.465(BigDecimal), 9830(BigDecimal), 9969(BigDecimal), 139(BigDecimal), 1(Integer), 64.635(BigDecimal), -64.635(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0154(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0154(String), 杨志存(String), A(String), 2(String), 15048114834(String), 1(String), (String), 1(String), 0.465(BigDecimal), 11049(BigDecimal), 11167(BigDecimal), 118(BigDecimal), 1(Integer), 54.870(BigDecimal), -51.870(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0155(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0155(String), 王兆华(String), A(String), 2(String), 13088559943(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4786(BigDecimal), 4965(BigDecimal), 179(BigDecimal), 1(Integer), 83.235(BigDecimal), -216.915(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0156(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0156(String), 耿继体(String), B(String), 2(String), 13634707513(String), 1(String), 0500555(String), 1(String), 0.465(BigDecimal), 4096(BigDecimal), 4318(BigDecimal), 222(BigDecimal), 1(Integer), 103.230(BigDecimal), -103.220(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0157(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0157(String), 李德奎(String), A(String), 2(String), 15848058065(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8251(BigDecimal), 8271(BigDecimal), 20(BigDecimal), 1(Integer), 9.300(BigDecimal), 15.290(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0158(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0158(String), 蒋兰秀(String), A(String), 2(String), 13135747119(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10839(BigDecimal), 11011(BigDecimal), 172(BigDecimal), 1(Integer), 79.980(BigDecimal), -75.160(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0159(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0159(String), 郭成俊(String), A(String), 2(String), 15048092212(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10240(BigDecimal), 10240(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 120.360(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0160(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0160(String), 王福林(String), A(String), 2(String), 13947060194(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3083(BigDecimal), 3201(BigDecimal), 118(BigDecimal), 1(Integer), 54.870(BigDecimal), 44.540(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0161(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0161(String), 王如彦(String), A(String), 2(String), 13030423586(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9260(BigDecimal), 9260(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 4.320(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0162(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0162(String), 韩洪军(String), A(String), 2(String), 15714705934(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6768(BigDecimal), 6835(BigDecimal), 67(BigDecimal), 1(Integer), 31.155(BigDecimal), -12.025(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0163(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0163(String), 郭志亮(String), B(String), 2(String), 15334906488(String), 1(String), 0500561(String), 1(String), 0.465(BigDecimal), 1555(BigDecimal), 1612(BigDecimal), 57(BigDecimal), 1(Integer), 26.505(BigDecimal), -26.495(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0164(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0164(String), 杨树刚(String), B(String), 2(String), 15104702175(String), 1(String), 0502807(String), 1(String), 0.465(BigDecimal), 3639(BigDecimal), 3639(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.000(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:33:01.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0165(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0165(String), 刘守信(String), A(String), 2(String), 13848081610(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4566(BigDecimal), 4566(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 111.380(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0166(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0166(String), 韩泽全(String), B(String), 2(String), 18547017165(String), 1(String), 0500911(String), 1(String), 0.465(BigDecimal), 4823(BigDecimal), 4915(BigDecimal), 92(BigDecimal), 1(Integer), 42.780(BigDecimal), -42.770(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0167(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0167(String), 马志言(String), A(String), 2(String), 15048138327(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6369(BigDecimal), 6369(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 9.760(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0168(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0168(String), 申振华(String), A(String), 2(String), 13191336562(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5348(BigDecimal), 5493(BigDecimal), 145(BigDecimal), 1(Integer), 67.425(BigDecimal), -66.505(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0169(String)
2019-07-31 12:44:10 -<==      Total: 1
2019-07-31 12:44:10 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:10 -==> Parameters: 1-0169(String), 郭占富(String), A(String), 2(String), 15149277616(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10159(BigDecimal), 10342(BigDecimal), 183(BigDecimal), 1(Integer), 85.095(BigDecimal), -45.795(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:10 -<==    Updates: 1
2019-07-31 12:44:10 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:10 -==> Parameters: 2019-06(String), 2(String), 1-0170(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0170(String), 陈国利(String), A(String), 2(String), 15104995972(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5215(BigDecimal), 5221(BigDecimal), 6(BigDecimal), 1(Integer), 2.790(BigDecimal), 14.940(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0171(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0171(String), 郭洪文1(String), A(String), 2(String), 13848092249(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8234(BigDecimal), 8234(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 114.540(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0172(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0172(String), 王贵仲(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 3086(BigDecimal), 3218(BigDecimal), 132(BigDecimal), 1(Integer), 61.380(BigDecimal), -24.370(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932917(String)
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0173(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0173(String), 王兰福(String), B(String), 2(String), 13914702170(String), 1(String), 0502748(String), 1(String), 0.465(BigDecimal), 5419(BigDecimal), 5521(BigDecimal), 102(BigDecimal), 1(Integer), 47.430(BigDecimal), -47.420(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0174(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0174(String), 陈德建(String), B(String), 2(String), (String), 1(String), 0502099(String), 1(String), 0.465(BigDecimal), 9956(BigDecimal), 10123(BigDecimal), 167(BigDecimal), 1(Integer), 77.655(BigDecimal), -77.645(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7933917(String)
2019-07-31 12:44:11 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0175(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0175(String), 宣国义(String), A(String), 2(String), 13134962169(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9768(BigDecimal), 9848(BigDecimal), 80(BigDecimal), 1(Integer), 37.200(BigDecimal), 54.540(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0176(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0176(String), 贾秀仁(String), B(String), 2(String), 13722003994(String), 1(String), 0502326(String), 1(String), 0.465(BigDecimal), 3318(BigDecimal), 3459(BigDecimal), 141(BigDecimal), 1(Integer), 65.565(BigDecimal), -65.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0177(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0177(String), 孙宝利(String), B(String), 2(String), 15104984538(String), 1(String), 0502325(String), 1(String), 0.465(BigDecimal), 9289(BigDecimal), 9370(BigDecimal), 81(BigDecimal), 1(Integer), 37.665(BigDecimal), -37.655(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0178(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0178(String), 武云峰(String), B(String), 2(String), 15048103378(String), 1(String), 0502508(String), 1(String), 0.465(BigDecimal), 5768(BigDecimal), 5773(BigDecimal), 5(BigDecimal), 1(Integer), 2.325(BigDecimal), -2.325(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0179(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0179(String), 兰金生(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 11724(BigDecimal), 11912(BigDecimal), 188(BigDecimal), 1(Integer), 87.420(BigDecimal), 110.300(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0180(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0180(String), 张志先(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 2808(BigDecimal), 2931(BigDecimal), 123(BigDecimal), 1(Integer), 57.195(BigDecimal), 42.175(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 2285839(String)
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0181(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0181(String), 赵国臣(String), C(String), 2(String), 13274706437(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4877(BigDecimal), 5119(BigDecimal), 242(BigDecimal), 1(Integer), 112.530(BigDecimal), -106.120(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0182(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0182(String), 王阴山(String), A(String), 2(String), 13722033072(String), 1(String), (String), 1(String), 0.465(BigDecimal), 12387(BigDecimal), 12579(BigDecimal), 192(BigDecimal), 1(Integer), 89.280(BigDecimal), 88.080(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0183(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0183(String), 刘金华1(String), B(String), 2(String), 13030407298(String), 1(String), 0500335(String), 1(String), 0.465(BigDecimal), 11174(BigDecimal), 11308(BigDecimal), 134(BigDecimal), 1(Integer), 62.310(BigDecimal), -62.300(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0184(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0184(String), 张财(String), A(String), 2(String), 15848787440(String), 1(String), 0502442(String), 1(String), 0.465(BigDecimal), 7633(BigDecimal), 7737(BigDecimal), 104(BigDecimal), 1(Integer), 48.360(BigDecimal), 98.640(BigDecimal), 2019-07(String), 刘宇(String), 2019-07-11 11:32:15.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:11 -<==    Updates: 1
2019-07-31 12:44:11 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:11 -==> Parameters: 2019-06(String), 2(String), 1-0185(String)
2019-07-31 12:44:11 -<==      Total: 1
2019-07-31 12:44:11 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:11 -==> Parameters: 1-0185(String), 冯俊启(String), A(String), 2(String), 13191318128(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4845(BigDecimal), 4845(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 11.850(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0186(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0186(String), 张国龙1(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 1984(BigDecimal), 2099(BigDecimal), 115(BigDecimal), 1(Integer), 53.475(BigDecimal), -25.665(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932272(String)
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0187(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0187(String), 付伟(String), B(String), 2(String), 15904802445(String), 1(String), 0500058(String), 1(String), 0.465(BigDecimal), 6671(BigDecimal), 6814(BigDecimal), 143(BigDecimal), 1(Integer), 66.495(BigDecimal), -66.485(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0188(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0188(String), 梁景生(String), A(String), 2(String), 15547084859(String), 1(String), (String), 1(String), 0.465(BigDecimal), 708(BigDecimal), 758(BigDecimal), 50(BigDecimal), 1(Integer), 23.250(BigDecimal), 19.420(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0189(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0189(String), 李森林(String), A(String), 2(String), 15849033202(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9901(BigDecimal), 10078(BigDecimal), 177(BigDecimal), 1(Integer), 82.305(BigDecimal), 114.695(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0190(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0190(String), 张青生(String), A(String), 2(String), 13947018398(String), 1(String), (String), 1(String), 0.465(BigDecimal), 17421(BigDecimal), 17448(BigDecimal), 27(BigDecimal), 1(Integer), 12.555(BigDecimal), 3.345(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0191(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0191(String), 闫淑杰(String), A(String), 2(String), 13134928844(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3676(BigDecimal), 3858(BigDecimal), 182(BigDecimal), 1(Integer), 84.630(BigDecimal), 19.860(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0192(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0192(String), 王鑫2(String), B(String), 2(String), 15848787440(String), 1(String), 0502762(String), 1(String), 0.465(BigDecimal), 9896(BigDecimal), 9985(BigDecimal), 89(BigDecimal), 1(Integer), 41.385(BigDecimal), -41.385(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0193(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0193(String), 田永林(String), A(String), 2(String), 13948401059(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6501(BigDecimal), 6576(BigDecimal), 75(BigDecimal), 1(Integer), 34.875(BigDecimal), -30.535(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0194(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0194(String), 徐忠海(String), A(String), 2(String), 15847743118(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6348(BigDecimal), 6474(BigDecimal), 126(BigDecimal), 1(Integer), 58.590(BigDecimal), 318.990(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0195(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0195(String), 王利平(String), A(String), 2(String), 13171188267(String), 1(String), (String), 1(String), 0.465(BigDecimal), 14291(BigDecimal), 14291(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 173.800(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0196(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0196(String), 邢建军(String), A(String), 2(String), 15049041022(String), 1(String), (String), 1(String), 0.465(BigDecimal), 3993(BigDecimal), 4060(BigDecimal), 67(BigDecimal), 1(Integer), 31.155(BigDecimal), -55.285(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0197(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0197(String), 张艳红(String), B(String), 2(String), 13754033738(String), 1(String), 0502037(String), 1(String), 0.465(BigDecimal), 9357(BigDecimal), 9552(BigDecimal), 195(BigDecimal), 1(Integer), 90.675(BigDecimal), -90.675(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0198(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0198(String), 智旭亮(String), A(String), 2(String), 15247091971(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7376(BigDecimal), 7452(BigDecimal), 76(BigDecimal), 1(Integer), 35.340(BigDecimal), -12.610(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0199(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0199(String), 哈斯（总）(String), A(String), 2(String), 15104973118(String), 1(String), (String), 1(String), 0.465(BigDecimal), 18259(BigDecimal), 18259(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 1.130(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0200(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0200(String), 李子洋(String), B(String), 2(String), 13134919792(String), 1(String), 0502626(String), 1(String), 0.465(BigDecimal), 32850(BigDecimal), 32901(BigDecimal), 51(BigDecimal), 1(Integer), 23.715(BigDecimal), -23.705(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:34:14.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:12 -<==    Updates: 1
2019-07-31 12:44:12 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:12 -==> Parameters: 2019-06(String), 2(String), 1-0201(String)
2019-07-31 12:44:12 -<==      Total: 1
2019-07-31 12:44:12 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:12 -==> Parameters: 1-0201(String), 李晓权(String), A(String), 2(String), 15847743595(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9232(BigDecimal), 9351(BigDecimal), 119(BigDecimal), 1(Integer), 55.335(BigDecimal), 75.505(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0202(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0202(String), 武广臣1(String), A(String), 2(String), 15049089223(String), 1(String), (String), 1(String), 0.465(BigDecimal), 4777(BigDecimal), 4881(BigDecimal), 104(BigDecimal), 1(Integer), 48.360(BigDecimal), 91.850(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0203(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0203(String), 王金良1(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 8865(BigDecimal), 8891(BigDecimal), 26(BigDecimal), 1(Integer), 12.090(BigDecimal), 64.500(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0204(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0204(String), 魏作成(String), A(String), 2(String), 15104900428(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6560(BigDecimal), 6661(BigDecimal), 101(BigDecimal), 1(Integer), 46.965(BigDecimal), 225.185(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0205(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0205(String), 刘洪伟1(String), B(String), 2(String), 13754008033(String), 1(String), 0502260(String), 1(String), 0.465(BigDecimal), 4563(BigDecimal), 4591(BigDecimal), 28(BigDecimal), 1(Integer), 13.020(BigDecimal), -13.020(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:35:25.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0206(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0206(String), 孙玉显(String), B(String), 2(String), 15547012778(String), 1(String), 0504119(String), 1(String), 0.465(BigDecimal), 9630(BigDecimal), 9732(BigDecimal), 102(BigDecimal), 1(Integer), 47.430(BigDecimal), -47.420(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:36:54.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0207(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0207(String), 李君华(String), B(String), 2(String), 13614706420(String), 1(String), 0504423(String), 1(String), 0.465(BigDecimal), 1471(BigDecimal), 1564(BigDecimal), 93(BigDecimal), 1(Integer), 43.245(BigDecimal), -43.245(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0208(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0208(String), 徐昌(String), B(String), 2(String), 13134930157(String), 1(String), 0501011(String), 1(String), 0.465(BigDecimal), 11079(BigDecimal), 11214(BigDecimal), 135(BigDecimal), 1(Integer), 62.775(BigDecimal), -62.765(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0209(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0209(String), 陈文凤(String), A(String), 2(String), 13722000284(String), 1(String), (String), 1(String), 0.465(BigDecimal), 6357(BigDecimal), 6357(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 0.010(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0210(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0210(String), 黄建喜(String), A(String), 2(String), 13947003657(String), 1(String), 0500098(String), 1(String), 0.465(BigDecimal), 6880(BigDecimal), 7008(BigDecimal), 128(BigDecimal), 1(Integer), 59.520(BigDecimal), -96.260(BigDecimal), 2019-07(String), 刘宇(String), 2019-07-11 11:32:43.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0211(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0211(String), 张强(String), B(String), 2(String), 15771225971(String), 1(String), 0506411(String), 1(String), 0.465(BigDecimal), 5470(BigDecimal), 5598(BigDecimal), 128(BigDecimal), 1(Integer), 59.520(BigDecimal), -59.520(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0212(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0212(String), 马淑琴(String), A(String), 2(String), 13193145117(String), 1(String), (String), 1(String), 0.465(BigDecimal), 10384(BigDecimal), 10421(BigDecimal), 37(BigDecimal), 1(Integer), 17.205(BigDecimal), 57.905(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0213(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0213(String), 张智勇(String), B(String), 2(String), 15547078617(String), 1(String), 0504247(String), 1(String), 0.465(BigDecimal), 10391(BigDecimal), 10539(BigDecimal), 148(BigDecimal), 1(Integer), 68.820(BigDecimal), -68.810(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0214(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0214(String), 齐云秀(String), B(String), 2(String), 18604805568(String), 1(String), 0502299(String), 1(String), 0.465(BigDecimal), 5848(BigDecimal), 6021(BigDecimal), 173(BigDecimal), 1(Integer), 80.445(BigDecimal), -80.435(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:13 -<==    Updates: 1
2019-07-31 12:44:13 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:13 -==> Parameters: 2019-06(String), 2(String), 1-0215(String)
2019-07-31 12:44:13 -<==      Total: 1
2019-07-31 12:44:13 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:13 -==> Parameters: 1-0215(String), 刘学1(String), A(String), 2(String), 13722000490(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7830(BigDecimal), 7861(BigDecimal), 31(BigDecimal), 1(Integer), 14.415(BigDecimal), -13.415(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0216(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0216(String), 安志强(String), A(String), 2(String), 18748347189(String), 1(String), (String), 1(String), 0.465(BigDecimal), 2884(BigDecimal), 2903(BigDecimal), 19(BigDecimal), 1(Integer), 8.835(BigDecimal), -38.565(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0217(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0217(String), 刘金成(String), A(String), 2(String), 13947048863(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7088(BigDecimal), 7207(BigDecimal), 119(BigDecimal), 1(Integer), 55.335(BigDecimal), 24.865(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0218(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0218(String), 田秀丽1(String), A(String), 2(String), 13948508892(String), 1(String), (String), 1(String), 0.465(BigDecimal), 11098(BigDecimal), 11301(BigDecimal), 203(BigDecimal), 1(Integer), 94.395(BigDecimal), -87.295(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0219(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0219(String), 高国林1(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 8561(BigDecimal), 8931(BigDecimal), 370(BigDecimal), 1(Integer), 172.050(BigDecimal), -96.540(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932889(String)
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0220(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0220(String), 韩春海1(String), A(String), 2(String), 14747042184(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5994(BigDecimal), 6151(BigDecimal), 157(BigDecimal), 1(Integer), 73.005(BigDecimal), 22.925(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0221(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0221(String), 赵军1(String), A(String), 2(String), 13274706437(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7105(BigDecimal), 7119(BigDecimal), 14(BigDecimal), 1(Integer), 6.510(BigDecimal), 202.540(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0222(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0222(String), 高海英(String), A(String), 2(String), 18547015852(String), 1(String), (String), 1(String), 0.465(BigDecimal), 9126(BigDecimal), 9126(BigDecimal), 0(BigDecimal), 1(Integer), 0.000(BigDecimal), 108.320(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0223(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0223(String), 吴刚(String), B(String), 2(String), 13634709517(String), 1(String), 0520024(String), 1(String), 0.465(BigDecimal), 10999(BigDecimal), 11130(BigDecimal), 131(BigDecimal), 1(Integer), 60.915(BigDecimal), -60.905(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0224(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0224(String), 张振军(String), C(String), 2(String), 13948702151(String), 1(String), (String), 1(String), 0.465(BigDecimal), 7399(BigDecimal), 7550(BigDecimal), 151(BigDecimal), 1(Integer), 70.215(BigDecimal), -22.955(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0225(String)
2019-07-31 12:44:14 -<==      Total: 1
2019-07-31 12:44:14 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:14 -==> Parameters: 1-0225(String), 吴丙发(String), B(String), 2(String), (String), 1(String), 0500342(String), 1(String), 0.465(BigDecimal), 1556(BigDecimal), 1610(BigDecimal), 54(BigDecimal), 1(Integer), 25.110(BigDecimal), -25.100(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:37:33.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:14 -<==    Updates: 1
2019-07-31 12:44:14 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:14 -==> Parameters: 2019-06(String), 2(String), 1-0226(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0226(String), 崔右孝(String), C(String), 2(String), 18748487188(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5539(BigDecimal), 5736(BigDecimal), 197(BigDecimal), 1(Integer), 91.605(BigDecimal), -64.945(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0227(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0227(String), 徐洪浦(String), B(String), 2(String), 13030425956(String), 1(String), 0502409(String), 1(String), 0.465(BigDecimal), 10829(BigDecimal), 10891(BigDecimal), 62(BigDecimal), 1(Integer), 28.830(BigDecimal), -28.830(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0228(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0228(String), 赵振华(String), A(String), 2(String), 15104900455(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8994(BigDecimal), 9022(BigDecimal), 28(BigDecimal), 1(Integer), 13.020(BigDecimal), 60.340(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0229(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0229(String), 贾子臣(String), B(String), 2(String), 15049548365(String), 1(String), 0504397(String), 1(String), 0.465(BigDecimal), 10793(BigDecimal), 10928(BigDecimal), 135(BigDecimal), 1(Integer), 62.775(BigDecimal), -62.775(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932577(String)
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0230(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0230(String), 李豪(String), B(String), 2(String), 15048060986(String), 1(String), 0500137(String), 1(String), 0.465(BigDecimal), 5931(BigDecimal), 6178(BigDecimal), 247(BigDecimal), 1(Integer), 114.855(BigDecimal), -114.845(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0231(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0231(String), 郭建(String), B(String), 2(String), 13947015764(String), 1(String), 0502162(String), 1(String), 0.465(BigDecimal), 8248(BigDecimal), 8399(BigDecimal), 151(BigDecimal), 1(Integer), 70.215(BigDecimal), -70.215(BigDecimal), 2019-07(String), 刘宇(String), 2019-06-24 11:38:09.0(Timestamp), 刘宇(String), (String)
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0232(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0232(String), 李文华1(String), A(String), 2(String), 13015113006(String), 1(String), (String), 1(String), 0.465(BigDecimal), 8899(BigDecimal), 9106(BigDecimal), 207(BigDecimal), 1(Integer), 96.255(BigDecimal), -80.225(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0233(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0233(String), 刘作民(String), A(String), 2(String), (String), 1(String), (String), 1(String), 0.465(BigDecimal), 12419(BigDecimal), 12617(BigDecimal), 198(BigDecimal), 1(Integer), 92.070(BigDecimal), 78.710(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), 7932980(String)
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0234(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0234(String), 陈祥国(String), A(String), 2(String), 13171164303(String), 1(String), (String), 1(String), 0.465(BigDecimal), 1871(BigDecimal), 1974(BigDecimal), 103(BigDecimal), 1(Integer), 47.895(BigDecimal), -14.875(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0235(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0235(String), 苏龙(String), A(String), 2(String), 15734830468(String), 1(String), (String), 1(String), 0.465(BigDecimal), 15301(BigDecimal), 15451(BigDecimal), 150(BigDecimal), 1(Integer), 69.750(BigDecimal), -53.900(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 12:44:15 -<==    Updates: 1
2019-07-31 12:44:15 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE `create_time` = ? and user_org = ? and user_id = ? 
2019-07-31 12:44:15 -==> Parameters: 2019-06(String), 2(String), 1-0236(String)
2019-07-31 12:44:15 -<==      Total: 1
2019-07-31 12:44:15 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-07-31 12:44:15 -==> Parameters: 1-0236(String), 张华(String), A(String), 2(String), 15847004711(String), 1(String), (String), 1(String), 0.465(BigDecimal), 5696(BigDecimal), 5744(BigDecimal), 48(BigDecimal), 1(Integer), 22.320(BigDecimal), 139.980(BigDecimal), 2019-07(String), admin(String), 2019-06-01 22:16:51.0(Timestamp), admin(String), null
2019-07-31 17:16:55 -Starting BootdoApplication on PC-201905091110 with PID 67204 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 17:16:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 17:16:55 -The following profiles are active: dev
2019-07-31 17:16:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Wed Jul 31 17:16:55 CST 2019]; root of context hierarchy
2019-07-31 17:17:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 17:17:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6fb6cb63] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$620ffa0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 17:17:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 17:17:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:17:19 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 17:17:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 17:17:19 -Starting service [Tomcat]
2019-07-31 17:17:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 17:17:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 17:17:20 -Initializing Spring embedded WebApplicationContext
2019-07-31 17:17:20 -Root WebApplicationContext: initialization completed in 24534 ms
2019-07-31 17:17:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 17:17:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 17:17:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 17:17:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 17:17:21 -Filter xssFilter was not registered (disabled)
2019-07-31 17:17:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 17:17:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 17:17:21 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 17:17:21 -Servlet dispatcherServlet mapped to [/]
2019-07-31 17:17:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Wed Jul 31 17:16:55 CST 2019]; root of context hierarchy
2019-07-31 17:17:29 -Using default implementation for ThreadExecutor
2019-07-31 17:17:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 17:17:30 -Quartz Scheduler v.2.3.0 created.
2019-07-31 17:17:30 -RAMJobStore initialized.
2019-07-31 17:17:30 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 17:17:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 17:17:30 -Quartz scheduler version: 2.3.0
2019-07-31 17:17:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b10f60e
2019-07-31 17:17:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 17:17:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 17:17:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 17:17:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 17:17:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 17:17:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 17:17:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 17:17:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 17:17:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 17:17:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 17:17:36 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 17:17:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 17:17:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 17:17:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 17:17:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 17:17:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 17:17:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 17:17:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 17:17:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 17:17:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 17:17:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 17:17:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 17:17:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 17:17:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 17:17:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 17:17:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 17:17:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 17:17:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 17:17:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 17:17:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 17:17:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 17:17:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 17:17:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 17:17:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 17:17:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 17:17:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 17:17:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 17:17:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 17:17:36 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 17:17:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 17:17:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 17:17:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 17:17:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 17:17:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 17:17:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 17:17:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 17:17:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 17:17:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 17:17:36 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 17:17:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 17:17:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 17:17:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 17:17:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 17:17:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 17:17:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 17:17:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 17:17:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 17:17:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 17:17:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 17:17:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 17:17:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 17:17:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 17:17:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 17:17:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 17:17:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 17:17:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 17:17:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 17:17:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 17:17:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 17:17:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 17:17:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 17:17:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 17:17:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 17:17:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 17:17:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:17:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 17:17:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:17:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:17:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 17:17:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:17:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 17:17:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 17:17:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 17:17:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 17:17:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 17:17:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 17:17:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:17:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21aa6d6c: startup date [Wed Jul 31 17:16:55 CST 2019]; root of context hierarchy
2019-07-31 17:17:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:17:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:17:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 17:17:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 17:17:44 -Registering beans for JMX exposure on startup
2019-07-31 17:17:44 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 17:17:44 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 17:17:44 -Starting beans in phase 2147483647
2019-07-31 17:17:44 -Context refreshed
2019-07-31 17:17:45 -Found 1 custom documentation plugin(s)
2019-07-31 17:17:45 -Scanning for api listing references
2019-07-31 17:17:46 -Generating unique operation named: removeUsingPOST_1
2019-07-31 17:17:46 -Generating unique operation named: addUsingGET_1
2019-07-31 17:17:46 -Generating unique operation named: editUsingGET_1
2019-07-31 17:17:46 -Generating unique operation named: listUsingGET_1
2019-07-31 17:17:46 -Generating unique operation named: removeUsingPOST_2
2019-07-31 17:17:46 -Generating unique operation named: removeUsingPOST_3
2019-07-31 17:17:46 -Generating unique operation named: saveUsingPOST_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingGET_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingPOST_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingPUT_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 17:17:46 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 17:17:46 -Generating unique operation named: addUsingGET_2
2019-07-31 17:17:46 -Generating unique operation named: editUsingGET_2
2019-07-31 17:17:46 -Generating unique operation named: listUsingGET_2
2019-07-31 17:17:46 -Generating unique operation named: removeUsingPOST_4
2019-07-31 17:17:46 -Generating unique operation named: removeUsingPOST_5
2019-07-31 17:17:46 -Generating unique operation named: saveUsingPOST_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPOST_2
2019-07-31 17:17:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 17:17:47 -Generating unique operation named: addUsingGET_3
2019-07-31 17:17:47 -Generating unique operation named: editUsingGET_3
2019-07-31 17:17:47 -Generating unique operation named: listUsingGET_3
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_6
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_7
2019-07-31 17:17:47 -Generating unique operation named: saveUsingPOST_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingGET_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPOST_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPUT_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 17:17:47 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 17:17:47 -Generating unique operation named: addUsingGET_4
2019-07-31 17:17:47 -Generating unique operation named: editUsingGET_4
2019-07-31 17:17:47 -Generating unique operation named: listUsingGET_4
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_8
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_9
2019-07-31 17:17:47 -Generating unique operation named: saveUsingPOST_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingGET_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPOST_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPUT_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 17:17:47 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 17:17:47 -Generating unique operation named: ElecUsingGET_1
2019-07-31 17:17:47 -Generating unique operation named: addUsingGET_5
2019-07-31 17:17:47 -Generating unique operation named: editUsingGET_5
2019-07-31 17:17:47 -Generating unique operation named: listUsingGET_5
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_10
2019-07-31 17:17:47 -Generating unique operation named: removeUsingPOST_11
2019-07-31 17:17:47 -Generating unique operation named: saveUsingPOST_5
2019-07-31 17:17:47 -Generating unique operation named: updateUsingGET_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPOST_5
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPUT_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 17:17:47 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 17:17:47 -Generating unique operation named: editUsingGET_6
2019-07-31 17:17:47 -Generating unique operation named: listUsingGET_6
2019-07-31 17:17:47 -Generating unique operation named: updateUsingPOST_6
2019-07-31 17:17:47 -Generating unique operation named: addUsingGET_6
2019-07-31 17:17:47 -Generating unique operation named: editUsingGET_7
2019-07-31 17:17:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 17:17:47 -Generating unique operation named: listUsingGET_7
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_12
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_13
2019-07-31 17:17:48 -Generating unique operation named: saveUsingPOST_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingGET_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPOST_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPUT_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 17:17:48 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 17:17:48 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 17:17:48 -Generating unique operation named: addUsingGET_7
2019-07-31 17:17:48 -Generating unique operation named: editUsingGET_8
2019-07-31 17:17:48 -Generating unique operation named: listUsingGET_8
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_14
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_15
2019-07-31 17:17:48 -Generating unique operation named: saveUsingPOST_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingGET_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPOST_8
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPUT_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 17:17:48 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 17:17:48 -Generating unique operation named: addUsingGET_8
2019-07-31 17:17:48 -Generating unique operation named: editUsingGET_9
2019-07-31 17:17:48 -Generating unique operation named: listUsingGET_9
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_16
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_17
2019-07-31 17:17:48 -Generating unique operation named: saveUsingPOST_8
2019-07-31 17:17:48 -Generating unique operation named: updateUsingGET_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPOST_9
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPUT_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 17:17:48 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 17:17:48 -Generating unique operation named: addUsingGET_9
2019-07-31 17:17:48 -Generating unique operation named: editUsingGET_10
2019-07-31 17:17:48 -Generating unique operation named: infoUsingGET_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingPOST_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingPUT_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 17:17:48 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 17:17:48 -Generating unique operation named: listUsingGET_10
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_18
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_19
2019-07-31 17:17:48 -Generating unique operation named: saveUsingPOST_9
2019-07-31 17:17:48 -Generating unique operation named: updateUsingPOST_10
2019-07-31 17:17:48 -Generating unique operation named: listUsingGET_11
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_20
2019-07-31 17:17:48 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 17:17:48 -Generating unique operation named: addUsingGET_10
2019-07-31 17:17:48 -Generating unique operation named: editUsingGET_11
2019-07-31 17:17:48 -Generating unique operation named: listUsingGET_12
2019-07-31 17:17:48 -Generating unique operation named: removeUsingPOST_21
2019-07-31 17:17:48 -Generating unique operation named: saveUsingPOST_10
2019-07-31 17:17:48 -Generating unique operation named: treeUsingGET_1
2019-07-31 17:17:48 -Generating unique operation named: treeUsingGET_2
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPOST_11
2019-07-31 17:17:49 -Generating unique operation named: addUsingGET_11
2019-07-31 17:17:49 -Generating unique operation named: editUsingGET_12
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_13
2019-07-31 17:17:49 -Generating unique operation named: removeUsingPOST_22
2019-07-31 17:17:49 -Generating unique operation named: removeUsingPOST_23
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPOST_12
2019-07-31 17:17:49 -Generating unique operation named: addUsingGET_12
2019-07-31 17:17:49 -Generating unique operation named: editUsingGET_13
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_14
2019-07-31 17:17:49 -Generating unique operation named: removeUsingPOST_24
2019-07-31 17:17:49 -Generating unique operation named: removeUsingPOST_25
2019-07-31 17:17:49 -Generating unique operation named: saveUsingPOST_11
2019-07-31 17:17:49 -Generating unique operation named: updateUsingGET_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPOST_13
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPUT_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 17:17:49 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 17:17:49 -Generating unique operation named: addUsingGET_13
2019-07-31 17:17:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 17:17:49 -Generating unique operation named: editUsingGET_14
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_15
2019-07-31 17:17:49 -Generating unique operation named: printEditUsingGET_1
2019-07-31 17:17:49 -Generating unique operation named: removeUsingPOST_26
2019-07-31 17:17:49 -Generating unique operation named: saveUsingPOST_12
2019-07-31 17:17:49 -Generating unique operation named: updateUsingGET_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPOST_14
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPUT_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 17:17:49 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 17:17:49 -Generating unique operation named: addUsingGET_14
2019-07-31 17:17:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 17:17:49 -Generating unique operation named: editUsingGET_15
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_16
2019-07-31 17:17:49 -Generating unique operation named: saveUsingPOST_13
2019-07-31 17:17:49 -Generating unique operation named: saveUsingPOST_14
2019-07-31 17:17:49 -Generating unique operation named: updateUsingPOST_15
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_17
2019-07-31 17:17:49 -Generating unique operation named: listUsingHEAD_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingPOST_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingPUT_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingPATCH_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingDELETE_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 17:17:49 -Generating unique operation named: listUsingTRACE_1
2019-07-31 17:17:49 -Generating unique operation named: countDDUsingGET_1
2019-07-31 17:17:49 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 17:17:49 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 17:17:49 -Generating unique operation named: addUsingGET_15
2019-07-31 17:17:49 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 17:17:49 -Generating unique operation named: editUsingGET_16
2019-07-31 17:17:49 -Generating unique operation named: listUsingGET_18
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_27
2019-07-31 17:17:50 -Generating unique operation named: saveUsingPOST_15
2019-07-31 17:17:50 -Generating unique operation named: treeUsingGET_3
2019-07-31 17:17:50 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPOST_16
2019-07-31 17:17:50 -Generating unique operation named: addUsingGET_16
2019-07-31 17:17:50 -Generating unique operation named: editUsingGET_17
2019-07-31 17:17:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 17:17:50 -Generating unique operation named: listUsingGET_19
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_28
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_29
2019-07-31 17:17:50 -Generating unique operation named: saveUsingPOST_16
2019-07-31 17:17:50 -Generating unique operation named: updateUsingGET_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPOST_17
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPUT_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 17:17:50 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 17:17:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 17:17:50 -Generating unique operation named: addUsingGET_17
2019-07-31 17:17:50 -Generating unique operation named: editUsingGET_18
2019-07-31 17:17:50 -Generating unique operation named: listUsingGET_20
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_30
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_31
2019-07-31 17:17:50 -Generating unique operation named: saveUsingPOST_17
2019-07-31 17:17:50 -Generating unique operation named: updateUsingGET_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPOST_18
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPUT_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 17:17:50 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 17:17:50 -Generating unique operation named: addUsingGET_18
2019-07-31 17:17:50 -Generating unique operation named: editUsingGET_19
2019-07-31 17:17:50 -Generating unique operation named: listUsingGET_21
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_32
2019-07-31 17:17:50 -Generating unique operation named: removeUsingPOST_33
2019-07-31 17:17:50 -Generating unique operation named: saveUsingPOST_18
2019-07-31 17:17:50 -Generating unique operation named: updateUsingGET_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPOST_19
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPUT_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 17:17:50 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 17:17:50 -Starting Quartz Scheduler now
2019-07-31 17:17:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 17:17:50 -Starting...
2019-07-31 17:17:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 17:17:50 -Started.
2019-07-31 17:17:50 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 17:17:50 -Using a shared selector for servlet write/read
2019-07-31 17:17:50 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 17:17:51 -Started BootdoApplication in 62.011 seconds (JVM running for 67.107)
2019-07-31 17:17:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 17:17:51 -==> Parameters: 
2019-07-31 17:17:51 -<==      Total: 1
2019-07-31 17:18:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 17:19:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 17:19:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 17:19:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 108 ms
2019-07-31 17:19:19 -Enabling session validation scheduler...
2019-07-31 17:19:19 -请求地址 : http://localhost:8081/
2019-07-31 17:19:19 -HTTP METHOD : GET
2019-07-31 17:19:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-07-31 17:19:19 -参数 : [{}]
2019-07-31 17:19:19 -耗时 : 5
2019-07-31 17:19:19 -返回值 : redirect:/index
2019-07-31 17:19:19 -请求地址 : http://localhost:8081/login;JSESSIONID=d729e28a-e321-40fa-86a3-73eb249e6e74
2019-07-31 17:19:19 -HTTP METHOD : GET
2019-07-31 17:19:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 17:19:19 -参数 : [{}]
2019-07-31 17:19:19 -耗时 : 1
2019-07-31 17:19:19 -返回值 : login
2019-07-31 17:19:26 -请求地址 : http://localhost:8081/getVerify
2019-07-31 17:19:26 -HTTP METHOD : GET
2019-07-31 17:19:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 17:19:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@18788c68, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6da7dcf2]
2019-07-31 17:19:33 -0632
2019-07-31 17:19:34 -耗时 : 7760
2019-07-31 17:19:34 -返回值 : null
2019-07-31 17:19:39 -请求地址 : http://localhost:8081/login
2019-07-31 17:19:39 -HTTP METHOD : POST
2019-07-31 17:19:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 17:19:39 -参数 : [admin, 111111, 0632, org.apache.shiro.web.servlet.ShiroHttpServletRequest@67630004]
2019-07-31 17:19:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 17:19:39 -==> Parameters: admin(String)
2019-07-31 17:19:40 -<==      Total: 1
2019-07-31 17:19:40 -耗时 : 664
2019-07-31 17:19:40 -返回值 : {msg=操作成功, code=0}
2019-07-31 17:19:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 17:19:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 17:19:40 -==> Parameters: 1(Long), admin(String), 登录(String), 664(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 17:19:40.572(Timestamp)
2019-07-31 17:19:40 -请求地址 : http://localhost:8081/index
2019-07-31 17:19:40 -HTTP METHOD : GET
2019-07-31 17:19:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 17:19:40 -参数 : [{}]
2019-07-31 17:19:41 -<==    Updates: 1
2019-07-31 17:19:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 17:19:41 -==> Parameters: 1(Long)
2019-07-31 17:19:42 -<==      Total: 51
2019-07-31 17:19:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 17:19:42 -==> Parameters: 138(Long)
2019-07-31 17:19:42 -<==      Total: 1
2019-07-31 17:19:42 -耗时 : 1507
2019-07-31 17:19:42 -返回值 : index_v1
2019-07-31 17:19:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 17:19:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1507(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 17:19:42.688(Timestamp)
2019-07-31 17:19:43 -<==    Updates: 1
2019-07-31 17:19:43 -请求地址 : http://localhost:8081/main
2019-07-31 17:19:43 -HTTP METHOD : GET
2019-07-31 17:19:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 17:19:43 -参数 : []
2019-07-31 17:19:43 -耗时 : 0
2019-07-31 17:19:43 -返回值 : main
2019-07-31 17:19:46 -请求地址 : http://localhost:8081/main
2019-07-31 17:19:46 -HTTP METHOD : GET
2019-07-31 17:19:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 17:19:46 -参数 : []
2019-07-31 17:19:46 -耗时 : 0
2019-07-31 17:19:46 -返回值 : main
2019-07-31 17:19:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 17:19:46 -HTTP METHOD : GET
2019-07-31 17:19:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 17:19:46 -参数 : []
2019-07-31 17:19:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 17:19:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 17:19:48 -<==      Total: 0
2019-07-31 17:19:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 17:19:48 -==> Parameters: 1(Long), 0(String)
2019-07-31 17:19:48 -<==      Total: 1
2019-07-31 17:19:48 -耗时 : 2317
2019-07-31 17:19:48 -返回值 : com.bootdo.common.utils.PageUtils@786253df
2019-07-31 17:20:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 17:20:20 -==> Parameters: 1(Long)
2019-07-31 17:20:20 -<==      Total: 95
2019-07-31 17:20:20 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 17:20:20 -HTTP METHOD : GET
2019-07-31 17:20:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 17:20:20 -参数 : []
2019-07-31 17:20:20 -耗时 : 1
2019-07-31 17:20:20 -返回值 : elec/elec/elec
2019-07-31 17:20:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 17:20:23 -HTTP METHOD : GET
2019-07-31 17:20:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:20:23 -参数 : [elecType]
2019-07-31 17:20:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:20:23 -HTTP METHOD : GET
2019-07-31 17:20:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:20:23 -参数 : [userType]
2019-07-31 17:20:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:20:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:20:23 -==> Parameters: userType(String)
2019-07-31 17:20:23 -==> Parameters: elecType(String)
2019-07-31 17:20:23 -<==      Total: 4
2019-07-31 17:20:23 -耗时 : 206
2019-07-31 17:20:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:20:23 -<==      Total: 11
2019-07-31 17:20:23 -耗时 : 214
2019-07-31 17:20:23 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:20:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 17:20:23 -HTTP METHOD : GET
2019-07-31 17:20:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 17:20:23 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@fc2cc54]
2019-07-31 17:20:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 17:20:24 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:20:24 -<==      Total: 10
2019-07-31 17:20:24 -==>  Preparing: select count(*) from elec 
2019-07-31 17:20:24 -==> Parameters: 
2019-07-31 17:20:25 -<==      Total: 1
2019-07-31 17:20:25 -耗时 : 1352
2019-07-31 17:20:25 -返回值 : com.bootdo.common.utils.PageUtils@58518e71
2019-07-31 17:21:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 17:21:30 -HTTP METHOD : GET
2019-07-31 17:21:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 17:21:30 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 17:21:30 -耗时 : 1
2019-07-31 17:21:30 -返回值 : system/dept/deptTree
2019-07-31 17:21:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 17:21:30 -HTTP METHOD : GET
2019-07-31 17:21:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 17:21:30 -参数 : []
2019-07-31 17:21:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 17:21:30 -==> Parameters: 
2019-07-31 17:21:30 -<==      Total: 3
2019-07-31 17:21:30 -耗时 : 23
2019-07-31 17:21:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 17:21:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-07-31 17:21:35 -HTTP METHOD : GET
2019-07-31 17:21:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-07-31 17:21:35 -参数 : []
2019-07-31 17:21:35 -耗时 : 0
2019-07-31 17:21:35 -返回值 : moneyLog/elecLog/elecLog
2019-07-31 17:21:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:21:35 -HTTP METHOD : GET
2019-07-31 17:21:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:21:35 -参数 : [userType]
2019-07-31 17:21:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 17:21:35 -HTTP METHOD : GET
2019-07-31 17:21:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:21:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:21:35 -参数 : [elecType]
2019-07-31 17:21:35 -==> Parameters: userType(String)
2019-07-31 17:21:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:21:35 -==> Parameters: elecType(String)
2019-07-31 17:21:35 -<==      Total: 4
2019-07-31 17:21:35 -耗时 : 10
2019-07-31 17:21:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:21:35 -<==      Total: 11
2019-07-31 17:21:35 -耗时 : 25
2019-07-31 17:21:35 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:21:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:21:35 -HTTP METHOD : GET
2019-07-31 17:21:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:21:35 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:21:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-07-31 17:21:35 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:21:35 -<==      Total: 10
2019-07-31 17:21:35 -==>  Preparing: select count(*) from elec_log 
2019-07-31 17:21:35 -==> Parameters: 
2019-07-31 17:21:35 -<==      Total: 1
2019-07-31 17:21:35 -耗时 : 121
2019-07-31 17:21:35 -返回值 : com.bootdo.common.utils.PageUtils@1feb926
2019-07-31 17:21:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 17:21:40 -HTTP METHOD : GET
2019-07-31 17:21:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 17:21:40 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 17:21:40 -耗时 : 0
2019-07-31 17:21:40 -返回值 : system/dept/deptTree
2019-07-31 17:21:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 17:21:40 -HTTP METHOD : GET
2019-07-31 17:21:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 17:21:40 -参数 : []
2019-07-31 17:21:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 17:21:40 -==> Parameters: 
2019-07-31 17:21:40 -<==      Total: 3
2019-07-31 17:21:40 -耗时 : 5
2019-07-31 17:21:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 17:21:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:21:42 -HTTP METHOD : GET
2019-07-31 17:21:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:21:42 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:21:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-07-31 17:21:42 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-07-31 17:21:42 -<==      Total: 10
2019-07-31 17:21:42 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-07-31 17:21:42 -==> Parameters: 2(String)
2019-07-31 17:21:42 -<==      Total: 1
2019-07-31 17:21:42 -耗时 : 26
2019-07-31 17:21:42 -返回值 : com.bootdo.common.utils.PageUtils@71f12ed4
2019-07-31 17:24:10 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-07-31 17:24:10 -HTTP METHOD : GET
2019-07-31 17:24:10 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-07-31 17:24:10 -参数 : []
2019-07-31 17:24:10 -耗时 : 2
2019-07-31 17:24:10 -返回值 : water/waterUpLoad/waterUpLoad
2019-07-31 17:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-07-31 17:24:16 -HTTP METHOD : GET
2019-07-31 17:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-07-31 17:24:16 -参数 : []
2019-07-31 17:24:16 -耗时 : 1
2019-07-31 17:24:16 -返回值 : moneyLog/heatLog/heatLog
2019-07-31 17:24:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:24:16 -HTTP METHOD : GET
2019-07-31 17:24:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:24:16 -参数 : [userType]
2019-07-31 17:24:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:24:16 -==> Parameters: userType(String)
2019-07-31 17:24:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-07-31 17:24:16 -HTTP METHOD : GET
2019-07-31 17:24:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:24:16 -参数 : [heatType]
2019-07-31 17:24:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:24:16 -==> Parameters: heatType(String)
2019-07-31 17:24:16 -<==      Total: 4
2019-07-31 17:24:16 -耗时 : 11
2019-07-31 17:24:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:24:16 -<==      Total: 4
2019-07-31 17:24:16 -耗时 : 8
2019-07-31 17:24:16 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-07-31 17:24:16 -HTTP METHOD : GET
2019-07-31 17:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-07-31 17:24:16 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:24:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-07-31 17:24:16 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:24:16 -<==      Total: 10
2019-07-31 17:24:16 -==>  Preparing: select count(*) from heat_log 
2019-07-31 17:24:16 -==> Parameters: 
2019-07-31 17:24:16 -<==      Total: 1
2019-07-31 17:24:16 -耗时 : 153
2019-07-31 17:24:16 -返回值 : com.bootdo.common.utils.PageUtils@3dce9960
2019-07-31 17:24:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 17:24:22 -HTTP METHOD : GET
2019-07-31 17:24:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 17:24:22 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 17:24:22 -耗时 : 1
2019-07-31 17:24:22 -返回值 : system/dept/deptTree
2019-07-31 17:24:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 17:24:22 -HTTP METHOD : GET
2019-07-31 17:24:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 17:24:22 -参数 : []
2019-07-31 17:24:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 17:24:22 -==> Parameters: 
2019-07-31 17:24:22 -<==      Total: 3
2019-07-31 17:24:22 -耗时 : 3
2019-07-31 17:24:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 17:24:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-07-31 17:24:24 -HTTP METHOD : GET
2019-07-31 17:24:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-07-31 17:24:24 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:24:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:24:24 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-07-31 17:24:24 -<==      Total: 2
2019-07-31 17:24:24 -==>  Preparing: select count(*) from heat_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:24:24 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:24:24 -<==      Total: 1
2019-07-31 17:24:24 -耗时 : 38
2019-07-31 17:24:24 -返回值 : com.bootdo.common.utils.PageUtils@746fea11
2019-07-31 17:24:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-07-31 17:24:28 -HTTP METHOD : GET
2019-07-31 17:24:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-07-31 17:24:28 -参数 : []
2019-07-31 17:24:28 -耗时 : 0
2019-07-31 17:24:28 -返回值 : moneyLog/waterLog/waterLog
2019-07-31 17:24:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:24:28 -HTTP METHOD : GET
2019-07-31 17:24:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:24:28 -参数 : [userType]
2019-07-31 17:24:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:24:28 -==> Parameters: userType(String)
2019-07-31 17:24:28 -<==      Total: 4
2019-07-31 17:24:28 -耗时 : 7
2019-07-31 17:24:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:24:28 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-07-31 17:24:28 -HTTP METHOD : GET
2019-07-31 17:24:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:24:28 -参数 : [waterType]
2019-07-31 17:24:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:24:28 -==> Parameters: waterType(String)
2019-07-31 17:24:28 -<==      Total: 4
2019-07-31 17:24:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-07-31 17:24:28 -HTTP METHOD : GET
2019-07-31 17:24:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-07-31 17:24:28 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:24:28 -耗时 : 4
2019-07-31 17:24:28 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:24:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-07-31 17:24:28 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:24:28 -<==      Total: 10
2019-07-31 17:24:28 -==>  Preparing: select count(*) from water_log 
2019-07-31 17:24:28 -==> Parameters: 
2019-07-31 17:24:28 -<==      Total: 1
2019-07-31 17:24:28 -耗时 : 63
2019-07-31 17:24:28 -返回值 : com.bootdo.common.utils.PageUtils@5f6bff86
2019-07-31 17:24:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-07-31 17:24:44 -HTTP METHOD : GET
2019-07-31 17:24:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-07-31 17:24:44 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, moneyDate=2019-06-11}]
2019-07-31 17:24:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `money_date` >= ? and `money_date` <= ? order by id asc limit ?, ? 
2019-07-31 17:24:44 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 0(Integer), 10(Integer)
2019-07-31 17:24:44 -<==      Total: 3
2019-07-31 17:24:44 -==>  Preparing: select count(*) from water_log WHERE `money_date` >= ? and `money_date` <= ? 
2019-07-31 17:24:44 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String)
2019-07-31 17:24:44 -<==      Total: 1
2019-07-31 17:24:44 -耗时 : 19
2019-07-31 17:24:44 -返回值 : com.bootdo.common.utils.PageUtils@197a95a5
2019-07-31 17:24:51 -请求地址 : http://localhost:8081/print/print
2019-07-31 17:24:51 -HTTP METHOD : GET
2019-07-31 17:24:51 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-31 17:24:51 -参数 : []
2019-07-31 17:24:51 -耗时 : 1
2019-07-31 17:24:51 -返回值 : print/print/print
2019-07-31 17:24:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:24:52 -HTTP METHOD : GET
2019-07-31 17:24:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:24:52 -参数 : [userType]
2019-07-31 17:24:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:24:52 -==> Parameters: userType(String)
2019-07-31 17:24:52 -<==      Total: 4
2019-07-31 17:24:52 -耗时 : 5
2019-07-31 17:24:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:24:52 -请求地址 : http://localhost:8081/print/print/list
2019-07-31 17:24:52 -HTTP METHOD : GET
2019-07-31 17:24:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-31 17:24:52 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-31 17:24:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-31 17:24:52 -==> Parameters: 0(Integer), 100(Integer)
2019-07-31 17:24:52 -<==      Total: 100
2019-07-31 17:24:52 -==>  Preparing: select count(*) from print 
2019-07-31 17:24:52 -==> Parameters: 
2019-07-31 17:24:52 -<==      Total: 1
2019-07-31 17:24:52 -耗时 : 344
2019-07-31 17:24:52 -返回值 : com.bootdo.common.utils.PageUtils@3c06556d
2019-07-31 17:25:00 -请求地址 : http://localhost:8081/print/print/list
2019-07-31 17:25:00 -HTTP METHOD : GET
2019-07-31 17:25:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-31 17:25:00 -参数 : [{limit=100, offset=0, createTime=2019-06-11, userType=, userOrg=, userId=}]
2019-07-31 17:25:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-07-31 17:25:00 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 0(Integer), 100(Integer)
2019-07-31 17:25:00 -<==      Total: 7
2019-07-31 17:25:00 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-07-31 17:25:00 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String)
2019-07-31 17:25:00 -<==      Total: 1
2019-07-31 17:25:00 -耗时 : 23
2019-07-31 17:25:00 -返回值 : com.bootdo.common.utils.PageUtils@779d1fb0
2019-07-31 17:27:00 -Starting BootdoApplication on PC-201905091110 with PID 61124 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-07-31 17:27:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-07-31 17:27:01 -The following profiles are active: dev
2019-07-31 17:27:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@83298d7: startup date [Wed Jul 31 17:27:01 CST 2019]; root of context hierarchy
2019-07-31 17:27:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-07-31 17:27:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eadf29ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$dd385853] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-07-31 17:27:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-07-31 17:27:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-07-31 17:27:27 -Tomcat initialized with port(s): 8081 (http)
2019-07-31 17:27:27 -Initializing ProtocolHandler ["http-nio-8081"]
2019-07-31 17:27:27 -Starting service [Tomcat]
2019-07-31 17:27:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-07-31 17:27:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;E:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-07-31 17:27:28 -Initializing Spring embedded WebApplicationContext
2019-07-31 17:27:28 -Root WebApplicationContext: initialization completed in 26878 ms
2019-07-31 17:27:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-07-31 17:27:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-07-31 17:27:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-07-31 17:27:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-07-31 17:27:29 -Filter xssFilter was not registered (disabled)
2019-07-31 17:27:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-07-31 17:27:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-07-31 17:27:29 -Servlet statViewServlet mapped to [/druid/*]
2019-07-31 17:27:29 -Servlet dispatcherServlet mapped to [/]
2019-07-31 17:27:34 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@83298d7: startup date [Wed Jul 31 17:27:01 CST 2019]; root of context hierarchy
2019-07-31 17:27:35 -Using default implementation for ThreadExecutor
2019-07-31 17:27:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-07-31 17:27:35 -Quartz Scheduler v.2.3.0 created.
2019-07-31 17:27:35 -RAMJobStore initialized.
2019-07-31 17:27:35 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-07-31 17:27:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-07-31 17:27:35 -Quartz scheduler version: 2.3.0
2019-07-31 17:27:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5340ccb9
2019-07-31 17:27:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-07-31 17:27:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-07-31 17:27:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-07-31 17:27:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-07-31 17:27:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-07-31 17:27:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-07-31 17:27:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-07-31 17:27:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-07-31 17:27:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-07-31 17:27:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-07-31 17:27:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-07-31 17:27:41 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-07-31 17:27:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-07-31 17:27:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-07-31 17:27:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-07-31 17:27:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-07-31 17:27:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-07-31 17:27:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-07-31 17:27:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 17:27:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-07-31 17:27:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-07-31 17:27:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-07-31 17:27:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-07-31 17:27:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-07-31 17:27:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-07-31 17:27:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-07-31 17:27:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-07-31 17:27:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-07-31 17:27:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-07-31 17:27:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-07-31 17:27:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-07-31 17:27:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-07-31 17:27:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-07-31 17:27:42 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-07-31 17:27:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-07-31 17:27:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-07-31 17:27:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-07-31 17:27:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-07-31 17:27:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-07-31 17:27:42 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad/halfHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.halfHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad/nextHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.nextHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}/{userNo}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,java.lang.String,org.springframework.ui.Model,com.bootdo.moneyList.damain.MoneyListDO,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-07-31 17:27:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-07-31 17:27:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-07-31 17:27:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-07-31 17:27:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-07-31 17:27:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-07-31 17:27:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-07-31 17:27:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-07-31 17:27:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-07-31 17:27:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-07-31 17:27:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView(org.springframework.web.servlet.ModelAndView)
2019-07-31 17:27:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-07-31 17:27:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-07-31 17:27:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-07-31 17:27:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-07-31 17:27:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-07-31 17:27:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-07-31 17:27:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-07-31 17:27:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-07-31 17:27:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-07-31 17:27:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-07-31 17:27:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-07-31 17:27:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-07-31 17:27:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-07-31 17:27:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-07-31 17:27:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-07-31 17:27:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-07-31 17:27:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-07-31 17:27:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 17:27:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-07-31 17:27:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-07-31 17:27:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-07-31 17:27:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-07-31 17:27:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-07-31 17:27:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-07-31 17:27:42 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-07-31 17:27:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-07-31 17:27:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-07-31 17:27:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-07-31 17:27:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-07-31 17:27:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-07-31 17:27:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-07-31 17:27:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-07-31 17:27:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-07-31 17:27:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-07-31 17:27:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-07-31 17:27:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-07-31 17:27:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-07-31 17:27:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:27:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@83298d7: startup date [Wed Jul 31 17:27:01 CST 2019]; root of context hierarchy
2019-07-31 17:27:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:27:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-07-31 17:27:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-07-31 17:27:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-07-31 17:27:49 -Registering beans for JMX exposure on startup
2019-07-31 17:27:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-07-31 17:27:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-07-31 17:27:49 -Starting beans in phase 2147483647
2019-07-31 17:27:49 -Context refreshed
2019-07-31 17:27:49 -Found 1 custom documentation plugin(s)
2019-07-31 17:27:49 -Scanning for api listing references
2019-07-31 17:27:50 -Generating unique operation named: removeUsingPOST_1
2019-07-31 17:27:50 -Generating unique operation named: addUsingGET_1
2019-07-31 17:27:50 -Generating unique operation named: editUsingGET_1
2019-07-31 17:27:50 -Generating unique operation named: listUsingGET_1
2019-07-31 17:27:50 -Generating unique operation named: removeUsingPOST_2
2019-07-31 17:27:50 -Generating unique operation named: removeUsingPOST_3
2019-07-31 17:27:51 -Generating unique operation named: saveUsingPOST_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingGET_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingHEAD_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPOST_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPUT_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPATCH_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingDELETE_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-07-31 17:27:51 -Generating unique operation named: updateUsingTRACE_1
2019-07-31 17:27:51 -Generating unique operation named: addUsingGET_2
2019-07-31 17:27:51 -Generating unique operation named: editUsingGET_2
2019-07-31 17:27:51 -Generating unique operation named: listUsingGET_2
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_4
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_5
2019-07-31 17:27:51 -Generating unique operation named: saveUsingPOST_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPOST_2
2019-07-31 17:27:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-07-31 17:27:51 -Generating unique operation named: addUsingGET_3
2019-07-31 17:27:51 -Generating unique operation named: editUsingGET_3
2019-07-31 17:27:51 -Generating unique operation named: listUsingGET_3
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_6
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_7
2019-07-31 17:27:51 -Generating unique operation named: saveUsingPOST_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingGET_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingHEAD_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPOST_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPUT_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPATCH_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingDELETE_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-07-31 17:27:51 -Generating unique operation named: updateUsingTRACE_2
2019-07-31 17:27:51 -Generating unique operation named: addUsingGET_4
2019-07-31 17:27:51 -Generating unique operation named: editUsingGET_4
2019-07-31 17:27:51 -Generating unique operation named: listUsingGET_4
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_8
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_9
2019-07-31 17:27:51 -Generating unique operation named: saveUsingPOST_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingGET_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingHEAD_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPOST_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPUT_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPATCH_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingDELETE_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-07-31 17:27:51 -Generating unique operation named: updateUsingTRACE_3
2019-07-31 17:27:51 -Generating unique operation named: ElecUsingGET_1
2019-07-31 17:27:51 -Generating unique operation named: addUsingGET_5
2019-07-31 17:27:51 -Generating unique operation named: editUsingGET_5
2019-07-31 17:27:51 -Generating unique operation named: listUsingGET_5
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_10
2019-07-31 17:27:51 -Generating unique operation named: removeUsingPOST_11
2019-07-31 17:27:51 -Generating unique operation named: saveUsingPOST_5
2019-07-31 17:27:51 -Generating unique operation named: updateUsingGET_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingHEAD_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPOST_5
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPUT_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingPATCH_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingDELETE_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-07-31 17:27:51 -Generating unique operation named: updateUsingTRACE_4
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_6
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_6
2019-07-31 17:27:52 -Generating unique operation named: addUsingGET_6
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_7
2019-07-31 17:27:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_7
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_12
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_13
2019-07-31 17:27:52 -Generating unique operation named: saveUsingPOST_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingGET_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingHEAD_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPUT_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPATCH_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingDELETE_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-07-31 17:27:52 -Generating unique operation named: updateUsingTRACE_5
2019-07-31 17:27:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-07-31 17:27:52 -Generating unique operation named: addUsingGET_7
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_8
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_8
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_14
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_15
2019-07-31 17:27:52 -Generating unique operation named: saveUsingPOST_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingGET_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingHEAD_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_8
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPUT_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPATCH_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingDELETE_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-07-31 17:27:52 -Generating unique operation named: updateUsingTRACE_6
2019-07-31 17:27:52 -Generating unique operation named: addUsingGET_8
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_9
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_9
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_16
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_17
2019-07-31 17:27:52 -Generating unique operation named: saveUsingPOST_8
2019-07-31 17:27:52 -Generating unique operation named: updateUsingGET_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingHEAD_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_9
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPUT_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPATCH_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingDELETE_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-07-31 17:27:52 -Generating unique operation named: updateUsingTRACE_7
2019-07-31 17:27:52 -Generating unique operation named: addUsingGET_9
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_10
2019-07-31 17:27:52 -Generating unique operation named: infoUsingGET_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingHEAD_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingPOST_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingPUT_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingPATCH_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingDELETE_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-07-31 17:27:52 -Generating unique operation named: infoUsingTRACE_1
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_10
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_18
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_19
2019-07-31 17:27:52 -Generating unique operation named: saveUsingPOST_9
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_10
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_11
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_20
2019-07-31 17:27:52 -Generating unique operation named: welcomeUsingGET_1
2019-07-31 17:27:52 -Generating unique operation named: addUsingGET_10
2019-07-31 17:27:52 -Generating unique operation named: editUsingGET_11
2019-07-31 17:27:52 -Generating unique operation named: listUsingGET_12
2019-07-31 17:27:52 -Generating unique operation named: removeUsingPOST_21
2019-07-31 17:27:52 -Generating unique operation named: saveUsingPOST_10
2019-07-31 17:27:52 -Generating unique operation named: treeUsingGET_1
2019-07-31 17:27:52 -Generating unique operation named: treeUsingGET_2
2019-07-31 17:27:52 -Generating unique operation named: updateUsingPOST_11
2019-07-31 17:27:53 -Generating unique operation named: addUsingGET_11
2019-07-31 17:27:53 -Generating unique operation named: editUsingGET_12
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_13
2019-07-31 17:27:53 -Generating unique operation named: removeUsingPOST_22
2019-07-31 17:27:53 -Generating unique operation named: removeUsingPOST_23
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPOST_12
2019-07-31 17:27:53 -Generating unique operation named: addUsingGET_12
2019-07-31 17:27:53 -Generating unique operation named: editUsingGET_13
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_14
2019-07-31 17:27:53 -Generating unique operation named: removeUsingPOST_24
2019-07-31 17:27:53 -Generating unique operation named: removeUsingPOST_25
2019-07-31 17:27:53 -Generating unique operation named: saveUsingPOST_11
2019-07-31 17:27:53 -Generating unique operation named: updateUsingGET_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingHEAD_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPOST_13
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPUT_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPATCH_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingDELETE_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-07-31 17:27:53 -Generating unique operation named: updateUsingTRACE_8
2019-07-31 17:27:53 -Generating unique operation named: addUsingGET_13
2019-07-31 17:27:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-07-31 17:27:53 -Generating unique operation named: editUsingGET_14
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_15
2019-07-31 17:27:53 -Generating unique operation named: printEditUsingGET_1
2019-07-31 17:27:53 -Generating unique operation named: removeUsingPOST_26
2019-07-31 17:27:53 -Generating unique operation named: saveUsingPOST_12
2019-07-31 17:27:53 -Generating unique operation named: updateUsingGET_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingHEAD_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPOST_14
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPUT_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPATCH_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingDELETE_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-07-31 17:27:53 -Generating unique operation named: updateUsingTRACE_9
2019-07-31 17:27:53 -Generating unique operation named: addUsingGET_14
2019-07-31 17:27:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-07-31 17:27:53 -Generating unique operation named: editUsingGET_15
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_16
2019-07-31 17:27:53 -Generating unique operation named: saveUsingPOST_13
2019-07-31 17:27:53 -Generating unique operation named: saveUsingPOST_14
2019-07-31 17:27:53 -Generating unique operation named: updateUsingPOST_15
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_17
2019-07-31 17:27:53 -Generating unique operation named: listUsingHEAD_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingPOST_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingPUT_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingPATCH_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingDELETE_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingOPTIONS_1
2019-07-31 17:27:53 -Generating unique operation named: listUsingTRACE_1
2019-07-31 17:27:53 -Generating unique operation named: countDDUsingGET_1
2019-07-31 17:27:53 -Generating unique operation named: exportDDUsingGET_1
2019-07-31 17:27:53 -Generating unique operation named: exportElecYYUsingGET_1
2019-07-31 17:27:53 -Generating unique operation named: addUsingGET_15
2019-07-31 17:27:53 -Generating unique operation named: batchRemoveUsingPOST_3
2019-07-31 17:27:53 -Generating unique operation named: editUsingGET_16
2019-07-31 17:27:53 -Generating unique operation named: listUsingGET_18
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_27
2019-07-31 17:27:54 -Generating unique operation named: saveUsingPOST_15
2019-07-31 17:27:54 -Generating unique operation named: treeUsingGET_3
2019-07-31 17:27:54 -Generating unique operation named: treeViewUsingGET_1
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPOST_16
2019-07-31 17:27:54 -Generating unique operation named: addUsingGET_16
2019-07-31 17:27:54 -Generating unique operation named: editUsingGET_17
2019-07-31 17:27:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-07-31 17:27:54 -Generating unique operation named: listUsingGET_19
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_28
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_29
2019-07-31 17:27:54 -Generating unique operation named: saveUsingPOST_16
2019-07-31 17:27:54 -Generating unique operation named: updateUsingGET_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingHEAD_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPOST_17
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPUT_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPATCH_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingDELETE_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-07-31 17:27:54 -Generating unique operation named: updateUsingTRACE_10
2019-07-31 17:27:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-07-31 17:27:54 -Generating unique operation named: addUsingGET_17
2019-07-31 17:27:54 -Generating unique operation named: editUsingGET_18
2019-07-31 17:27:54 -Generating unique operation named: listUsingGET_20
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_30
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_31
2019-07-31 17:27:54 -Generating unique operation named: saveUsingPOST_17
2019-07-31 17:27:54 -Generating unique operation named: updateUsingGET_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingHEAD_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPOST_18
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPUT_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPATCH_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingDELETE_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-07-31 17:27:54 -Generating unique operation named: updateUsingTRACE_11
2019-07-31 17:27:54 -Generating unique operation named: addUsingGET_18
2019-07-31 17:27:54 -Generating unique operation named: editUsingGET_19
2019-07-31 17:27:54 -Generating unique operation named: listUsingGET_21
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_32
2019-07-31 17:27:54 -Generating unique operation named: removeUsingPOST_33
2019-07-31 17:27:54 -Generating unique operation named: saveUsingPOST_18
2019-07-31 17:27:54 -Generating unique operation named: updateUsingGET_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingHEAD_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPOST_19
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPUT_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingPATCH_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingDELETE_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-07-31 17:27:54 -Generating unique operation named: updateUsingTRACE_12
2019-07-31 17:27:54 -Starting Quartz Scheduler now
2019-07-31 17:27:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-07-31 17:27:54 -Starting...
2019-07-31 17:27:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-07-31 17:27:54 -Started.
2019-07-31 17:27:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-07-31 17:27:54 -Using a shared selector for servlet write/read
2019-07-31 17:27:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-07-31 17:27:54 -Started BootdoApplication in 56.631 seconds (JVM running for 58.358)
2019-07-31 17:27:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-07-31 17:27:55 -==> Parameters: 
2019-07-31 17:27:55 -<==      Total: 1
2019-07-31 17:28:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-07-31 17:28:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-07-31 17:28:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2019-07-31 17:28:20 -Enabling session validation scheduler...
2019-07-31 17:28:20 -请求地址 : http://localhost:8081/login;JSESSIONID=4f4a3384-ee7b-4c33-9d1c-026eca0c736f
2019-07-31 17:28:20 -HTTP METHOD : GET
2019-07-31 17:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 17:28:20 -参数 : [{}]
2019-07-31 17:28:20 -耗时 : 8
2019-07-31 17:28:20 -返回值 : login
2019-07-31 17:28:23 -请求地址 : http://localhost:8081/getVerify
2019-07-31 17:28:23 -HTTP METHOD : GET
2019-07-31 17:28:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-07-31 17:28:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5a2636e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@54e1d3dc]
2019-07-31 17:28:32 -0994
2019-07-31 17:28:33 -耗时 : 10126
2019-07-31 17:28:33 -返回值 : null
2019-07-31 17:28:33 -请求地址 : http://localhost:8081/login
2019-07-31 17:28:33 -HTTP METHOD : GET
2019-07-31 17:28:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-07-31 17:28:33 -参数 : [{}]
2019-07-31 17:28:33 -耗时 : 0
2019-07-31 17:28:33 -返回值 : login
2019-07-31 17:28:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-07-31 17:28:44 -请求地址 : http://localhost:8081/login
2019-07-31 17:28:44 -HTTP METHOD : POST
2019-07-31 17:28:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-07-31 17:28:44 -参数 : [admin, 111111, 0994, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c1ddf3b]
2019-07-31 17:28:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-07-31 17:28:44 -==> Parameters: admin(String)
2019-07-31 17:28:44 -<==      Total: 1
2019-07-31 17:28:44 -耗时 : 273
2019-07-31 17:28:44 -返回值 : {msg=操作成功, code=0}
2019-07-31 17:28:45 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-07-31 17:28:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 17:28:45 -==> Parameters: 1(Long), admin(String), 登录(String), 273(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-07-31 17:28:45.13(Timestamp)
2019-07-31 17:28:45 -请求地址 : http://localhost:8081/index
2019-07-31 17:28:45 -HTTP METHOD : GET
2019-07-31 17:28:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-07-31 17:28:45 -参数 : [{}]
2019-07-31 17:28:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-07-31 17:28:45 -<==    Updates: 1
2019-07-31 17:28:45 -==> Parameters: 1(Long)
2019-07-31 17:28:46 -<==      Total: 51
2019-07-31 17:28:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-07-31 17:28:46 -==> Parameters: 138(Long)
2019-07-31 17:28:46 -<==      Total: 1
2019-07-31 17:28:46 -耗时 : 875
2019-07-31 17:28:46 -返回值 : index_v1
2019-07-31 17:28:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-07-31 17:28:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 876(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-07-31 17:28:46.383(Timestamp)
2019-07-31 17:28:46 -请求地址 : http://localhost:8081/main
2019-07-31 17:28:46 -HTTP METHOD : GET
2019-07-31 17:28:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 17:28:46 -参数 : []
2019-07-31 17:28:46 -耗时 : 1
2019-07-31 17:28:46 -返回值 : main
2019-07-31 17:28:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-07-31 17:28:46 -<==    Updates: 1
2019-07-31 17:28:47 -HTTP METHOD : GET
2019-07-31 17:28:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-07-31 17:28:47 -参数 : []
2019-07-31 17:28:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-07-31 17:28:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-07-31 17:28:47 -<==      Total: 0
2019-07-31 17:28:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-07-31 17:28:47 -==> Parameters: 1(Long), 0(String)
2019-07-31 17:28:47 -<==      Total: 1
2019-07-31 17:28:47 -耗时 : 170
2019-07-31 17:28:47 -返回值 : com.bootdo.common.utils.PageUtils@3ea9ed83
2019-07-31 17:28:47 -请求地址 : http://localhost:8081/main
2019-07-31 17:28:47 -HTTP METHOD : GET
2019-07-31 17:28:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-07-31 17:28:47 -参数 : []
2019-07-31 17:28:47 -耗时 : 0
2019-07-31 17:28:47 -返回值 : main
2019-07-31 17:28:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 17:28:53 -==> Parameters: 1(Long)
2019-07-31 17:28:53 -<==      Total: 95
2019-07-31 17:28:53 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-07-31 17:28:53 -HTTP METHOD : GET
2019-07-31 17:28:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-07-31 17:28:53 -参数 : []
2019-07-31 17:28:53 -耗时 : 0
2019-07-31 17:28:53 -返回值 : moneyList/moneyList
2019-07-31 17:28:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-07-31 17:28:53 -HTTP METHOD : GET
2019-07-31 17:28:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-07-31 17:28:53 -参数 : []
2019-07-31 17:28:53 -耗时 : 0
2019-07-31 17:28:53 -返回值 : moneyLog/elecLog/elecLog
2019-07-31 17:28:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 17:28:54 -HTTP METHOD : GET
2019-07-31 17:28:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:28:54 -参数 : [elecType]
2019-07-31 17:28:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:28:54 -HTTP METHOD : GET
2019-07-31 17:28:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:28:54 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:28:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:28:54 -HTTP METHOD : GET
2019-07-31 17:28:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:28:54 -参数 : [userType]
2019-07-31 17:28:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:28:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:28:54 -==> Parameters: userType(String)
2019-07-31 17:28:54 -==> Parameters: elecType(String)
2019-07-31 17:28:55 -<==      Total: 4
2019-07-31 17:28:55 -耗时 : 126
2019-07-31 17:28:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:28:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-07-31 17:28:55 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:28:55 -<==      Total: 11
2019-07-31 17:28:55 -耗时 : 257
2019-07-31 17:28:55 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:28:55 -<==      Total: 10
2019-07-31 17:28:55 -==>  Preparing: select count(*) from elec_log 
2019-07-31 17:28:55 -==> Parameters: 
2019-07-31 17:28:55 -<==      Total: 1
2019-07-31 17:28:55 -耗时 : 355
2019-07-31 17:28:55 -返回值 : com.bootdo.common.utils.PageUtils@5749e442
2019-07-31 17:28:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 17:28:59 -HTTP METHOD : GET
2019-07-31 17:28:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 17:28:59 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 17:28:59 -耗时 : 1
2019-07-31 17:28:59 -返回值 : system/dept/deptTree
2019-07-31 17:28:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 17:28:59 -HTTP METHOD : GET
2019-07-31 17:28:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 17:28:59 -参数 : []
2019-07-31 17:28:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 17:28:59 -==> Parameters: 
2019-07-31 17:28:59 -<==      Total: 3
2019-07-31 17:28:59 -耗时 : 27
2019-07-31 17:28:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 17:29:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:01 -HTTP METHOD : GET
2019-07-31 17:29:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:01 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:01 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-07-31 17:29:01 -<==      Total: 10
2019-07-31 17:29:01 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:01 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:01 -<==      Total: 1
2019-07-31 17:29:01 -耗时 : 28
2019-07-31 17:29:01 -返回值 : com.bootdo.common.utils.PageUtils@741d7d20
2019-07-31 17:29:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:04 -HTTP METHOD : GET
2019-07-31 17:29:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:04 -参数 : [{limit=10, offset=10, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:04 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 10(Integer), 10(Integer)
2019-07-31 17:29:04 -<==      Total: 10
2019-07-31 17:29:04 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:04 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:04 -<==      Total: 1
2019-07-31 17:29:04 -耗时 : 16
2019-07-31 17:29:04 -返回值 : com.bootdo.common.utils.PageUtils@5f96c822
2019-07-31 17:29:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:05 -HTTP METHOD : GET
2019-07-31 17:29:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:05 -参数 : [{limit=10, offset=20, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:05 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 20(Integer), 10(Integer)
2019-07-31 17:29:05 -<==      Total: 10
2019-07-31 17:29:05 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:05 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:05 -<==      Total: 1
2019-07-31 17:29:05 -耗时 : 12
2019-07-31 17:29:05 -返回值 : com.bootdo.common.utils.PageUtils@1f3b146f
2019-07-31 17:29:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:06 -HTTP METHOD : GET
2019-07-31 17:29:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:06 -参数 : [{limit=10, offset=30, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:06 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 30(Integer), 10(Integer)
2019-07-31 17:29:06 -<==      Total: 10
2019-07-31 17:29:06 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:06 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:06 -<==      Total: 1
2019-07-31 17:29:06 -耗时 : 12
2019-07-31 17:29:06 -返回值 : com.bootdo.common.utils.PageUtils@4a1fff7
2019-07-31 17:29:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:07 -HTTP METHOD : GET
2019-07-31 17:29:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:07 -参数 : [{limit=10, offset=50, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:07 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 50(Integer), 10(Integer)
2019-07-31 17:29:07 -<==      Total: 10
2019-07-31 17:29:07 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:07 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:07 -<==      Total: 1
2019-07-31 17:29:07 -耗时 : 14
2019-07-31 17:29:07 -返回值 : com.bootdo.common.utils.PageUtils@82a7855
2019-07-31 17:29:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:08 -HTTP METHOD : GET
2019-07-31 17:29:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:08 -参数 : [{limit=10, offset=70, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:08 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 70(Integer), 10(Integer)
2019-07-31 17:29:08 -<==      Total: 10
2019-07-31 17:29:08 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:08 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:08 -<==      Total: 1
2019-07-31 17:29:08 -耗时 : 14
2019-07-31 17:29:08 -返回值 : com.bootdo.common.utils.PageUtils@67986289
2019-07-31 17:29:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:09 -HTTP METHOD : GET
2019-07-31 17:29:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:09 -参数 : [{limit=10, offset=80, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-06-11}]
2019-07-31 17:29:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:09 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String), 80(Integer), 10(Integer)
2019-07-31 17:29:09 -<==      Total: 5
2019-07-31 17:29:09 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:09 -==> Parameters: 2019-06-11 00:00:00(String), 2019-06-11 23:59:59(String), 2(String)
2019-07-31 17:29:09 -<==      Total: 1
2019-07-31 17:29:09 -耗时 : 12
2019-07-31 17:29:09 -返回值 : com.bootdo.common.utils.PageUtils@4324111f
2019-07-31 17:29:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:45 -HTTP METHOD : GET
2019-07-31 17:29:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:45 -参数 : [{limit=10, offset=80, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-07-08}]
2019-07-31 17:29:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:45 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String), 2(String), 80(Integer), 10(Integer)
2019-07-31 17:29:45 -<==      Total: 0
2019-07-31 17:29:45 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:45 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String), 2(String)
2019-07-31 17:29:45 -<==      Total: 1
2019-07-31 17:29:45 -耗时 : 10
2019-07-31 17:29:45 -返回值 : com.bootdo.common.utils.PageUtils@5fec34af
2019-07-31 17:29:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-07-31 17:29:47 -HTTP METHOD : GET
2019-07-31 17:29:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-07-31 17:29:47 -参数 : [ModelAndView: materialized View is [null]; model is null]
2019-07-31 17:29:47 -耗时 : 1
2019-07-31 17:29:47 -返回值 : system/dept/deptTree
2019-07-31 17:29:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-07-31 17:29:47 -HTTP METHOD : GET
2019-07-31 17:29:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-07-31 17:29:47 -参数 : []
2019-07-31 17:29:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-07-31 17:29:47 -==> Parameters: 
2019-07-31 17:29:47 -<==      Total: 3
2019-07-31 17:29:47 -耗时 : 4
2019-07-31 17:29:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-07-31 17:29:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-07-31 17:29:50 -HTTP METHOD : GET
2019-07-31 17:29:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-07-31 17:29:50 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=2, userId=, moneyDate=2019-07-08}]
2019-07-31 17:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`money_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? order by id asc limit ?, ? 
2019-07-31 17:29:50 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String), 2(String), 0(Integer), 10(Integer)
2019-07-31 17:29:50 -<==      Total: 1
2019-07-31 17:29:50 -==>  Preparing: select count(*) from elec_log WHERE `money_date` >= ? and `money_date` <= ? and user_org = ? 
2019-07-31 17:29:50 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String), 2(String)
2019-07-31 17:29:50 -<==      Total: 1
2019-07-31 17:29:50 -耗时 : 10
2019-07-31 17:29:50 -返回值 : com.bootdo.common.utils.PageUtils@65aaa4bd
2019-07-31 17:31:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-07-31 17:31:01 -HTTP METHOD : GET
2019-07-31 17:31:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-07-31 17:31:01 -参数 : []
2019-07-31 17:31:01 -耗时 : 1
2019-07-31 17:31:01 -返回值 : moneyLog/heatLog/heatLog
2019-07-31 17:31:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:31:01 -HTTP METHOD : GET
2019-07-31 17:31:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:31:01 -参数 : [userType]
2019-07-31 17:31:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:31:01 -==> Parameters: userType(String)
2019-07-31 17:31:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-07-31 17:31:01 -HTTP METHOD : GET
2019-07-31 17:31:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:31:01 -参数 : [heatType]
2019-07-31 17:31:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:31:01 -<==      Total: 4
2019-07-31 17:31:01 -耗时 : 35
2019-07-31 17:31:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:31:01 -==> Parameters: heatType(String)
2019-07-31 17:31:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-07-31 17:31:01 -HTTP METHOD : GET
2019-07-31 17:31:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-07-31 17:31:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:31:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-07-31 17:31:01 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:31:01 -<==      Total: 4
2019-07-31 17:31:01 -耗时 : 85
2019-07-31 17:31:01 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:31:01 -<==      Total: 10
2019-07-31 17:31:01 -==>  Preparing: select count(*) from heat_log 
2019-07-31 17:31:01 -==> Parameters: 
2019-07-31 17:31:01 -<==      Total: 1
2019-07-31 17:31:01 -耗时 : 98
2019-07-31 17:31:01 -返回值 : com.bootdo.common.utils.PageUtils@708b2abd
2019-07-31 17:31:04 -请求地址 : http://localhost:8081/elec/elec
2019-07-31 17:31:04 -HTTP METHOD : GET
2019-07-31 17:31:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-07-31 17:31:04 -参数 : []
2019-07-31 17:31:04 -耗时 : 1
2019-07-31 17:31:04 -返回值 : elec/elec/elec
2019-07-31 17:31:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:31:04 -HTTP METHOD : GET
2019-07-31 17:31:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:31:04 -参数 : [userType]
2019-07-31 17:31:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:31:04 -==> Parameters: userType(String)
2019-07-31 17:31:04 -<==      Total: 4
2019-07-31 17:31:04 -耗时 : 10
2019-07-31 17:31:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:31:04 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-07-31 17:31:04 -HTTP METHOD : GET
2019-07-31 17:31:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:31:04 -参数 : [elecType]
2019-07-31 17:31:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:31:04 -==> Parameters: elecType(String)
2019-07-31 17:31:04 -<==      Total: 11
2019-07-31 17:31:04 -耗时 : 6
2019-07-31 17:31:04 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:31:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-07-31 17:31:04 -HTTP METHOD : GET
2019-07-31 17:31:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-07-31 17:31:04 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1d8ba578]
2019-07-31 17:31:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-07-31 17:31:04 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:31:04 -<==      Total: 10
2019-07-31 17:31:04 -==>  Preparing: select count(*) from elec 
2019-07-31 17:31:04 -==> Parameters: 
2019-07-31 17:31:05 -<==      Total: 1
2019-07-31 17:31:05 -耗时 : 312
2019-07-31 17:31:05 -返回值 : com.bootdo.common.utils.PageUtils@63af10c2
2019-07-31 17:53:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-07-31 17:53:13 -==> Parameters: 1(Long)
2019-07-31 17:53:13 -<==      Total: 95
2019-07-31 17:53:13 -请求地址 : http://localhost:8081/print/print
2019-07-31 17:53:13 -HTTP METHOD : GET
2019-07-31 17:53:13 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-07-31 17:53:13 -参数 : []
2019-07-31 17:53:13 -耗时 : 0
2019-07-31 17:53:13 -返回值 : print/print/print
2019-07-31 17:53:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:53:15 -HTTP METHOD : GET
2019-07-31 17:53:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:53:15 -参数 : [userType]
2019-07-31 17:53:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:53:15 -==> Parameters: userType(String)
2019-07-31 17:53:15 -<==      Total: 4
2019-07-31 17:53:15 -耗时 : 6
2019-07-31 17:53:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:53:15 -请求地址 : http://localhost:8081/print/print/list
2019-07-31 17:53:15 -HTTP METHOD : GET
2019-07-31 17:53:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-31 17:53:15 -参数 : [{limit=100, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-07-31 17:53:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-07-31 17:53:15 -==> Parameters: 0(Integer), 100(Integer)
2019-07-31 17:53:15 -<==      Total: 100
2019-07-31 17:53:15 -==>  Preparing: select count(*) from print 
2019-07-31 17:53:15 -==> Parameters: 
2019-07-31 17:53:15 -<==      Total: 1
2019-07-31 17:53:15 -耗时 : 152
2019-07-31 17:53:15 -返回值 : com.bootdo.common.utils.PageUtils@48fb63f3
2019-07-31 17:53:26 -请求地址 : http://localhost:8081/print/print/list
2019-07-31 17:53:26 -HTTP METHOD : GET
2019-07-31 17:53:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-07-31 17:53:26 -参数 : [{limit=100, offset=0, createTime=2019-07-08, userType=, userOrg=, userId=}]
2019-07-31 17:53:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `print_date` >= ? and `print_date` <= ? order by id asc limit ?, ? 
2019-07-31 17:53:26 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String), 0(Integer), 100(Integer)
2019-07-31 17:53:26 -<==      Total: 2
2019-07-31 17:53:26 -==>  Preparing: select count(*) from print WHERE `print_date` >= ? and `print_date` <= ? 
2019-07-31 17:53:26 -==> Parameters: 2019-07-08 00:00:00(String), 2019-07-08 23:59:59(String)
2019-07-31 17:53:26 -<==      Total: 1
2019-07-31 17:53:26 -耗时 : 18
2019-07-31 17:53:26 -返回值 : com.bootdo.common.utils.PageUtils@79ca7bb0
2019-07-31 17:53:32 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-07-31 17:53:32 -HTTP METHOD : GET
2019-07-31 17:53:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-07-31 17:53:32 -参数 : []
2019-07-31 17:53:32 -耗时 : 1
2019-07-31 17:53:32 -返回值 : moneyLog/waterLog/waterLog
2019-07-31 17:53:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-07-31 17:53:32 -HTTP METHOD : GET
2019-07-31 17:53:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:53:32 -参数 : [userType]
2019-07-31 17:53:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:53:32 -==> Parameters: userType(String)
2019-07-31 17:53:32 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-07-31 17:53:32 -HTTP METHOD : GET
2019-07-31 17:53:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-07-31 17:53:32 -参数 : [waterType]
2019-07-31 17:53:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-07-31 17:53:32 -==> Parameters: waterType(String)
2019-07-31 17:53:32 -<==      Total: 4
2019-07-31 17:53:32 -耗时 : 5
2019-07-31 17:53:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:53:32 -<==      Total: 4
2019-07-31 17:53:32 -耗时 : 6
2019-07-31 17:53:32 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-07-31 17:53:32 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-07-31 17:53:32 -HTTP METHOD : GET
2019-07-31 17:53:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-07-31 17:53:32 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, moneyDate=}]
2019-07-31 17:53:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`money_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-07-31 17:53:32 -==> Parameters: 0(Integer), 10(Integer)
2019-07-31 17:53:33 -<==      Total: 10
2019-07-31 17:53:33 -==>  Preparing: select count(*) from water_log 
2019-07-31 17:53:33 -==> Parameters: 
2019-07-31 17:53:33 -<==      Total: 1
2019-07-31 17:53:33 -耗时 : 107
2019-07-31 17:53:33 -返回值 : com.bootdo.common.utils.PageUtils@126961ec
